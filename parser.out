Created by PLY version 3.4 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> source_text
Rule 1     source_text -> description
Rule 2     description -> definitions
Rule 3     definitions -> definitions definition
Rule 4     definitions -> definition
Rule 5     definition -> moduledef
Rule 6     definition -> pragma
Rule 7     pragma -> LPAREN TIMES ID EQUALS expression TIMES RPAREN
Rule 8     pragma -> LPAREN TIMES ID TIMES RPAREN
Rule 9     moduledef -> MODULE modulename paramlist portlist items ENDMODULE
Rule 10    modulename -> ID
Rule 11    paramlist -> DELAY LPAREN params RPAREN
Rule 12    paramlist -> empty
Rule 13    params -> params_begin param_end
Rule 14    params_begin -> params_begin param
Rule 15    params_begin -> param
Rule 16    params -> param_end
Rule 17    param -> PARAMETER param_substitution_list COMMA
Rule 18    param -> PARAMETER width param_substitution_list COMMA
Rule 19    param -> PARAMETER INTEGER param_substitution_list COMMA
Rule 20    param_end -> PARAMETER param_substitution_list
Rule 21    param_end -> PARAMETER width param_substitution_list
Rule 22    param_end -> PARAMETER INTEGER param_substitution_list
Rule 23    portlist -> LPAREN ports RPAREN SEMICOLON
Rule 24    portlist -> LPAREN ioports RPAREN SEMICOLON
Rule 25    portlist -> LPAREN RPAREN SEMICOLON
Rule 26    portlist -> SEMICOLON
Rule 27    ports -> ports COMMA portname
Rule 28    ports -> portname
Rule 29    portname -> ID
Rule 30    sigtypes -> sigtypes sigtype
Rule 31    sigtypes -> sigtype
Rule 32    sigtype -> INPUT
Rule 33    sigtype -> OUTPUT
Rule 34    sigtype -> INOUT
Rule 35    sigtype -> TRI
Rule 36    sigtype -> REG
Rule 37    sigtype -> WIRE
Rule 38    sigtype -> SIGNED
Rule 39    ioports -> ioports COMMA ioport
Rule 40    ioports -> ioport_head
Rule 41    ioport -> sigtypes portname
Rule 42    ioport -> sigtypes width portname
Rule 43    ioport_head -> sigtypes portname
Rule 44    ioport_head -> sigtypes width portname
Rule 45    ioport -> portname
Rule 46    width -> LBRACKET expression COLON expression RBRACKET
Rule 47    length -> LBRACKET expression COLON expression RBRACKET
Rule 48    items -> items item
Rule 49    items -> item
Rule 50    items -> empty
Rule 51    item -> standard_item
Rule 52    item -> generate
Rule 53    standard_item -> decl
Rule 54    standard_item -> integerdecl
Rule 55    standard_item -> realdecl
Rule 56    standard_item -> declassign
Rule 57    standard_item -> parameterdecl
Rule 58    standard_item -> localparamdecl
Rule 59    standard_item -> genvardecl
Rule 60    standard_item -> assignment
Rule 61    standard_item -> always
Rule 62    standard_item -> initial
Rule 63    standard_item -> instance
Rule 64    standard_item -> function
Rule 65    standard_item -> task
Rule 66    standard_item -> pragma
Rule 67    decl -> sigtypes declnamelist SEMICOLON
Rule 68    decl -> sigtypes width declnamelist SEMICOLON
Rule 69    declnamelist -> declnamelist COMMA declname
Rule 70    declnamelist -> declname
Rule 71    declname -> ID
Rule 72    declname -> ID length
Rule 73    declassign -> sigtypes declassign_element SEMICOLON
Rule 74    declassign -> sigtypes width declassign_element SEMICOLON
Rule 75    declassign_element -> ID EQUALS rvalue
Rule 76    declassign_element -> delays ID EQUALS delays rvalue
Rule 77    integerdecl -> INTEGER integernamelist SEMICOLON
Rule 78    integerdecl -> INTEGER SIGNED integernamelist SEMICOLON
Rule 79    integernamelist -> integernamelist COMMA integername
Rule 80    integernamelist -> integername
Rule 81    integername -> ID
Rule 82    realdecl -> REAL realnamelist SEMICOLON
Rule 83    realnamelist -> realnamelist COMMA realname
Rule 84    realnamelist -> realname
Rule 85    realname -> ID
Rule 86    parameterdecl -> PARAMETER param_substitution_list SEMICOLON
Rule 87    parameterdecl -> PARAMETER width param_substitution_list SEMICOLON
Rule 88    parameterdecl -> PARAMETER INTEGER param_substitution_list SEMICOLON
Rule 89    localparamdecl -> LOCALPARAM param_substitution_list SEMICOLON
Rule 90    localparamdecl -> LOCALPARAM width param_substitution_list SEMICOLON
Rule 91    localparamdecl -> LOCALPARAM INTEGER param_substitution_list SEMICOLON
Rule 92    param_substitution_list -> param_substitution_list COMMA param_substitution
Rule 93    param_substitution_list -> param_substitution
Rule 94    param_substitution -> ID EQUALS rvalue
Rule 95    assignment -> ASSIGN lvalue EQUALS rvalue SEMICOLON
Rule 96    assignment -> ASSIGN delays lvalue EQUALS delays rvalue SEMICOLON
Rule 97    lpartselect -> pointer LBRACKET expression COLON expression RBRACKET
Rule 98    lpartselect -> pointer LBRACKET expression PLUSCOLON expression RBRACKET
Rule 99    lpartselect -> pointer LBRACKET expression MINUSCOLON expression RBRACKET
Rule 100   lpartselect -> identifier LBRACKET expression COLON expression RBRACKET
Rule 101   lpartselect -> identifier LBRACKET expression PLUSCOLON expression RBRACKET
Rule 102   lpartselect -> identifier LBRACKET expression MINUSCOLON expression RBRACKET
Rule 103   lpointer -> pointer
Rule 104   lconcat -> LBRACE lconcatlist RBRACE
Rule 105   lconcatlist -> lconcatlist COMMA lconcat_one
Rule 106   lconcatlist -> lconcat_one
Rule 107   lconcat_one -> identifier
Rule 108   lconcat_one -> lpartselect
Rule 109   lconcat_one -> lpointer
Rule 110   lconcat_one -> lconcat
Rule 111   lvalue -> lpartselect
Rule 112   lvalue -> lpointer
Rule 113   lvalue -> lconcat
Rule 114   lvalue -> identifier
Rule 115   rvalue -> expression
Rule 116   expression -> MINUS expression
Rule 117   expression -> PLUS expression
Rule 118   expression -> LNOT expression
Rule 119   expression -> NOT expression
Rule 120   expression -> AND expression
Rule 121   expression -> NAND expression
Rule 122   expression -> NOR expression
Rule 123   expression -> OR expression
Rule 124   expression -> XOR expression
Rule 125   expression -> XNOR expression
Rule 126   expression -> expression POWER expression
Rule 127   expression -> expression TIMES expression
Rule 128   expression -> expression DIVIDE expression
Rule 129   expression -> expression MOD expression
Rule 130   expression -> expression PLUS expression
Rule 131   expression -> expression MINUS expression
Rule 132   expression -> expression LSHIFT expression
Rule 133   expression -> expression RSHIFT expression
Rule 134   expression -> expression LSHIFTA expression
Rule 135   expression -> expression RSHIFTA expression
Rule 136   expression -> expression LT expression
Rule 137   expression -> expression GT expression
Rule 138   expression -> expression LE expression
Rule 139   expression -> expression GE expression
Rule 140   expression -> expression EQ expression
Rule 141   expression -> expression NE expression
Rule 142   expression -> expression EQL expression
Rule 143   expression -> expression NEL expression
Rule 144   expression -> expression AND expression
Rule 145   expression -> expression XOR expression
Rule 146   expression -> expression XNOR expression
Rule 147   expression -> expression OR expression
Rule 148   expression -> expression LAND expression
Rule 149   expression -> expression LOR expression
Rule 150   expression -> expression COND expression COLON expression
Rule 151   expression -> LPAREN expression RPAREN
Rule 152   expression -> concat
Rule 153   expression -> repeat
Rule 154   expression -> partselect
Rule 155   expression -> pointer
Rule 156   expression -> functioncall
Rule 157   expression -> systemcall
Rule 158   expression -> identifier
Rule 159   expression -> const_expression
Rule 160   concat -> LBRACE concatlist RBRACE
Rule 161   concatlist -> concatlist COMMA expression
Rule 162   concatlist -> expression
Rule 163   repeat -> LBRACE expression concat RBRACE
Rule 164   partselect -> identifier LBRACKET expression COLON expression RBRACKET
Rule 165   partselect -> identifier LBRACKET expression PLUSCOLON expression RBRACKET
Rule 166   partselect -> identifier LBRACKET expression MINUSCOLON expression RBRACKET
Rule 167   partselect -> pointer LBRACKET expression COLON expression RBRACKET
Rule 168   partselect -> pointer LBRACKET expression PLUSCOLON expression RBRACKET
Rule 169   partselect -> pointer LBRACKET expression MINUSCOLON expression RBRACKET
Rule 170   pointer -> identifier LBRACKET expression RBRACKET
Rule 171   pointer -> pointer LBRACKET expression RBRACKET
Rule 172   const_expression -> intnumber
Rule 173   const_expression -> floatnumber
Rule 174   const_expression -> stringliteral
Rule 175   floatnumber -> FLOATNUMBER
Rule 176   intnumber -> INTNUMBER_DEC
Rule 177   intnumber -> SIGNED_INTNUMBER_DEC
Rule 178   intnumber -> INTNUMBER_BIN
Rule 179   intnumber -> SIGNED_INTNUMBER_BIN
Rule 180   intnumber -> INTNUMBER_OCT
Rule 181   intnumber -> SIGNED_INTNUMBER_OCT
Rule 182   intnumber -> INTNUMBER_HEX
Rule 183   intnumber -> SIGNED_INTNUMBER_HEX
Rule 184   stringliteral -> STRING_LITERAL
Rule 185   always -> ALWAYS senslist always_statement
Rule 186   senslist -> AT LPAREN edgesigs RPAREN
Rule 187   edgesig -> POSEDGE edgesig_base
Rule 188   edgesig -> NEGEDGE edgesig_base
Rule 189   edgesig_base -> identifier
Rule 190   edgesig_base -> pointer
Rule 191   edgesigs -> edgesigs SENS_OR edgesig
Rule 192   edgesigs -> edgesig
Rule 193   senslist -> empty
Rule 194   senslist -> AT levelsig
Rule 195   senslist -> AT LPAREN levelsigs RPAREN
Rule 196   levelsig -> levelsig_base
Rule 197   levelsig_base -> identifier
Rule 198   levelsig_base -> pointer
Rule 199   levelsig_base -> partselect
Rule 200   levelsigs -> levelsigs SENS_OR levelsig
Rule 201   levelsigs -> levelsigs COMMA levelsig
Rule 202   levelsigs -> levelsig
Rule 203   senslist -> AT TIMES
Rule 204   senslist -> AT LPAREN TIMES RPAREN
Rule 205   basic_statement -> if_statement
Rule 206   basic_statement -> case_statement
Rule 207   basic_statement -> for_statement
Rule 208   basic_statement -> while_statement
Rule 209   basic_statement -> event_statement
Rule 210   basic_statement -> wait_statement
Rule 211   basic_statement -> forever_statement
Rule 212   basic_statement -> block
Rule 213   basic_statement -> namedblock
Rule 214   basic_statement -> parallelblock
Rule 215   basic_statement -> blocking_substitution
Rule 216   basic_statement -> nonblocking_substitution
Rule 217   basic_statement -> single_statement
Rule 218   always_statement -> basic_statement
Rule 219   blocking_substitution -> delays lvalue EQUALS delays rvalue SEMICOLON
Rule 220   blocking_substitution_base -> delays lvalue EQUALS delays rvalue
Rule 221   nonblocking_substitution -> delays lvalue LE delays rvalue SEMICOLON
Rule 222   delays -> DELAY LPAREN expression RPAREN
Rule 223   delays -> DELAY identifier
Rule 224   delays -> DELAY intnumber
Rule 225   delays -> DELAY floatnumber
Rule 226   delays -> empty
Rule 227   block -> BEGIN block_statements END
Rule 228   block -> BEGIN END
Rule 229   block_statements -> block_statements block_statement
Rule 230   block_statements -> block_statement
Rule 231   block_statement -> basic_statement
Rule 232   namedblock -> BEGIN COLON ID namedblock_statements END
Rule 233   namedblock -> BEGIN COLON ID END
Rule 234   namedblock_statements -> namedblock_statements namedblock_statement
Rule 235   namedblock_statements -> namedblock_statement
Rule 236   namedblock_statement -> basic_statement
Rule 237   namedblock_statement -> decl
Rule 238   namedblock_statement -> integerdecl
Rule 239   namedblock_statement -> realdecl
Rule 240   namedblock_statement -> parameterdecl
Rule 241   namedblock_statement -> localparamdecl
Rule 242   parallelblock -> FORK block_statements JOIN
Rule 243   parallelblock -> FORK JOIN
Rule 244   if_statement -> IF LPAREN cond RPAREN true_statement ELSE else_statement
Rule 245   if_statement -> IF LPAREN cond RPAREN true_statement
Rule 246   if_statement -> delays IF LPAREN cond RPAREN true_statement ELSE else_statement
Rule 247   if_statement -> delays IF LPAREN cond RPAREN true_statement
Rule 248   cond -> expression
Rule 249   ifcontent_statement -> basic_statement
Rule 250   true_statement -> ifcontent_statement
Rule 251   else_statement -> ifcontent_statement
Rule 252   for_statement -> FOR LPAREN forpre forcond forpost RPAREN forcontent_statement
Rule 253   forpre -> blocking_substitution
Rule 254   forpre -> SEMICOLON
Rule 255   forcond -> cond SEMICOLON
Rule 256   forcond -> SEMICOLON
Rule 257   forpost -> blocking_substitution_base
Rule 258   forpost -> empty
Rule 259   forcontent_statement -> basic_statement
Rule 260   while_statement -> WHILE LPAREN cond RPAREN whilecontent_statement
Rule 261   whilecontent_statement -> basic_statement
Rule 262   case_statement -> CASE LPAREN case_comp RPAREN casecontent_statements ENDCASE
Rule 263   case_comp -> expression
Rule 264   casecontent_statements -> casecontent_statements casecontent_statement
Rule 265   casecontent_statements -> casecontent_statement
Rule 266   casecontent_statement -> casecontent_condition COLON basic_statement
Rule 267   casecontent_condition -> casecontent_condition COMMA expression
Rule 268   casecontent_condition -> expression
Rule 269   casecontent_statement -> DEFAULT COLON basic_statement
Rule 270   initial -> INITIAL initial_statement
Rule 271   initial_statement -> basic_statement
Rule 272   event_statement -> senslist SEMICOLON
Rule 273   wait_statement -> WAIT LPAREN cond RPAREN waitcontent_statement
Rule 274   waitcontent_statement -> basic_statement
Rule 275   waitcontent_statement -> SEMICOLON
Rule 276   forever_statement -> FOREVER basic_statement
Rule 277   instance -> ID parameterlist ID LPAREN instance_ports RPAREN SEMICOLON
Rule 278   parameterlist -> DELAY LPAREN param_args RPAREN
Rule 279   parameterlist -> DELAY LPAREN param_args_noname RPAREN
Rule 280   parameterlist -> empty
Rule 281   param_args_noname -> param_args_noname COMMA param_arg_noname
Rule 282   param_args_noname -> param_arg_noname
Rule 283   param_args -> param_args COMMA param_arg
Rule 284   param_args -> param_arg
Rule 285   param_arg_noname -> expression
Rule 286   param_arg -> DOT ID LPAREN expression RPAREN
Rule 287   instance_ports -> instance_ports_list
Rule 288   instance_ports -> instance_ports_arg
Rule 289   instance_ports_list -> instance_ports_list COMMA instance_port_list
Rule 290   instance_ports_list -> instance_port_list
Rule 291   instance_port_list -> expression
Rule 292   instance_ports_arg -> instance_ports_arg COMMA instance_port_arg
Rule 293   instance_ports_arg -> instance_port_arg
Rule 294   instance_port_arg -> DOT ID LPAREN identifier RPAREN
Rule 295   instance_port_arg -> DOT ID LPAREN expression RPAREN
Rule 296   instance_port_arg -> DOT ID LPAREN RPAREN
Rule 297   genvardecl -> GENVAR genvarlist SEMICOLON
Rule 298   genvarlist -> genvarlist COMMA genvar
Rule 299   genvarlist -> genvar
Rule 300   genvar -> ID
Rule 301   generate -> GENERATE generate_items ENDGENERATE
Rule 302   generate_items -> empty
Rule 303   generate_items -> generate_items generate_item
Rule 304   generate_items -> generate_item
Rule 305   generate_item -> standard_item
Rule 306   generate_item -> generate_if
Rule 307   generate_item -> generate_for
Rule 308   generate_block -> BEGIN generate_items END
Rule 309   generate_block -> BEGIN COLON ID generate_items END
Rule 310   generate_if -> IF LPAREN cond RPAREN gif_true_item ELSE gif_false_item
Rule 311   generate_if -> IF LPAREN cond RPAREN gif_true_item
Rule 312   gif_true_item -> generate_item
Rule 313   gif_true_item -> generate_block
Rule 314   gif_false_item -> generate_item
Rule 315   gif_false_item -> generate_block
Rule 316   generate_for -> FOR LPAREN forpre forcond forpost RPAREN generate_forcontent
Rule 317   generate_forcontent -> generate_item
Rule 318   generate_forcontent -> generate_block
Rule 319   systemcall -> DOLLER ID
Rule 320   systemcall -> DOLLER ID LPAREN sysargs RPAREN
Rule 321   sysargs -> sysargs COMMA sysarg
Rule 322   sysargs -> sysarg
Rule 323   sysargs -> empty
Rule 324   sysarg -> expression
Rule 325   function -> FUNCTION width ID SEMICOLON function_statement ENDFUNCTION
Rule 326   function -> FUNCTION ID SEMICOLON function_statement ENDFUNCTION
Rule 327   function_statement -> funcvardecls function_calc
Rule 328   funcvardecls -> funcvardecls funcvardecl
Rule 329   funcvardecls -> funcvardecl
Rule 330   funcvardecl -> decl
Rule 331   funcvardecl -> integerdecl
Rule 332   function_calc -> blocking_substitution
Rule 333   function_calc -> if_statement
Rule 334   function_calc -> for_statement
Rule 335   function_calc -> while_statement
Rule 336   function_calc -> case_statement
Rule 337   function_calc -> block
Rule 338   function_calc -> namedblock
Rule 339   functioncall -> identifier LPAREN func_args RPAREN
Rule 340   func_args -> func_args COMMA expression
Rule 341   func_args -> expression
Rule 342   func_args -> empty
Rule 343   task -> TASK ID SEMICOLON task_statement ENDTASK
Rule 344   task_statement -> taskvardecls task_calc
Rule 345   taskvardecls -> taskvardecls taskvardecl
Rule 346   taskvardecls -> taskvardecl
Rule 347   taskvardecls -> empty
Rule 348   taskvardecl -> decl
Rule 349   taskvardecl -> integerdecl
Rule 350   task_calc -> blocking_substitution
Rule 351   task_calc -> if_statement
Rule 352   task_calc -> for_statement
Rule 353   task_calc -> while_statement
Rule 354   task_calc -> case_statement
Rule 355   task_calc -> block
Rule 356   task_calc -> namedblock
Rule 357   identifier -> ID
Rule 358   identifier -> scope ID
Rule 359   scope -> identifier DOT
Rule 360   scope -> pointer DOT
Rule 361   disable -> DISABLE ID
Rule 362   single_statement -> DELAY expression SEMICOLON
Rule 363   single_statement -> systemcall SEMICOLON
Rule 364   single_statement -> disable SEMICOLON
Rule 365   empty -> <empty>

Terminals, with rules where they appear

ALWAYS               : 185
AND                  : 120 144
ASSIGN               : 95 96
AT                   : 186 194 195 203 204
BEGIN                : 227 228 232 233 308 309
CASE                 : 262
COLON                : 46 47 97 100 150 164 167 232 233 266 269 309
COMMA                : 17 18 19 27 39 69 79 83 92 105 161 201 267 281 283 289 292 298 321 340
COND                 : 150
DEFAULT              : 269
DELAY                : 11 222 223 224 225 278 279 362
DISABLE              : 361
DIVIDE               : 128
DOLLER               : 319 320
DOT                  : 286 294 295 296 359 360
ELSE                 : 244 246 310
END                  : 227 228 232 233 308 309
ENDCASE              : 262
ENDFUNCTION          : 325 326
ENDGENERATE          : 301
ENDMODULE            : 9
ENDTASK              : 343
EQ                   : 140
EQL                  : 142
EQUALS               : 7 75 76 94 95 96 219 220
FLOATNUMBER          : 175
FOR                  : 252 316
FOREVER              : 276
FORK                 : 242 243
FUNCTION             : 325 326
GE                   : 139
GENERATE             : 301
GENVAR               : 297
GT                   : 137
ID                   : 7 8 10 29 71 72 75 76 81 85 94 232 233 277 277 286 294 295 296 300 309 319 320 325 326 343 357 358 361
IF                   : 244 245 246 247 310 311
INITIAL              : 270
INOUT                : 34
INPUT                : 32
INTEGER              : 19 22 77 78 88 91
INTNUMBER_BIN        : 178
INTNUMBER_DEC        : 176
INTNUMBER_HEX        : 182
INTNUMBER_OCT        : 180
JOIN                 : 242 243
LAND                 : 148
LBRACE               : 104 160 163
LBRACKET             : 46 47 97 98 99 100 101 102 164 165 166 167 168 169 170 171
LE                   : 138 221
LNOT                 : 118
LOCALPARAM           : 89 90 91
LOR                  : 149
LPAREN               : 7 8 11 23 24 25 151 186 195 204 222 244 245 246 247 252 260 262 273 277 278 279 286 294 295 296 310 311 316 320 339
LSHIFT               : 132
LSHIFTA              : 134
LT                   : 136
MINUS                : 116 131
MINUSCOLON           : 99 102 166 169
MOD                  : 129
MODULE               : 9
NAND                 : 121
NE                   : 141
NEGEDGE              : 188
NEL                  : 143
NOR                  : 122
NOT                  : 119
OR                   : 123 147
OUTPUT               : 33
PARAMETER            : 17 18 19 20 21 22 86 87 88
PLUS                 : 117 130
PLUSCOLON            : 98 101 165 168
POSEDGE              : 187
POWER                : 126
RBRACE               : 104 160 163
RBRACKET             : 46 47 97 98 99 100 101 102 164 165 166 167 168 169 170 171
REAL                 : 82
REG                  : 36
RPAREN               : 7 8 11 23 24 25 151 186 195 204 222 244 245 246 247 252 260 262 273 277 278 279 286 294 295 296 310 311 316 320 339
RSHIFT               : 133
RSHIFTA              : 135
SEMICOLON            : 23 24 25 26 67 68 73 74 77 78 82 86 87 88 89 90 91 95 96 219 221 254 255 256 272 275 277 297 325 326 343 362 363 364
SENS_OR              : 191 200
SIGNED               : 38 78
SIGNED_INTNUMBER_BIN : 179
SIGNED_INTNUMBER_DEC : 177
SIGNED_INTNUMBER_HEX : 183
SIGNED_INTNUMBER_OCT : 181
STRING_LITERAL       : 184
TASK                 : 343
TIMES                : 7 7 8 8 127 203 204
TRI                  : 35
WAIT                 : 273
WHILE                : 260
WIRE                 : 37
XNOR                 : 125 146
XOR                  : 124 145
error                : 

Nonterminals, with rules where they appear

always               : 61
always_statement     : 185
assignment           : 60
basic_statement      : 218 231 236 249 259 261 266 269 271 274 276
block                : 212 337 355
block_statement      : 229 230
block_statements     : 227 229 242
blocking_substitution : 215 253 332 350
blocking_substitution_base : 257
case_comp            : 262
case_statement       : 206 336 354
casecontent_condition : 266 267
casecontent_statement : 264 265
casecontent_statements : 262 264
concat               : 152 163
concatlist           : 160 161
cond                 : 244 245 246 247 255 260 273 310 311
const_expression     : 159
decl                 : 53 237 330 348
declassign           : 56
declassign_element   : 73 74
declname             : 69 70
declnamelist         : 67 68 69
definition           : 3 4
definitions          : 2 3
delays               : 76 76 96 96 219 219 220 220 221 221 246 247
description          : 1
disable              : 364
edgesig              : 191 192
edgesig_base         : 187 188
edgesigs             : 186 191
else_statement       : 244 246
empty                : 12 50 193 226 258 280 302 323 342 347
event_statement      : 209
expression           : 7 46 46 47 47 97 97 98 98 99 99 100 100 101 101 102 102 115 116 117 118 119 120 121 122 123 124 125 126 126 127 127 128 128 129 129 130 130 131 131 132 132 133 133 134 134 135 135 136 136 137 137 138 138 139 139 140 140 141 141 142 142 143 143 144 144 145 145 146 146 147 147 148 148 149 149 150 150 150 151 161 162 163 164 164 165 165 166 166 167 167 168 168 169 169 170 171 222 248 263 267 268 285 286 291 295 324 340 341 362
floatnumber          : 173 225
for_statement        : 207 334 352
forcond              : 252 316
forcontent_statement : 252
forever_statement    : 211
forpost              : 252 316
forpre               : 252 316
func_args            : 339 340
function             : 64
function_calc        : 327
function_statement   : 325 326
functioncall         : 156
funcvardecl          : 328 329
funcvardecls         : 327 328
generate             : 52
generate_block       : 313 315 318
generate_for         : 307
generate_forcontent  : 316
generate_if          : 306
generate_item        : 303 304 312 314 317
generate_items       : 301 303 308 309
genvar               : 298 299
genvardecl           : 59
genvarlist           : 297 298
gif_false_item       : 310
gif_true_item        : 310 311
identifier           : 100 101 102 107 114 158 164 165 166 170 189 197 223 294 339 359
if_statement         : 205 333 351
ifcontent_statement  : 250 251
initial              : 62
initial_statement    : 270
instance             : 63
instance_port_arg    : 292 293
instance_port_list   : 289 290
instance_ports       : 277
instance_ports_arg   : 288 292
instance_ports_list  : 287 289
integerdecl          : 54 238 331 349
integername          : 79 80
integernamelist      : 77 78 79
intnumber            : 172 224
ioport               : 39
ioport_head          : 40
ioports              : 24 39
item                 : 48 49
items                : 9 48
lconcat              : 110 113
lconcat_one          : 105 106
lconcatlist          : 104 105
length               : 72
levelsig             : 194 200 201 202
levelsig_base        : 196
levelsigs            : 195 200 201
localparamdecl       : 58 241
lpartselect          : 108 111
lpointer             : 109 112
lvalue               : 95 96 219 220 221
moduledef            : 5
modulename           : 9
namedblock           : 213 338 356
namedblock_statement : 234 235
namedblock_statements : 232 234
nonblocking_substitution : 216
parallelblock        : 214
param                : 14 15
param_arg            : 283 284
param_arg_noname     : 281 282
param_args           : 278 283
param_args_noname    : 279 281
param_end            : 13 16
param_substitution   : 92 93
param_substitution_list : 17 18 19 20 21 22 86 87 88 89 90 91 92
parameterdecl        : 57 240
parameterlist        : 277
paramlist            : 9
params               : 11
params_begin         : 13 14
partselect           : 154 199
pointer              : 97 98 99 103 155 167 168 169 171 190 198 360
portlist             : 9
portname             : 27 28 41 42 43 44 45
ports                : 23 27
pragma               : 6 66
realdecl             : 55 239
realname             : 83 84
realnamelist         : 82 83
repeat               : 153
rvalue               : 75 76 94 95 96 219 220 221
scope                : 358
senslist             : 185 272
sigtype              : 30 31
sigtypes             : 30 41 42 43 44 67 68 73 74
single_statement     : 217
source_text          : 0
standard_item        : 51 305
stringliteral        : 174
sysarg               : 321 322
sysargs              : 320 321
systemcall           : 157 363
task                 : 65
task_calc            : 344
task_statement       : 343
taskvardecl          : 345 346
taskvardecls         : 344 345
true_statement       : 244 245 246 247
wait_statement       : 210
waitcontent_statement : 273
while_statement      : 208 335 353
whilecontent_statement : 260
width                : 18 21 42 44 68 74 87 90 325

Parsing method: LALR

state 0

    (0) S' -> . source_text
    (1) source_text -> . description
    (2) description -> . definitions
    (3) definitions -> . definitions definition
    (4) definitions -> . definition
    (5) definition -> . moduledef
    (6) definition -> . pragma
    (9) moduledef -> . MODULE modulename paramlist portlist items ENDMODULE
    (7) pragma -> . LPAREN TIMES ID EQUALS expression TIMES RPAREN
    (8) pragma -> . LPAREN TIMES ID TIMES RPAREN

    MODULE          shift and go to state 3
    LPAREN          shift and go to state 6

    moduledef                      shift and go to state 5
    definitions                    shift and go to state 7
    definition                     shift and go to state 1
    pragma                         shift and go to state 2
    description                    shift and go to state 8
    source_text                    shift and go to state 4

state 1

    (4) definitions -> definition .

    MODULE          reduce using rule 4 (definitions -> definition .)
    LPAREN          reduce using rule 4 (definitions -> definition .)
    $end            reduce using rule 4 (definitions -> definition .)


state 2

    (6) definition -> pragma .

    MODULE          reduce using rule 6 (definition -> pragma .)
    LPAREN          reduce using rule 6 (definition -> pragma .)
    $end            reduce using rule 6 (definition -> pragma .)


state 3

    (9) moduledef -> MODULE . modulename paramlist portlist items ENDMODULE
    (10) modulename -> . ID

    ID              shift and go to state 9

    modulename                     shift and go to state 10

state 4

    (0) S' -> source_text .



state 5

    (5) definition -> moduledef .

    MODULE          reduce using rule 5 (definition -> moduledef .)
    LPAREN          reduce using rule 5 (definition -> moduledef .)
    $end            reduce using rule 5 (definition -> moduledef .)


state 6

    (7) pragma -> LPAREN . TIMES ID EQUALS expression TIMES RPAREN
    (8) pragma -> LPAREN . TIMES ID TIMES RPAREN

    TIMES           shift and go to state 11


state 7

    (2) description -> definitions .
    (3) definitions -> definitions . definition
    (5) definition -> . moduledef
    (6) definition -> . pragma
    (9) moduledef -> . MODULE modulename paramlist portlist items ENDMODULE
    (7) pragma -> . LPAREN TIMES ID EQUALS expression TIMES RPAREN
    (8) pragma -> . LPAREN TIMES ID TIMES RPAREN

    $end            reduce using rule 2 (description -> definitions .)
    MODULE          shift and go to state 3
    LPAREN          shift and go to state 6

    moduledef                      shift and go to state 5
    definition                     shift and go to state 12
    pragma                         shift and go to state 2

state 8

    (1) source_text -> description .

    $end            reduce using rule 1 (source_text -> description .)


state 9

    (10) modulename -> ID .

    DELAY           reduce using rule 10 (modulename -> ID .)
    LPAREN          reduce using rule 10 (modulename -> ID .)
    SEMICOLON       reduce using rule 10 (modulename -> ID .)


state 10

    (9) moduledef -> MODULE modulename . paramlist portlist items ENDMODULE
    (11) paramlist -> . DELAY LPAREN params RPAREN
    (12) paramlist -> . empty
    (365) empty -> .

    DELAY           shift and go to state 14
    LPAREN          reduce using rule 365 (empty -> .)
    SEMICOLON       reduce using rule 365 (empty -> .)

    paramlist                      shift and go to state 13
    empty                          shift and go to state 15

state 11

    (7) pragma -> LPAREN TIMES . ID EQUALS expression TIMES RPAREN
    (8) pragma -> LPAREN TIMES . ID TIMES RPAREN

    ID              shift and go to state 16


state 12

    (3) definitions -> definitions definition .

    MODULE          reduce using rule 3 (definitions -> definitions definition .)
    LPAREN          reduce using rule 3 (definitions -> definitions definition .)
    $end            reduce using rule 3 (definitions -> definitions definition .)


state 13

    (9) moduledef -> MODULE modulename paramlist . portlist items ENDMODULE
    (23) portlist -> . LPAREN ports RPAREN SEMICOLON
    (24) portlist -> . LPAREN ioports RPAREN SEMICOLON
    (25) portlist -> . LPAREN RPAREN SEMICOLON
    (26) portlist -> . SEMICOLON

    LPAREN          shift and go to state 17
    SEMICOLON       shift and go to state 18

    portlist                       shift and go to state 19

state 14

    (11) paramlist -> DELAY . LPAREN params RPAREN

    LPAREN          shift and go to state 20


state 15

    (12) paramlist -> empty .

    LPAREN          reduce using rule 12 (paramlist -> empty .)
    SEMICOLON       reduce using rule 12 (paramlist -> empty .)


state 16

    (7) pragma -> LPAREN TIMES ID . EQUALS expression TIMES RPAREN
    (8) pragma -> LPAREN TIMES ID . TIMES RPAREN

    EQUALS          shift and go to state 22
    TIMES           shift and go to state 21


state 17

    (23) portlist -> LPAREN . ports RPAREN SEMICOLON
    (24) portlist -> LPAREN . ioports RPAREN SEMICOLON
    (25) portlist -> LPAREN . RPAREN SEMICOLON
    (27) ports -> . ports COMMA portname
    (28) ports -> . portname
    (39) ioports -> . ioports COMMA ioport
    (40) ioports -> . ioport_head
    (29) portname -> . ID
    (43) ioport_head -> . sigtypes portname
    (44) ioport_head -> . sigtypes width portname
    (30) sigtypes -> . sigtypes sigtype
    (31) sigtypes -> . sigtype
    (32) sigtype -> . INPUT
    (33) sigtype -> . OUTPUT
    (34) sigtype -> . INOUT
    (35) sigtype -> . TRI
    (36) sigtype -> . REG
    (37) sigtype -> . WIRE
    (38) sigtype -> . SIGNED

    RPAREN          shift and go to state 30
    ID              shift and go to state 34
    INPUT           shift and go to state 37
    OUTPUT          shift and go to state 24
    INOUT           shift and go to state 25
    TRI             shift and go to state 36
    REG             shift and go to state 35
    WIRE            shift and go to state 26
    SIGNED          shift and go to state 29

    sigtypes                       shift and go to state 23
    ioports                        shift and go to state 31
    ioport_head                    shift and go to state 32
    portname                       shift and go to state 27
    ports                          shift and go to state 28
    sigtype                        shift and go to state 33

state 18

    (26) portlist -> SEMICOLON .

    GENERATE        reduce using rule 26 (portlist -> SEMICOLON .)
    INTEGER         reduce using rule 26 (portlist -> SEMICOLON .)
    REAL            reduce using rule 26 (portlist -> SEMICOLON .)
    PARAMETER       reduce using rule 26 (portlist -> SEMICOLON .)
    LOCALPARAM      reduce using rule 26 (portlist -> SEMICOLON .)
    GENVAR          reduce using rule 26 (portlist -> SEMICOLON .)
    ASSIGN          reduce using rule 26 (portlist -> SEMICOLON .)
    ALWAYS          reduce using rule 26 (portlist -> SEMICOLON .)
    INITIAL         reduce using rule 26 (portlist -> SEMICOLON .)
    ID              reduce using rule 26 (portlist -> SEMICOLON .)
    FUNCTION        reduce using rule 26 (portlist -> SEMICOLON .)
    TASK            reduce using rule 26 (portlist -> SEMICOLON .)
    LPAREN          reduce using rule 26 (portlist -> SEMICOLON .)
    INPUT           reduce using rule 26 (portlist -> SEMICOLON .)
    OUTPUT          reduce using rule 26 (portlist -> SEMICOLON .)
    INOUT           reduce using rule 26 (portlist -> SEMICOLON .)
    TRI             reduce using rule 26 (portlist -> SEMICOLON .)
    REG             reduce using rule 26 (portlist -> SEMICOLON .)
    WIRE            reduce using rule 26 (portlist -> SEMICOLON .)
    SIGNED          reduce using rule 26 (portlist -> SEMICOLON .)
    ENDMODULE       reduce using rule 26 (portlist -> SEMICOLON .)


state 19

    (9) moduledef -> MODULE modulename paramlist portlist . items ENDMODULE
    (48) items -> . items item
    (49) items -> . item
    (50) items -> . empty
    (51) item -> . standard_item
    (52) item -> . generate
    (365) empty -> .
    (53) standard_item -> . decl
    (54) standard_item -> . integerdecl
    (55) standard_item -> . realdecl
    (56) standard_item -> . declassign
    (57) standard_item -> . parameterdecl
    (58) standard_item -> . localparamdecl
    (59) standard_item -> . genvardecl
    (60) standard_item -> . assignment
    (61) standard_item -> . always
    (62) standard_item -> . initial
    (63) standard_item -> . instance
    (64) standard_item -> . function
    (65) standard_item -> . task
    (66) standard_item -> . pragma
    (301) generate -> . GENERATE generate_items ENDGENERATE
    (67) decl -> . sigtypes declnamelist SEMICOLON
    (68) decl -> . sigtypes width declnamelist SEMICOLON
    (77) integerdecl -> . INTEGER integernamelist SEMICOLON
    (78) integerdecl -> . INTEGER SIGNED integernamelist SEMICOLON
    (82) realdecl -> . REAL realnamelist SEMICOLON
    (73) declassign -> . sigtypes declassign_element SEMICOLON
    (74) declassign -> . sigtypes width declassign_element SEMICOLON
    (86) parameterdecl -> . PARAMETER param_substitution_list SEMICOLON
    (87) parameterdecl -> . PARAMETER width param_substitution_list SEMICOLON
    (88) parameterdecl -> . PARAMETER INTEGER param_substitution_list SEMICOLON
    (89) localparamdecl -> . LOCALPARAM param_substitution_list SEMICOLON
    (90) localparamdecl -> . LOCALPARAM width param_substitution_list SEMICOLON
    (91) localparamdecl -> . LOCALPARAM INTEGER param_substitution_list SEMICOLON
    (297) genvardecl -> . GENVAR genvarlist SEMICOLON
    (95) assignment -> . ASSIGN lvalue EQUALS rvalue SEMICOLON
    (96) assignment -> . ASSIGN delays lvalue EQUALS delays rvalue SEMICOLON
    (185) always -> . ALWAYS senslist always_statement
    (270) initial -> . INITIAL initial_statement
    (277) instance -> . ID parameterlist ID LPAREN instance_ports RPAREN SEMICOLON
    (325) function -> . FUNCTION width ID SEMICOLON function_statement ENDFUNCTION
    (326) function -> . FUNCTION ID SEMICOLON function_statement ENDFUNCTION
    (343) task -> . TASK ID SEMICOLON task_statement ENDTASK
    (7) pragma -> . LPAREN TIMES ID EQUALS expression TIMES RPAREN
    (8) pragma -> . LPAREN TIMES ID TIMES RPAREN
    (30) sigtypes -> . sigtypes sigtype
    (31) sigtypes -> . sigtype
    (32) sigtype -> . INPUT
    (33) sigtype -> . OUTPUT
    (34) sigtype -> . INOUT
    (35) sigtype -> . TRI
    (36) sigtype -> . REG
    (37) sigtype -> . WIRE
    (38) sigtype -> . SIGNED

  ! shift/reduce conflict for GENERATE resolved as shift
  ! shift/reduce conflict for INTEGER resolved as shift
  ! shift/reduce conflict for REAL resolved as shift
  ! shift/reduce conflict for PARAMETER resolved as shift
  ! shift/reduce conflict for LOCALPARAM resolved as shift
  ! shift/reduce conflict for GENVAR resolved as shift
  ! shift/reduce conflict for ASSIGN resolved as shift
  ! shift/reduce conflict for ALWAYS resolved as shift
  ! shift/reduce conflict for INITIAL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for FUNCTION resolved as shift
  ! shift/reduce conflict for TASK resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for INPUT resolved as shift
  ! shift/reduce conflict for OUTPUT resolved as shift
  ! shift/reduce conflict for INOUT resolved as shift
  ! shift/reduce conflict for TRI resolved as shift
  ! shift/reduce conflict for REG resolved as shift
  ! shift/reduce conflict for WIRE resolved as shift
  ! shift/reduce conflict for SIGNED resolved as shift
    ENDMODULE       reduce using rule 365 (empty -> .)
    GENERATE        shift and go to state 55
    INTEGER         shift and go to state 69
    REAL            shift and go to state 49
    PARAMETER       shift and go to state 66
    LOCALPARAM      shift and go to state 52
    GENVAR          shift and go to state 42
    ASSIGN          shift and go to state 48
    ALWAYS          shift and go to state 46
    INITIAL         shift and go to state 45
    ID              shift and go to state 51
    FUNCTION        shift and go to state 44
    TASK            shift and go to state 67
    LPAREN          shift and go to state 6
    INPUT           shift and go to state 37
    OUTPUT          shift and go to state 24
    INOUT           shift and go to state 25
    TRI             shift and go to state 36
    REG             shift and go to state 35
    WIRE            shift and go to state 26
    SIGNED          shift and go to state 29

  ! GENERATE        [ reduce using rule 365 (empty -> .) ]
  ! INTEGER         [ reduce using rule 365 (empty -> .) ]
  ! REAL            [ reduce using rule 365 (empty -> .) ]
  ! PARAMETER       [ reduce using rule 365 (empty -> .) ]
  ! LOCALPARAM      [ reduce using rule 365 (empty -> .) ]
  ! GENVAR          [ reduce using rule 365 (empty -> .) ]
  ! ASSIGN          [ reduce using rule 365 (empty -> .) ]
  ! ALWAYS          [ reduce using rule 365 (empty -> .) ]
  ! INITIAL         [ reduce using rule 365 (empty -> .) ]
  ! ID              [ reduce using rule 365 (empty -> .) ]
  ! FUNCTION        [ reduce using rule 365 (empty -> .) ]
  ! TASK            [ reduce using rule 365 (empty -> .) ]
  ! LPAREN          [ reduce using rule 365 (empty -> .) ]
  ! INPUT           [ reduce using rule 365 (empty -> .) ]
  ! OUTPUT          [ reduce using rule 365 (empty -> .) ]
  ! INOUT           [ reduce using rule 365 (empty -> .) ]
  ! TRI             [ reduce using rule 365 (empty -> .) ]
  ! REG             [ reduce using rule 365 (empty -> .) ]
  ! WIRE            [ reduce using rule 365 (empty -> .) ]
  ! SIGNED          [ reduce using rule 365 (empty -> .) ]

    standard_item                  shift and go to state 38
    item                           shift and go to state 56
    empty                          shift and go to state 39
    declassign                     shift and go to state 58
    function                       shift and go to state 59
    items                          shift and go to state 40
    always                         shift and go to state 41
    genvardecl                     shift and go to state 43
    sigtypes                       shift and go to state 61
    decl                           shift and go to state 62
    integerdecl                    shift and go to state 47
    pragma                         shift and go to state 63
    sigtype                        shift and go to state 33
    instance                       shift and go to state 50
    parameterdecl                  shift and go to state 64
    realdecl                       shift and go to state 60
    generate                       shift and go to state 54
    initial                        shift and go to state 65
    task                           shift and go to state 57
    assignment                     shift and go to state 68
    localparamdecl                 shift and go to state 53

state 20

    (11) paramlist -> DELAY LPAREN . params RPAREN
    (13) params -> . params_begin param_end
    (16) params -> . param_end
    (14) params_begin -> . params_begin param
    (15) params_begin -> . param
    (20) param_end -> . PARAMETER param_substitution_list
    (21) param_end -> . PARAMETER width param_substitution_list
    (22) param_end -> . PARAMETER INTEGER param_substitution_list
    (17) param -> . PARAMETER param_substitution_list COMMA
    (18) param -> . PARAMETER width param_substitution_list COMMA
    (19) param -> . PARAMETER INTEGER param_substitution_list COMMA

    PARAMETER       shift and go to state 72

    param                          shift and go to state 70
    param_end                      shift and go to state 74
    params_begin                   shift and go to state 71
    params                         shift and go to state 73

state 21

    (8) pragma -> LPAREN TIMES ID TIMES . RPAREN

    RPAREN          shift and go to state 75


state 22

    (7) pragma -> LPAREN TIMES ID EQUALS . expression TIMES RPAREN
    (116) expression -> . MINUS expression
    (117) expression -> . PLUS expression
    (118) expression -> . LNOT expression
    (119) expression -> . NOT expression
    (120) expression -> . AND expression
    (121) expression -> . NAND expression
    (122) expression -> . NOR expression
    (123) expression -> . OR expression
    (124) expression -> . XOR expression
    (125) expression -> . XNOR expression
    (126) expression -> . expression POWER expression
    (127) expression -> . expression TIMES expression
    (128) expression -> . expression DIVIDE expression
    (129) expression -> . expression MOD expression
    (130) expression -> . expression PLUS expression
    (131) expression -> . expression MINUS expression
    (132) expression -> . expression LSHIFT expression
    (133) expression -> . expression RSHIFT expression
    (134) expression -> . expression LSHIFTA expression
    (135) expression -> . expression RSHIFTA expression
    (136) expression -> . expression LT expression
    (137) expression -> . expression GT expression
    (138) expression -> . expression LE expression
    (139) expression -> . expression GE expression
    (140) expression -> . expression EQ expression
    (141) expression -> . expression NE expression
    (142) expression -> . expression EQL expression
    (143) expression -> . expression NEL expression
    (144) expression -> . expression AND expression
    (145) expression -> . expression XOR expression
    (146) expression -> . expression XNOR expression
    (147) expression -> . expression OR expression
    (148) expression -> . expression LAND expression
    (149) expression -> . expression LOR expression
    (150) expression -> . expression COND expression COLON expression
    (151) expression -> . LPAREN expression RPAREN
    (152) expression -> . concat
    (153) expression -> . repeat
    (154) expression -> . partselect
    (155) expression -> . pointer
    (156) expression -> . functioncall
    (157) expression -> . systemcall
    (158) expression -> . identifier
    (159) expression -> . const_expression
    (160) concat -> . LBRACE concatlist RBRACE
    (163) repeat -> . LBRACE expression concat RBRACE
    (164) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (165) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (166) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (167) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (168) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (169) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (170) pointer -> . identifier LBRACKET expression RBRACKET
    (171) pointer -> . pointer LBRACKET expression RBRACKET
    (339) functioncall -> . identifier LPAREN func_args RPAREN
    (319) systemcall -> . DOLLER ID
    (320) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (357) identifier -> . ID
    (358) identifier -> . scope ID
    (172) const_expression -> . intnumber
    (173) const_expression -> . floatnumber
    (174) const_expression -> . stringliteral
    (359) scope -> . identifier DOT
    (360) scope -> . pointer DOT
    (176) intnumber -> . INTNUMBER_DEC
    (177) intnumber -> . SIGNED_INTNUMBER_DEC
    (178) intnumber -> . INTNUMBER_BIN
    (179) intnumber -> . SIGNED_INTNUMBER_BIN
    (180) intnumber -> . INTNUMBER_OCT
    (181) intnumber -> . SIGNED_INTNUMBER_OCT
    (182) intnumber -> . INTNUMBER_HEX
    (183) intnumber -> . SIGNED_INTNUMBER_HEX
    (175) floatnumber -> . FLOATNUMBER
    (184) stringliteral -> . STRING_LITERAL

    MINUS           shift and go to state 97
    PLUS            shift and go to state 89
    LNOT            shift and go to state 95
    NOT             shift and go to state 78
    AND             shift and go to state 91
    NAND            shift and go to state 98
    NOR             shift and go to state 76
    OR              shift and go to state 105
    XOR             shift and go to state 82
    XNOR            shift and go to state 87
    LPAREN          shift and go to state 96
    LBRACE          shift and go to state 77
    DOLLER          shift and go to state 100
    ID              shift and go to state 85
    INTNUMBER_DEC   shift and go to state 79
    SIGNED_INTNUMBER_DEC shift and go to state 101
    INTNUMBER_BIN   shift and go to state 111
    SIGNED_INTNUMBER_BIN shift and go to state 112
    INTNUMBER_OCT   shift and go to state 86
    SIGNED_INTNUMBER_OCT shift and go to state 106
    INTNUMBER_HEX   shift and go to state 93
    SIGNED_INTNUMBER_HEX shift and go to state 83
    FLOATNUMBER     shift and go to state 102
    STRING_LITERAL  shift and go to state 107

    stringliteral                  shift and go to state 99
    intnumber                      shift and go to state 81
    expression                     shift and go to state 92
    repeat                         shift and go to state 108
    partselect                     shift and go to state 103
    identifier                     shift and go to state 104
    pointer                        shift and go to state 80
    functioncall                   shift and go to state 94
    scope                          shift and go to state 84
    systemcall                     shift and go to state 109
    const_expression               shift and go to state 110
    concat                         shift and go to state 88
    floatnumber                    shift and go to state 90

state 23

    (43) ioport_head -> sigtypes . portname
    (44) ioport_head -> sigtypes . width portname
    (30) sigtypes -> sigtypes . sigtype
    (29) portname -> . ID
    (46) width -> . LBRACKET expression COLON expression RBRACKET
    (32) sigtype -> . INPUT
    (33) sigtype -> . OUTPUT
    (34) sigtype -> . INOUT
    (35) sigtype -> . TRI
    (36) sigtype -> . REG
    (37) sigtype -> . WIRE
    (38) sigtype -> . SIGNED

    ID              shift and go to state 34
    LBRACKET        shift and go to state 116
    INPUT           shift and go to state 37
    OUTPUT          shift and go to state 24
    INOUT           shift and go to state 25
    TRI             shift and go to state 36
    REG             shift and go to state 35
    WIRE            shift and go to state 26
    SIGNED          shift and go to state 29

    portname                       shift and go to state 113
    width                          shift and go to state 114
    sigtype                        shift and go to state 115

state 24

    (33) sigtype -> OUTPUT .

    LBRACKET        reduce using rule 33 (sigtype -> OUTPUT .)
    ID              reduce using rule 33 (sigtype -> OUTPUT .)
    INPUT           reduce using rule 33 (sigtype -> OUTPUT .)
    OUTPUT          reduce using rule 33 (sigtype -> OUTPUT .)
    INOUT           reduce using rule 33 (sigtype -> OUTPUT .)
    TRI             reduce using rule 33 (sigtype -> OUTPUT .)
    REG             reduce using rule 33 (sigtype -> OUTPUT .)
    WIRE            reduce using rule 33 (sigtype -> OUTPUT .)
    SIGNED          reduce using rule 33 (sigtype -> OUTPUT .)
    DELAY           reduce using rule 33 (sigtype -> OUTPUT .)


state 25

    (34) sigtype -> INOUT .

    LBRACKET        reduce using rule 34 (sigtype -> INOUT .)
    ID              reduce using rule 34 (sigtype -> INOUT .)
    INPUT           reduce using rule 34 (sigtype -> INOUT .)
    OUTPUT          reduce using rule 34 (sigtype -> INOUT .)
    INOUT           reduce using rule 34 (sigtype -> INOUT .)
    TRI             reduce using rule 34 (sigtype -> INOUT .)
    REG             reduce using rule 34 (sigtype -> INOUT .)
    WIRE            reduce using rule 34 (sigtype -> INOUT .)
    SIGNED          reduce using rule 34 (sigtype -> INOUT .)
    DELAY           reduce using rule 34 (sigtype -> INOUT .)


state 26

    (37) sigtype -> WIRE .

    LBRACKET        reduce using rule 37 (sigtype -> WIRE .)
    ID              reduce using rule 37 (sigtype -> WIRE .)
    INPUT           reduce using rule 37 (sigtype -> WIRE .)
    OUTPUT          reduce using rule 37 (sigtype -> WIRE .)
    INOUT           reduce using rule 37 (sigtype -> WIRE .)
    TRI             reduce using rule 37 (sigtype -> WIRE .)
    REG             reduce using rule 37 (sigtype -> WIRE .)
    WIRE            reduce using rule 37 (sigtype -> WIRE .)
    SIGNED          reduce using rule 37 (sigtype -> WIRE .)
    DELAY           reduce using rule 37 (sigtype -> WIRE .)


state 27

    (28) ports -> portname .

    RPAREN          reduce using rule 28 (ports -> portname .)
    COMMA           reduce using rule 28 (ports -> portname .)


state 28

    (23) portlist -> LPAREN ports . RPAREN SEMICOLON
    (27) ports -> ports . COMMA portname

    RPAREN          shift and go to state 118
    COMMA           shift and go to state 117


state 29

    (38) sigtype -> SIGNED .

    LBRACKET        reduce using rule 38 (sigtype -> SIGNED .)
    ID              reduce using rule 38 (sigtype -> SIGNED .)
    INPUT           reduce using rule 38 (sigtype -> SIGNED .)
    OUTPUT          reduce using rule 38 (sigtype -> SIGNED .)
    INOUT           reduce using rule 38 (sigtype -> SIGNED .)
    TRI             reduce using rule 38 (sigtype -> SIGNED .)
    REG             reduce using rule 38 (sigtype -> SIGNED .)
    WIRE            reduce using rule 38 (sigtype -> SIGNED .)
    SIGNED          reduce using rule 38 (sigtype -> SIGNED .)
    DELAY           reduce using rule 38 (sigtype -> SIGNED .)


state 30

    (25) portlist -> LPAREN RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 119


state 31

    (24) portlist -> LPAREN ioports . RPAREN SEMICOLON
    (39) ioports -> ioports . COMMA ioport

    RPAREN          shift and go to state 121
    COMMA           shift and go to state 120


state 32

    (40) ioports -> ioport_head .

    RPAREN          reduce using rule 40 (ioports -> ioport_head .)
    COMMA           reduce using rule 40 (ioports -> ioport_head .)


state 33

    (31) sigtypes -> sigtype .

    LBRACKET        reduce using rule 31 (sigtypes -> sigtype .)
    ID              reduce using rule 31 (sigtypes -> sigtype .)
    INPUT           reduce using rule 31 (sigtypes -> sigtype .)
    OUTPUT          reduce using rule 31 (sigtypes -> sigtype .)
    INOUT           reduce using rule 31 (sigtypes -> sigtype .)
    TRI             reduce using rule 31 (sigtypes -> sigtype .)
    REG             reduce using rule 31 (sigtypes -> sigtype .)
    WIRE            reduce using rule 31 (sigtypes -> sigtype .)
    SIGNED          reduce using rule 31 (sigtypes -> sigtype .)
    DELAY           reduce using rule 31 (sigtypes -> sigtype .)


state 34

    (29) portname -> ID .

    RPAREN          reduce using rule 29 (portname -> ID .)
    COMMA           reduce using rule 29 (portname -> ID .)


state 35

    (36) sigtype -> REG .

    LBRACKET        reduce using rule 36 (sigtype -> REG .)
    ID              reduce using rule 36 (sigtype -> REG .)
    INPUT           reduce using rule 36 (sigtype -> REG .)
    OUTPUT          reduce using rule 36 (sigtype -> REG .)
    INOUT           reduce using rule 36 (sigtype -> REG .)
    TRI             reduce using rule 36 (sigtype -> REG .)
    REG             reduce using rule 36 (sigtype -> REG .)
    WIRE            reduce using rule 36 (sigtype -> REG .)
    SIGNED          reduce using rule 36 (sigtype -> REG .)
    DELAY           reduce using rule 36 (sigtype -> REG .)


state 36

    (35) sigtype -> TRI .

    LBRACKET        reduce using rule 35 (sigtype -> TRI .)
    ID              reduce using rule 35 (sigtype -> TRI .)
    INPUT           reduce using rule 35 (sigtype -> TRI .)
    OUTPUT          reduce using rule 35 (sigtype -> TRI .)
    INOUT           reduce using rule 35 (sigtype -> TRI .)
    TRI             reduce using rule 35 (sigtype -> TRI .)
    REG             reduce using rule 35 (sigtype -> TRI .)
    WIRE            reduce using rule 35 (sigtype -> TRI .)
    SIGNED          reduce using rule 35 (sigtype -> TRI .)
    DELAY           reduce using rule 35 (sigtype -> TRI .)


state 37

    (32) sigtype -> INPUT .

    LBRACKET        reduce using rule 32 (sigtype -> INPUT .)
    ID              reduce using rule 32 (sigtype -> INPUT .)
    INPUT           reduce using rule 32 (sigtype -> INPUT .)
    OUTPUT          reduce using rule 32 (sigtype -> INPUT .)
    INOUT           reduce using rule 32 (sigtype -> INPUT .)
    TRI             reduce using rule 32 (sigtype -> INPUT .)
    REG             reduce using rule 32 (sigtype -> INPUT .)
    WIRE            reduce using rule 32 (sigtype -> INPUT .)
    SIGNED          reduce using rule 32 (sigtype -> INPUT .)
    DELAY           reduce using rule 32 (sigtype -> INPUT .)


state 38

    (51) item -> standard_item .

    ENDMODULE       reduce using rule 51 (item -> standard_item .)
    GENERATE        reduce using rule 51 (item -> standard_item .)
    INTEGER         reduce using rule 51 (item -> standard_item .)
    REAL            reduce using rule 51 (item -> standard_item .)
    PARAMETER       reduce using rule 51 (item -> standard_item .)
    LOCALPARAM      reduce using rule 51 (item -> standard_item .)
    GENVAR          reduce using rule 51 (item -> standard_item .)
    ASSIGN          reduce using rule 51 (item -> standard_item .)
    ALWAYS          reduce using rule 51 (item -> standard_item .)
    INITIAL         reduce using rule 51 (item -> standard_item .)
    ID              reduce using rule 51 (item -> standard_item .)
    FUNCTION        reduce using rule 51 (item -> standard_item .)
    TASK            reduce using rule 51 (item -> standard_item .)
    LPAREN          reduce using rule 51 (item -> standard_item .)
    INPUT           reduce using rule 51 (item -> standard_item .)
    OUTPUT          reduce using rule 51 (item -> standard_item .)
    INOUT           reduce using rule 51 (item -> standard_item .)
    TRI             reduce using rule 51 (item -> standard_item .)
    REG             reduce using rule 51 (item -> standard_item .)
    WIRE            reduce using rule 51 (item -> standard_item .)
    SIGNED          reduce using rule 51 (item -> standard_item .)


state 39

    (50) items -> empty .

    ENDMODULE       reduce using rule 50 (items -> empty .)
    GENERATE        reduce using rule 50 (items -> empty .)
    INTEGER         reduce using rule 50 (items -> empty .)
    REAL            reduce using rule 50 (items -> empty .)
    PARAMETER       reduce using rule 50 (items -> empty .)
    LOCALPARAM      reduce using rule 50 (items -> empty .)
    GENVAR          reduce using rule 50 (items -> empty .)
    ASSIGN          reduce using rule 50 (items -> empty .)
    ALWAYS          reduce using rule 50 (items -> empty .)
    INITIAL         reduce using rule 50 (items -> empty .)
    ID              reduce using rule 50 (items -> empty .)
    FUNCTION        reduce using rule 50 (items -> empty .)
    TASK            reduce using rule 50 (items -> empty .)
    LPAREN          reduce using rule 50 (items -> empty .)
    INPUT           reduce using rule 50 (items -> empty .)
    OUTPUT          reduce using rule 50 (items -> empty .)
    INOUT           reduce using rule 50 (items -> empty .)
    TRI             reduce using rule 50 (items -> empty .)
    REG             reduce using rule 50 (items -> empty .)
    WIRE            reduce using rule 50 (items -> empty .)
    SIGNED          reduce using rule 50 (items -> empty .)


state 40

    (9) moduledef -> MODULE modulename paramlist portlist items . ENDMODULE
    (48) items -> items . item
    (51) item -> . standard_item
    (52) item -> . generate
    (53) standard_item -> . decl
    (54) standard_item -> . integerdecl
    (55) standard_item -> . realdecl
    (56) standard_item -> . declassign
    (57) standard_item -> . parameterdecl
    (58) standard_item -> . localparamdecl
    (59) standard_item -> . genvardecl
    (60) standard_item -> . assignment
    (61) standard_item -> . always
    (62) standard_item -> . initial
    (63) standard_item -> . instance
    (64) standard_item -> . function
    (65) standard_item -> . task
    (66) standard_item -> . pragma
    (301) generate -> . GENERATE generate_items ENDGENERATE
    (67) decl -> . sigtypes declnamelist SEMICOLON
    (68) decl -> . sigtypes width declnamelist SEMICOLON
    (77) integerdecl -> . INTEGER integernamelist SEMICOLON
    (78) integerdecl -> . INTEGER SIGNED integernamelist SEMICOLON
    (82) realdecl -> . REAL realnamelist SEMICOLON
    (73) declassign -> . sigtypes declassign_element SEMICOLON
    (74) declassign -> . sigtypes width declassign_element SEMICOLON
    (86) parameterdecl -> . PARAMETER param_substitution_list SEMICOLON
    (87) parameterdecl -> . PARAMETER width param_substitution_list SEMICOLON
    (88) parameterdecl -> . PARAMETER INTEGER param_substitution_list SEMICOLON
    (89) localparamdecl -> . LOCALPARAM param_substitution_list SEMICOLON
    (90) localparamdecl -> . LOCALPARAM width param_substitution_list SEMICOLON
    (91) localparamdecl -> . LOCALPARAM INTEGER param_substitution_list SEMICOLON
    (297) genvardecl -> . GENVAR genvarlist SEMICOLON
    (95) assignment -> . ASSIGN lvalue EQUALS rvalue SEMICOLON
    (96) assignment -> . ASSIGN delays lvalue EQUALS delays rvalue SEMICOLON
    (185) always -> . ALWAYS senslist always_statement
    (270) initial -> . INITIAL initial_statement
    (277) instance -> . ID parameterlist ID LPAREN instance_ports RPAREN SEMICOLON
    (325) function -> . FUNCTION width ID SEMICOLON function_statement ENDFUNCTION
    (326) function -> . FUNCTION ID SEMICOLON function_statement ENDFUNCTION
    (343) task -> . TASK ID SEMICOLON task_statement ENDTASK
    (7) pragma -> . LPAREN TIMES ID EQUALS expression TIMES RPAREN
    (8) pragma -> . LPAREN TIMES ID TIMES RPAREN
    (30) sigtypes -> . sigtypes sigtype
    (31) sigtypes -> . sigtype
    (32) sigtype -> . INPUT
    (33) sigtype -> . OUTPUT
    (34) sigtype -> . INOUT
    (35) sigtype -> . TRI
    (36) sigtype -> . REG
    (37) sigtype -> . WIRE
    (38) sigtype -> . SIGNED

    ENDMODULE       shift and go to state 122
    GENERATE        shift and go to state 55
    INTEGER         shift and go to state 69
    REAL            shift and go to state 49
    PARAMETER       shift and go to state 66
    LOCALPARAM      shift and go to state 52
    GENVAR          shift and go to state 42
    ASSIGN          shift and go to state 48
    ALWAYS          shift and go to state 46
    INITIAL         shift and go to state 45
    ID              shift and go to state 51
    FUNCTION        shift and go to state 44
    TASK            shift and go to state 67
    LPAREN          shift and go to state 6
    INPUT           shift and go to state 37
    OUTPUT          shift and go to state 24
    INOUT           shift and go to state 25
    TRI             shift and go to state 36
    REG             shift and go to state 35
    WIRE            shift and go to state 26
    SIGNED          shift and go to state 29

    standard_item                  shift and go to state 38
    item                           shift and go to state 123
    task                           shift and go to state 57
    declassign                     shift and go to state 58
    function                       shift and go to state 59
    always                         shift and go to state 41
    genvardecl                     shift and go to state 43
    sigtypes                       shift and go to state 61
    decl                           shift and go to state 62
    integerdecl                    shift and go to state 47
    pragma                         shift and go to state 63
    sigtype                        shift and go to state 33
    instance                       shift and go to state 50
    parameterdecl                  shift and go to state 64
    realdecl                       shift and go to state 60
    generate                       shift and go to state 54
    initial                        shift and go to state 65
    assignment                     shift and go to state 68
    localparamdecl                 shift and go to state 53

state 41

    (61) standard_item -> always .

    ENDMODULE       reduce using rule 61 (standard_item -> always .)
    GENERATE        reduce using rule 61 (standard_item -> always .)
    INTEGER         reduce using rule 61 (standard_item -> always .)
    REAL            reduce using rule 61 (standard_item -> always .)
    PARAMETER       reduce using rule 61 (standard_item -> always .)
    LOCALPARAM      reduce using rule 61 (standard_item -> always .)
    GENVAR          reduce using rule 61 (standard_item -> always .)
    ASSIGN          reduce using rule 61 (standard_item -> always .)
    ALWAYS          reduce using rule 61 (standard_item -> always .)
    INITIAL         reduce using rule 61 (standard_item -> always .)
    ID              reduce using rule 61 (standard_item -> always .)
    FUNCTION        reduce using rule 61 (standard_item -> always .)
    TASK            reduce using rule 61 (standard_item -> always .)
    LPAREN          reduce using rule 61 (standard_item -> always .)
    INPUT           reduce using rule 61 (standard_item -> always .)
    OUTPUT          reduce using rule 61 (standard_item -> always .)
    INOUT           reduce using rule 61 (standard_item -> always .)
    TRI             reduce using rule 61 (standard_item -> always .)
    REG             reduce using rule 61 (standard_item -> always .)
    WIRE            reduce using rule 61 (standard_item -> always .)
    SIGNED          reduce using rule 61 (standard_item -> always .)
    END             reduce using rule 61 (standard_item -> always .)
    IF              reduce using rule 61 (standard_item -> always .)
    FOR             reduce using rule 61 (standard_item -> always .)
    ELSE            reduce using rule 61 (standard_item -> always .)
    ENDGENERATE     reduce using rule 61 (standard_item -> always .)


state 42

    (297) genvardecl -> GENVAR . genvarlist SEMICOLON
    (298) genvarlist -> . genvarlist COMMA genvar
    (299) genvarlist -> . genvar
    (300) genvar -> . ID

    ID              shift and go to state 125

    genvar                         shift and go to state 124
    genvarlist                     shift and go to state 126

state 43

    (59) standard_item -> genvardecl .

    ENDMODULE       reduce using rule 59 (standard_item -> genvardecl .)
    GENERATE        reduce using rule 59 (standard_item -> genvardecl .)
    INTEGER         reduce using rule 59 (standard_item -> genvardecl .)
    REAL            reduce using rule 59 (standard_item -> genvardecl .)
    PARAMETER       reduce using rule 59 (standard_item -> genvardecl .)
    LOCALPARAM      reduce using rule 59 (standard_item -> genvardecl .)
    GENVAR          reduce using rule 59 (standard_item -> genvardecl .)
    ASSIGN          reduce using rule 59 (standard_item -> genvardecl .)
    ALWAYS          reduce using rule 59 (standard_item -> genvardecl .)
    INITIAL         reduce using rule 59 (standard_item -> genvardecl .)
    ID              reduce using rule 59 (standard_item -> genvardecl .)
    FUNCTION        reduce using rule 59 (standard_item -> genvardecl .)
    TASK            reduce using rule 59 (standard_item -> genvardecl .)
    LPAREN          reduce using rule 59 (standard_item -> genvardecl .)
    INPUT           reduce using rule 59 (standard_item -> genvardecl .)
    OUTPUT          reduce using rule 59 (standard_item -> genvardecl .)
    INOUT           reduce using rule 59 (standard_item -> genvardecl .)
    TRI             reduce using rule 59 (standard_item -> genvardecl .)
    REG             reduce using rule 59 (standard_item -> genvardecl .)
    WIRE            reduce using rule 59 (standard_item -> genvardecl .)
    SIGNED          reduce using rule 59 (standard_item -> genvardecl .)
    END             reduce using rule 59 (standard_item -> genvardecl .)
    IF              reduce using rule 59 (standard_item -> genvardecl .)
    FOR             reduce using rule 59 (standard_item -> genvardecl .)
    ELSE            reduce using rule 59 (standard_item -> genvardecl .)
    ENDGENERATE     reduce using rule 59 (standard_item -> genvardecl .)


state 44

    (325) function -> FUNCTION . width ID SEMICOLON function_statement ENDFUNCTION
    (326) function -> FUNCTION . ID SEMICOLON function_statement ENDFUNCTION
    (46) width -> . LBRACKET expression COLON expression RBRACKET

    ID              shift and go to state 127
    LBRACKET        shift and go to state 116

    width                          shift and go to state 128

state 45

    (270) initial -> INITIAL . initial_statement
    (271) initial_statement -> . basic_statement
    (205) basic_statement -> . if_statement
    (206) basic_statement -> . case_statement
    (207) basic_statement -> . for_statement
    (208) basic_statement -> . while_statement
    (209) basic_statement -> . event_statement
    (210) basic_statement -> . wait_statement
    (211) basic_statement -> . forever_statement
    (212) basic_statement -> . block
    (213) basic_statement -> . namedblock
    (214) basic_statement -> . parallelblock
    (215) basic_statement -> . blocking_substitution
    (216) basic_statement -> . nonblocking_substitution
    (217) basic_statement -> . single_statement
    (244) if_statement -> . IF LPAREN cond RPAREN true_statement ELSE else_statement
    (245) if_statement -> . IF LPAREN cond RPAREN true_statement
    (246) if_statement -> . delays IF LPAREN cond RPAREN true_statement ELSE else_statement
    (247) if_statement -> . delays IF LPAREN cond RPAREN true_statement
    (262) case_statement -> . CASE LPAREN case_comp RPAREN casecontent_statements ENDCASE
    (252) for_statement -> . FOR LPAREN forpre forcond forpost RPAREN forcontent_statement
    (260) while_statement -> . WHILE LPAREN cond RPAREN whilecontent_statement
    (272) event_statement -> . senslist SEMICOLON
    (273) wait_statement -> . WAIT LPAREN cond RPAREN waitcontent_statement
    (276) forever_statement -> . FOREVER basic_statement
    (227) block -> . BEGIN block_statements END
    (228) block -> . BEGIN END
    (232) namedblock -> . BEGIN COLON ID namedblock_statements END
    (233) namedblock -> . BEGIN COLON ID END
    (242) parallelblock -> . FORK block_statements JOIN
    (243) parallelblock -> . FORK JOIN
    (219) blocking_substitution -> . delays lvalue EQUALS delays rvalue SEMICOLON
    (221) nonblocking_substitution -> . delays lvalue LE delays rvalue SEMICOLON
    (362) single_statement -> . DELAY expression SEMICOLON
    (363) single_statement -> . systemcall SEMICOLON
    (364) single_statement -> . disable SEMICOLON
    (222) delays -> . DELAY LPAREN expression RPAREN
    (223) delays -> . DELAY identifier
    (224) delays -> . DELAY intnumber
    (225) delays -> . DELAY floatnumber
    (226) delays -> . empty
    (186) senslist -> . AT LPAREN edgesigs RPAREN
    (193) senslist -> . empty
    (194) senslist -> . AT levelsig
    (195) senslist -> . AT LPAREN levelsigs RPAREN
    (203) senslist -> . AT TIMES
    (204) senslist -> . AT LPAREN TIMES RPAREN
    (319) systemcall -> . DOLLER ID
    (320) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (361) disable -> . DISABLE ID
    (365) empty -> .

  ! shift/reduce conflict for IF resolved as shift
    IF              shift and go to state 150
    CASE            shift and go to state 136
    FOR             shift and go to state 144
    WHILE           shift and go to state 146
    WAIT            shift and go to state 131
    FOREVER         shift and go to state 143
    BEGIN           shift and go to state 153
    FORK            shift and go to state 138
    DELAY           shift and go to state 147
    AT              shift and go to state 159
    DOLLER          shift and go to state 100
    DISABLE         shift and go to state 155
    LBRACE          reduce using rule 365 (empty -> .)
    ID              reduce using rule 365 (empty -> .)
    SEMICOLON       reduce using rule 365 (empty -> .)

  ! IF              [ reduce using rule 365 (empty -> .) ]

    parallelblock                  shift and go to state 129
    for_statement                  shift and go to state 130
    empty                          shift and go to state 157
    if_statement                   shift and go to state 132
    while_statement                shift and go to state 148
    blocking_substitution          shift and go to state 137
    systemcall                     shift and go to state 158
    initial_statement              shift and go to state 134
    basic_statement                shift and go to state 149
    event_statement                shift and go to state 135
    wait_statement                 shift and go to state 151
    forever_statement              shift and go to state 152
    case_statement                 shift and go to state 139
    disable                        shift and go to state 133
    senslist                       shift and go to state 154
    single_statement               shift and go to state 140
    block                          shift and go to state 156
    delays                         shift and go to state 141
    nonblocking_substitution       shift and go to state 142
    namedblock                     shift and go to state 145

state 46

    (185) always -> ALWAYS . senslist always_statement
    (186) senslist -> . AT LPAREN edgesigs RPAREN
    (193) senslist -> . empty
    (194) senslist -> . AT levelsig
    (195) senslist -> . AT LPAREN levelsigs RPAREN
    (203) senslist -> . AT TIMES
    (204) senslist -> . AT LPAREN TIMES RPAREN
    (365) empty -> .

  ! shift/reduce conflict for AT resolved as shift
    AT              shift and go to state 159
    IF              reduce using rule 365 (empty -> .)
    CASE            reduce using rule 365 (empty -> .)
    FOR             reduce using rule 365 (empty -> .)
    WHILE           reduce using rule 365 (empty -> .)
    WAIT            reduce using rule 365 (empty -> .)
    FOREVER         reduce using rule 365 (empty -> .)
    BEGIN           reduce using rule 365 (empty -> .)
    FORK            reduce using rule 365 (empty -> .)
    DELAY           reduce using rule 365 (empty -> .)
    DOLLER          reduce using rule 365 (empty -> .)
    DISABLE         reduce using rule 365 (empty -> .)
    LBRACE          reduce using rule 365 (empty -> .)
    ID              reduce using rule 365 (empty -> .)
    SEMICOLON       reduce using rule 365 (empty -> .)

  ! AT              [ reduce using rule 365 (empty -> .) ]

    empty                          shift and go to state 160
    senslist                       shift and go to state 161

state 47

    (54) standard_item -> integerdecl .

    ENDMODULE       reduce using rule 54 (standard_item -> integerdecl .)
    GENERATE        reduce using rule 54 (standard_item -> integerdecl .)
    INTEGER         reduce using rule 54 (standard_item -> integerdecl .)
    REAL            reduce using rule 54 (standard_item -> integerdecl .)
    PARAMETER       reduce using rule 54 (standard_item -> integerdecl .)
    LOCALPARAM      reduce using rule 54 (standard_item -> integerdecl .)
    GENVAR          reduce using rule 54 (standard_item -> integerdecl .)
    ASSIGN          reduce using rule 54 (standard_item -> integerdecl .)
    ALWAYS          reduce using rule 54 (standard_item -> integerdecl .)
    INITIAL         reduce using rule 54 (standard_item -> integerdecl .)
    ID              reduce using rule 54 (standard_item -> integerdecl .)
    FUNCTION        reduce using rule 54 (standard_item -> integerdecl .)
    TASK            reduce using rule 54 (standard_item -> integerdecl .)
    LPAREN          reduce using rule 54 (standard_item -> integerdecl .)
    INPUT           reduce using rule 54 (standard_item -> integerdecl .)
    OUTPUT          reduce using rule 54 (standard_item -> integerdecl .)
    INOUT           reduce using rule 54 (standard_item -> integerdecl .)
    TRI             reduce using rule 54 (standard_item -> integerdecl .)
    REG             reduce using rule 54 (standard_item -> integerdecl .)
    WIRE            reduce using rule 54 (standard_item -> integerdecl .)
    SIGNED          reduce using rule 54 (standard_item -> integerdecl .)
    END             reduce using rule 54 (standard_item -> integerdecl .)
    IF              reduce using rule 54 (standard_item -> integerdecl .)
    FOR             reduce using rule 54 (standard_item -> integerdecl .)
    ELSE            reduce using rule 54 (standard_item -> integerdecl .)
    ENDGENERATE     reduce using rule 54 (standard_item -> integerdecl .)


state 48

    (95) assignment -> ASSIGN . lvalue EQUALS rvalue SEMICOLON
    (96) assignment -> ASSIGN . delays lvalue EQUALS delays rvalue SEMICOLON
    (111) lvalue -> . lpartselect
    (112) lvalue -> . lpointer
    (113) lvalue -> . lconcat
    (114) lvalue -> . identifier
    (222) delays -> . DELAY LPAREN expression RPAREN
    (223) delays -> . DELAY identifier
    (224) delays -> . DELAY intnumber
    (225) delays -> . DELAY floatnumber
    (226) delays -> . empty
    (97) lpartselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (98) lpartselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (99) lpartselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (100) lpartselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (101) lpartselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (102) lpartselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (103) lpointer -> . pointer
    (104) lconcat -> . LBRACE lconcatlist RBRACE
    (357) identifier -> . ID
    (358) identifier -> . scope ID
    (365) empty -> .
    (170) pointer -> . identifier LBRACKET expression RBRACKET
    (171) pointer -> . pointer LBRACKET expression RBRACKET
    (359) scope -> . identifier DOT
    (360) scope -> . pointer DOT

  ! shift/reduce conflict for LBRACE resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    DELAY           shift and go to state 170
    LBRACE          shift and go to state 162
    ID              shift and go to state 85

  ! LBRACE          [ reduce using rule 365 (empty -> .) ]
  ! ID              [ reduce using rule 365 (empty -> .) ]

    lpointer                       shift and go to state 165
    lvalue                         shift and go to state 167
    lpartselect                    shift and go to state 166
    empty                          shift and go to state 163
    identifier                     shift and go to state 168
    pointer                        shift and go to state 169
    scope                          shift and go to state 84
    delays                         shift and go to state 171
    lconcat                        shift and go to state 164

state 49

    (82) realdecl -> REAL . realnamelist SEMICOLON
    (83) realnamelist -> . realnamelist COMMA realname
    (84) realnamelist -> . realname
    (85) realname -> . ID

    ID              shift and go to state 173

    realnamelist                   shift and go to state 172
    realname                       shift and go to state 174

state 50

    (63) standard_item -> instance .

    ENDMODULE       reduce using rule 63 (standard_item -> instance .)
    GENERATE        reduce using rule 63 (standard_item -> instance .)
    INTEGER         reduce using rule 63 (standard_item -> instance .)
    REAL            reduce using rule 63 (standard_item -> instance .)
    PARAMETER       reduce using rule 63 (standard_item -> instance .)
    LOCALPARAM      reduce using rule 63 (standard_item -> instance .)
    GENVAR          reduce using rule 63 (standard_item -> instance .)
    ASSIGN          reduce using rule 63 (standard_item -> instance .)
    ALWAYS          reduce using rule 63 (standard_item -> instance .)
    INITIAL         reduce using rule 63 (standard_item -> instance .)
    ID              reduce using rule 63 (standard_item -> instance .)
    FUNCTION        reduce using rule 63 (standard_item -> instance .)
    TASK            reduce using rule 63 (standard_item -> instance .)
    LPAREN          reduce using rule 63 (standard_item -> instance .)
    INPUT           reduce using rule 63 (standard_item -> instance .)
    OUTPUT          reduce using rule 63 (standard_item -> instance .)
    INOUT           reduce using rule 63 (standard_item -> instance .)
    TRI             reduce using rule 63 (standard_item -> instance .)
    REG             reduce using rule 63 (standard_item -> instance .)
    WIRE            reduce using rule 63 (standard_item -> instance .)
    SIGNED          reduce using rule 63 (standard_item -> instance .)
    END             reduce using rule 63 (standard_item -> instance .)
    IF              reduce using rule 63 (standard_item -> instance .)
    FOR             reduce using rule 63 (standard_item -> instance .)
    ELSE            reduce using rule 63 (standard_item -> instance .)
    ENDGENERATE     reduce using rule 63 (standard_item -> instance .)


state 51

    (277) instance -> ID . parameterlist ID LPAREN instance_ports RPAREN SEMICOLON
    (278) parameterlist -> . DELAY LPAREN param_args RPAREN
    (279) parameterlist -> . DELAY LPAREN param_args_noname RPAREN
    (280) parameterlist -> . empty
    (365) empty -> .

    DELAY           shift and go to state 176
    ID              reduce using rule 365 (empty -> .)

    parameterlist                  shift and go to state 175
    empty                          shift and go to state 177

state 52

    (89) localparamdecl -> LOCALPARAM . param_substitution_list SEMICOLON
    (90) localparamdecl -> LOCALPARAM . width param_substitution_list SEMICOLON
    (91) localparamdecl -> LOCALPARAM . INTEGER param_substitution_list SEMICOLON
    (92) param_substitution_list -> . param_substitution_list COMMA param_substitution
    (93) param_substitution_list -> . param_substitution
    (46) width -> . LBRACKET expression COLON expression RBRACKET
    (94) param_substitution -> . ID EQUALS rvalue

    INTEGER         shift and go to state 180
    LBRACKET        shift and go to state 116
    ID              shift and go to state 181

    width                          shift and go to state 179
    param_substitution             shift and go to state 178
    param_substitution_list        shift and go to state 182

state 53

    (58) standard_item -> localparamdecl .

    ENDMODULE       reduce using rule 58 (standard_item -> localparamdecl .)
    GENERATE        reduce using rule 58 (standard_item -> localparamdecl .)
    INTEGER         reduce using rule 58 (standard_item -> localparamdecl .)
    REAL            reduce using rule 58 (standard_item -> localparamdecl .)
    PARAMETER       reduce using rule 58 (standard_item -> localparamdecl .)
    LOCALPARAM      reduce using rule 58 (standard_item -> localparamdecl .)
    GENVAR          reduce using rule 58 (standard_item -> localparamdecl .)
    ASSIGN          reduce using rule 58 (standard_item -> localparamdecl .)
    ALWAYS          reduce using rule 58 (standard_item -> localparamdecl .)
    INITIAL         reduce using rule 58 (standard_item -> localparamdecl .)
    ID              reduce using rule 58 (standard_item -> localparamdecl .)
    FUNCTION        reduce using rule 58 (standard_item -> localparamdecl .)
    TASK            reduce using rule 58 (standard_item -> localparamdecl .)
    LPAREN          reduce using rule 58 (standard_item -> localparamdecl .)
    INPUT           reduce using rule 58 (standard_item -> localparamdecl .)
    OUTPUT          reduce using rule 58 (standard_item -> localparamdecl .)
    INOUT           reduce using rule 58 (standard_item -> localparamdecl .)
    TRI             reduce using rule 58 (standard_item -> localparamdecl .)
    REG             reduce using rule 58 (standard_item -> localparamdecl .)
    WIRE            reduce using rule 58 (standard_item -> localparamdecl .)
    SIGNED          reduce using rule 58 (standard_item -> localparamdecl .)
    END             reduce using rule 58 (standard_item -> localparamdecl .)
    IF              reduce using rule 58 (standard_item -> localparamdecl .)
    FOR             reduce using rule 58 (standard_item -> localparamdecl .)
    ELSE            reduce using rule 58 (standard_item -> localparamdecl .)
    ENDGENERATE     reduce using rule 58 (standard_item -> localparamdecl .)


state 54

    (52) item -> generate .

    ENDMODULE       reduce using rule 52 (item -> generate .)
    GENERATE        reduce using rule 52 (item -> generate .)
    INTEGER         reduce using rule 52 (item -> generate .)
    REAL            reduce using rule 52 (item -> generate .)
    PARAMETER       reduce using rule 52 (item -> generate .)
    LOCALPARAM      reduce using rule 52 (item -> generate .)
    GENVAR          reduce using rule 52 (item -> generate .)
    ASSIGN          reduce using rule 52 (item -> generate .)
    ALWAYS          reduce using rule 52 (item -> generate .)
    INITIAL         reduce using rule 52 (item -> generate .)
    ID              reduce using rule 52 (item -> generate .)
    FUNCTION        reduce using rule 52 (item -> generate .)
    TASK            reduce using rule 52 (item -> generate .)
    LPAREN          reduce using rule 52 (item -> generate .)
    INPUT           reduce using rule 52 (item -> generate .)
    OUTPUT          reduce using rule 52 (item -> generate .)
    INOUT           reduce using rule 52 (item -> generate .)
    TRI             reduce using rule 52 (item -> generate .)
    REG             reduce using rule 52 (item -> generate .)
    WIRE            reduce using rule 52 (item -> generate .)
    SIGNED          reduce using rule 52 (item -> generate .)


state 55

    (301) generate -> GENERATE . generate_items ENDGENERATE
    (302) generate_items -> . empty
    (303) generate_items -> . generate_items generate_item
    (304) generate_items -> . generate_item
    (365) empty -> .
    (305) generate_item -> . standard_item
    (306) generate_item -> . generate_if
    (307) generate_item -> . generate_for
    (53) standard_item -> . decl
    (54) standard_item -> . integerdecl
    (55) standard_item -> . realdecl
    (56) standard_item -> . declassign
    (57) standard_item -> . parameterdecl
    (58) standard_item -> . localparamdecl
    (59) standard_item -> . genvardecl
    (60) standard_item -> . assignment
    (61) standard_item -> . always
    (62) standard_item -> . initial
    (63) standard_item -> . instance
    (64) standard_item -> . function
    (65) standard_item -> . task
    (66) standard_item -> . pragma
    (310) generate_if -> . IF LPAREN cond RPAREN gif_true_item ELSE gif_false_item
    (311) generate_if -> . IF LPAREN cond RPAREN gif_true_item
    (316) generate_for -> . FOR LPAREN forpre forcond forpost RPAREN generate_forcontent
    (67) decl -> . sigtypes declnamelist SEMICOLON
    (68) decl -> . sigtypes width declnamelist SEMICOLON
    (77) integerdecl -> . INTEGER integernamelist SEMICOLON
    (78) integerdecl -> . INTEGER SIGNED integernamelist SEMICOLON
    (82) realdecl -> . REAL realnamelist SEMICOLON
    (73) declassign -> . sigtypes declassign_element SEMICOLON
    (74) declassign -> . sigtypes width declassign_element SEMICOLON
    (86) parameterdecl -> . PARAMETER param_substitution_list SEMICOLON
    (87) parameterdecl -> . PARAMETER width param_substitution_list SEMICOLON
    (88) parameterdecl -> . PARAMETER INTEGER param_substitution_list SEMICOLON
    (89) localparamdecl -> . LOCALPARAM param_substitution_list SEMICOLON
    (90) localparamdecl -> . LOCALPARAM width param_substitution_list SEMICOLON
    (91) localparamdecl -> . LOCALPARAM INTEGER param_substitution_list SEMICOLON
    (297) genvardecl -> . GENVAR genvarlist SEMICOLON
    (95) assignment -> . ASSIGN lvalue EQUALS rvalue SEMICOLON
    (96) assignment -> . ASSIGN delays lvalue EQUALS delays rvalue SEMICOLON
    (185) always -> . ALWAYS senslist always_statement
    (270) initial -> . INITIAL initial_statement
    (277) instance -> . ID parameterlist ID LPAREN instance_ports RPAREN SEMICOLON
    (325) function -> . FUNCTION width ID SEMICOLON function_statement ENDFUNCTION
    (326) function -> . FUNCTION ID SEMICOLON function_statement ENDFUNCTION
    (343) task -> . TASK ID SEMICOLON task_statement ENDTASK
    (7) pragma -> . LPAREN TIMES ID EQUALS expression TIMES RPAREN
    (8) pragma -> . LPAREN TIMES ID TIMES RPAREN
    (30) sigtypes -> . sigtypes sigtype
    (31) sigtypes -> . sigtype
    (32) sigtype -> . INPUT
    (33) sigtype -> . OUTPUT
    (34) sigtype -> . INOUT
    (35) sigtype -> . TRI
    (36) sigtype -> . REG
    (37) sigtype -> . WIRE
    (38) sigtype -> . SIGNED

  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for INTEGER resolved as shift
  ! shift/reduce conflict for REAL resolved as shift
  ! shift/reduce conflict for PARAMETER resolved as shift
  ! shift/reduce conflict for LOCALPARAM resolved as shift
  ! shift/reduce conflict for GENVAR resolved as shift
  ! shift/reduce conflict for ASSIGN resolved as shift
  ! shift/reduce conflict for ALWAYS resolved as shift
  ! shift/reduce conflict for INITIAL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for FUNCTION resolved as shift
  ! shift/reduce conflict for TASK resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for INPUT resolved as shift
  ! shift/reduce conflict for OUTPUT resolved as shift
  ! shift/reduce conflict for INOUT resolved as shift
  ! shift/reduce conflict for TRI resolved as shift
  ! shift/reduce conflict for REG resolved as shift
  ! shift/reduce conflict for WIRE resolved as shift
  ! shift/reduce conflict for SIGNED resolved as shift
    ENDGENERATE     reduce using rule 365 (empty -> .)
    IF              shift and go to state 188
    FOR             shift and go to state 186
    INTEGER         shift and go to state 69
    REAL            shift and go to state 49
    PARAMETER       shift and go to state 66
    LOCALPARAM      shift and go to state 52
    GENVAR          shift and go to state 42
    ASSIGN          shift and go to state 48
    ALWAYS          shift and go to state 46
    INITIAL         shift and go to state 45
    ID              shift and go to state 51
    FUNCTION        shift and go to state 44
    TASK            shift and go to state 67
    LPAREN          shift and go to state 6
    INPUT           shift and go to state 37
    OUTPUT          shift and go to state 24
    INOUT           shift and go to state 25
    TRI             shift and go to state 36
    REG             shift and go to state 35
    WIRE            shift and go to state 26
    SIGNED          shift and go to state 29

  ! IF              [ reduce using rule 365 (empty -> .) ]
  ! FOR             [ reduce using rule 365 (empty -> .) ]
  ! INTEGER         [ reduce using rule 365 (empty -> .) ]
  ! REAL            [ reduce using rule 365 (empty -> .) ]
  ! PARAMETER       [ reduce using rule 365 (empty -> .) ]
  ! LOCALPARAM      [ reduce using rule 365 (empty -> .) ]
  ! GENVAR          [ reduce using rule 365 (empty -> .) ]
  ! ASSIGN          [ reduce using rule 365 (empty -> .) ]
  ! ALWAYS          [ reduce using rule 365 (empty -> .) ]
  ! INITIAL         [ reduce using rule 365 (empty -> .) ]
  ! ID              [ reduce using rule 365 (empty -> .) ]
  ! FUNCTION        [ reduce using rule 365 (empty -> .) ]
  ! TASK            [ reduce using rule 365 (empty -> .) ]
  ! LPAREN          [ reduce using rule 365 (empty -> .) ]
  ! INPUT           [ reduce using rule 365 (empty -> .) ]
  ! OUTPUT          [ reduce using rule 365 (empty -> .) ]
  ! INOUT           [ reduce using rule 365 (empty -> .) ]
  ! TRI             [ reduce using rule 365 (empty -> .) ]
  ! REG             [ reduce using rule 365 (empty -> .) ]
  ! WIRE            [ reduce using rule 365 (empty -> .) ]
  ! SIGNED          [ reduce using rule 365 (empty -> .) ]

    generate_item                  shift and go to state 183
    empty                          shift and go to state 184
    generate_if                    shift and go to state 185
    always                         shift and go to state 41
    genvardecl                     shift and go to state 43
    integerdecl                    shift and go to state 47
    sigtype                        shift and go to state 33
    instance                       shift and go to state 50
    localparamdecl                 shift and go to state 53
    standard_item                  shift and go to state 187
    declassign                     shift and go to state 58
    task                           shift and go to state 57
    function                       shift and go to state 59
    realdecl                       shift and go to state 60
    sigtypes                       shift and go to state 61
    decl                           shift and go to state 62
    pragma                         shift and go to state 63
    generate_items                 shift and go to state 189
    parameterdecl                  shift and go to state 64
    generate_for                   shift and go to state 190
    initial                        shift and go to state 65
    assignment                     shift and go to state 68

state 56

    (49) items -> item .

    ENDMODULE       reduce using rule 49 (items -> item .)
    GENERATE        reduce using rule 49 (items -> item .)
    INTEGER         reduce using rule 49 (items -> item .)
    REAL            reduce using rule 49 (items -> item .)
    PARAMETER       reduce using rule 49 (items -> item .)
    LOCALPARAM      reduce using rule 49 (items -> item .)
    GENVAR          reduce using rule 49 (items -> item .)
    ASSIGN          reduce using rule 49 (items -> item .)
    ALWAYS          reduce using rule 49 (items -> item .)
    INITIAL         reduce using rule 49 (items -> item .)
    ID              reduce using rule 49 (items -> item .)
    FUNCTION        reduce using rule 49 (items -> item .)
    TASK            reduce using rule 49 (items -> item .)
    LPAREN          reduce using rule 49 (items -> item .)
    INPUT           reduce using rule 49 (items -> item .)
    OUTPUT          reduce using rule 49 (items -> item .)
    INOUT           reduce using rule 49 (items -> item .)
    TRI             reduce using rule 49 (items -> item .)
    REG             reduce using rule 49 (items -> item .)
    WIRE            reduce using rule 49 (items -> item .)
    SIGNED          reduce using rule 49 (items -> item .)


state 57

    (65) standard_item -> task .

    ENDMODULE       reduce using rule 65 (standard_item -> task .)
    GENERATE        reduce using rule 65 (standard_item -> task .)
    INTEGER         reduce using rule 65 (standard_item -> task .)
    REAL            reduce using rule 65 (standard_item -> task .)
    PARAMETER       reduce using rule 65 (standard_item -> task .)
    LOCALPARAM      reduce using rule 65 (standard_item -> task .)
    GENVAR          reduce using rule 65 (standard_item -> task .)
    ASSIGN          reduce using rule 65 (standard_item -> task .)
    ALWAYS          reduce using rule 65 (standard_item -> task .)
    INITIAL         reduce using rule 65 (standard_item -> task .)
    ID              reduce using rule 65 (standard_item -> task .)
    FUNCTION        reduce using rule 65 (standard_item -> task .)
    TASK            reduce using rule 65 (standard_item -> task .)
    LPAREN          reduce using rule 65 (standard_item -> task .)
    INPUT           reduce using rule 65 (standard_item -> task .)
    OUTPUT          reduce using rule 65 (standard_item -> task .)
    INOUT           reduce using rule 65 (standard_item -> task .)
    TRI             reduce using rule 65 (standard_item -> task .)
    REG             reduce using rule 65 (standard_item -> task .)
    WIRE            reduce using rule 65 (standard_item -> task .)
    SIGNED          reduce using rule 65 (standard_item -> task .)
    END             reduce using rule 65 (standard_item -> task .)
    IF              reduce using rule 65 (standard_item -> task .)
    FOR             reduce using rule 65 (standard_item -> task .)
    ELSE            reduce using rule 65 (standard_item -> task .)
    ENDGENERATE     reduce using rule 65 (standard_item -> task .)


state 58

    (56) standard_item -> declassign .

    ENDMODULE       reduce using rule 56 (standard_item -> declassign .)
    GENERATE        reduce using rule 56 (standard_item -> declassign .)
    INTEGER         reduce using rule 56 (standard_item -> declassign .)
    REAL            reduce using rule 56 (standard_item -> declassign .)
    PARAMETER       reduce using rule 56 (standard_item -> declassign .)
    LOCALPARAM      reduce using rule 56 (standard_item -> declassign .)
    GENVAR          reduce using rule 56 (standard_item -> declassign .)
    ASSIGN          reduce using rule 56 (standard_item -> declassign .)
    ALWAYS          reduce using rule 56 (standard_item -> declassign .)
    INITIAL         reduce using rule 56 (standard_item -> declassign .)
    ID              reduce using rule 56 (standard_item -> declassign .)
    FUNCTION        reduce using rule 56 (standard_item -> declassign .)
    TASK            reduce using rule 56 (standard_item -> declassign .)
    LPAREN          reduce using rule 56 (standard_item -> declassign .)
    INPUT           reduce using rule 56 (standard_item -> declassign .)
    OUTPUT          reduce using rule 56 (standard_item -> declassign .)
    INOUT           reduce using rule 56 (standard_item -> declassign .)
    TRI             reduce using rule 56 (standard_item -> declassign .)
    REG             reduce using rule 56 (standard_item -> declassign .)
    WIRE            reduce using rule 56 (standard_item -> declassign .)
    SIGNED          reduce using rule 56 (standard_item -> declassign .)
    END             reduce using rule 56 (standard_item -> declassign .)
    IF              reduce using rule 56 (standard_item -> declassign .)
    FOR             reduce using rule 56 (standard_item -> declassign .)
    ELSE            reduce using rule 56 (standard_item -> declassign .)
    ENDGENERATE     reduce using rule 56 (standard_item -> declassign .)


state 59

    (64) standard_item -> function .

    ENDMODULE       reduce using rule 64 (standard_item -> function .)
    GENERATE        reduce using rule 64 (standard_item -> function .)
    INTEGER         reduce using rule 64 (standard_item -> function .)
    REAL            reduce using rule 64 (standard_item -> function .)
    PARAMETER       reduce using rule 64 (standard_item -> function .)
    LOCALPARAM      reduce using rule 64 (standard_item -> function .)
    GENVAR          reduce using rule 64 (standard_item -> function .)
    ASSIGN          reduce using rule 64 (standard_item -> function .)
    ALWAYS          reduce using rule 64 (standard_item -> function .)
    INITIAL         reduce using rule 64 (standard_item -> function .)
    ID              reduce using rule 64 (standard_item -> function .)
    FUNCTION        reduce using rule 64 (standard_item -> function .)
    TASK            reduce using rule 64 (standard_item -> function .)
    LPAREN          reduce using rule 64 (standard_item -> function .)
    INPUT           reduce using rule 64 (standard_item -> function .)
    OUTPUT          reduce using rule 64 (standard_item -> function .)
    INOUT           reduce using rule 64 (standard_item -> function .)
    TRI             reduce using rule 64 (standard_item -> function .)
    REG             reduce using rule 64 (standard_item -> function .)
    WIRE            reduce using rule 64 (standard_item -> function .)
    SIGNED          reduce using rule 64 (standard_item -> function .)
    END             reduce using rule 64 (standard_item -> function .)
    IF              reduce using rule 64 (standard_item -> function .)
    FOR             reduce using rule 64 (standard_item -> function .)
    ELSE            reduce using rule 64 (standard_item -> function .)
    ENDGENERATE     reduce using rule 64 (standard_item -> function .)


state 60

    (55) standard_item -> realdecl .

    ENDMODULE       reduce using rule 55 (standard_item -> realdecl .)
    GENERATE        reduce using rule 55 (standard_item -> realdecl .)
    INTEGER         reduce using rule 55 (standard_item -> realdecl .)
    REAL            reduce using rule 55 (standard_item -> realdecl .)
    PARAMETER       reduce using rule 55 (standard_item -> realdecl .)
    LOCALPARAM      reduce using rule 55 (standard_item -> realdecl .)
    GENVAR          reduce using rule 55 (standard_item -> realdecl .)
    ASSIGN          reduce using rule 55 (standard_item -> realdecl .)
    ALWAYS          reduce using rule 55 (standard_item -> realdecl .)
    INITIAL         reduce using rule 55 (standard_item -> realdecl .)
    ID              reduce using rule 55 (standard_item -> realdecl .)
    FUNCTION        reduce using rule 55 (standard_item -> realdecl .)
    TASK            reduce using rule 55 (standard_item -> realdecl .)
    LPAREN          reduce using rule 55 (standard_item -> realdecl .)
    INPUT           reduce using rule 55 (standard_item -> realdecl .)
    OUTPUT          reduce using rule 55 (standard_item -> realdecl .)
    INOUT           reduce using rule 55 (standard_item -> realdecl .)
    TRI             reduce using rule 55 (standard_item -> realdecl .)
    REG             reduce using rule 55 (standard_item -> realdecl .)
    WIRE            reduce using rule 55 (standard_item -> realdecl .)
    SIGNED          reduce using rule 55 (standard_item -> realdecl .)
    END             reduce using rule 55 (standard_item -> realdecl .)
    IF              reduce using rule 55 (standard_item -> realdecl .)
    FOR             reduce using rule 55 (standard_item -> realdecl .)
    ELSE            reduce using rule 55 (standard_item -> realdecl .)
    ENDGENERATE     reduce using rule 55 (standard_item -> realdecl .)


state 61

    (67) decl -> sigtypes . declnamelist SEMICOLON
    (68) decl -> sigtypes . width declnamelist SEMICOLON
    (73) declassign -> sigtypes . declassign_element SEMICOLON
    (74) declassign -> sigtypes . width declassign_element SEMICOLON
    (30) sigtypes -> sigtypes . sigtype
    (69) declnamelist -> . declnamelist COMMA declname
    (70) declnamelist -> . declname
    (46) width -> . LBRACKET expression COLON expression RBRACKET
    (75) declassign_element -> . ID EQUALS rvalue
    (76) declassign_element -> . delays ID EQUALS delays rvalue
    (32) sigtype -> . INPUT
    (33) sigtype -> . OUTPUT
    (34) sigtype -> . INOUT
    (35) sigtype -> . TRI
    (36) sigtype -> . REG
    (37) sigtype -> . WIRE
    (38) sigtype -> . SIGNED
    (71) declname -> . ID
    (72) declname -> . ID length
    (222) delays -> . DELAY LPAREN expression RPAREN
    (223) delays -> . DELAY identifier
    (224) delays -> . DELAY intnumber
    (225) delays -> . DELAY floatnumber
    (226) delays -> . empty
    (365) empty -> .

  ! shift/reduce conflict for ID resolved as shift
    LBRACKET        shift and go to state 116
    ID              shift and go to state 196
    INPUT           shift and go to state 37
    OUTPUT          shift and go to state 24
    INOUT           shift and go to state 25
    TRI             shift and go to state 36
    REG             shift and go to state 35
    WIRE            shift and go to state 26
    SIGNED          shift and go to state 29
    DELAY           shift and go to state 170

  ! ID              [ reduce using rule 365 (empty -> .) ]

    declassign_element             shift and go to state 192
    width                          shift and go to state 194
    empty                          shift and go to state 163
    declname                       shift and go to state 195
    sigtype                        shift and go to state 115
    declnamelist                   shift and go to state 191
    delays                         shift and go to state 193

state 62

    (53) standard_item -> decl .

    ENDMODULE       reduce using rule 53 (standard_item -> decl .)
    GENERATE        reduce using rule 53 (standard_item -> decl .)
    INTEGER         reduce using rule 53 (standard_item -> decl .)
    REAL            reduce using rule 53 (standard_item -> decl .)
    PARAMETER       reduce using rule 53 (standard_item -> decl .)
    LOCALPARAM      reduce using rule 53 (standard_item -> decl .)
    GENVAR          reduce using rule 53 (standard_item -> decl .)
    ASSIGN          reduce using rule 53 (standard_item -> decl .)
    ALWAYS          reduce using rule 53 (standard_item -> decl .)
    INITIAL         reduce using rule 53 (standard_item -> decl .)
    ID              reduce using rule 53 (standard_item -> decl .)
    FUNCTION        reduce using rule 53 (standard_item -> decl .)
    TASK            reduce using rule 53 (standard_item -> decl .)
    LPAREN          reduce using rule 53 (standard_item -> decl .)
    INPUT           reduce using rule 53 (standard_item -> decl .)
    OUTPUT          reduce using rule 53 (standard_item -> decl .)
    INOUT           reduce using rule 53 (standard_item -> decl .)
    TRI             reduce using rule 53 (standard_item -> decl .)
    REG             reduce using rule 53 (standard_item -> decl .)
    WIRE            reduce using rule 53 (standard_item -> decl .)
    SIGNED          reduce using rule 53 (standard_item -> decl .)
    END             reduce using rule 53 (standard_item -> decl .)
    IF              reduce using rule 53 (standard_item -> decl .)
    FOR             reduce using rule 53 (standard_item -> decl .)
    ELSE            reduce using rule 53 (standard_item -> decl .)
    ENDGENERATE     reduce using rule 53 (standard_item -> decl .)


state 63

    (66) standard_item -> pragma .

    ENDMODULE       reduce using rule 66 (standard_item -> pragma .)
    GENERATE        reduce using rule 66 (standard_item -> pragma .)
    INTEGER         reduce using rule 66 (standard_item -> pragma .)
    REAL            reduce using rule 66 (standard_item -> pragma .)
    PARAMETER       reduce using rule 66 (standard_item -> pragma .)
    LOCALPARAM      reduce using rule 66 (standard_item -> pragma .)
    GENVAR          reduce using rule 66 (standard_item -> pragma .)
    ASSIGN          reduce using rule 66 (standard_item -> pragma .)
    ALWAYS          reduce using rule 66 (standard_item -> pragma .)
    INITIAL         reduce using rule 66 (standard_item -> pragma .)
    ID              reduce using rule 66 (standard_item -> pragma .)
    FUNCTION        reduce using rule 66 (standard_item -> pragma .)
    TASK            reduce using rule 66 (standard_item -> pragma .)
    LPAREN          reduce using rule 66 (standard_item -> pragma .)
    INPUT           reduce using rule 66 (standard_item -> pragma .)
    OUTPUT          reduce using rule 66 (standard_item -> pragma .)
    INOUT           reduce using rule 66 (standard_item -> pragma .)
    TRI             reduce using rule 66 (standard_item -> pragma .)
    REG             reduce using rule 66 (standard_item -> pragma .)
    WIRE            reduce using rule 66 (standard_item -> pragma .)
    SIGNED          reduce using rule 66 (standard_item -> pragma .)
    END             reduce using rule 66 (standard_item -> pragma .)
    IF              reduce using rule 66 (standard_item -> pragma .)
    FOR             reduce using rule 66 (standard_item -> pragma .)
    ELSE            reduce using rule 66 (standard_item -> pragma .)
    ENDGENERATE     reduce using rule 66 (standard_item -> pragma .)


state 64

    (57) standard_item -> parameterdecl .

    ENDMODULE       reduce using rule 57 (standard_item -> parameterdecl .)
    GENERATE        reduce using rule 57 (standard_item -> parameterdecl .)
    INTEGER         reduce using rule 57 (standard_item -> parameterdecl .)
    REAL            reduce using rule 57 (standard_item -> parameterdecl .)
    PARAMETER       reduce using rule 57 (standard_item -> parameterdecl .)
    LOCALPARAM      reduce using rule 57 (standard_item -> parameterdecl .)
    GENVAR          reduce using rule 57 (standard_item -> parameterdecl .)
    ASSIGN          reduce using rule 57 (standard_item -> parameterdecl .)
    ALWAYS          reduce using rule 57 (standard_item -> parameterdecl .)
    INITIAL         reduce using rule 57 (standard_item -> parameterdecl .)
    ID              reduce using rule 57 (standard_item -> parameterdecl .)
    FUNCTION        reduce using rule 57 (standard_item -> parameterdecl .)
    TASK            reduce using rule 57 (standard_item -> parameterdecl .)
    LPAREN          reduce using rule 57 (standard_item -> parameterdecl .)
    INPUT           reduce using rule 57 (standard_item -> parameterdecl .)
    OUTPUT          reduce using rule 57 (standard_item -> parameterdecl .)
    INOUT           reduce using rule 57 (standard_item -> parameterdecl .)
    TRI             reduce using rule 57 (standard_item -> parameterdecl .)
    REG             reduce using rule 57 (standard_item -> parameterdecl .)
    WIRE            reduce using rule 57 (standard_item -> parameterdecl .)
    SIGNED          reduce using rule 57 (standard_item -> parameterdecl .)
    END             reduce using rule 57 (standard_item -> parameterdecl .)
    IF              reduce using rule 57 (standard_item -> parameterdecl .)
    FOR             reduce using rule 57 (standard_item -> parameterdecl .)
    ELSE            reduce using rule 57 (standard_item -> parameterdecl .)
    ENDGENERATE     reduce using rule 57 (standard_item -> parameterdecl .)


state 65

    (62) standard_item -> initial .

    ENDMODULE       reduce using rule 62 (standard_item -> initial .)
    GENERATE        reduce using rule 62 (standard_item -> initial .)
    INTEGER         reduce using rule 62 (standard_item -> initial .)
    REAL            reduce using rule 62 (standard_item -> initial .)
    PARAMETER       reduce using rule 62 (standard_item -> initial .)
    LOCALPARAM      reduce using rule 62 (standard_item -> initial .)
    GENVAR          reduce using rule 62 (standard_item -> initial .)
    ASSIGN          reduce using rule 62 (standard_item -> initial .)
    ALWAYS          reduce using rule 62 (standard_item -> initial .)
    INITIAL         reduce using rule 62 (standard_item -> initial .)
    ID              reduce using rule 62 (standard_item -> initial .)
    FUNCTION        reduce using rule 62 (standard_item -> initial .)
    TASK            reduce using rule 62 (standard_item -> initial .)
    LPAREN          reduce using rule 62 (standard_item -> initial .)
    INPUT           reduce using rule 62 (standard_item -> initial .)
    OUTPUT          reduce using rule 62 (standard_item -> initial .)
    INOUT           reduce using rule 62 (standard_item -> initial .)
    TRI             reduce using rule 62 (standard_item -> initial .)
    REG             reduce using rule 62 (standard_item -> initial .)
    WIRE            reduce using rule 62 (standard_item -> initial .)
    SIGNED          reduce using rule 62 (standard_item -> initial .)
    END             reduce using rule 62 (standard_item -> initial .)
    IF              reduce using rule 62 (standard_item -> initial .)
    FOR             reduce using rule 62 (standard_item -> initial .)
    ELSE            reduce using rule 62 (standard_item -> initial .)
    ENDGENERATE     reduce using rule 62 (standard_item -> initial .)


state 66

    (86) parameterdecl -> PARAMETER . param_substitution_list SEMICOLON
    (87) parameterdecl -> PARAMETER . width param_substitution_list SEMICOLON
    (88) parameterdecl -> PARAMETER . INTEGER param_substitution_list SEMICOLON
    (92) param_substitution_list -> . param_substitution_list COMMA param_substitution
    (93) param_substitution_list -> . param_substitution
    (46) width -> . LBRACKET expression COLON expression RBRACKET
    (94) param_substitution -> . ID EQUALS rvalue

    INTEGER         shift and go to state 199
    LBRACKET        shift and go to state 116
    ID              shift and go to state 181

    width                          shift and go to state 198
    param_substitution             shift and go to state 178
    param_substitution_list        shift and go to state 197

state 67

    (343) task -> TASK . ID SEMICOLON task_statement ENDTASK

    ID              shift and go to state 200


state 68

    (60) standard_item -> assignment .

    ENDMODULE       reduce using rule 60 (standard_item -> assignment .)
    GENERATE        reduce using rule 60 (standard_item -> assignment .)
    INTEGER         reduce using rule 60 (standard_item -> assignment .)
    REAL            reduce using rule 60 (standard_item -> assignment .)
    PARAMETER       reduce using rule 60 (standard_item -> assignment .)
    LOCALPARAM      reduce using rule 60 (standard_item -> assignment .)
    GENVAR          reduce using rule 60 (standard_item -> assignment .)
    ASSIGN          reduce using rule 60 (standard_item -> assignment .)
    ALWAYS          reduce using rule 60 (standard_item -> assignment .)
    INITIAL         reduce using rule 60 (standard_item -> assignment .)
    ID              reduce using rule 60 (standard_item -> assignment .)
    FUNCTION        reduce using rule 60 (standard_item -> assignment .)
    TASK            reduce using rule 60 (standard_item -> assignment .)
    LPAREN          reduce using rule 60 (standard_item -> assignment .)
    INPUT           reduce using rule 60 (standard_item -> assignment .)
    OUTPUT          reduce using rule 60 (standard_item -> assignment .)
    INOUT           reduce using rule 60 (standard_item -> assignment .)
    TRI             reduce using rule 60 (standard_item -> assignment .)
    REG             reduce using rule 60 (standard_item -> assignment .)
    WIRE            reduce using rule 60 (standard_item -> assignment .)
    SIGNED          reduce using rule 60 (standard_item -> assignment .)
    END             reduce using rule 60 (standard_item -> assignment .)
    IF              reduce using rule 60 (standard_item -> assignment .)
    FOR             reduce using rule 60 (standard_item -> assignment .)
    ELSE            reduce using rule 60 (standard_item -> assignment .)
    ENDGENERATE     reduce using rule 60 (standard_item -> assignment .)


state 69

    (77) integerdecl -> INTEGER . integernamelist SEMICOLON
    (78) integerdecl -> INTEGER . SIGNED integernamelist SEMICOLON
    (79) integernamelist -> . integernamelist COMMA integername
    (80) integernamelist -> . integername
    (81) integername -> . ID

    SIGNED          shift and go to state 201
    ID              shift and go to state 203

    integername                    shift and go to state 204
    integernamelist                shift and go to state 202

state 70

    (15) params_begin -> param .

    PARAMETER       reduce using rule 15 (params_begin -> param .)


state 71

    (13) params -> params_begin . param_end
    (14) params_begin -> params_begin . param
    (20) param_end -> . PARAMETER param_substitution_list
    (21) param_end -> . PARAMETER width param_substitution_list
    (22) param_end -> . PARAMETER INTEGER param_substitution_list
    (17) param -> . PARAMETER param_substitution_list COMMA
    (18) param -> . PARAMETER width param_substitution_list COMMA
    (19) param -> . PARAMETER INTEGER param_substitution_list COMMA

    PARAMETER       shift and go to state 72

    param                          shift and go to state 205
    param_end                      shift and go to state 206

state 72

    (20) param_end -> PARAMETER . param_substitution_list
    (21) param_end -> PARAMETER . width param_substitution_list
    (22) param_end -> PARAMETER . INTEGER param_substitution_list
    (17) param -> PARAMETER . param_substitution_list COMMA
    (18) param -> PARAMETER . width param_substitution_list COMMA
    (19) param -> PARAMETER . INTEGER param_substitution_list COMMA
    (92) param_substitution_list -> . param_substitution_list COMMA param_substitution
    (93) param_substitution_list -> . param_substitution
    (46) width -> . LBRACKET expression COLON expression RBRACKET
    (94) param_substitution -> . ID EQUALS rvalue

    INTEGER         shift and go to state 209
    LBRACKET        shift and go to state 116
    ID              shift and go to state 181

    width                          shift and go to state 207
    param_substitution             shift and go to state 178
    param_substitution_list        shift and go to state 208

state 73

    (11) paramlist -> DELAY LPAREN params . RPAREN

    RPAREN          shift and go to state 210


state 74

    (16) params -> param_end .

    RPAREN          reduce using rule 16 (params -> param_end .)


state 75

    (8) pragma -> LPAREN TIMES ID TIMES RPAREN .

    END             reduce using rule 8 (pragma -> LPAREN TIMES ID TIMES RPAREN .)
    IF              reduce using rule 8 (pragma -> LPAREN TIMES ID TIMES RPAREN .)
    FOR             reduce using rule 8 (pragma -> LPAREN TIMES ID TIMES RPAREN .)
    INTEGER         reduce using rule 8 (pragma -> LPAREN TIMES ID TIMES RPAREN .)
    REAL            reduce using rule 8 (pragma -> LPAREN TIMES ID TIMES RPAREN .)
    PARAMETER       reduce using rule 8 (pragma -> LPAREN TIMES ID TIMES RPAREN .)
    LOCALPARAM      reduce using rule 8 (pragma -> LPAREN TIMES ID TIMES RPAREN .)
    GENVAR          reduce using rule 8 (pragma -> LPAREN TIMES ID TIMES RPAREN .)
    ASSIGN          reduce using rule 8 (pragma -> LPAREN TIMES ID TIMES RPAREN .)
    ALWAYS          reduce using rule 8 (pragma -> LPAREN TIMES ID TIMES RPAREN .)
    INITIAL         reduce using rule 8 (pragma -> LPAREN TIMES ID TIMES RPAREN .)
    ID              reduce using rule 8 (pragma -> LPAREN TIMES ID TIMES RPAREN .)
    FUNCTION        reduce using rule 8 (pragma -> LPAREN TIMES ID TIMES RPAREN .)
    TASK            reduce using rule 8 (pragma -> LPAREN TIMES ID TIMES RPAREN .)
    LPAREN          reduce using rule 8 (pragma -> LPAREN TIMES ID TIMES RPAREN .)
    INPUT           reduce using rule 8 (pragma -> LPAREN TIMES ID TIMES RPAREN .)
    OUTPUT          reduce using rule 8 (pragma -> LPAREN TIMES ID TIMES RPAREN .)
    INOUT           reduce using rule 8 (pragma -> LPAREN TIMES ID TIMES RPAREN .)
    TRI             reduce using rule 8 (pragma -> LPAREN TIMES ID TIMES RPAREN .)
    REG             reduce using rule 8 (pragma -> LPAREN TIMES ID TIMES RPAREN .)
    WIRE            reduce using rule 8 (pragma -> LPAREN TIMES ID TIMES RPAREN .)
    SIGNED          reduce using rule 8 (pragma -> LPAREN TIMES ID TIMES RPAREN .)
    ENDGENERATE     reduce using rule 8 (pragma -> LPAREN TIMES ID TIMES RPAREN .)
    ELSE            reduce using rule 8 (pragma -> LPAREN TIMES ID TIMES RPAREN .)
    MODULE          reduce using rule 8 (pragma -> LPAREN TIMES ID TIMES RPAREN .)
    $end            reduce using rule 8 (pragma -> LPAREN TIMES ID TIMES RPAREN .)
    ENDMODULE       reduce using rule 8 (pragma -> LPAREN TIMES ID TIMES RPAREN .)
    GENERATE        reduce using rule 8 (pragma -> LPAREN TIMES ID TIMES RPAREN .)


state 76

    (122) expression -> NOR . expression
    (116) expression -> . MINUS expression
    (117) expression -> . PLUS expression
    (118) expression -> . LNOT expression
    (119) expression -> . NOT expression
    (120) expression -> . AND expression
    (121) expression -> . NAND expression
    (122) expression -> . NOR expression
    (123) expression -> . OR expression
    (124) expression -> . XOR expression
    (125) expression -> . XNOR expression
    (126) expression -> . expression POWER expression
    (127) expression -> . expression TIMES expression
    (128) expression -> . expression DIVIDE expression
    (129) expression -> . expression MOD expression
    (130) expression -> . expression PLUS expression
    (131) expression -> . expression MINUS expression
    (132) expression -> . expression LSHIFT expression
    (133) expression -> . expression RSHIFT expression
    (134) expression -> . expression LSHIFTA expression
    (135) expression -> . expression RSHIFTA expression
    (136) expression -> . expression LT expression
    (137) expression -> . expression GT expression
    (138) expression -> . expression LE expression
    (139) expression -> . expression GE expression
    (140) expression -> . expression EQ expression
    (141) expression -> . expression NE expression
    (142) expression -> . expression EQL expression
    (143) expression -> . expression NEL expression
    (144) expression -> . expression AND expression
    (145) expression -> . expression XOR expression
    (146) expression -> . expression XNOR expression
    (147) expression -> . expression OR expression
    (148) expression -> . expression LAND expression
    (149) expression -> . expression LOR expression
    (150) expression -> . expression COND expression COLON expression
    (151) expression -> . LPAREN expression RPAREN
    (152) expression -> . concat
    (153) expression -> . repeat
    (154) expression -> . partselect
    (155) expression -> . pointer
    (156) expression -> . functioncall
    (157) expression -> . systemcall
    (158) expression -> . identifier
    (159) expression -> . const_expression
    (160) concat -> . LBRACE concatlist RBRACE
    (163) repeat -> . LBRACE expression concat RBRACE
    (164) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (165) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (166) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (167) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (168) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (169) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (170) pointer -> . identifier LBRACKET expression RBRACKET
    (171) pointer -> . pointer LBRACKET expression RBRACKET
    (339) functioncall -> . identifier LPAREN func_args RPAREN
    (319) systemcall -> . DOLLER ID
    (320) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (357) identifier -> . ID
    (358) identifier -> . scope ID
    (172) const_expression -> . intnumber
    (173) const_expression -> . floatnumber
    (174) const_expression -> . stringliteral
    (359) scope -> . identifier DOT
    (360) scope -> . pointer DOT
    (176) intnumber -> . INTNUMBER_DEC
    (177) intnumber -> . SIGNED_INTNUMBER_DEC
    (178) intnumber -> . INTNUMBER_BIN
    (179) intnumber -> . SIGNED_INTNUMBER_BIN
    (180) intnumber -> . INTNUMBER_OCT
    (181) intnumber -> . SIGNED_INTNUMBER_OCT
    (182) intnumber -> . INTNUMBER_HEX
    (183) intnumber -> . SIGNED_INTNUMBER_HEX
    (175) floatnumber -> . FLOATNUMBER
    (184) stringliteral -> . STRING_LITERAL

    MINUS           shift and go to state 97
    PLUS            shift and go to state 89
    LNOT            shift and go to state 95
    NOT             shift and go to state 78
    AND             shift and go to state 91
    NAND            shift and go to state 98
    NOR             shift and go to state 76
    OR              shift and go to state 105
    XOR             shift and go to state 82
    XNOR            shift and go to state 87
    LPAREN          shift and go to state 96
    LBRACE          shift and go to state 77
    DOLLER          shift and go to state 100
    ID              shift and go to state 85
    INTNUMBER_DEC   shift and go to state 79
    SIGNED_INTNUMBER_DEC shift and go to state 101
    INTNUMBER_BIN   shift and go to state 111
    SIGNED_INTNUMBER_BIN shift and go to state 112
    INTNUMBER_OCT   shift and go to state 86
    SIGNED_INTNUMBER_OCT shift and go to state 106
    INTNUMBER_HEX   shift and go to state 93
    SIGNED_INTNUMBER_HEX shift and go to state 83
    FLOATNUMBER     shift and go to state 102
    STRING_LITERAL  shift and go to state 107

    stringliteral                  shift and go to state 99
    intnumber                      shift and go to state 81
    expression                     shift and go to state 211
    repeat                         shift and go to state 108
    partselect                     shift and go to state 103
    identifier                     shift and go to state 104
    pointer                        shift and go to state 80
    functioncall                   shift and go to state 94
    scope                          shift and go to state 84
    systemcall                     shift and go to state 109
    const_expression               shift and go to state 110
    concat                         shift and go to state 88
    floatnumber                    shift and go to state 90

state 77

    (160) concat -> LBRACE . concatlist RBRACE
    (163) repeat -> LBRACE . expression concat RBRACE
    (161) concatlist -> . concatlist COMMA expression
    (162) concatlist -> . expression
    (116) expression -> . MINUS expression
    (117) expression -> . PLUS expression
    (118) expression -> . LNOT expression
    (119) expression -> . NOT expression
    (120) expression -> . AND expression
    (121) expression -> . NAND expression
    (122) expression -> . NOR expression
    (123) expression -> . OR expression
    (124) expression -> . XOR expression
    (125) expression -> . XNOR expression
    (126) expression -> . expression POWER expression
    (127) expression -> . expression TIMES expression
    (128) expression -> . expression DIVIDE expression
    (129) expression -> . expression MOD expression
    (130) expression -> . expression PLUS expression
    (131) expression -> . expression MINUS expression
    (132) expression -> . expression LSHIFT expression
    (133) expression -> . expression RSHIFT expression
    (134) expression -> . expression LSHIFTA expression
    (135) expression -> . expression RSHIFTA expression
    (136) expression -> . expression LT expression
    (137) expression -> . expression GT expression
    (138) expression -> . expression LE expression
    (139) expression -> . expression GE expression
    (140) expression -> . expression EQ expression
    (141) expression -> . expression NE expression
    (142) expression -> . expression EQL expression
    (143) expression -> . expression NEL expression
    (144) expression -> . expression AND expression
    (145) expression -> . expression XOR expression
    (146) expression -> . expression XNOR expression
    (147) expression -> . expression OR expression
    (148) expression -> . expression LAND expression
    (149) expression -> . expression LOR expression
    (150) expression -> . expression COND expression COLON expression
    (151) expression -> . LPAREN expression RPAREN
    (152) expression -> . concat
    (153) expression -> . repeat
    (154) expression -> . partselect
    (155) expression -> . pointer
    (156) expression -> . functioncall
    (157) expression -> . systemcall
    (158) expression -> . identifier
    (159) expression -> . const_expression
    (160) concat -> . LBRACE concatlist RBRACE
    (163) repeat -> . LBRACE expression concat RBRACE
    (164) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (165) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (166) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (167) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (168) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (169) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (170) pointer -> . identifier LBRACKET expression RBRACKET
    (171) pointer -> . pointer LBRACKET expression RBRACKET
    (339) functioncall -> . identifier LPAREN func_args RPAREN
    (319) systemcall -> . DOLLER ID
    (320) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (357) identifier -> . ID
    (358) identifier -> . scope ID
    (172) const_expression -> . intnumber
    (173) const_expression -> . floatnumber
    (174) const_expression -> . stringliteral
    (359) scope -> . identifier DOT
    (360) scope -> . pointer DOT
    (176) intnumber -> . INTNUMBER_DEC
    (177) intnumber -> . SIGNED_INTNUMBER_DEC
    (178) intnumber -> . INTNUMBER_BIN
    (179) intnumber -> . SIGNED_INTNUMBER_BIN
    (180) intnumber -> . INTNUMBER_OCT
    (181) intnumber -> . SIGNED_INTNUMBER_OCT
    (182) intnumber -> . INTNUMBER_HEX
    (183) intnumber -> . SIGNED_INTNUMBER_HEX
    (175) floatnumber -> . FLOATNUMBER
    (184) stringliteral -> . STRING_LITERAL

    MINUS           shift and go to state 97
    PLUS            shift and go to state 89
    LNOT            shift and go to state 95
    NOT             shift and go to state 78
    AND             shift and go to state 91
    NAND            shift and go to state 98
    NOR             shift and go to state 76
    OR              shift and go to state 105
    XOR             shift and go to state 82
    XNOR            shift and go to state 87
    LPAREN          shift and go to state 96
    LBRACE          shift and go to state 77
    DOLLER          shift and go to state 100
    ID              shift and go to state 85
    INTNUMBER_DEC   shift and go to state 79
    SIGNED_INTNUMBER_DEC shift and go to state 101
    INTNUMBER_BIN   shift and go to state 111
    SIGNED_INTNUMBER_BIN shift and go to state 112
    INTNUMBER_OCT   shift and go to state 86
    SIGNED_INTNUMBER_OCT shift and go to state 106
    INTNUMBER_HEX   shift and go to state 93
    SIGNED_INTNUMBER_HEX shift and go to state 83
    FLOATNUMBER     shift and go to state 102
    STRING_LITERAL  shift and go to state 107

    stringliteral                  shift and go to state 99
    intnumber                      shift and go to state 81
    expression                     shift and go to state 212
    repeat                         shift and go to state 108
    concatlist                     shift and go to state 213
    partselect                     shift and go to state 103
    identifier                     shift and go to state 104
    pointer                        shift and go to state 80
    functioncall                   shift and go to state 94
    scope                          shift and go to state 84
    systemcall                     shift and go to state 109
    const_expression               shift and go to state 110
    concat                         shift and go to state 88
    floatnumber                    shift and go to state 90

state 78

    (119) expression -> NOT . expression
    (116) expression -> . MINUS expression
    (117) expression -> . PLUS expression
    (118) expression -> . LNOT expression
    (119) expression -> . NOT expression
    (120) expression -> . AND expression
    (121) expression -> . NAND expression
    (122) expression -> . NOR expression
    (123) expression -> . OR expression
    (124) expression -> . XOR expression
    (125) expression -> . XNOR expression
    (126) expression -> . expression POWER expression
    (127) expression -> . expression TIMES expression
    (128) expression -> . expression DIVIDE expression
    (129) expression -> . expression MOD expression
    (130) expression -> . expression PLUS expression
    (131) expression -> . expression MINUS expression
    (132) expression -> . expression LSHIFT expression
    (133) expression -> . expression RSHIFT expression
    (134) expression -> . expression LSHIFTA expression
    (135) expression -> . expression RSHIFTA expression
    (136) expression -> . expression LT expression
    (137) expression -> . expression GT expression
    (138) expression -> . expression LE expression
    (139) expression -> . expression GE expression
    (140) expression -> . expression EQ expression
    (141) expression -> . expression NE expression
    (142) expression -> . expression EQL expression
    (143) expression -> . expression NEL expression
    (144) expression -> . expression AND expression
    (145) expression -> . expression XOR expression
    (146) expression -> . expression XNOR expression
    (147) expression -> . expression OR expression
    (148) expression -> . expression LAND expression
    (149) expression -> . expression LOR expression
    (150) expression -> . expression COND expression COLON expression
    (151) expression -> . LPAREN expression RPAREN
    (152) expression -> . concat
    (153) expression -> . repeat
    (154) expression -> . partselect
    (155) expression -> . pointer
    (156) expression -> . functioncall
    (157) expression -> . systemcall
    (158) expression -> . identifier
    (159) expression -> . const_expression
    (160) concat -> . LBRACE concatlist RBRACE
    (163) repeat -> . LBRACE expression concat RBRACE
    (164) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (165) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (166) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (167) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (168) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (169) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (170) pointer -> . identifier LBRACKET expression RBRACKET
    (171) pointer -> . pointer LBRACKET expression RBRACKET
    (339) functioncall -> . identifier LPAREN func_args RPAREN
    (319) systemcall -> . DOLLER ID
    (320) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (357) identifier -> . ID
    (358) identifier -> . scope ID
    (172) const_expression -> . intnumber
    (173) const_expression -> . floatnumber
    (174) const_expression -> . stringliteral
    (359) scope -> . identifier DOT
    (360) scope -> . pointer DOT
    (176) intnumber -> . INTNUMBER_DEC
    (177) intnumber -> . SIGNED_INTNUMBER_DEC
    (178) intnumber -> . INTNUMBER_BIN
    (179) intnumber -> . SIGNED_INTNUMBER_BIN
    (180) intnumber -> . INTNUMBER_OCT
    (181) intnumber -> . SIGNED_INTNUMBER_OCT
    (182) intnumber -> . INTNUMBER_HEX
    (183) intnumber -> . SIGNED_INTNUMBER_HEX
    (175) floatnumber -> . FLOATNUMBER
    (184) stringliteral -> . STRING_LITERAL

    MINUS           shift and go to state 97
    PLUS            shift and go to state 89
    LNOT            shift and go to state 95
    NOT             shift and go to state 78
    AND             shift and go to state 91
    NAND            shift and go to state 98
    NOR             shift and go to state 76
    OR              shift and go to state 105
    XOR             shift and go to state 82
    XNOR            shift and go to state 87
    LPAREN          shift and go to state 96
    LBRACE          shift and go to state 77
    DOLLER          shift and go to state 100
    ID              shift and go to state 85
    INTNUMBER_DEC   shift and go to state 79
    SIGNED_INTNUMBER_DEC shift and go to state 101
    INTNUMBER_BIN   shift and go to state 111
    SIGNED_INTNUMBER_BIN shift and go to state 112
    INTNUMBER_OCT   shift and go to state 86
    SIGNED_INTNUMBER_OCT shift and go to state 106
    INTNUMBER_HEX   shift and go to state 93
    SIGNED_INTNUMBER_HEX shift and go to state 83
    FLOATNUMBER     shift and go to state 102
    STRING_LITERAL  shift and go to state 107

    stringliteral                  shift and go to state 99
    intnumber                      shift and go to state 81
    expression                     shift and go to state 214
    repeat                         shift and go to state 108
    partselect                     shift and go to state 103
    identifier                     shift and go to state 104
    pointer                        shift and go to state 80
    functioncall                   shift and go to state 94
    scope                          shift and go to state 84
    systemcall                     shift and go to state 109
    const_expression               shift and go to state 110
    concat                         shift and go to state 88
    floatnumber                    shift and go to state 90

state 79

    (176) intnumber -> INTNUMBER_DEC .

    POWER           reduce using rule 176 (intnumber -> INTNUMBER_DEC .)
    TIMES           reduce using rule 176 (intnumber -> INTNUMBER_DEC .)
    DIVIDE          reduce using rule 176 (intnumber -> INTNUMBER_DEC .)
    MOD             reduce using rule 176 (intnumber -> INTNUMBER_DEC .)
    PLUS            reduce using rule 176 (intnumber -> INTNUMBER_DEC .)
    MINUS           reduce using rule 176 (intnumber -> INTNUMBER_DEC .)
    LSHIFT          reduce using rule 176 (intnumber -> INTNUMBER_DEC .)
    RSHIFT          reduce using rule 176 (intnumber -> INTNUMBER_DEC .)
    LSHIFTA         reduce using rule 176 (intnumber -> INTNUMBER_DEC .)
    RSHIFTA         reduce using rule 176 (intnumber -> INTNUMBER_DEC .)
    LT              reduce using rule 176 (intnumber -> INTNUMBER_DEC .)
    GT              reduce using rule 176 (intnumber -> INTNUMBER_DEC .)
    LE              reduce using rule 176 (intnumber -> INTNUMBER_DEC .)
    GE              reduce using rule 176 (intnumber -> INTNUMBER_DEC .)
    EQ              reduce using rule 176 (intnumber -> INTNUMBER_DEC .)
    NE              reduce using rule 176 (intnumber -> INTNUMBER_DEC .)
    EQL             reduce using rule 176 (intnumber -> INTNUMBER_DEC .)
    NEL             reduce using rule 176 (intnumber -> INTNUMBER_DEC .)
    AND             reduce using rule 176 (intnumber -> INTNUMBER_DEC .)
    XOR             reduce using rule 176 (intnumber -> INTNUMBER_DEC .)
    XNOR            reduce using rule 176 (intnumber -> INTNUMBER_DEC .)
    OR              reduce using rule 176 (intnumber -> INTNUMBER_DEC .)
    LAND            reduce using rule 176 (intnumber -> INTNUMBER_DEC .)
    LOR             reduce using rule 176 (intnumber -> INTNUMBER_DEC .)
    COND            reduce using rule 176 (intnumber -> INTNUMBER_DEC .)
    SEMICOLON       reduce using rule 176 (intnumber -> INTNUMBER_DEC .)
    COLON           reduce using rule 176 (intnumber -> INTNUMBER_DEC .)
    COMMA           reduce using rule 176 (intnumber -> INTNUMBER_DEC .)
    RBRACKET        reduce using rule 176 (intnumber -> INTNUMBER_DEC .)
    LBRACE          reduce using rule 176 (intnumber -> INTNUMBER_DEC .)
    RBRACE          reduce using rule 176 (intnumber -> INTNUMBER_DEC .)
    RPAREN          reduce using rule 176 (intnumber -> INTNUMBER_DEC .)
    PLUSCOLON       reduce using rule 176 (intnumber -> INTNUMBER_DEC .)
    MINUSCOLON      reduce using rule 176 (intnumber -> INTNUMBER_DEC .)
    ID              reduce using rule 176 (intnumber -> INTNUMBER_DEC .)
    IF              reduce using rule 176 (intnumber -> INTNUMBER_DEC .)
    LNOT            reduce using rule 176 (intnumber -> INTNUMBER_DEC .)
    NOT             reduce using rule 176 (intnumber -> INTNUMBER_DEC .)
    NAND            reduce using rule 176 (intnumber -> INTNUMBER_DEC .)
    NOR             reduce using rule 176 (intnumber -> INTNUMBER_DEC .)
    LPAREN          reduce using rule 176 (intnumber -> INTNUMBER_DEC .)
    DOLLER          reduce using rule 176 (intnumber -> INTNUMBER_DEC .)
    INTNUMBER_DEC   reduce using rule 176 (intnumber -> INTNUMBER_DEC .)
    SIGNED_INTNUMBER_DEC reduce using rule 176 (intnumber -> INTNUMBER_DEC .)
    INTNUMBER_BIN   reduce using rule 176 (intnumber -> INTNUMBER_DEC .)
    SIGNED_INTNUMBER_BIN reduce using rule 176 (intnumber -> INTNUMBER_DEC .)
    INTNUMBER_OCT   reduce using rule 176 (intnumber -> INTNUMBER_DEC .)
    SIGNED_INTNUMBER_OCT reduce using rule 176 (intnumber -> INTNUMBER_DEC .)
    INTNUMBER_HEX   reduce using rule 176 (intnumber -> INTNUMBER_DEC .)
    SIGNED_INTNUMBER_HEX reduce using rule 176 (intnumber -> INTNUMBER_DEC .)
    FLOATNUMBER     reduce using rule 176 (intnumber -> INTNUMBER_DEC .)
    STRING_LITERAL  reduce using rule 176 (intnumber -> INTNUMBER_DEC .)


state 80

    (155) expression -> pointer .
    (167) partselect -> pointer . LBRACKET expression COLON expression RBRACKET
    (168) partselect -> pointer . LBRACKET expression PLUSCOLON expression RBRACKET
    (169) partselect -> pointer . LBRACKET expression MINUSCOLON expression RBRACKET
    (171) pointer -> pointer . LBRACKET expression RBRACKET
    (360) scope -> pointer . DOT

    POWER           reduce using rule 155 (expression -> pointer .)
    TIMES           reduce using rule 155 (expression -> pointer .)
    DIVIDE          reduce using rule 155 (expression -> pointer .)
    MOD             reduce using rule 155 (expression -> pointer .)
    PLUS            reduce using rule 155 (expression -> pointer .)
    MINUS           reduce using rule 155 (expression -> pointer .)
    LSHIFT          reduce using rule 155 (expression -> pointer .)
    RSHIFT          reduce using rule 155 (expression -> pointer .)
    LSHIFTA         reduce using rule 155 (expression -> pointer .)
    RSHIFTA         reduce using rule 155 (expression -> pointer .)
    LT              reduce using rule 155 (expression -> pointer .)
    GT              reduce using rule 155 (expression -> pointer .)
    LE              reduce using rule 155 (expression -> pointer .)
    GE              reduce using rule 155 (expression -> pointer .)
    EQ              reduce using rule 155 (expression -> pointer .)
    NE              reduce using rule 155 (expression -> pointer .)
    EQL             reduce using rule 155 (expression -> pointer .)
    NEL             reduce using rule 155 (expression -> pointer .)
    AND             reduce using rule 155 (expression -> pointer .)
    XOR             reduce using rule 155 (expression -> pointer .)
    XNOR            reduce using rule 155 (expression -> pointer .)
    OR              reduce using rule 155 (expression -> pointer .)
    LAND            reduce using rule 155 (expression -> pointer .)
    LOR             reduce using rule 155 (expression -> pointer .)
    COND            reduce using rule 155 (expression -> pointer .)
    LBRACE          reduce using rule 155 (expression -> pointer .)
    RBRACE          reduce using rule 155 (expression -> pointer .)
    COMMA           reduce using rule 155 (expression -> pointer .)
    RPAREN          reduce using rule 155 (expression -> pointer .)
    COLON           reduce using rule 155 (expression -> pointer .)
    SEMICOLON       reduce using rule 155 (expression -> pointer .)
    PLUSCOLON       reduce using rule 155 (expression -> pointer .)
    MINUSCOLON      reduce using rule 155 (expression -> pointer .)
    RBRACKET        reduce using rule 155 (expression -> pointer .)
    LBRACKET        shift and go to state 216
    DOT             shift and go to state 215


state 81

    (172) const_expression -> intnumber .

    COLON           reduce using rule 172 (const_expression -> intnumber .)
    POWER           reduce using rule 172 (const_expression -> intnumber .)
    TIMES           reduce using rule 172 (const_expression -> intnumber .)
    DIVIDE          reduce using rule 172 (const_expression -> intnumber .)
    MOD             reduce using rule 172 (const_expression -> intnumber .)
    PLUS            reduce using rule 172 (const_expression -> intnumber .)
    MINUS           reduce using rule 172 (const_expression -> intnumber .)
    LSHIFT          reduce using rule 172 (const_expression -> intnumber .)
    RSHIFT          reduce using rule 172 (const_expression -> intnumber .)
    LSHIFTA         reduce using rule 172 (const_expression -> intnumber .)
    RSHIFTA         reduce using rule 172 (const_expression -> intnumber .)
    LT              reduce using rule 172 (const_expression -> intnumber .)
    GT              reduce using rule 172 (const_expression -> intnumber .)
    LE              reduce using rule 172 (const_expression -> intnumber .)
    GE              reduce using rule 172 (const_expression -> intnumber .)
    EQ              reduce using rule 172 (const_expression -> intnumber .)
    NE              reduce using rule 172 (const_expression -> intnumber .)
    EQL             reduce using rule 172 (const_expression -> intnumber .)
    NEL             reduce using rule 172 (const_expression -> intnumber .)
    AND             reduce using rule 172 (const_expression -> intnumber .)
    XOR             reduce using rule 172 (const_expression -> intnumber .)
    XNOR            reduce using rule 172 (const_expression -> intnumber .)
    OR              reduce using rule 172 (const_expression -> intnumber .)
    LAND            reduce using rule 172 (const_expression -> intnumber .)
    LOR             reduce using rule 172 (const_expression -> intnumber .)
    COND            reduce using rule 172 (const_expression -> intnumber .)
    LBRACE          reduce using rule 172 (const_expression -> intnumber .)
    RBRACE          reduce using rule 172 (const_expression -> intnumber .)
    COMMA           reduce using rule 172 (const_expression -> intnumber .)
    RPAREN          reduce using rule 172 (const_expression -> intnumber .)
    SEMICOLON       reduce using rule 172 (const_expression -> intnumber .)
    PLUSCOLON       reduce using rule 172 (const_expression -> intnumber .)
    MINUSCOLON      reduce using rule 172 (const_expression -> intnumber .)
    RBRACKET        reduce using rule 172 (const_expression -> intnumber .)


state 82

    (124) expression -> XOR . expression
    (116) expression -> . MINUS expression
    (117) expression -> . PLUS expression
    (118) expression -> . LNOT expression
    (119) expression -> . NOT expression
    (120) expression -> . AND expression
    (121) expression -> . NAND expression
    (122) expression -> . NOR expression
    (123) expression -> . OR expression
    (124) expression -> . XOR expression
    (125) expression -> . XNOR expression
    (126) expression -> . expression POWER expression
    (127) expression -> . expression TIMES expression
    (128) expression -> . expression DIVIDE expression
    (129) expression -> . expression MOD expression
    (130) expression -> . expression PLUS expression
    (131) expression -> . expression MINUS expression
    (132) expression -> . expression LSHIFT expression
    (133) expression -> . expression RSHIFT expression
    (134) expression -> . expression LSHIFTA expression
    (135) expression -> . expression RSHIFTA expression
    (136) expression -> . expression LT expression
    (137) expression -> . expression GT expression
    (138) expression -> . expression LE expression
    (139) expression -> . expression GE expression
    (140) expression -> . expression EQ expression
    (141) expression -> . expression NE expression
    (142) expression -> . expression EQL expression
    (143) expression -> . expression NEL expression
    (144) expression -> . expression AND expression
    (145) expression -> . expression XOR expression
    (146) expression -> . expression XNOR expression
    (147) expression -> . expression OR expression
    (148) expression -> . expression LAND expression
    (149) expression -> . expression LOR expression
    (150) expression -> . expression COND expression COLON expression
    (151) expression -> . LPAREN expression RPAREN
    (152) expression -> . concat
    (153) expression -> . repeat
    (154) expression -> . partselect
    (155) expression -> . pointer
    (156) expression -> . functioncall
    (157) expression -> . systemcall
    (158) expression -> . identifier
    (159) expression -> . const_expression
    (160) concat -> . LBRACE concatlist RBRACE
    (163) repeat -> . LBRACE expression concat RBRACE
    (164) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (165) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (166) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (167) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (168) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (169) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (170) pointer -> . identifier LBRACKET expression RBRACKET
    (171) pointer -> . pointer LBRACKET expression RBRACKET
    (339) functioncall -> . identifier LPAREN func_args RPAREN
    (319) systemcall -> . DOLLER ID
    (320) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (357) identifier -> . ID
    (358) identifier -> . scope ID
    (172) const_expression -> . intnumber
    (173) const_expression -> . floatnumber
    (174) const_expression -> . stringliteral
    (359) scope -> . identifier DOT
    (360) scope -> . pointer DOT
    (176) intnumber -> . INTNUMBER_DEC
    (177) intnumber -> . SIGNED_INTNUMBER_DEC
    (178) intnumber -> . INTNUMBER_BIN
    (179) intnumber -> . SIGNED_INTNUMBER_BIN
    (180) intnumber -> . INTNUMBER_OCT
    (181) intnumber -> . SIGNED_INTNUMBER_OCT
    (182) intnumber -> . INTNUMBER_HEX
    (183) intnumber -> . SIGNED_INTNUMBER_HEX
    (175) floatnumber -> . FLOATNUMBER
    (184) stringliteral -> . STRING_LITERAL

    MINUS           shift and go to state 97
    PLUS            shift and go to state 89
    LNOT            shift and go to state 95
    NOT             shift and go to state 78
    AND             shift and go to state 91
    NAND            shift and go to state 98
    NOR             shift and go to state 76
    OR              shift and go to state 105
    XOR             shift and go to state 82
    XNOR            shift and go to state 87
    LPAREN          shift and go to state 96
    LBRACE          shift and go to state 77
    DOLLER          shift and go to state 100
    ID              shift and go to state 85
    INTNUMBER_DEC   shift and go to state 79
    SIGNED_INTNUMBER_DEC shift and go to state 101
    INTNUMBER_BIN   shift and go to state 111
    SIGNED_INTNUMBER_BIN shift and go to state 112
    INTNUMBER_OCT   shift and go to state 86
    SIGNED_INTNUMBER_OCT shift and go to state 106
    INTNUMBER_HEX   shift and go to state 93
    SIGNED_INTNUMBER_HEX shift and go to state 83
    FLOATNUMBER     shift and go to state 102
    STRING_LITERAL  shift and go to state 107

    stringliteral                  shift and go to state 99
    intnumber                      shift and go to state 81
    expression                     shift and go to state 217
    repeat                         shift and go to state 108
    partselect                     shift and go to state 103
    identifier                     shift and go to state 104
    pointer                        shift and go to state 80
    functioncall                   shift and go to state 94
    scope                          shift and go to state 84
    systemcall                     shift and go to state 109
    const_expression               shift and go to state 110
    concat                         shift and go to state 88
    floatnumber                    shift and go to state 90

state 83

    (183) intnumber -> SIGNED_INTNUMBER_HEX .

    POWER           reduce using rule 183 (intnumber -> SIGNED_INTNUMBER_HEX .)
    TIMES           reduce using rule 183 (intnumber -> SIGNED_INTNUMBER_HEX .)
    DIVIDE          reduce using rule 183 (intnumber -> SIGNED_INTNUMBER_HEX .)
    MOD             reduce using rule 183 (intnumber -> SIGNED_INTNUMBER_HEX .)
    PLUS            reduce using rule 183 (intnumber -> SIGNED_INTNUMBER_HEX .)
    MINUS           reduce using rule 183 (intnumber -> SIGNED_INTNUMBER_HEX .)
    LSHIFT          reduce using rule 183 (intnumber -> SIGNED_INTNUMBER_HEX .)
    RSHIFT          reduce using rule 183 (intnumber -> SIGNED_INTNUMBER_HEX .)
    LSHIFTA         reduce using rule 183 (intnumber -> SIGNED_INTNUMBER_HEX .)
    RSHIFTA         reduce using rule 183 (intnumber -> SIGNED_INTNUMBER_HEX .)
    LT              reduce using rule 183 (intnumber -> SIGNED_INTNUMBER_HEX .)
    GT              reduce using rule 183 (intnumber -> SIGNED_INTNUMBER_HEX .)
    LE              reduce using rule 183 (intnumber -> SIGNED_INTNUMBER_HEX .)
    GE              reduce using rule 183 (intnumber -> SIGNED_INTNUMBER_HEX .)
    EQ              reduce using rule 183 (intnumber -> SIGNED_INTNUMBER_HEX .)
    NE              reduce using rule 183 (intnumber -> SIGNED_INTNUMBER_HEX .)
    EQL             reduce using rule 183 (intnumber -> SIGNED_INTNUMBER_HEX .)
    NEL             reduce using rule 183 (intnumber -> SIGNED_INTNUMBER_HEX .)
    AND             reduce using rule 183 (intnumber -> SIGNED_INTNUMBER_HEX .)
    XOR             reduce using rule 183 (intnumber -> SIGNED_INTNUMBER_HEX .)
    XNOR            reduce using rule 183 (intnumber -> SIGNED_INTNUMBER_HEX .)
    OR              reduce using rule 183 (intnumber -> SIGNED_INTNUMBER_HEX .)
    LAND            reduce using rule 183 (intnumber -> SIGNED_INTNUMBER_HEX .)
    LOR             reduce using rule 183 (intnumber -> SIGNED_INTNUMBER_HEX .)
    COND            reduce using rule 183 (intnumber -> SIGNED_INTNUMBER_HEX .)
    SEMICOLON       reduce using rule 183 (intnumber -> SIGNED_INTNUMBER_HEX .)
    COLON           reduce using rule 183 (intnumber -> SIGNED_INTNUMBER_HEX .)
    COMMA           reduce using rule 183 (intnumber -> SIGNED_INTNUMBER_HEX .)
    RBRACKET        reduce using rule 183 (intnumber -> SIGNED_INTNUMBER_HEX .)
    LBRACE          reduce using rule 183 (intnumber -> SIGNED_INTNUMBER_HEX .)
    RBRACE          reduce using rule 183 (intnumber -> SIGNED_INTNUMBER_HEX .)
    RPAREN          reduce using rule 183 (intnumber -> SIGNED_INTNUMBER_HEX .)
    PLUSCOLON       reduce using rule 183 (intnumber -> SIGNED_INTNUMBER_HEX .)
    MINUSCOLON      reduce using rule 183 (intnumber -> SIGNED_INTNUMBER_HEX .)
    ID              reduce using rule 183 (intnumber -> SIGNED_INTNUMBER_HEX .)
    IF              reduce using rule 183 (intnumber -> SIGNED_INTNUMBER_HEX .)
    LNOT            reduce using rule 183 (intnumber -> SIGNED_INTNUMBER_HEX .)
    NOT             reduce using rule 183 (intnumber -> SIGNED_INTNUMBER_HEX .)
    NAND            reduce using rule 183 (intnumber -> SIGNED_INTNUMBER_HEX .)
    NOR             reduce using rule 183 (intnumber -> SIGNED_INTNUMBER_HEX .)
    LPAREN          reduce using rule 183 (intnumber -> SIGNED_INTNUMBER_HEX .)
    DOLLER          reduce using rule 183 (intnumber -> SIGNED_INTNUMBER_HEX .)
    INTNUMBER_DEC   reduce using rule 183 (intnumber -> SIGNED_INTNUMBER_HEX .)
    SIGNED_INTNUMBER_DEC reduce using rule 183 (intnumber -> SIGNED_INTNUMBER_HEX .)
    INTNUMBER_BIN   reduce using rule 183 (intnumber -> SIGNED_INTNUMBER_HEX .)
    SIGNED_INTNUMBER_BIN reduce using rule 183 (intnumber -> SIGNED_INTNUMBER_HEX .)
    INTNUMBER_OCT   reduce using rule 183 (intnumber -> SIGNED_INTNUMBER_HEX .)
    SIGNED_INTNUMBER_OCT reduce using rule 183 (intnumber -> SIGNED_INTNUMBER_HEX .)
    INTNUMBER_HEX   reduce using rule 183 (intnumber -> SIGNED_INTNUMBER_HEX .)
    SIGNED_INTNUMBER_HEX reduce using rule 183 (intnumber -> SIGNED_INTNUMBER_HEX .)
    FLOATNUMBER     reduce using rule 183 (intnumber -> SIGNED_INTNUMBER_HEX .)
    STRING_LITERAL  reduce using rule 183 (intnumber -> SIGNED_INTNUMBER_HEX .)


state 84

    (358) identifier -> scope . ID

    ID              shift and go to state 218


state 85

    (357) identifier -> ID .

    LBRACKET        reduce using rule 357 (identifier -> ID .)
    LPAREN          reduce using rule 357 (identifier -> ID .)
    DOT             reduce using rule 357 (identifier -> ID .)
    COLON           reduce using rule 357 (identifier -> ID .)
    PLUSCOLON       reduce using rule 357 (identifier -> ID .)
    MINUSCOLON      reduce using rule 357 (identifier -> ID .)
    RBRACKET        reduce using rule 357 (identifier -> ID .)
    POWER           reduce using rule 357 (identifier -> ID .)
    TIMES           reduce using rule 357 (identifier -> ID .)
    DIVIDE          reduce using rule 357 (identifier -> ID .)
    MOD             reduce using rule 357 (identifier -> ID .)
    PLUS            reduce using rule 357 (identifier -> ID .)
    MINUS           reduce using rule 357 (identifier -> ID .)
    LSHIFT          reduce using rule 357 (identifier -> ID .)
    RSHIFT          reduce using rule 357 (identifier -> ID .)
    LSHIFTA         reduce using rule 357 (identifier -> ID .)
    RSHIFTA         reduce using rule 357 (identifier -> ID .)
    LT              reduce using rule 357 (identifier -> ID .)
    GT              reduce using rule 357 (identifier -> ID .)
    LE              reduce using rule 357 (identifier -> ID .)
    GE              reduce using rule 357 (identifier -> ID .)
    EQ              reduce using rule 357 (identifier -> ID .)
    NE              reduce using rule 357 (identifier -> ID .)
    EQL             reduce using rule 357 (identifier -> ID .)
    NEL             reduce using rule 357 (identifier -> ID .)
    AND             reduce using rule 357 (identifier -> ID .)
    XOR             reduce using rule 357 (identifier -> ID .)
    XNOR            reduce using rule 357 (identifier -> ID .)
    OR              reduce using rule 357 (identifier -> ID .)
    LAND            reduce using rule 357 (identifier -> ID .)
    LOR             reduce using rule 357 (identifier -> ID .)
    COND            reduce using rule 357 (identifier -> ID .)
    RPAREN          reduce using rule 357 (identifier -> ID .)
    LBRACE          reduce using rule 357 (identifier -> ID .)
    RBRACE          reduce using rule 357 (identifier -> ID .)
    COMMA           reduce using rule 357 (identifier -> ID .)
    SEMICOLON       reduce using rule 357 (identifier -> ID .)
    EQUALS          reduce using rule 357 (identifier -> ID .)
    SENS_OR         reduce using rule 357 (identifier -> ID .)
    IF              reduce using rule 357 (identifier -> ID .)
    CASE            reduce using rule 357 (identifier -> ID .)
    FOR             reduce using rule 357 (identifier -> ID .)
    WHILE           reduce using rule 357 (identifier -> ID .)
    WAIT            reduce using rule 357 (identifier -> ID .)
    FOREVER         reduce using rule 357 (identifier -> ID .)
    BEGIN           reduce using rule 357 (identifier -> ID .)
    FORK            reduce using rule 357 (identifier -> ID .)
    DELAY           reduce using rule 357 (identifier -> ID .)
    AT              reduce using rule 357 (identifier -> ID .)
    DOLLER          reduce using rule 357 (identifier -> ID .)
    DISABLE         reduce using rule 357 (identifier -> ID .)
    ID              reduce using rule 357 (identifier -> ID .)
    LNOT            reduce using rule 357 (identifier -> ID .)
    NOT             reduce using rule 357 (identifier -> ID .)
    NAND            reduce using rule 357 (identifier -> ID .)
    NOR             reduce using rule 357 (identifier -> ID .)
    INTNUMBER_DEC   reduce using rule 357 (identifier -> ID .)
    SIGNED_INTNUMBER_DEC reduce using rule 357 (identifier -> ID .)
    INTNUMBER_BIN   reduce using rule 357 (identifier -> ID .)
    SIGNED_INTNUMBER_BIN reduce using rule 357 (identifier -> ID .)
    INTNUMBER_OCT   reduce using rule 357 (identifier -> ID .)
    SIGNED_INTNUMBER_OCT reduce using rule 357 (identifier -> ID .)
    INTNUMBER_HEX   reduce using rule 357 (identifier -> ID .)
    SIGNED_INTNUMBER_HEX reduce using rule 357 (identifier -> ID .)
    FLOATNUMBER     reduce using rule 357 (identifier -> ID .)
    STRING_LITERAL  reduce using rule 357 (identifier -> ID .)


state 86

    (180) intnumber -> INTNUMBER_OCT .

    POWER           reduce using rule 180 (intnumber -> INTNUMBER_OCT .)
    TIMES           reduce using rule 180 (intnumber -> INTNUMBER_OCT .)
    DIVIDE          reduce using rule 180 (intnumber -> INTNUMBER_OCT .)
    MOD             reduce using rule 180 (intnumber -> INTNUMBER_OCT .)
    PLUS            reduce using rule 180 (intnumber -> INTNUMBER_OCT .)
    MINUS           reduce using rule 180 (intnumber -> INTNUMBER_OCT .)
    LSHIFT          reduce using rule 180 (intnumber -> INTNUMBER_OCT .)
    RSHIFT          reduce using rule 180 (intnumber -> INTNUMBER_OCT .)
    LSHIFTA         reduce using rule 180 (intnumber -> INTNUMBER_OCT .)
    RSHIFTA         reduce using rule 180 (intnumber -> INTNUMBER_OCT .)
    LT              reduce using rule 180 (intnumber -> INTNUMBER_OCT .)
    GT              reduce using rule 180 (intnumber -> INTNUMBER_OCT .)
    LE              reduce using rule 180 (intnumber -> INTNUMBER_OCT .)
    GE              reduce using rule 180 (intnumber -> INTNUMBER_OCT .)
    EQ              reduce using rule 180 (intnumber -> INTNUMBER_OCT .)
    NE              reduce using rule 180 (intnumber -> INTNUMBER_OCT .)
    EQL             reduce using rule 180 (intnumber -> INTNUMBER_OCT .)
    NEL             reduce using rule 180 (intnumber -> INTNUMBER_OCT .)
    AND             reduce using rule 180 (intnumber -> INTNUMBER_OCT .)
    XOR             reduce using rule 180 (intnumber -> INTNUMBER_OCT .)
    XNOR            reduce using rule 180 (intnumber -> INTNUMBER_OCT .)
    OR              reduce using rule 180 (intnumber -> INTNUMBER_OCT .)
    LAND            reduce using rule 180 (intnumber -> INTNUMBER_OCT .)
    LOR             reduce using rule 180 (intnumber -> INTNUMBER_OCT .)
    COND            reduce using rule 180 (intnumber -> INTNUMBER_OCT .)
    SEMICOLON       reduce using rule 180 (intnumber -> INTNUMBER_OCT .)
    COLON           reduce using rule 180 (intnumber -> INTNUMBER_OCT .)
    COMMA           reduce using rule 180 (intnumber -> INTNUMBER_OCT .)
    RBRACKET        reduce using rule 180 (intnumber -> INTNUMBER_OCT .)
    LBRACE          reduce using rule 180 (intnumber -> INTNUMBER_OCT .)
    RBRACE          reduce using rule 180 (intnumber -> INTNUMBER_OCT .)
    RPAREN          reduce using rule 180 (intnumber -> INTNUMBER_OCT .)
    PLUSCOLON       reduce using rule 180 (intnumber -> INTNUMBER_OCT .)
    MINUSCOLON      reduce using rule 180 (intnumber -> INTNUMBER_OCT .)
    ID              reduce using rule 180 (intnumber -> INTNUMBER_OCT .)
    IF              reduce using rule 180 (intnumber -> INTNUMBER_OCT .)
    LNOT            reduce using rule 180 (intnumber -> INTNUMBER_OCT .)
    NOT             reduce using rule 180 (intnumber -> INTNUMBER_OCT .)
    NAND            reduce using rule 180 (intnumber -> INTNUMBER_OCT .)
    NOR             reduce using rule 180 (intnumber -> INTNUMBER_OCT .)
    LPAREN          reduce using rule 180 (intnumber -> INTNUMBER_OCT .)
    DOLLER          reduce using rule 180 (intnumber -> INTNUMBER_OCT .)
    INTNUMBER_DEC   reduce using rule 180 (intnumber -> INTNUMBER_OCT .)
    SIGNED_INTNUMBER_DEC reduce using rule 180 (intnumber -> INTNUMBER_OCT .)
    INTNUMBER_BIN   reduce using rule 180 (intnumber -> INTNUMBER_OCT .)
    SIGNED_INTNUMBER_BIN reduce using rule 180 (intnumber -> INTNUMBER_OCT .)
    INTNUMBER_OCT   reduce using rule 180 (intnumber -> INTNUMBER_OCT .)
    SIGNED_INTNUMBER_OCT reduce using rule 180 (intnumber -> INTNUMBER_OCT .)
    INTNUMBER_HEX   reduce using rule 180 (intnumber -> INTNUMBER_OCT .)
    SIGNED_INTNUMBER_HEX reduce using rule 180 (intnumber -> INTNUMBER_OCT .)
    FLOATNUMBER     reduce using rule 180 (intnumber -> INTNUMBER_OCT .)
    STRING_LITERAL  reduce using rule 180 (intnumber -> INTNUMBER_OCT .)


state 87

    (125) expression -> XNOR . expression
    (116) expression -> . MINUS expression
    (117) expression -> . PLUS expression
    (118) expression -> . LNOT expression
    (119) expression -> . NOT expression
    (120) expression -> . AND expression
    (121) expression -> . NAND expression
    (122) expression -> . NOR expression
    (123) expression -> . OR expression
    (124) expression -> . XOR expression
    (125) expression -> . XNOR expression
    (126) expression -> . expression POWER expression
    (127) expression -> . expression TIMES expression
    (128) expression -> . expression DIVIDE expression
    (129) expression -> . expression MOD expression
    (130) expression -> . expression PLUS expression
    (131) expression -> . expression MINUS expression
    (132) expression -> . expression LSHIFT expression
    (133) expression -> . expression RSHIFT expression
    (134) expression -> . expression LSHIFTA expression
    (135) expression -> . expression RSHIFTA expression
    (136) expression -> . expression LT expression
    (137) expression -> . expression GT expression
    (138) expression -> . expression LE expression
    (139) expression -> . expression GE expression
    (140) expression -> . expression EQ expression
    (141) expression -> . expression NE expression
    (142) expression -> . expression EQL expression
    (143) expression -> . expression NEL expression
    (144) expression -> . expression AND expression
    (145) expression -> . expression XOR expression
    (146) expression -> . expression XNOR expression
    (147) expression -> . expression OR expression
    (148) expression -> . expression LAND expression
    (149) expression -> . expression LOR expression
    (150) expression -> . expression COND expression COLON expression
    (151) expression -> . LPAREN expression RPAREN
    (152) expression -> . concat
    (153) expression -> . repeat
    (154) expression -> . partselect
    (155) expression -> . pointer
    (156) expression -> . functioncall
    (157) expression -> . systemcall
    (158) expression -> . identifier
    (159) expression -> . const_expression
    (160) concat -> . LBRACE concatlist RBRACE
    (163) repeat -> . LBRACE expression concat RBRACE
    (164) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (165) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (166) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (167) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (168) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (169) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (170) pointer -> . identifier LBRACKET expression RBRACKET
    (171) pointer -> . pointer LBRACKET expression RBRACKET
    (339) functioncall -> . identifier LPAREN func_args RPAREN
    (319) systemcall -> . DOLLER ID
    (320) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (357) identifier -> . ID
    (358) identifier -> . scope ID
    (172) const_expression -> . intnumber
    (173) const_expression -> . floatnumber
    (174) const_expression -> . stringliteral
    (359) scope -> . identifier DOT
    (360) scope -> . pointer DOT
    (176) intnumber -> . INTNUMBER_DEC
    (177) intnumber -> . SIGNED_INTNUMBER_DEC
    (178) intnumber -> . INTNUMBER_BIN
    (179) intnumber -> . SIGNED_INTNUMBER_BIN
    (180) intnumber -> . INTNUMBER_OCT
    (181) intnumber -> . SIGNED_INTNUMBER_OCT
    (182) intnumber -> . INTNUMBER_HEX
    (183) intnumber -> . SIGNED_INTNUMBER_HEX
    (175) floatnumber -> . FLOATNUMBER
    (184) stringliteral -> . STRING_LITERAL

    MINUS           shift and go to state 97
    PLUS            shift and go to state 89
    LNOT            shift and go to state 95
    NOT             shift and go to state 78
    AND             shift and go to state 91
    NAND            shift and go to state 98
    NOR             shift and go to state 76
    OR              shift and go to state 105
    XOR             shift and go to state 82
    XNOR            shift and go to state 87
    LPAREN          shift and go to state 96
    LBRACE          shift and go to state 77
    DOLLER          shift and go to state 100
    ID              shift and go to state 85
    INTNUMBER_DEC   shift and go to state 79
    SIGNED_INTNUMBER_DEC shift and go to state 101
    INTNUMBER_BIN   shift and go to state 111
    SIGNED_INTNUMBER_BIN shift and go to state 112
    INTNUMBER_OCT   shift and go to state 86
    SIGNED_INTNUMBER_OCT shift and go to state 106
    INTNUMBER_HEX   shift and go to state 93
    SIGNED_INTNUMBER_HEX shift and go to state 83
    FLOATNUMBER     shift and go to state 102
    STRING_LITERAL  shift and go to state 107

    stringliteral                  shift and go to state 99
    intnumber                      shift and go to state 81
    expression                     shift and go to state 219
    repeat                         shift and go to state 108
    partselect                     shift and go to state 103
    identifier                     shift and go to state 104
    pointer                        shift and go to state 80
    functioncall                   shift and go to state 94
    scope                          shift and go to state 84
    systemcall                     shift and go to state 109
    const_expression               shift and go to state 110
    concat                         shift and go to state 88
    floatnumber                    shift and go to state 90

state 88

    (152) expression -> concat .

    POWER           reduce using rule 152 (expression -> concat .)
    TIMES           reduce using rule 152 (expression -> concat .)
    DIVIDE          reduce using rule 152 (expression -> concat .)
    MOD             reduce using rule 152 (expression -> concat .)
    PLUS            reduce using rule 152 (expression -> concat .)
    MINUS           reduce using rule 152 (expression -> concat .)
    LSHIFT          reduce using rule 152 (expression -> concat .)
    RSHIFT          reduce using rule 152 (expression -> concat .)
    LSHIFTA         reduce using rule 152 (expression -> concat .)
    RSHIFTA         reduce using rule 152 (expression -> concat .)
    LT              reduce using rule 152 (expression -> concat .)
    GT              reduce using rule 152 (expression -> concat .)
    LE              reduce using rule 152 (expression -> concat .)
    GE              reduce using rule 152 (expression -> concat .)
    EQ              reduce using rule 152 (expression -> concat .)
    NE              reduce using rule 152 (expression -> concat .)
    EQL             reduce using rule 152 (expression -> concat .)
    NEL             reduce using rule 152 (expression -> concat .)
    AND             reduce using rule 152 (expression -> concat .)
    XOR             reduce using rule 152 (expression -> concat .)
    XNOR            reduce using rule 152 (expression -> concat .)
    OR              reduce using rule 152 (expression -> concat .)
    LAND            reduce using rule 152 (expression -> concat .)
    LOR             reduce using rule 152 (expression -> concat .)
    COND            reduce using rule 152 (expression -> concat .)
    LBRACE          reduce using rule 152 (expression -> concat .)
    RBRACE          reduce using rule 152 (expression -> concat .)
    COMMA           reduce using rule 152 (expression -> concat .)
    RPAREN          reduce using rule 152 (expression -> concat .)
    COLON           reduce using rule 152 (expression -> concat .)
    SEMICOLON       reduce using rule 152 (expression -> concat .)
    PLUSCOLON       reduce using rule 152 (expression -> concat .)
    MINUSCOLON      reduce using rule 152 (expression -> concat .)
    RBRACKET        reduce using rule 152 (expression -> concat .)


state 89

    (117) expression -> PLUS . expression
    (116) expression -> . MINUS expression
    (117) expression -> . PLUS expression
    (118) expression -> . LNOT expression
    (119) expression -> . NOT expression
    (120) expression -> . AND expression
    (121) expression -> . NAND expression
    (122) expression -> . NOR expression
    (123) expression -> . OR expression
    (124) expression -> . XOR expression
    (125) expression -> . XNOR expression
    (126) expression -> . expression POWER expression
    (127) expression -> . expression TIMES expression
    (128) expression -> . expression DIVIDE expression
    (129) expression -> . expression MOD expression
    (130) expression -> . expression PLUS expression
    (131) expression -> . expression MINUS expression
    (132) expression -> . expression LSHIFT expression
    (133) expression -> . expression RSHIFT expression
    (134) expression -> . expression LSHIFTA expression
    (135) expression -> . expression RSHIFTA expression
    (136) expression -> . expression LT expression
    (137) expression -> . expression GT expression
    (138) expression -> . expression LE expression
    (139) expression -> . expression GE expression
    (140) expression -> . expression EQ expression
    (141) expression -> . expression NE expression
    (142) expression -> . expression EQL expression
    (143) expression -> . expression NEL expression
    (144) expression -> . expression AND expression
    (145) expression -> . expression XOR expression
    (146) expression -> . expression XNOR expression
    (147) expression -> . expression OR expression
    (148) expression -> . expression LAND expression
    (149) expression -> . expression LOR expression
    (150) expression -> . expression COND expression COLON expression
    (151) expression -> . LPAREN expression RPAREN
    (152) expression -> . concat
    (153) expression -> . repeat
    (154) expression -> . partselect
    (155) expression -> . pointer
    (156) expression -> . functioncall
    (157) expression -> . systemcall
    (158) expression -> . identifier
    (159) expression -> . const_expression
    (160) concat -> . LBRACE concatlist RBRACE
    (163) repeat -> . LBRACE expression concat RBRACE
    (164) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (165) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (166) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (167) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (168) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (169) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (170) pointer -> . identifier LBRACKET expression RBRACKET
    (171) pointer -> . pointer LBRACKET expression RBRACKET
    (339) functioncall -> . identifier LPAREN func_args RPAREN
    (319) systemcall -> . DOLLER ID
    (320) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (357) identifier -> . ID
    (358) identifier -> . scope ID
    (172) const_expression -> . intnumber
    (173) const_expression -> . floatnumber
    (174) const_expression -> . stringliteral
    (359) scope -> . identifier DOT
    (360) scope -> . pointer DOT
    (176) intnumber -> . INTNUMBER_DEC
    (177) intnumber -> . SIGNED_INTNUMBER_DEC
    (178) intnumber -> . INTNUMBER_BIN
    (179) intnumber -> . SIGNED_INTNUMBER_BIN
    (180) intnumber -> . INTNUMBER_OCT
    (181) intnumber -> . SIGNED_INTNUMBER_OCT
    (182) intnumber -> . INTNUMBER_HEX
    (183) intnumber -> . SIGNED_INTNUMBER_HEX
    (175) floatnumber -> . FLOATNUMBER
    (184) stringliteral -> . STRING_LITERAL

    MINUS           shift and go to state 97
    PLUS            shift and go to state 89
    LNOT            shift and go to state 95
    NOT             shift and go to state 78
    AND             shift and go to state 91
    NAND            shift and go to state 98
    NOR             shift and go to state 76
    OR              shift and go to state 105
    XOR             shift and go to state 82
    XNOR            shift and go to state 87
    LPAREN          shift and go to state 96
    LBRACE          shift and go to state 77
    DOLLER          shift and go to state 100
    ID              shift and go to state 85
    INTNUMBER_DEC   shift and go to state 79
    SIGNED_INTNUMBER_DEC shift and go to state 101
    INTNUMBER_BIN   shift and go to state 111
    SIGNED_INTNUMBER_BIN shift and go to state 112
    INTNUMBER_OCT   shift and go to state 86
    SIGNED_INTNUMBER_OCT shift and go to state 106
    INTNUMBER_HEX   shift and go to state 93
    SIGNED_INTNUMBER_HEX shift and go to state 83
    FLOATNUMBER     shift and go to state 102
    STRING_LITERAL  shift and go to state 107

    stringliteral                  shift and go to state 99
    intnumber                      shift and go to state 81
    expression                     shift and go to state 220
    repeat                         shift and go to state 108
    partselect                     shift and go to state 103
    identifier                     shift and go to state 104
    pointer                        shift and go to state 80
    functioncall                   shift and go to state 94
    scope                          shift and go to state 84
    systemcall                     shift and go to state 109
    const_expression               shift and go to state 110
    concat                         shift and go to state 88
    floatnumber                    shift and go to state 90

state 90

    (173) const_expression -> floatnumber .

    COLON           reduce using rule 173 (const_expression -> floatnumber .)
    POWER           reduce using rule 173 (const_expression -> floatnumber .)
    TIMES           reduce using rule 173 (const_expression -> floatnumber .)
    DIVIDE          reduce using rule 173 (const_expression -> floatnumber .)
    MOD             reduce using rule 173 (const_expression -> floatnumber .)
    PLUS            reduce using rule 173 (const_expression -> floatnumber .)
    MINUS           reduce using rule 173 (const_expression -> floatnumber .)
    LSHIFT          reduce using rule 173 (const_expression -> floatnumber .)
    RSHIFT          reduce using rule 173 (const_expression -> floatnumber .)
    LSHIFTA         reduce using rule 173 (const_expression -> floatnumber .)
    RSHIFTA         reduce using rule 173 (const_expression -> floatnumber .)
    LT              reduce using rule 173 (const_expression -> floatnumber .)
    GT              reduce using rule 173 (const_expression -> floatnumber .)
    LE              reduce using rule 173 (const_expression -> floatnumber .)
    GE              reduce using rule 173 (const_expression -> floatnumber .)
    EQ              reduce using rule 173 (const_expression -> floatnumber .)
    NE              reduce using rule 173 (const_expression -> floatnumber .)
    EQL             reduce using rule 173 (const_expression -> floatnumber .)
    NEL             reduce using rule 173 (const_expression -> floatnumber .)
    AND             reduce using rule 173 (const_expression -> floatnumber .)
    XOR             reduce using rule 173 (const_expression -> floatnumber .)
    XNOR            reduce using rule 173 (const_expression -> floatnumber .)
    OR              reduce using rule 173 (const_expression -> floatnumber .)
    LAND            reduce using rule 173 (const_expression -> floatnumber .)
    LOR             reduce using rule 173 (const_expression -> floatnumber .)
    COND            reduce using rule 173 (const_expression -> floatnumber .)
    LBRACE          reduce using rule 173 (const_expression -> floatnumber .)
    RBRACE          reduce using rule 173 (const_expression -> floatnumber .)
    COMMA           reduce using rule 173 (const_expression -> floatnumber .)
    RPAREN          reduce using rule 173 (const_expression -> floatnumber .)
    SEMICOLON       reduce using rule 173 (const_expression -> floatnumber .)
    PLUSCOLON       reduce using rule 173 (const_expression -> floatnumber .)
    MINUSCOLON      reduce using rule 173 (const_expression -> floatnumber .)
    RBRACKET        reduce using rule 173 (const_expression -> floatnumber .)


state 91

    (120) expression -> AND . expression
    (116) expression -> . MINUS expression
    (117) expression -> . PLUS expression
    (118) expression -> . LNOT expression
    (119) expression -> . NOT expression
    (120) expression -> . AND expression
    (121) expression -> . NAND expression
    (122) expression -> . NOR expression
    (123) expression -> . OR expression
    (124) expression -> . XOR expression
    (125) expression -> . XNOR expression
    (126) expression -> . expression POWER expression
    (127) expression -> . expression TIMES expression
    (128) expression -> . expression DIVIDE expression
    (129) expression -> . expression MOD expression
    (130) expression -> . expression PLUS expression
    (131) expression -> . expression MINUS expression
    (132) expression -> . expression LSHIFT expression
    (133) expression -> . expression RSHIFT expression
    (134) expression -> . expression LSHIFTA expression
    (135) expression -> . expression RSHIFTA expression
    (136) expression -> . expression LT expression
    (137) expression -> . expression GT expression
    (138) expression -> . expression LE expression
    (139) expression -> . expression GE expression
    (140) expression -> . expression EQ expression
    (141) expression -> . expression NE expression
    (142) expression -> . expression EQL expression
    (143) expression -> . expression NEL expression
    (144) expression -> . expression AND expression
    (145) expression -> . expression XOR expression
    (146) expression -> . expression XNOR expression
    (147) expression -> . expression OR expression
    (148) expression -> . expression LAND expression
    (149) expression -> . expression LOR expression
    (150) expression -> . expression COND expression COLON expression
    (151) expression -> . LPAREN expression RPAREN
    (152) expression -> . concat
    (153) expression -> . repeat
    (154) expression -> . partselect
    (155) expression -> . pointer
    (156) expression -> . functioncall
    (157) expression -> . systemcall
    (158) expression -> . identifier
    (159) expression -> . const_expression
    (160) concat -> . LBRACE concatlist RBRACE
    (163) repeat -> . LBRACE expression concat RBRACE
    (164) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (165) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (166) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (167) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (168) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (169) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (170) pointer -> . identifier LBRACKET expression RBRACKET
    (171) pointer -> . pointer LBRACKET expression RBRACKET
    (339) functioncall -> . identifier LPAREN func_args RPAREN
    (319) systemcall -> . DOLLER ID
    (320) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (357) identifier -> . ID
    (358) identifier -> . scope ID
    (172) const_expression -> . intnumber
    (173) const_expression -> . floatnumber
    (174) const_expression -> . stringliteral
    (359) scope -> . identifier DOT
    (360) scope -> . pointer DOT
    (176) intnumber -> . INTNUMBER_DEC
    (177) intnumber -> . SIGNED_INTNUMBER_DEC
    (178) intnumber -> . INTNUMBER_BIN
    (179) intnumber -> . SIGNED_INTNUMBER_BIN
    (180) intnumber -> . INTNUMBER_OCT
    (181) intnumber -> . SIGNED_INTNUMBER_OCT
    (182) intnumber -> . INTNUMBER_HEX
    (183) intnumber -> . SIGNED_INTNUMBER_HEX
    (175) floatnumber -> . FLOATNUMBER
    (184) stringliteral -> . STRING_LITERAL

    MINUS           shift and go to state 97
    PLUS            shift and go to state 89
    LNOT            shift and go to state 95
    NOT             shift and go to state 78
    AND             shift and go to state 91
    NAND            shift and go to state 98
    NOR             shift and go to state 76
    OR              shift and go to state 105
    XOR             shift and go to state 82
    XNOR            shift and go to state 87
    LPAREN          shift and go to state 96
    LBRACE          shift and go to state 77
    DOLLER          shift and go to state 100
    ID              shift and go to state 85
    INTNUMBER_DEC   shift and go to state 79
    SIGNED_INTNUMBER_DEC shift and go to state 101
    INTNUMBER_BIN   shift and go to state 111
    SIGNED_INTNUMBER_BIN shift and go to state 112
    INTNUMBER_OCT   shift and go to state 86
    SIGNED_INTNUMBER_OCT shift and go to state 106
    INTNUMBER_HEX   shift and go to state 93
    SIGNED_INTNUMBER_HEX shift and go to state 83
    FLOATNUMBER     shift and go to state 102
    STRING_LITERAL  shift and go to state 107

    stringliteral                  shift and go to state 99
    intnumber                      shift and go to state 81
    expression                     shift and go to state 221
    repeat                         shift and go to state 108
    partselect                     shift and go to state 103
    identifier                     shift and go to state 104
    pointer                        shift and go to state 80
    functioncall                   shift and go to state 94
    scope                          shift and go to state 84
    systemcall                     shift and go to state 109
    const_expression               shift and go to state 110
    concat                         shift and go to state 88
    floatnumber                    shift and go to state 90

state 92

    (7) pragma -> LPAREN TIMES ID EQUALS expression . TIMES RPAREN
    (126) expression -> expression . POWER expression
    (127) expression -> expression . TIMES expression
    (128) expression -> expression . DIVIDE expression
    (129) expression -> expression . MOD expression
    (130) expression -> expression . PLUS expression
    (131) expression -> expression . MINUS expression
    (132) expression -> expression . LSHIFT expression
    (133) expression -> expression . RSHIFT expression
    (134) expression -> expression . LSHIFTA expression
    (135) expression -> expression . RSHIFTA expression
    (136) expression -> expression . LT expression
    (137) expression -> expression . GT expression
    (138) expression -> expression . LE expression
    (139) expression -> expression . GE expression
    (140) expression -> expression . EQ expression
    (141) expression -> expression . NE expression
    (142) expression -> expression . EQL expression
    (143) expression -> expression . NEL expression
    (144) expression -> expression . AND expression
    (145) expression -> expression . XOR expression
    (146) expression -> expression . XNOR expression
    (147) expression -> expression . OR expression
    (148) expression -> expression . LAND expression
    (149) expression -> expression . LOR expression
    (150) expression -> expression . COND expression COLON expression

    TIMES           shift and go to state 236
    POWER           shift and go to state 246
    DIVIDE          shift and go to state 244
    MOD             shift and go to state 231
    PLUS            shift and go to state 240
    MINUS           shift and go to state 229
    LSHIFT          shift and go to state 243
    RSHIFT          shift and go to state 226
    LSHIFTA         shift and go to state 241
    RSHIFTA         shift and go to state 238
    LT              shift and go to state 235
    GT              shift and go to state 228
    LE              shift and go to state 222
    GE              shift and go to state 239
    EQ              shift and go to state 223
    NE              shift and go to state 225
    EQL             shift and go to state 245
    NEL             shift and go to state 242
    AND             shift and go to state 224
    XOR             shift and go to state 237
    XNOR            shift and go to state 232
    OR              shift and go to state 234
    LAND            shift and go to state 227
    LOR             shift and go to state 230
    COND            shift and go to state 233


state 93

    (182) intnumber -> INTNUMBER_HEX .

    POWER           reduce using rule 182 (intnumber -> INTNUMBER_HEX .)
    TIMES           reduce using rule 182 (intnumber -> INTNUMBER_HEX .)
    DIVIDE          reduce using rule 182 (intnumber -> INTNUMBER_HEX .)
    MOD             reduce using rule 182 (intnumber -> INTNUMBER_HEX .)
    PLUS            reduce using rule 182 (intnumber -> INTNUMBER_HEX .)
    MINUS           reduce using rule 182 (intnumber -> INTNUMBER_HEX .)
    LSHIFT          reduce using rule 182 (intnumber -> INTNUMBER_HEX .)
    RSHIFT          reduce using rule 182 (intnumber -> INTNUMBER_HEX .)
    LSHIFTA         reduce using rule 182 (intnumber -> INTNUMBER_HEX .)
    RSHIFTA         reduce using rule 182 (intnumber -> INTNUMBER_HEX .)
    LT              reduce using rule 182 (intnumber -> INTNUMBER_HEX .)
    GT              reduce using rule 182 (intnumber -> INTNUMBER_HEX .)
    LE              reduce using rule 182 (intnumber -> INTNUMBER_HEX .)
    GE              reduce using rule 182 (intnumber -> INTNUMBER_HEX .)
    EQ              reduce using rule 182 (intnumber -> INTNUMBER_HEX .)
    NE              reduce using rule 182 (intnumber -> INTNUMBER_HEX .)
    EQL             reduce using rule 182 (intnumber -> INTNUMBER_HEX .)
    NEL             reduce using rule 182 (intnumber -> INTNUMBER_HEX .)
    AND             reduce using rule 182 (intnumber -> INTNUMBER_HEX .)
    XOR             reduce using rule 182 (intnumber -> INTNUMBER_HEX .)
    XNOR            reduce using rule 182 (intnumber -> INTNUMBER_HEX .)
    OR              reduce using rule 182 (intnumber -> INTNUMBER_HEX .)
    LAND            reduce using rule 182 (intnumber -> INTNUMBER_HEX .)
    LOR             reduce using rule 182 (intnumber -> INTNUMBER_HEX .)
    COND            reduce using rule 182 (intnumber -> INTNUMBER_HEX .)
    SEMICOLON       reduce using rule 182 (intnumber -> INTNUMBER_HEX .)
    COLON           reduce using rule 182 (intnumber -> INTNUMBER_HEX .)
    COMMA           reduce using rule 182 (intnumber -> INTNUMBER_HEX .)
    RBRACKET        reduce using rule 182 (intnumber -> INTNUMBER_HEX .)
    LBRACE          reduce using rule 182 (intnumber -> INTNUMBER_HEX .)
    RBRACE          reduce using rule 182 (intnumber -> INTNUMBER_HEX .)
    RPAREN          reduce using rule 182 (intnumber -> INTNUMBER_HEX .)
    PLUSCOLON       reduce using rule 182 (intnumber -> INTNUMBER_HEX .)
    MINUSCOLON      reduce using rule 182 (intnumber -> INTNUMBER_HEX .)
    ID              reduce using rule 182 (intnumber -> INTNUMBER_HEX .)
    IF              reduce using rule 182 (intnumber -> INTNUMBER_HEX .)
    LNOT            reduce using rule 182 (intnumber -> INTNUMBER_HEX .)
    NOT             reduce using rule 182 (intnumber -> INTNUMBER_HEX .)
    NAND            reduce using rule 182 (intnumber -> INTNUMBER_HEX .)
    NOR             reduce using rule 182 (intnumber -> INTNUMBER_HEX .)
    LPAREN          reduce using rule 182 (intnumber -> INTNUMBER_HEX .)
    DOLLER          reduce using rule 182 (intnumber -> INTNUMBER_HEX .)
    INTNUMBER_DEC   reduce using rule 182 (intnumber -> INTNUMBER_HEX .)
    SIGNED_INTNUMBER_DEC reduce using rule 182 (intnumber -> INTNUMBER_HEX .)
    INTNUMBER_BIN   reduce using rule 182 (intnumber -> INTNUMBER_HEX .)
    SIGNED_INTNUMBER_BIN reduce using rule 182 (intnumber -> INTNUMBER_HEX .)
    INTNUMBER_OCT   reduce using rule 182 (intnumber -> INTNUMBER_HEX .)
    SIGNED_INTNUMBER_OCT reduce using rule 182 (intnumber -> INTNUMBER_HEX .)
    INTNUMBER_HEX   reduce using rule 182 (intnumber -> INTNUMBER_HEX .)
    SIGNED_INTNUMBER_HEX reduce using rule 182 (intnumber -> INTNUMBER_HEX .)
    FLOATNUMBER     reduce using rule 182 (intnumber -> INTNUMBER_HEX .)
    STRING_LITERAL  reduce using rule 182 (intnumber -> INTNUMBER_HEX .)


state 94

    (156) expression -> functioncall .

    POWER           reduce using rule 156 (expression -> functioncall .)
    TIMES           reduce using rule 156 (expression -> functioncall .)
    DIVIDE          reduce using rule 156 (expression -> functioncall .)
    MOD             reduce using rule 156 (expression -> functioncall .)
    PLUS            reduce using rule 156 (expression -> functioncall .)
    MINUS           reduce using rule 156 (expression -> functioncall .)
    LSHIFT          reduce using rule 156 (expression -> functioncall .)
    RSHIFT          reduce using rule 156 (expression -> functioncall .)
    LSHIFTA         reduce using rule 156 (expression -> functioncall .)
    RSHIFTA         reduce using rule 156 (expression -> functioncall .)
    LT              reduce using rule 156 (expression -> functioncall .)
    GT              reduce using rule 156 (expression -> functioncall .)
    LE              reduce using rule 156 (expression -> functioncall .)
    GE              reduce using rule 156 (expression -> functioncall .)
    EQ              reduce using rule 156 (expression -> functioncall .)
    NE              reduce using rule 156 (expression -> functioncall .)
    EQL             reduce using rule 156 (expression -> functioncall .)
    NEL             reduce using rule 156 (expression -> functioncall .)
    AND             reduce using rule 156 (expression -> functioncall .)
    XOR             reduce using rule 156 (expression -> functioncall .)
    XNOR            reduce using rule 156 (expression -> functioncall .)
    OR              reduce using rule 156 (expression -> functioncall .)
    LAND            reduce using rule 156 (expression -> functioncall .)
    LOR             reduce using rule 156 (expression -> functioncall .)
    COND            reduce using rule 156 (expression -> functioncall .)
    LBRACE          reduce using rule 156 (expression -> functioncall .)
    RBRACE          reduce using rule 156 (expression -> functioncall .)
    COMMA           reduce using rule 156 (expression -> functioncall .)
    RPAREN          reduce using rule 156 (expression -> functioncall .)
    COLON           reduce using rule 156 (expression -> functioncall .)
    SEMICOLON       reduce using rule 156 (expression -> functioncall .)
    PLUSCOLON       reduce using rule 156 (expression -> functioncall .)
    MINUSCOLON      reduce using rule 156 (expression -> functioncall .)
    RBRACKET        reduce using rule 156 (expression -> functioncall .)


state 95

    (118) expression -> LNOT . expression
    (116) expression -> . MINUS expression
    (117) expression -> . PLUS expression
    (118) expression -> . LNOT expression
    (119) expression -> . NOT expression
    (120) expression -> . AND expression
    (121) expression -> . NAND expression
    (122) expression -> . NOR expression
    (123) expression -> . OR expression
    (124) expression -> . XOR expression
    (125) expression -> . XNOR expression
    (126) expression -> . expression POWER expression
    (127) expression -> . expression TIMES expression
    (128) expression -> . expression DIVIDE expression
    (129) expression -> . expression MOD expression
    (130) expression -> . expression PLUS expression
    (131) expression -> . expression MINUS expression
    (132) expression -> . expression LSHIFT expression
    (133) expression -> . expression RSHIFT expression
    (134) expression -> . expression LSHIFTA expression
    (135) expression -> . expression RSHIFTA expression
    (136) expression -> . expression LT expression
    (137) expression -> . expression GT expression
    (138) expression -> . expression LE expression
    (139) expression -> . expression GE expression
    (140) expression -> . expression EQ expression
    (141) expression -> . expression NE expression
    (142) expression -> . expression EQL expression
    (143) expression -> . expression NEL expression
    (144) expression -> . expression AND expression
    (145) expression -> . expression XOR expression
    (146) expression -> . expression XNOR expression
    (147) expression -> . expression OR expression
    (148) expression -> . expression LAND expression
    (149) expression -> . expression LOR expression
    (150) expression -> . expression COND expression COLON expression
    (151) expression -> . LPAREN expression RPAREN
    (152) expression -> . concat
    (153) expression -> . repeat
    (154) expression -> . partselect
    (155) expression -> . pointer
    (156) expression -> . functioncall
    (157) expression -> . systemcall
    (158) expression -> . identifier
    (159) expression -> . const_expression
    (160) concat -> . LBRACE concatlist RBRACE
    (163) repeat -> . LBRACE expression concat RBRACE
    (164) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (165) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (166) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (167) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (168) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (169) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (170) pointer -> . identifier LBRACKET expression RBRACKET
    (171) pointer -> . pointer LBRACKET expression RBRACKET
    (339) functioncall -> . identifier LPAREN func_args RPAREN
    (319) systemcall -> . DOLLER ID
    (320) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (357) identifier -> . ID
    (358) identifier -> . scope ID
    (172) const_expression -> . intnumber
    (173) const_expression -> . floatnumber
    (174) const_expression -> . stringliteral
    (359) scope -> . identifier DOT
    (360) scope -> . pointer DOT
    (176) intnumber -> . INTNUMBER_DEC
    (177) intnumber -> . SIGNED_INTNUMBER_DEC
    (178) intnumber -> . INTNUMBER_BIN
    (179) intnumber -> . SIGNED_INTNUMBER_BIN
    (180) intnumber -> . INTNUMBER_OCT
    (181) intnumber -> . SIGNED_INTNUMBER_OCT
    (182) intnumber -> . INTNUMBER_HEX
    (183) intnumber -> . SIGNED_INTNUMBER_HEX
    (175) floatnumber -> . FLOATNUMBER
    (184) stringliteral -> . STRING_LITERAL

    MINUS           shift and go to state 97
    PLUS            shift and go to state 89
    LNOT            shift and go to state 95
    NOT             shift and go to state 78
    AND             shift and go to state 91
    NAND            shift and go to state 98
    NOR             shift and go to state 76
    OR              shift and go to state 105
    XOR             shift and go to state 82
    XNOR            shift and go to state 87
    LPAREN          shift and go to state 96
    LBRACE          shift and go to state 77
    DOLLER          shift and go to state 100
    ID              shift and go to state 85
    INTNUMBER_DEC   shift and go to state 79
    SIGNED_INTNUMBER_DEC shift and go to state 101
    INTNUMBER_BIN   shift and go to state 111
    SIGNED_INTNUMBER_BIN shift and go to state 112
    INTNUMBER_OCT   shift and go to state 86
    SIGNED_INTNUMBER_OCT shift and go to state 106
    INTNUMBER_HEX   shift and go to state 93
    SIGNED_INTNUMBER_HEX shift and go to state 83
    FLOATNUMBER     shift and go to state 102
    STRING_LITERAL  shift and go to state 107

    stringliteral                  shift and go to state 99
    intnumber                      shift and go to state 81
    expression                     shift and go to state 247
    repeat                         shift and go to state 108
    partselect                     shift and go to state 103
    identifier                     shift and go to state 104
    pointer                        shift and go to state 80
    functioncall                   shift and go to state 94
    scope                          shift and go to state 84
    systemcall                     shift and go to state 109
    const_expression               shift and go to state 110
    concat                         shift and go to state 88
    floatnumber                    shift and go to state 90

state 96

    (151) expression -> LPAREN . expression RPAREN
    (116) expression -> . MINUS expression
    (117) expression -> . PLUS expression
    (118) expression -> . LNOT expression
    (119) expression -> . NOT expression
    (120) expression -> . AND expression
    (121) expression -> . NAND expression
    (122) expression -> . NOR expression
    (123) expression -> . OR expression
    (124) expression -> . XOR expression
    (125) expression -> . XNOR expression
    (126) expression -> . expression POWER expression
    (127) expression -> . expression TIMES expression
    (128) expression -> . expression DIVIDE expression
    (129) expression -> . expression MOD expression
    (130) expression -> . expression PLUS expression
    (131) expression -> . expression MINUS expression
    (132) expression -> . expression LSHIFT expression
    (133) expression -> . expression RSHIFT expression
    (134) expression -> . expression LSHIFTA expression
    (135) expression -> . expression RSHIFTA expression
    (136) expression -> . expression LT expression
    (137) expression -> . expression GT expression
    (138) expression -> . expression LE expression
    (139) expression -> . expression GE expression
    (140) expression -> . expression EQ expression
    (141) expression -> . expression NE expression
    (142) expression -> . expression EQL expression
    (143) expression -> . expression NEL expression
    (144) expression -> . expression AND expression
    (145) expression -> . expression XOR expression
    (146) expression -> . expression XNOR expression
    (147) expression -> . expression OR expression
    (148) expression -> . expression LAND expression
    (149) expression -> . expression LOR expression
    (150) expression -> . expression COND expression COLON expression
    (151) expression -> . LPAREN expression RPAREN
    (152) expression -> . concat
    (153) expression -> . repeat
    (154) expression -> . partselect
    (155) expression -> . pointer
    (156) expression -> . functioncall
    (157) expression -> . systemcall
    (158) expression -> . identifier
    (159) expression -> . const_expression
    (160) concat -> . LBRACE concatlist RBRACE
    (163) repeat -> . LBRACE expression concat RBRACE
    (164) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (165) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (166) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (167) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (168) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (169) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (170) pointer -> . identifier LBRACKET expression RBRACKET
    (171) pointer -> . pointer LBRACKET expression RBRACKET
    (339) functioncall -> . identifier LPAREN func_args RPAREN
    (319) systemcall -> . DOLLER ID
    (320) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (357) identifier -> . ID
    (358) identifier -> . scope ID
    (172) const_expression -> . intnumber
    (173) const_expression -> . floatnumber
    (174) const_expression -> . stringliteral
    (359) scope -> . identifier DOT
    (360) scope -> . pointer DOT
    (176) intnumber -> . INTNUMBER_DEC
    (177) intnumber -> . SIGNED_INTNUMBER_DEC
    (178) intnumber -> . INTNUMBER_BIN
    (179) intnumber -> . SIGNED_INTNUMBER_BIN
    (180) intnumber -> . INTNUMBER_OCT
    (181) intnumber -> . SIGNED_INTNUMBER_OCT
    (182) intnumber -> . INTNUMBER_HEX
    (183) intnumber -> . SIGNED_INTNUMBER_HEX
    (175) floatnumber -> . FLOATNUMBER
    (184) stringliteral -> . STRING_LITERAL

    MINUS           shift and go to state 97
    PLUS            shift and go to state 89
    LNOT            shift and go to state 95
    NOT             shift and go to state 78
    AND             shift and go to state 91
    NAND            shift and go to state 98
    NOR             shift and go to state 76
    OR              shift and go to state 105
    XOR             shift and go to state 82
    XNOR            shift and go to state 87
    LPAREN          shift and go to state 96
    LBRACE          shift and go to state 77
    DOLLER          shift and go to state 100
    ID              shift and go to state 85
    INTNUMBER_DEC   shift and go to state 79
    SIGNED_INTNUMBER_DEC shift and go to state 101
    INTNUMBER_BIN   shift and go to state 111
    SIGNED_INTNUMBER_BIN shift and go to state 112
    INTNUMBER_OCT   shift and go to state 86
    SIGNED_INTNUMBER_OCT shift and go to state 106
    INTNUMBER_HEX   shift and go to state 93
    SIGNED_INTNUMBER_HEX shift and go to state 83
    FLOATNUMBER     shift and go to state 102
    STRING_LITERAL  shift and go to state 107

    stringliteral                  shift and go to state 99
    intnumber                      shift and go to state 81
    expression                     shift and go to state 248
    repeat                         shift and go to state 108
    partselect                     shift and go to state 103
    identifier                     shift and go to state 104
    pointer                        shift and go to state 80
    functioncall                   shift and go to state 94
    scope                          shift and go to state 84
    systemcall                     shift and go to state 109
    const_expression               shift and go to state 110
    concat                         shift and go to state 88
    floatnumber                    shift and go to state 90

state 97

    (116) expression -> MINUS . expression
    (116) expression -> . MINUS expression
    (117) expression -> . PLUS expression
    (118) expression -> . LNOT expression
    (119) expression -> . NOT expression
    (120) expression -> . AND expression
    (121) expression -> . NAND expression
    (122) expression -> . NOR expression
    (123) expression -> . OR expression
    (124) expression -> . XOR expression
    (125) expression -> . XNOR expression
    (126) expression -> . expression POWER expression
    (127) expression -> . expression TIMES expression
    (128) expression -> . expression DIVIDE expression
    (129) expression -> . expression MOD expression
    (130) expression -> . expression PLUS expression
    (131) expression -> . expression MINUS expression
    (132) expression -> . expression LSHIFT expression
    (133) expression -> . expression RSHIFT expression
    (134) expression -> . expression LSHIFTA expression
    (135) expression -> . expression RSHIFTA expression
    (136) expression -> . expression LT expression
    (137) expression -> . expression GT expression
    (138) expression -> . expression LE expression
    (139) expression -> . expression GE expression
    (140) expression -> . expression EQ expression
    (141) expression -> . expression NE expression
    (142) expression -> . expression EQL expression
    (143) expression -> . expression NEL expression
    (144) expression -> . expression AND expression
    (145) expression -> . expression XOR expression
    (146) expression -> . expression XNOR expression
    (147) expression -> . expression OR expression
    (148) expression -> . expression LAND expression
    (149) expression -> . expression LOR expression
    (150) expression -> . expression COND expression COLON expression
    (151) expression -> . LPAREN expression RPAREN
    (152) expression -> . concat
    (153) expression -> . repeat
    (154) expression -> . partselect
    (155) expression -> . pointer
    (156) expression -> . functioncall
    (157) expression -> . systemcall
    (158) expression -> . identifier
    (159) expression -> . const_expression
    (160) concat -> . LBRACE concatlist RBRACE
    (163) repeat -> . LBRACE expression concat RBRACE
    (164) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (165) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (166) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (167) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (168) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (169) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (170) pointer -> . identifier LBRACKET expression RBRACKET
    (171) pointer -> . pointer LBRACKET expression RBRACKET
    (339) functioncall -> . identifier LPAREN func_args RPAREN
    (319) systemcall -> . DOLLER ID
    (320) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (357) identifier -> . ID
    (358) identifier -> . scope ID
    (172) const_expression -> . intnumber
    (173) const_expression -> . floatnumber
    (174) const_expression -> . stringliteral
    (359) scope -> . identifier DOT
    (360) scope -> . pointer DOT
    (176) intnumber -> . INTNUMBER_DEC
    (177) intnumber -> . SIGNED_INTNUMBER_DEC
    (178) intnumber -> . INTNUMBER_BIN
    (179) intnumber -> . SIGNED_INTNUMBER_BIN
    (180) intnumber -> . INTNUMBER_OCT
    (181) intnumber -> . SIGNED_INTNUMBER_OCT
    (182) intnumber -> . INTNUMBER_HEX
    (183) intnumber -> . SIGNED_INTNUMBER_HEX
    (175) floatnumber -> . FLOATNUMBER
    (184) stringliteral -> . STRING_LITERAL

    MINUS           shift and go to state 97
    PLUS            shift and go to state 89
    LNOT            shift and go to state 95
    NOT             shift and go to state 78
    AND             shift and go to state 91
    NAND            shift and go to state 98
    NOR             shift and go to state 76
    OR              shift and go to state 105
    XOR             shift and go to state 82
    XNOR            shift and go to state 87
    LPAREN          shift and go to state 96
    LBRACE          shift and go to state 77
    DOLLER          shift and go to state 100
    ID              shift and go to state 85
    INTNUMBER_DEC   shift and go to state 79
    SIGNED_INTNUMBER_DEC shift and go to state 101
    INTNUMBER_BIN   shift and go to state 111
    SIGNED_INTNUMBER_BIN shift and go to state 112
    INTNUMBER_OCT   shift and go to state 86
    SIGNED_INTNUMBER_OCT shift and go to state 106
    INTNUMBER_HEX   shift and go to state 93
    SIGNED_INTNUMBER_HEX shift and go to state 83
    FLOATNUMBER     shift and go to state 102
    STRING_LITERAL  shift and go to state 107

    stringliteral                  shift and go to state 99
    intnumber                      shift and go to state 81
    expression                     shift and go to state 249
    repeat                         shift and go to state 108
    partselect                     shift and go to state 103
    identifier                     shift and go to state 104
    pointer                        shift and go to state 80
    functioncall                   shift and go to state 94
    scope                          shift and go to state 84
    systemcall                     shift and go to state 109
    const_expression               shift and go to state 110
    concat                         shift and go to state 88
    floatnumber                    shift and go to state 90

state 98

    (121) expression -> NAND . expression
    (116) expression -> . MINUS expression
    (117) expression -> . PLUS expression
    (118) expression -> . LNOT expression
    (119) expression -> . NOT expression
    (120) expression -> . AND expression
    (121) expression -> . NAND expression
    (122) expression -> . NOR expression
    (123) expression -> . OR expression
    (124) expression -> . XOR expression
    (125) expression -> . XNOR expression
    (126) expression -> . expression POWER expression
    (127) expression -> . expression TIMES expression
    (128) expression -> . expression DIVIDE expression
    (129) expression -> . expression MOD expression
    (130) expression -> . expression PLUS expression
    (131) expression -> . expression MINUS expression
    (132) expression -> . expression LSHIFT expression
    (133) expression -> . expression RSHIFT expression
    (134) expression -> . expression LSHIFTA expression
    (135) expression -> . expression RSHIFTA expression
    (136) expression -> . expression LT expression
    (137) expression -> . expression GT expression
    (138) expression -> . expression LE expression
    (139) expression -> . expression GE expression
    (140) expression -> . expression EQ expression
    (141) expression -> . expression NE expression
    (142) expression -> . expression EQL expression
    (143) expression -> . expression NEL expression
    (144) expression -> . expression AND expression
    (145) expression -> . expression XOR expression
    (146) expression -> . expression XNOR expression
    (147) expression -> . expression OR expression
    (148) expression -> . expression LAND expression
    (149) expression -> . expression LOR expression
    (150) expression -> . expression COND expression COLON expression
    (151) expression -> . LPAREN expression RPAREN
    (152) expression -> . concat
    (153) expression -> . repeat
    (154) expression -> . partselect
    (155) expression -> . pointer
    (156) expression -> . functioncall
    (157) expression -> . systemcall
    (158) expression -> . identifier
    (159) expression -> . const_expression
    (160) concat -> . LBRACE concatlist RBRACE
    (163) repeat -> . LBRACE expression concat RBRACE
    (164) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (165) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (166) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (167) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (168) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (169) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (170) pointer -> . identifier LBRACKET expression RBRACKET
    (171) pointer -> . pointer LBRACKET expression RBRACKET
    (339) functioncall -> . identifier LPAREN func_args RPAREN
    (319) systemcall -> . DOLLER ID
    (320) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (357) identifier -> . ID
    (358) identifier -> . scope ID
    (172) const_expression -> . intnumber
    (173) const_expression -> . floatnumber
    (174) const_expression -> . stringliteral
    (359) scope -> . identifier DOT
    (360) scope -> . pointer DOT
    (176) intnumber -> . INTNUMBER_DEC
    (177) intnumber -> . SIGNED_INTNUMBER_DEC
    (178) intnumber -> . INTNUMBER_BIN
    (179) intnumber -> . SIGNED_INTNUMBER_BIN
    (180) intnumber -> . INTNUMBER_OCT
    (181) intnumber -> . SIGNED_INTNUMBER_OCT
    (182) intnumber -> . INTNUMBER_HEX
    (183) intnumber -> . SIGNED_INTNUMBER_HEX
    (175) floatnumber -> . FLOATNUMBER
    (184) stringliteral -> . STRING_LITERAL

    MINUS           shift and go to state 97
    PLUS            shift and go to state 89
    LNOT            shift and go to state 95
    NOT             shift and go to state 78
    AND             shift and go to state 91
    NAND            shift and go to state 98
    NOR             shift and go to state 76
    OR              shift and go to state 105
    XOR             shift and go to state 82
    XNOR            shift and go to state 87
    LPAREN          shift and go to state 96
    LBRACE          shift and go to state 77
    DOLLER          shift and go to state 100
    ID              shift and go to state 85
    INTNUMBER_DEC   shift and go to state 79
    SIGNED_INTNUMBER_DEC shift and go to state 101
    INTNUMBER_BIN   shift and go to state 111
    SIGNED_INTNUMBER_BIN shift and go to state 112
    INTNUMBER_OCT   shift and go to state 86
    SIGNED_INTNUMBER_OCT shift and go to state 106
    INTNUMBER_HEX   shift and go to state 93
    SIGNED_INTNUMBER_HEX shift and go to state 83
    FLOATNUMBER     shift and go to state 102
    STRING_LITERAL  shift and go to state 107

    stringliteral                  shift and go to state 99
    intnumber                      shift and go to state 81
    expression                     shift and go to state 250
    repeat                         shift and go to state 108
    partselect                     shift and go to state 103
    identifier                     shift and go to state 104
    pointer                        shift and go to state 80
    functioncall                   shift and go to state 94
    scope                          shift and go to state 84
    systemcall                     shift and go to state 109
    const_expression               shift and go to state 110
    concat                         shift and go to state 88
    floatnumber                    shift and go to state 90

state 99

    (174) const_expression -> stringliteral .

    COLON           reduce using rule 174 (const_expression -> stringliteral .)
    POWER           reduce using rule 174 (const_expression -> stringliteral .)
    TIMES           reduce using rule 174 (const_expression -> stringliteral .)
    DIVIDE          reduce using rule 174 (const_expression -> stringliteral .)
    MOD             reduce using rule 174 (const_expression -> stringliteral .)
    PLUS            reduce using rule 174 (const_expression -> stringliteral .)
    MINUS           reduce using rule 174 (const_expression -> stringliteral .)
    LSHIFT          reduce using rule 174 (const_expression -> stringliteral .)
    RSHIFT          reduce using rule 174 (const_expression -> stringliteral .)
    LSHIFTA         reduce using rule 174 (const_expression -> stringliteral .)
    RSHIFTA         reduce using rule 174 (const_expression -> stringliteral .)
    LT              reduce using rule 174 (const_expression -> stringliteral .)
    GT              reduce using rule 174 (const_expression -> stringliteral .)
    LE              reduce using rule 174 (const_expression -> stringliteral .)
    GE              reduce using rule 174 (const_expression -> stringliteral .)
    EQ              reduce using rule 174 (const_expression -> stringliteral .)
    NE              reduce using rule 174 (const_expression -> stringliteral .)
    EQL             reduce using rule 174 (const_expression -> stringliteral .)
    NEL             reduce using rule 174 (const_expression -> stringliteral .)
    AND             reduce using rule 174 (const_expression -> stringliteral .)
    XOR             reduce using rule 174 (const_expression -> stringliteral .)
    XNOR            reduce using rule 174 (const_expression -> stringliteral .)
    OR              reduce using rule 174 (const_expression -> stringliteral .)
    LAND            reduce using rule 174 (const_expression -> stringliteral .)
    LOR             reduce using rule 174 (const_expression -> stringliteral .)
    COND            reduce using rule 174 (const_expression -> stringliteral .)
    LBRACE          reduce using rule 174 (const_expression -> stringliteral .)
    RBRACE          reduce using rule 174 (const_expression -> stringliteral .)
    COMMA           reduce using rule 174 (const_expression -> stringliteral .)
    RPAREN          reduce using rule 174 (const_expression -> stringliteral .)
    SEMICOLON       reduce using rule 174 (const_expression -> stringliteral .)
    PLUSCOLON       reduce using rule 174 (const_expression -> stringliteral .)
    MINUSCOLON      reduce using rule 174 (const_expression -> stringliteral .)
    RBRACKET        reduce using rule 174 (const_expression -> stringliteral .)


state 100

    (319) systemcall -> DOLLER . ID
    (320) systemcall -> DOLLER . ID LPAREN sysargs RPAREN

    ID              shift and go to state 251


state 101

    (177) intnumber -> SIGNED_INTNUMBER_DEC .

    POWER           reduce using rule 177 (intnumber -> SIGNED_INTNUMBER_DEC .)
    TIMES           reduce using rule 177 (intnumber -> SIGNED_INTNUMBER_DEC .)
    DIVIDE          reduce using rule 177 (intnumber -> SIGNED_INTNUMBER_DEC .)
    MOD             reduce using rule 177 (intnumber -> SIGNED_INTNUMBER_DEC .)
    PLUS            reduce using rule 177 (intnumber -> SIGNED_INTNUMBER_DEC .)
    MINUS           reduce using rule 177 (intnumber -> SIGNED_INTNUMBER_DEC .)
    LSHIFT          reduce using rule 177 (intnumber -> SIGNED_INTNUMBER_DEC .)
    RSHIFT          reduce using rule 177 (intnumber -> SIGNED_INTNUMBER_DEC .)
    LSHIFTA         reduce using rule 177 (intnumber -> SIGNED_INTNUMBER_DEC .)
    RSHIFTA         reduce using rule 177 (intnumber -> SIGNED_INTNUMBER_DEC .)
    LT              reduce using rule 177 (intnumber -> SIGNED_INTNUMBER_DEC .)
    GT              reduce using rule 177 (intnumber -> SIGNED_INTNUMBER_DEC .)
    LE              reduce using rule 177 (intnumber -> SIGNED_INTNUMBER_DEC .)
    GE              reduce using rule 177 (intnumber -> SIGNED_INTNUMBER_DEC .)
    EQ              reduce using rule 177 (intnumber -> SIGNED_INTNUMBER_DEC .)
    NE              reduce using rule 177 (intnumber -> SIGNED_INTNUMBER_DEC .)
    EQL             reduce using rule 177 (intnumber -> SIGNED_INTNUMBER_DEC .)
    NEL             reduce using rule 177 (intnumber -> SIGNED_INTNUMBER_DEC .)
    AND             reduce using rule 177 (intnumber -> SIGNED_INTNUMBER_DEC .)
    XOR             reduce using rule 177 (intnumber -> SIGNED_INTNUMBER_DEC .)
    XNOR            reduce using rule 177 (intnumber -> SIGNED_INTNUMBER_DEC .)
    OR              reduce using rule 177 (intnumber -> SIGNED_INTNUMBER_DEC .)
    LAND            reduce using rule 177 (intnumber -> SIGNED_INTNUMBER_DEC .)
    LOR             reduce using rule 177 (intnumber -> SIGNED_INTNUMBER_DEC .)
    COND            reduce using rule 177 (intnumber -> SIGNED_INTNUMBER_DEC .)
    SEMICOLON       reduce using rule 177 (intnumber -> SIGNED_INTNUMBER_DEC .)
    COLON           reduce using rule 177 (intnumber -> SIGNED_INTNUMBER_DEC .)
    COMMA           reduce using rule 177 (intnumber -> SIGNED_INTNUMBER_DEC .)
    RBRACKET        reduce using rule 177 (intnumber -> SIGNED_INTNUMBER_DEC .)
    LBRACE          reduce using rule 177 (intnumber -> SIGNED_INTNUMBER_DEC .)
    RBRACE          reduce using rule 177 (intnumber -> SIGNED_INTNUMBER_DEC .)
    RPAREN          reduce using rule 177 (intnumber -> SIGNED_INTNUMBER_DEC .)
    PLUSCOLON       reduce using rule 177 (intnumber -> SIGNED_INTNUMBER_DEC .)
    MINUSCOLON      reduce using rule 177 (intnumber -> SIGNED_INTNUMBER_DEC .)
    ID              reduce using rule 177 (intnumber -> SIGNED_INTNUMBER_DEC .)
    IF              reduce using rule 177 (intnumber -> SIGNED_INTNUMBER_DEC .)
    LNOT            reduce using rule 177 (intnumber -> SIGNED_INTNUMBER_DEC .)
    NOT             reduce using rule 177 (intnumber -> SIGNED_INTNUMBER_DEC .)
    NAND            reduce using rule 177 (intnumber -> SIGNED_INTNUMBER_DEC .)
    NOR             reduce using rule 177 (intnumber -> SIGNED_INTNUMBER_DEC .)
    LPAREN          reduce using rule 177 (intnumber -> SIGNED_INTNUMBER_DEC .)
    DOLLER          reduce using rule 177 (intnumber -> SIGNED_INTNUMBER_DEC .)
    INTNUMBER_DEC   reduce using rule 177 (intnumber -> SIGNED_INTNUMBER_DEC .)
    SIGNED_INTNUMBER_DEC reduce using rule 177 (intnumber -> SIGNED_INTNUMBER_DEC .)
    INTNUMBER_BIN   reduce using rule 177 (intnumber -> SIGNED_INTNUMBER_DEC .)
    SIGNED_INTNUMBER_BIN reduce using rule 177 (intnumber -> SIGNED_INTNUMBER_DEC .)
    INTNUMBER_OCT   reduce using rule 177 (intnumber -> SIGNED_INTNUMBER_DEC .)
    SIGNED_INTNUMBER_OCT reduce using rule 177 (intnumber -> SIGNED_INTNUMBER_DEC .)
    INTNUMBER_HEX   reduce using rule 177 (intnumber -> SIGNED_INTNUMBER_DEC .)
    SIGNED_INTNUMBER_HEX reduce using rule 177 (intnumber -> SIGNED_INTNUMBER_DEC .)
    FLOATNUMBER     reduce using rule 177 (intnumber -> SIGNED_INTNUMBER_DEC .)
    STRING_LITERAL  reduce using rule 177 (intnumber -> SIGNED_INTNUMBER_DEC .)


state 102

    (175) floatnumber -> FLOATNUMBER .

    POWER           reduce using rule 175 (floatnumber -> FLOATNUMBER .)
    TIMES           reduce using rule 175 (floatnumber -> FLOATNUMBER .)
    DIVIDE          reduce using rule 175 (floatnumber -> FLOATNUMBER .)
    MOD             reduce using rule 175 (floatnumber -> FLOATNUMBER .)
    PLUS            reduce using rule 175 (floatnumber -> FLOATNUMBER .)
    MINUS           reduce using rule 175 (floatnumber -> FLOATNUMBER .)
    LSHIFT          reduce using rule 175 (floatnumber -> FLOATNUMBER .)
    RSHIFT          reduce using rule 175 (floatnumber -> FLOATNUMBER .)
    LSHIFTA         reduce using rule 175 (floatnumber -> FLOATNUMBER .)
    RSHIFTA         reduce using rule 175 (floatnumber -> FLOATNUMBER .)
    LT              reduce using rule 175 (floatnumber -> FLOATNUMBER .)
    GT              reduce using rule 175 (floatnumber -> FLOATNUMBER .)
    LE              reduce using rule 175 (floatnumber -> FLOATNUMBER .)
    GE              reduce using rule 175 (floatnumber -> FLOATNUMBER .)
    EQ              reduce using rule 175 (floatnumber -> FLOATNUMBER .)
    NE              reduce using rule 175 (floatnumber -> FLOATNUMBER .)
    EQL             reduce using rule 175 (floatnumber -> FLOATNUMBER .)
    NEL             reduce using rule 175 (floatnumber -> FLOATNUMBER .)
    AND             reduce using rule 175 (floatnumber -> FLOATNUMBER .)
    XOR             reduce using rule 175 (floatnumber -> FLOATNUMBER .)
    XNOR            reduce using rule 175 (floatnumber -> FLOATNUMBER .)
    OR              reduce using rule 175 (floatnumber -> FLOATNUMBER .)
    LAND            reduce using rule 175 (floatnumber -> FLOATNUMBER .)
    LOR             reduce using rule 175 (floatnumber -> FLOATNUMBER .)
    COND            reduce using rule 175 (floatnumber -> FLOATNUMBER .)
    SEMICOLON       reduce using rule 175 (floatnumber -> FLOATNUMBER .)
    LBRACE          reduce using rule 175 (floatnumber -> FLOATNUMBER .)
    RBRACE          reduce using rule 175 (floatnumber -> FLOATNUMBER .)
    COMMA           reduce using rule 175 (floatnumber -> FLOATNUMBER .)
    RPAREN          reduce using rule 175 (floatnumber -> FLOATNUMBER .)
    COLON           reduce using rule 175 (floatnumber -> FLOATNUMBER .)
    PLUSCOLON       reduce using rule 175 (floatnumber -> FLOATNUMBER .)
    MINUSCOLON      reduce using rule 175 (floatnumber -> FLOATNUMBER .)
    RBRACKET        reduce using rule 175 (floatnumber -> FLOATNUMBER .)
    ID              reduce using rule 175 (floatnumber -> FLOATNUMBER .)
    IF              reduce using rule 175 (floatnumber -> FLOATNUMBER .)
    LNOT            reduce using rule 175 (floatnumber -> FLOATNUMBER .)
    NOT             reduce using rule 175 (floatnumber -> FLOATNUMBER .)
    NAND            reduce using rule 175 (floatnumber -> FLOATNUMBER .)
    NOR             reduce using rule 175 (floatnumber -> FLOATNUMBER .)
    LPAREN          reduce using rule 175 (floatnumber -> FLOATNUMBER .)
    DOLLER          reduce using rule 175 (floatnumber -> FLOATNUMBER .)
    INTNUMBER_DEC   reduce using rule 175 (floatnumber -> FLOATNUMBER .)
    SIGNED_INTNUMBER_DEC reduce using rule 175 (floatnumber -> FLOATNUMBER .)
    INTNUMBER_BIN   reduce using rule 175 (floatnumber -> FLOATNUMBER .)
    SIGNED_INTNUMBER_BIN reduce using rule 175 (floatnumber -> FLOATNUMBER .)
    INTNUMBER_OCT   reduce using rule 175 (floatnumber -> FLOATNUMBER .)
    SIGNED_INTNUMBER_OCT reduce using rule 175 (floatnumber -> FLOATNUMBER .)
    INTNUMBER_HEX   reduce using rule 175 (floatnumber -> FLOATNUMBER .)
    SIGNED_INTNUMBER_HEX reduce using rule 175 (floatnumber -> FLOATNUMBER .)
    FLOATNUMBER     reduce using rule 175 (floatnumber -> FLOATNUMBER .)
    STRING_LITERAL  reduce using rule 175 (floatnumber -> FLOATNUMBER .)


state 103

    (154) expression -> partselect .

    POWER           reduce using rule 154 (expression -> partselect .)
    TIMES           reduce using rule 154 (expression -> partselect .)
    DIVIDE          reduce using rule 154 (expression -> partselect .)
    MOD             reduce using rule 154 (expression -> partselect .)
    PLUS            reduce using rule 154 (expression -> partselect .)
    MINUS           reduce using rule 154 (expression -> partselect .)
    LSHIFT          reduce using rule 154 (expression -> partselect .)
    RSHIFT          reduce using rule 154 (expression -> partselect .)
    LSHIFTA         reduce using rule 154 (expression -> partselect .)
    RSHIFTA         reduce using rule 154 (expression -> partselect .)
    LT              reduce using rule 154 (expression -> partselect .)
    GT              reduce using rule 154 (expression -> partselect .)
    LE              reduce using rule 154 (expression -> partselect .)
    GE              reduce using rule 154 (expression -> partselect .)
    EQ              reduce using rule 154 (expression -> partselect .)
    NE              reduce using rule 154 (expression -> partselect .)
    EQL             reduce using rule 154 (expression -> partselect .)
    NEL             reduce using rule 154 (expression -> partselect .)
    AND             reduce using rule 154 (expression -> partselect .)
    XOR             reduce using rule 154 (expression -> partselect .)
    XNOR            reduce using rule 154 (expression -> partselect .)
    OR              reduce using rule 154 (expression -> partselect .)
    LAND            reduce using rule 154 (expression -> partselect .)
    LOR             reduce using rule 154 (expression -> partselect .)
    COND            reduce using rule 154 (expression -> partselect .)
    LBRACE          reduce using rule 154 (expression -> partselect .)
    RBRACE          reduce using rule 154 (expression -> partselect .)
    COMMA           reduce using rule 154 (expression -> partselect .)
    RPAREN          reduce using rule 154 (expression -> partselect .)
    COLON           reduce using rule 154 (expression -> partselect .)
    SEMICOLON       reduce using rule 154 (expression -> partselect .)
    PLUSCOLON       reduce using rule 154 (expression -> partselect .)
    MINUSCOLON      reduce using rule 154 (expression -> partselect .)
    RBRACKET        reduce using rule 154 (expression -> partselect .)


state 104

    (158) expression -> identifier .
    (164) partselect -> identifier . LBRACKET expression COLON expression RBRACKET
    (165) partselect -> identifier . LBRACKET expression PLUSCOLON expression RBRACKET
    (166) partselect -> identifier . LBRACKET expression MINUSCOLON expression RBRACKET
    (170) pointer -> identifier . LBRACKET expression RBRACKET
    (339) functioncall -> identifier . LPAREN func_args RPAREN
    (359) scope -> identifier . DOT

    POWER           reduce using rule 158 (expression -> identifier .)
    TIMES           reduce using rule 158 (expression -> identifier .)
    DIVIDE          reduce using rule 158 (expression -> identifier .)
    MOD             reduce using rule 158 (expression -> identifier .)
    PLUS            reduce using rule 158 (expression -> identifier .)
    MINUS           reduce using rule 158 (expression -> identifier .)
    LSHIFT          reduce using rule 158 (expression -> identifier .)
    RSHIFT          reduce using rule 158 (expression -> identifier .)
    LSHIFTA         reduce using rule 158 (expression -> identifier .)
    RSHIFTA         reduce using rule 158 (expression -> identifier .)
    LT              reduce using rule 158 (expression -> identifier .)
    GT              reduce using rule 158 (expression -> identifier .)
    LE              reduce using rule 158 (expression -> identifier .)
    GE              reduce using rule 158 (expression -> identifier .)
    EQ              reduce using rule 158 (expression -> identifier .)
    NE              reduce using rule 158 (expression -> identifier .)
    EQL             reduce using rule 158 (expression -> identifier .)
    NEL             reduce using rule 158 (expression -> identifier .)
    AND             reduce using rule 158 (expression -> identifier .)
    XOR             reduce using rule 158 (expression -> identifier .)
    XNOR            reduce using rule 158 (expression -> identifier .)
    OR              reduce using rule 158 (expression -> identifier .)
    LAND            reduce using rule 158 (expression -> identifier .)
    LOR             reduce using rule 158 (expression -> identifier .)
    COND            reduce using rule 158 (expression -> identifier .)
    LBRACE          reduce using rule 158 (expression -> identifier .)
    RBRACE          reduce using rule 158 (expression -> identifier .)
    COMMA           reduce using rule 158 (expression -> identifier .)
    RPAREN          reduce using rule 158 (expression -> identifier .)
    COLON           reduce using rule 158 (expression -> identifier .)
    SEMICOLON       reduce using rule 158 (expression -> identifier .)
    PLUSCOLON       reduce using rule 158 (expression -> identifier .)
    MINUSCOLON      reduce using rule 158 (expression -> identifier .)
    RBRACKET        reduce using rule 158 (expression -> identifier .)
    LBRACKET        shift and go to state 254
    LPAREN          shift and go to state 253
    DOT             shift and go to state 252


state 105

    (123) expression -> OR . expression
    (116) expression -> . MINUS expression
    (117) expression -> . PLUS expression
    (118) expression -> . LNOT expression
    (119) expression -> . NOT expression
    (120) expression -> . AND expression
    (121) expression -> . NAND expression
    (122) expression -> . NOR expression
    (123) expression -> . OR expression
    (124) expression -> . XOR expression
    (125) expression -> . XNOR expression
    (126) expression -> . expression POWER expression
    (127) expression -> . expression TIMES expression
    (128) expression -> . expression DIVIDE expression
    (129) expression -> . expression MOD expression
    (130) expression -> . expression PLUS expression
    (131) expression -> . expression MINUS expression
    (132) expression -> . expression LSHIFT expression
    (133) expression -> . expression RSHIFT expression
    (134) expression -> . expression LSHIFTA expression
    (135) expression -> . expression RSHIFTA expression
    (136) expression -> . expression LT expression
    (137) expression -> . expression GT expression
    (138) expression -> . expression LE expression
    (139) expression -> . expression GE expression
    (140) expression -> . expression EQ expression
    (141) expression -> . expression NE expression
    (142) expression -> . expression EQL expression
    (143) expression -> . expression NEL expression
    (144) expression -> . expression AND expression
    (145) expression -> . expression XOR expression
    (146) expression -> . expression XNOR expression
    (147) expression -> . expression OR expression
    (148) expression -> . expression LAND expression
    (149) expression -> . expression LOR expression
    (150) expression -> . expression COND expression COLON expression
    (151) expression -> . LPAREN expression RPAREN
    (152) expression -> . concat
    (153) expression -> . repeat
    (154) expression -> . partselect
    (155) expression -> . pointer
    (156) expression -> . functioncall
    (157) expression -> . systemcall
    (158) expression -> . identifier
    (159) expression -> . const_expression
    (160) concat -> . LBRACE concatlist RBRACE
    (163) repeat -> . LBRACE expression concat RBRACE
    (164) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (165) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (166) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (167) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (168) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (169) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (170) pointer -> . identifier LBRACKET expression RBRACKET
    (171) pointer -> . pointer LBRACKET expression RBRACKET
    (339) functioncall -> . identifier LPAREN func_args RPAREN
    (319) systemcall -> . DOLLER ID
    (320) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (357) identifier -> . ID
    (358) identifier -> . scope ID
    (172) const_expression -> . intnumber
    (173) const_expression -> . floatnumber
    (174) const_expression -> . stringliteral
    (359) scope -> . identifier DOT
    (360) scope -> . pointer DOT
    (176) intnumber -> . INTNUMBER_DEC
    (177) intnumber -> . SIGNED_INTNUMBER_DEC
    (178) intnumber -> . INTNUMBER_BIN
    (179) intnumber -> . SIGNED_INTNUMBER_BIN
    (180) intnumber -> . INTNUMBER_OCT
    (181) intnumber -> . SIGNED_INTNUMBER_OCT
    (182) intnumber -> . INTNUMBER_HEX
    (183) intnumber -> . SIGNED_INTNUMBER_HEX
    (175) floatnumber -> . FLOATNUMBER
    (184) stringliteral -> . STRING_LITERAL

    MINUS           shift and go to state 97
    PLUS            shift and go to state 89
    LNOT            shift and go to state 95
    NOT             shift and go to state 78
    AND             shift and go to state 91
    NAND            shift and go to state 98
    NOR             shift and go to state 76
    OR              shift and go to state 105
    XOR             shift and go to state 82
    XNOR            shift and go to state 87
    LPAREN          shift and go to state 96
    LBRACE          shift and go to state 77
    DOLLER          shift and go to state 100
    ID              shift and go to state 85
    INTNUMBER_DEC   shift and go to state 79
    SIGNED_INTNUMBER_DEC shift and go to state 101
    INTNUMBER_BIN   shift and go to state 111
    SIGNED_INTNUMBER_BIN shift and go to state 112
    INTNUMBER_OCT   shift and go to state 86
    SIGNED_INTNUMBER_OCT shift and go to state 106
    INTNUMBER_HEX   shift and go to state 93
    SIGNED_INTNUMBER_HEX shift and go to state 83
    FLOATNUMBER     shift and go to state 102
    STRING_LITERAL  shift and go to state 107

    stringliteral                  shift and go to state 99
    intnumber                      shift and go to state 81
    expression                     shift and go to state 255
    repeat                         shift and go to state 108
    partselect                     shift and go to state 103
    identifier                     shift and go to state 104
    pointer                        shift and go to state 80
    functioncall                   shift and go to state 94
    scope                          shift and go to state 84
    systemcall                     shift and go to state 109
    const_expression               shift and go to state 110
    concat                         shift and go to state 88
    floatnumber                    shift and go to state 90

state 106

    (181) intnumber -> SIGNED_INTNUMBER_OCT .

    POWER           reduce using rule 181 (intnumber -> SIGNED_INTNUMBER_OCT .)
    TIMES           reduce using rule 181 (intnumber -> SIGNED_INTNUMBER_OCT .)
    DIVIDE          reduce using rule 181 (intnumber -> SIGNED_INTNUMBER_OCT .)
    MOD             reduce using rule 181 (intnumber -> SIGNED_INTNUMBER_OCT .)
    PLUS            reduce using rule 181 (intnumber -> SIGNED_INTNUMBER_OCT .)
    MINUS           reduce using rule 181 (intnumber -> SIGNED_INTNUMBER_OCT .)
    LSHIFT          reduce using rule 181 (intnumber -> SIGNED_INTNUMBER_OCT .)
    RSHIFT          reduce using rule 181 (intnumber -> SIGNED_INTNUMBER_OCT .)
    LSHIFTA         reduce using rule 181 (intnumber -> SIGNED_INTNUMBER_OCT .)
    RSHIFTA         reduce using rule 181 (intnumber -> SIGNED_INTNUMBER_OCT .)
    LT              reduce using rule 181 (intnumber -> SIGNED_INTNUMBER_OCT .)
    GT              reduce using rule 181 (intnumber -> SIGNED_INTNUMBER_OCT .)
    LE              reduce using rule 181 (intnumber -> SIGNED_INTNUMBER_OCT .)
    GE              reduce using rule 181 (intnumber -> SIGNED_INTNUMBER_OCT .)
    EQ              reduce using rule 181 (intnumber -> SIGNED_INTNUMBER_OCT .)
    NE              reduce using rule 181 (intnumber -> SIGNED_INTNUMBER_OCT .)
    EQL             reduce using rule 181 (intnumber -> SIGNED_INTNUMBER_OCT .)
    NEL             reduce using rule 181 (intnumber -> SIGNED_INTNUMBER_OCT .)
    AND             reduce using rule 181 (intnumber -> SIGNED_INTNUMBER_OCT .)
    XOR             reduce using rule 181 (intnumber -> SIGNED_INTNUMBER_OCT .)
    XNOR            reduce using rule 181 (intnumber -> SIGNED_INTNUMBER_OCT .)
    OR              reduce using rule 181 (intnumber -> SIGNED_INTNUMBER_OCT .)
    LAND            reduce using rule 181 (intnumber -> SIGNED_INTNUMBER_OCT .)
    LOR             reduce using rule 181 (intnumber -> SIGNED_INTNUMBER_OCT .)
    COND            reduce using rule 181 (intnumber -> SIGNED_INTNUMBER_OCT .)
    SEMICOLON       reduce using rule 181 (intnumber -> SIGNED_INTNUMBER_OCT .)
    COLON           reduce using rule 181 (intnumber -> SIGNED_INTNUMBER_OCT .)
    COMMA           reduce using rule 181 (intnumber -> SIGNED_INTNUMBER_OCT .)
    RBRACKET        reduce using rule 181 (intnumber -> SIGNED_INTNUMBER_OCT .)
    LBRACE          reduce using rule 181 (intnumber -> SIGNED_INTNUMBER_OCT .)
    RBRACE          reduce using rule 181 (intnumber -> SIGNED_INTNUMBER_OCT .)
    RPAREN          reduce using rule 181 (intnumber -> SIGNED_INTNUMBER_OCT .)
    PLUSCOLON       reduce using rule 181 (intnumber -> SIGNED_INTNUMBER_OCT .)
    MINUSCOLON      reduce using rule 181 (intnumber -> SIGNED_INTNUMBER_OCT .)
    ID              reduce using rule 181 (intnumber -> SIGNED_INTNUMBER_OCT .)
    IF              reduce using rule 181 (intnumber -> SIGNED_INTNUMBER_OCT .)
    LNOT            reduce using rule 181 (intnumber -> SIGNED_INTNUMBER_OCT .)
    NOT             reduce using rule 181 (intnumber -> SIGNED_INTNUMBER_OCT .)
    NAND            reduce using rule 181 (intnumber -> SIGNED_INTNUMBER_OCT .)
    NOR             reduce using rule 181 (intnumber -> SIGNED_INTNUMBER_OCT .)
    LPAREN          reduce using rule 181 (intnumber -> SIGNED_INTNUMBER_OCT .)
    DOLLER          reduce using rule 181 (intnumber -> SIGNED_INTNUMBER_OCT .)
    INTNUMBER_DEC   reduce using rule 181 (intnumber -> SIGNED_INTNUMBER_OCT .)
    SIGNED_INTNUMBER_DEC reduce using rule 181 (intnumber -> SIGNED_INTNUMBER_OCT .)
    INTNUMBER_BIN   reduce using rule 181 (intnumber -> SIGNED_INTNUMBER_OCT .)
    SIGNED_INTNUMBER_BIN reduce using rule 181 (intnumber -> SIGNED_INTNUMBER_OCT .)
    INTNUMBER_OCT   reduce using rule 181 (intnumber -> SIGNED_INTNUMBER_OCT .)
    SIGNED_INTNUMBER_OCT reduce using rule 181 (intnumber -> SIGNED_INTNUMBER_OCT .)
    INTNUMBER_HEX   reduce using rule 181 (intnumber -> SIGNED_INTNUMBER_OCT .)
    SIGNED_INTNUMBER_HEX reduce using rule 181 (intnumber -> SIGNED_INTNUMBER_OCT .)
    FLOATNUMBER     reduce using rule 181 (intnumber -> SIGNED_INTNUMBER_OCT .)
    STRING_LITERAL  reduce using rule 181 (intnumber -> SIGNED_INTNUMBER_OCT .)


state 107

    (184) stringliteral -> STRING_LITERAL .

    RBRACKET        reduce using rule 184 (stringliteral -> STRING_LITERAL .)
    POWER           reduce using rule 184 (stringliteral -> STRING_LITERAL .)
    TIMES           reduce using rule 184 (stringliteral -> STRING_LITERAL .)
    DIVIDE          reduce using rule 184 (stringliteral -> STRING_LITERAL .)
    MOD             reduce using rule 184 (stringliteral -> STRING_LITERAL .)
    PLUS            reduce using rule 184 (stringliteral -> STRING_LITERAL .)
    MINUS           reduce using rule 184 (stringliteral -> STRING_LITERAL .)
    LSHIFT          reduce using rule 184 (stringliteral -> STRING_LITERAL .)
    RSHIFT          reduce using rule 184 (stringliteral -> STRING_LITERAL .)
    LSHIFTA         reduce using rule 184 (stringliteral -> STRING_LITERAL .)
    RSHIFTA         reduce using rule 184 (stringliteral -> STRING_LITERAL .)
    LT              reduce using rule 184 (stringliteral -> STRING_LITERAL .)
    GT              reduce using rule 184 (stringliteral -> STRING_LITERAL .)
    LE              reduce using rule 184 (stringliteral -> STRING_LITERAL .)
    GE              reduce using rule 184 (stringliteral -> STRING_LITERAL .)
    EQ              reduce using rule 184 (stringliteral -> STRING_LITERAL .)
    NE              reduce using rule 184 (stringliteral -> STRING_LITERAL .)
    EQL             reduce using rule 184 (stringliteral -> STRING_LITERAL .)
    NEL             reduce using rule 184 (stringliteral -> STRING_LITERAL .)
    AND             reduce using rule 184 (stringliteral -> STRING_LITERAL .)
    XOR             reduce using rule 184 (stringliteral -> STRING_LITERAL .)
    XNOR            reduce using rule 184 (stringliteral -> STRING_LITERAL .)
    OR              reduce using rule 184 (stringliteral -> STRING_LITERAL .)
    LAND            reduce using rule 184 (stringliteral -> STRING_LITERAL .)
    LOR             reduce using rule 184 (stringliteral -> STRING_LITERAL .)
    COND            reduce using rule 184 (stringliteral -> STRING_LITERAL .)
    RPAREN          reduce using rule 184 (stringliteral -> STRING_LITERAL .)
    SEMICOLON       reduce using rule 184 (stringliteral -> STRING_LITERAL .)
    LBRACE          reduce using rule 184 (stringliteral -> STRING_LITERAL .)
    RBRACE          reduce using rule 184 (stringliteral -> STRING_LITERAL .)
    COMMA           reduce using rule 184 (stringliteral -> STRING_LITERAL .)
    COLON           reduce using rule 184 (stringliteral -> STRING_LITERAL .)
    PLUSCOLON       reduce using rule 184 (stringliteral -> STRING_LITERAL .)
    MINUSCOLON      reduce using rule 184 (stringliteral -> STRING_LITERAL .)


state 108

    (153) expression -> repeat .

    POWER           reduce using rule 153 (expression -> repeat .)
    TIMES           reduce using rule 153 (expression -> repeat .)
    DIVIDE          reduce using rule 153 (expression -> repeat .)
    MOD             reduce using rule 153 (expression -> repeat .)
    PLUS            reduce using rule 153 (expression -> repeat .)
    MINUS           reduce using rule 153 (expression -> repeat .)
    LSHIFT          reduce using rule 153 (expression -> repeat .)
    RSHIFT          reduce using rule 153 (expression -> repeat .)
    LSHIFTA         reduce using rule 153 (expression -> repeat .)
    RSHIFTA         reduce using rule 153 (expression -> repeat .)
    LT              reduce using rule 153 (expression -> repeat .)
    GT              reduce using rule 153 (expression -> repeat .)
    LE              reduce using rule 153 (expression -> repeat .)
    GE              reduce using rule 153 (expression -> repeat .)
    EQ              reduce using rule 153 (expression -> repeat .)
    NE              reduce using rule 153 (expression -> repeat .)
    EQL             reduce using rule 153 (expression -> repeat .)
    NEL             reduce using rule 153 (expression -> repeat .)
    AND             reduce using rule 153 (expression -> repeat .)
    XOR             reduce using rule 153 (expression -> repeat .)
    XNOR            reduce using rule 153 (expression -> repeat .)
    OR              reduce using rule 153 (expression -> repeat .)
    LAND            reduce using rule 153 (expression -> repeat .)
    LOR             reduce using rule 153 (expression -> repeat .)
    COND            reduce using rule 153 (expression -> repeat .)
    LBRACE          reduce using rule 153 (expression -> repeat .)
    RBRACE          reduce using rule 153 (expression -> repeat .)
    COMMA           reduce using rule 153 (expression -> repeat .)
    RPAREN          reduce using rule 153 (expression -> repeat .)
    COLON           reduce using rule 153 (expression -> repeat .)
    SEMICOLON       reduce using rule 153 (expression -> repeat .)
    PLUSCOLON       reduce using rule 153 (expression -> repeat .)
    MINUSCOLON      reduce using rule 153 (expression -> repeat .)
    RBRACKET        reduce using rule 153 (expression -> repeat .)


state 109

    (157) expression -> systemcall .

    POWER           reduce using rule 157 (expression -> systemcall .)
    TIMES           reduce using rule 157 (expression -> systemcall .)
    DIVIDE          reduce using rule 157 (expression -> systemcall .)
    MOD             reduce using rule 157 (expression -> systemcall .)
    PLUS            reduce using rule 157 (expression -> systemcall .)
    MINUS           reduce using rule 157 (expression -> systemcall .)
    LSHIFT          reduce using rule 157 (expression -> systemcall .)
    RSHIFT          reduce using rule 157 (expression -> systemcall .)
    LSHIFTA         reduce using rule 157 (expression -> systemcall .)
    RSHIFTA         reduce using rule 157 (expression -> systemcall .)
    LT              reduce using rule 157 (expression -> systemcall .)
    GT              reduce using rule 157 (expression -> systemcall .)
    LE              reduce using rule 157 (expression -> systemcall .)
    GE              reduce using rule 157 (expression -> systemcall .)
    EQ              reduce using rule 157 (expression -> systemcall .)
    NE              reduce using rule 157 (expression -> systemcall .)
    EQL             reduce using rule 157 (expression -> systemcall .)
    NEL             reduce using rule 157 (expression -> systemcall .)
    AND             reduce using rule 157 (expression -> systemcall .)
    XOR             reduce using rule 157 (expression -> systemcall .)
    XNOR            reduce using rule 157 (expression -> systemcall .)
    OR              reduce using rule 157 (expression -> systemcall .)
    LAND            reduce using rule 157 (expression -> systemcall .)
    LOR             reduce using rule 157 (expression -> systemcall .)
    COND            reduce using rule 157 (expression -> systemcall .)
    LBRACE          reduce using rule 157 (expression -> systemcall .)
    RBRACE          reduce using rule 157 (expression -> systemcall .)
    COMMA           reduce using rule 157 (expression -> systemcall .)
    RPAREN          reduce using rule 157 (expression -> systemcall .)
    COLON           reduce using rule 157 (expression -> systemcall .)
    SEMICOLON       reduce using rule 157 (expression -> systemcall .)
    PLUSCOLON       reduce using rule 157 (expression -> systemcall .)
    MINUSCOLON      reduce using rule 157 (expression -> systemcall .)
    RBRACKET        reduce using rule 157 (expression -> systemcall .)


state 110

    (159) expression -> const_expression .

    POWER           reduce using rule 159 (expression -> const_expression .)
    TIMES           reduce using rule 159 (expression -> const_expression .)
    DIVIDE          reduce using rule 159 (expression -> const_expression .)
    MOD             reduce using rule 159 (expression -> const_expression .)
    PLUS            reduce using rule 159 (expression -> const_expression .)
    MINUS           reduce using rule 159 (expression -> const_expression .)
    LSHIFT          reduce using rule 159 (expression -> const_expression .)
    RSHIFT          reduce using rule 159 (expression -> const_expression .)
    LSHIFTA         reduce using rule 159 (expression -> const_expression .)
    RSHIFTA         reduce using rule 159 (expression -> const_expression .)
    LT              reduce using rule 159 (expression -> const_expression .)
    GT              reduce using rule 159 (expression -> const_expression .)
    LE              reduce using rule 159 (expression -> const_expression .)
    GE              reduce using rule 159 (expression -> const_expression .)
    EQ              reduce using rule 159 (expression -> const_expression .)
    NE              reduce using rule 159 (expression -> const_expression .)
    EQL             reduce using rule 159 (expression -> const_expression .)
    NEL             reduce using rule 159 (expression -> const_expression .)
    AND             reduce using rule 159 (expression -> const_expression .)
    XOR             reduce using rule 159 (expression -> const_expression .)
    XNOR            reduce using rule 159 (expression -> const_expression .)
    OR              reduce using rule 159 (expression -> const_expression .)
    LAND            reduce using rule 159 (expression -> const_expression .)
    LOR             reduce using rule 159 (expression -> const_expression .)
    COND            reduce using rule 159 (expression -> const_expression .)
    LBRACE          reduce using rule 159 (expression -> const_expression .)
    RBRACE          reduce using rule 159 (expression -> const_expression .)
    COMMA           reduce using rule 159 (expression -> const_expression .)
    RPAREN          reduce using rule 159 (expression -> const_expression .)
    COLON           reduce using rule 159 (expression -> const_expression .)
    SEMICOLON       reduce using rule 159 (expression -> const_expression .)
    PLUSCOLON       reduce using rule 159 (expression -> const_expression .)
    MINUSCOLON      reduce using rule 159 (expression -> const_expression .)
    RBRACKET        reduce using rule 159 (expression -> const_expression .)


state 111

    (178) intnumber -> INTNUMBER_BIN .

    POWER           reduce using rule 178 (intnumber -> INTNUMBER_BIN .)
    TIMES           reduce using rule 178 (intnumber -> INTNUMBER_BIN .)
    DIVIDE          reduce using rule 178 (intnumber -> INTNUMBER_BIN .)
    MOD             reduce using rule 178 (intnumber -> INTNUMBER_BIN .)
    PLUS            reduce using rule 178 (intnumber -> INTNUMBER_BIN .)
    MINUS           reduce using rule 178 (intnumber -> INTNUMBER_BIN .)
    LSHIFT          reduce using rule 178 (intnumber -> INTNUMBER_BIN .)
    RSHIFT          reduce using rule 178 (intnumber -> INTNUMBER_BIN .)
    LSHIFTA         reduce using rule 178 (intnumber -> INTNUMBER_BIN .)
    RSHIFTA         reduce using rule 178 (intnumber -> INTNUMBER_BIN .)
    LT              reduce using rule 178 (intnumber -> INTNUMBER_BIN .)
    GT              reduce using rule 178 (intnumber -> INTNUMBER_BIN .)
    LE              reduce using rule 178 (intnumber -> INTNUMBER_BIN .)
    GE              reduce using rule 178 (intnumber -> INTNUMBER_BIN .)
    EQ              reduce using rule 178 (intnumber -> INTNUMBER_BIN .)
    NE              reduce using rule 178 (intnumber -> INTNUMBER_BIN .)
    EQL             reduce using rule 178 (intnumber -> INTNUMBER_BIN .)
    NEL             reduce using rule 178 (intnumber -> INTNUMBER_BIN .)
    AND             reduce using rule 178 (intnumber -> INTNUMBER_BIN .)
    XOR             reduce using rule 178 (intnumber -> INTNUMBER_BIN .)
    XNOR            reduce using rule 178 (intnumber -> INTNUMBER_BIN .)
    OR              reduce using rule 178 (intnumber -> INTNUMBER_BIN .)
    LAND            reduce using rule 178 (intnumber -> INTNUMBER_BIN .)
    LOR             reduce using rule 178 (intnumber -> INTNUMBER_BIN .)
    COND            reduce using rule 178 (intnumber -> INTNUMBER_BIN .)
    SEMICOLON       reduce using rule 178 (intnumber -> INTNUMBER_BIN .)
    COLON           reduce using rule 178 (intnumber -> INTNUMBER_BIN .)
    COMMA           reduce using rule 178 (intnumber -> INTNUMBER_BIN .)
    RBRACKET        reduce using rule 178 (intnumber -> INTNUMBER_BIN .)
    LBRACE          reduce using rule 178 (intnumber -> INTNUMBER_BIN .)
    RBRACE          reduce using rule 178 (intnumber -> INTNUMBER_BIN .)
    RPAREN          reduce using rule 178 (intnumber -> INTNUMBER_BIN .)
    PLUSCOLON       reduce using rule 178 (intnumber -> INTNUMBER_BIN .)
    MINUSCOLON      reduce using rule 178 (intnumber -> INTNUMBER_BIN .)
    ID              reduce using rule 178 (intnumber -> INTNUMBER_BIN .)
    IF              reduce using rule 178 (intnumber -> INTNUMBER_BIN .)
    LNOT            reduce using rule 178 (intnumber -> INTNUMBER_BIN .)
    NOT             reduce using rule 178 (intnumber -> INTNUMBER_BIN .)
    NAND            reduce using rule 178 (intnumber -> INTNUMBER_BIN .)
    NOR             reduce using rule 178 (intnumber -> INTNUMBER_BIN .)
    LPAREN          reduce using rule 178 (intnumber -> INTNUMBER_BIN .)
    DOLLER          reduce using rule 178 (intnumber -> INTNUMBER_BIN .)
    INTNUMBER_DEC   reduce using rule 178 (intnumber -> INTNUMBER_BIN .)
    SIGNED_INTNUMBER_DEC reduce using rule 178 (intnumber -> INTNUMBER_BIN .)
    INTNUMBER_BIN   reduce using rule 178 (intnumber -> INTNUMBER_BIN .)
    SIGNED_INTNUMBER_BIN reduce using rule 178 (intnumber -> INTNUMBER_BIN .)
    INTNUMBER_OCT   reduce using rule 178 (intnumber -> INTNUMBER_BIN .)
    SIGNED_INTNUMBER_OCT reduce using rule 178 (intnumber -> INTNUMBER_BIN .)
    INTNUMBER_HEX   reduce using rule 178 (intnumber -> INTNUMBER_BIN .)
    SIGNED_INTNUMBER_HEX reduce using rule 178 (intnumber -> INTNUMBER_BIN .)
    FLOATNUMBER     reduce using rule 178 (intnumber -> INTNUMBER_BIN .)
    STRING_LITERAL  reduce using rule 178 (intnumber -> INTNUMBER_BIN .)


state 112

    (179) intnumber -> SIGNED_INTNUMBER_BIN .

    POWER           reduce using rule 179 (intnumber -> SIGNED_INTNUMBER_BIN .)
    TIMES           reduce using rule 179 (intnumber -> SIGNED_INTNUMBER_BIN .)
    DIVIDE          reduce using rule 179 (intnumber -> SIGNED_INTNUMBER_BIN .)
    MOD             reduce using rule 179 (intnumber -> SIGNED_INTNUMBER_BIN .)
    PLUS            reduce using rule 179 (intnumber -> SIGNED_INTNUMBER_BIN .)
    MINUS           reduce using rule 179 (intnumber -> SIGNED_INTNUMBER_BIN .)
    LSHIFT          reduce using rule 179 (intnumber -> SIGNED_INTNUMBER_BIN .)
    RSHIFT          reduce using rule 179 (intnumber -> SIGNED_INTNUMBER_BIN .)
    LSHIFTA         reduce using rule 179 (intnumber -> SIGNED_INTNUMBER_BIN .)
    RSHIFTA         reduce using rule 179 (intnumber -> SIGNED_INTNUMBER_BIN .)
    LT              reduce using rule 179 (intnumber -> SIGNED_INTNUMBER_BIN .)
    GT              reduce using rule 179 (intnumber -> SIGNED_INTNUMBER_BIN .)
    LE              reduce using rule 179 (intnumber -> SIGNED_INTNUMBER_BIN .)
    GE              reduce using rule 179 (intnumber -> SIGNED_INTNUMBER_BIN .)
    EQ              reduce using rule 179 (intnumber -> SIGNED_INTNUMBER_BIN .)
    NE              reduce using rule 179 (intnumber -> SIGNED_INTNUMBER_BIN .)
    EQL             reduce using rule 179 (intnumber -> SIGNED_INTNUMBER_BIN .)
    NEL             reduce using rule 179 (intnumber -> SIGNED_INTNUMBER_BIN .)
    AND             reduce using rule 179 (intnumber -> SIGNED_INTNUMBER_BIN .)
    XOR             reduce using rule 179 (intnumber -> SIGNED_INTNUMBER_BIN .)
    XNOR            reduce using rule 179 (intnumber -> SIGNED_INTNUMBER_BIN .)
    OR              reduce using rule 179 (intnumber -> SIGNED_INTNUMBER_BIN .)
    LAND            reduce using rule 179 (intnumber -> SIGNED_INTNUMBER_BIN .)
    LOR             reduce using rule 179 (intnumber -> SIGNED_INTNUMBER_BIN .)
    COND            reduce using rule 179 (intnumber -> SIGNED_INTNUMBER_BIN .)
    SEMICOLON       reduce using rule 179 (intnumber -> SIGNED_INTNUMBER_BIN .)
    COLON           reduce using rule 179 (intnumber -> SIGNED_INTNUMBER_BIN .)
    COMMA           reduce using rule 179 (intnumber -> SIGNED_INTNUMBER_BIN .)
    RBRACKET        reduce using rule 179 (intnumber -> SIGNED_INTNUMBER_BIN .)
    LBRACE          reduce using rule 179 (intnumber -> SIGNED_INTNUMBER_BIN .)
    RBRACE          reduce using rule 179 (intnumber -> SIGNED_INTNUMBER_BIN .)
    RPAREN          reduce using rule 179 (intnumber -> SIGNED_INTNUMBER_BIN .)
    PLUSCOLON       reduce using rule 179 (intnumber -> SIGNED_INTNUMBER_BIN .)
    MINUSCOLON      reduce using rule 179 (intnumber -> SIGNED_INTNUMBER_BIN .)
    ID              reduce using rule 179 (intnumber -> SIGNED_INTNUMBER_BIN .)
    IF              reduce using rule 179 (intnumber -> SIGNED_INTNUMBER_BIN .)
    LNOT            reduce using rule 179 (intnumber -> SIGNED_INTNUMBER_BIN .)
    NOT             reduce using rule 179 (intnumber -> SIGNED_INTNUMBER_BIN .)
    NAND            reduce using rule 179 (intnumber -> SIGNED_INTNUMBER_BIN .)
    NOR             reduce using rule 179 (intnumber -> SIGNED_INTNUMBER_BIN .)
    LPAREN          reduce using rule 179 (intnumber -> SIGNED_INTNUMBER_BIN .)
    DOLLER          reduce using rule 179 (intnumber -> SIGNED_INTNUMBER_BIN .)
    INTNUMBER_DEC   reduce using rule 179 (intnumber -> SIGNED_INTNUMBER_BIN .)
    SIGNED_INTNUMBER_DEC reduce using rule 179 (intnumber -> SIGNED_INTNUMBER_BIN .)
    INTNUMBER_BIN   reduce using rule 179 (intnumber -> SIGNED_INTNUMBER_BIN .)
    SIGNED_INTNUMBER_BIN reduce using rule 179 (intnumber -> SIGNED_INTNUMBER_BIN .)
    INTNUMBER_OCT   reduce using rule 179 (intnumber -> SIGNED_INTNUMBER_BIN .)
    SIGNED_INTNUMBER_OCT reduce using rule 179 (intnumber -> SIGNED_INTNUMBER_BIN .)
    INTNUMBER_HEX   reduce using rule 179 (intnumber -> SIGNED_INTNUMBER_BIN .)
    SIGNED_INTNUMBER_HEX reduce using rule 179 (intnumber -> SIGNED_INTNUMBER_BIN .)
    FLOATNUMBER     reduce using rule 179 (intnumber -> SIGNED_INTNUMBER_BIN .)
    STRING_LITERAL  reduce using rule 179 (intnumber -> SIGNED_INTNUMBER_BIN .)


state 113

    (43) ioport_head -> sigtypes portname .

    RPAREN          reduce using rule 43 (ioport_head -> sigtypes portname .)
    COMMA           reduce using rule 43 (ioport_head -> sigtypes portname .)


state 114

    (44) ioport_head -> sigtypes width . portname
    (29) portname -> . ID

    ID              shift and go to state 34

    portname                       shift and go to state 256

state 115

    (30) sigtypes -> sigtypes sigtype .

    LBRACKET        reduce using rule 30 (sigtypes -> sigtypes sigtype .)
    ID              reduce using rule 30 (sigtypes -> sigtypes sigtype .)
    INPUT           reduce using rule 30 (sigtypes -> sigtypes sigtype .)
    OUTPUT          reduce using rule 30 (sigtypes -> sigtypes sigtype .)
    INOUT           reduce using rule 30 (sigtypes -> sigtypes sigtype .)
    TRI             reduce using rule 30 (sigtypes -> sigtypes sigtype .)
    REG             reduce using rule 30 (sigtypes -> sigtypes sigtype .)
    WIRE            reduce using rule 30 (sigtypes -> sigtypes sigtype .)
    SIGNED          reduce using rule 30 (sigtypes -> sigtypes sigtype .)
    DELAY           reduce using rule 30 (sigtypes -> sigtypes sigtype .)


state 116

    (46) width -> LBRACKET . expression COLON expression RBRACKET
    (116) expression -> . MINUS expression
    (117) expression -> . PLUS expression
    (118) expression -> . LNOT expression
    (119) expression -> . NOT expression
    (120) expression -> . AND expression
    (121) expression -> . NAND expression
    (122) expression -> . NOR expression
    (123) expression -> . OR expression
    (124) expression -> . XOR expression
    (125) expression -> . XNOR expression
    (126) expression -> . expression POWER expression
    (127) expression -> . expression TIMES expression
    (128) expression -> . expression DIVIDE expression
    (129) expression -> . expression MOD expression
    (130) expression -> . expression PLUS expression
    (131) expression -> . expression MINUS expression
    (132) expression -> . expression LSHIFT expression
    (133) expression -> . expression RSHIFT expression
    (134) expression -> . expression LSHIFTA expression
    (135) expression -> . expression RSHIFTA expression
    (136) expression -> . expression LT expression
    (137) expression -> . expression GT expression
    (138) expression -> . expression LE expression
    (139) expression -> . expression GE expression
    (140) expression -> . expression EQ expression
    (141) expression -> . expression NE expression
    (142) expression -> . expression EQL expression
    (143) expression -> . expression NEL expression
    (144) expression -> . expression AND expression
    (145) expression -> . expression XOR expression
    (146) expression -> . expression XNOR expression
    (147) expression -> . expression OR expression
    (148) expression -> . expression LAND expression
    (149) expression -> . expression LOR expression
    (150) expression -> . expression COND expression COLON expression
    (151) expression -> . LPAREN expression RPAREN
    (152) expression -> . concat
    (153) expression -> . repeat
    (154) expression -> . partselect
    (155) expression -> . pointer
    (156) expression -> . functioncall
    (157) expression -> . systemcall
    (158) expression -> . identifier
    (159) expression -> . const_expression
    (160) concat -> . LBRACE concatlist RBRACE
    (163) repeat -> . LBRACE expression concat RBRACE
    (164) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (165) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (166) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (167) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (168) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (169) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (170) pointer -> . identifier LBRACKET expression RBRACKET
    (171) pointer -> . pointer LBRACKET expression RBRACKET
    (339) functioncall -> . identifier LPAREN func_args RPAREN
    (319) systemcall -> . DOLLER ID
    (320) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (357) identifier -> . ID
    (358) identifier -> . scope ID
    (172) const_expression -> . intnumber
    (173) const_expression -> . floatnumber
    (174) const_expression -> . stringliteral
    (359) scope -> . identifier DOT
    (360) scope -> . pointer DOT
    (176) intnumber -> . INTNUMBER_DEC
    (177) intnumber -> . SIGNED_INTNUMBER_DEC
    (178) intnumber -> . INTNUMBER_BIN
    (179) intnumber -> . SIGNED_INTNUMBER_BIN
    (180) intnumber -> . INTNUMBER_OCT
    (181) intnumber -> . SIGNED_INTNUMBER_OCT
    (182) intnumber -> . INTNUMBER_HEX
    (183) intnumber -> . SIGNED_INTNUMBER_HEX
    (175) floatnumber -> . FLOATNUMBER
    (184) stringliteral -> . STRING_LITERAL

    MINUS           shift and go to state 97
    PLUS            shift and go to state 89
    LNOT            shift and go to state 95
    NOT             shift and go to state 78
    AND             shift and go to state 91
    NAND            shift and go to state 98
    NOR             shift and go to state 76
    OR              shift and go to state 105
    XOR             shift and go to state 82
    XNOR            shift and go to state 87
    LPAREN          shift and go to state 96
    LBRACE          shift and go to state 77
    DOLLER          shift and go to state 100
    ID              shift and go to state 85
    INTNUMBER_DEC   shift and go to state 79
    SIGNED_INTNUMBER_DEC shift and go to state 101
    INTNUMBER_BIN   shift and go to state 111
    SIGNED_INTNUMBER_BIN shift and go to state 112
    INTNUMBER_OCT   shift and go to state 86
    SIGNED_INTNUMBER_OCT shift and go to state 106
    INTNUMBER_HEX   shift and go to state 93
    SIGNED_INTNUMBER_HEX shift and go to state 83
    FLOATNUMBER     shift and go to state 102
    STRING_LITERAL  shift and go to state 107

    stringliteral                  shift and go to state 99
    intnumber                      shift and go to state 81
    expression                     shift and go to state 257
    repeat                         shift and go to state 108
    partselect                     shift and go to state 103
    identifier                     shift and go to state 104
    pointer                        shift and go to state 80
    functioncall                   shift and go to state 94
    scope                          shift and go to state 84
    systemcall                     shift and go to state 109
    const_expression               shift and go to state 110
    concat                         shift and go to state 88
    floatnumber                    shift and go to state 90

state 117

    (27) ports -> ports COMMA . portname
    (29) portname -> . ID

    ID              shift and go to state 34

    portname                       shift and go to state 258

state 118

    (23) portlist -> LPAREN ports RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 259


state 119

    (25) portlist -> LPAREN RPAREN SEMICOLON .

    GENERATE        reduce using rule 25 (portlist -> LPAREN RPAREN SEMICOLON .)
    INTEGER         reduce using rule 25 (portlist -> LPAREN RPAREN SEMICOLON .)
    REAL            reduce using rule 25 (portlist -> LPAREN RPAREN SEMICOLON .)
    PARAMETER       reduce using rule 25 (portlist -> LPAREN RPAREN SEMICOLON .)
    LOCALPARAM      reduce using rule 25 (portlist -> LPAREN RPAREN SEMICOLON .)
    GENVAR          reduce using rule 25 (portlist -> LPAREN RPAREN SEMICOLON .)
    ASSIGN          reduce using rule 25 (portlist -> LPAREN RPAREN SEMICOLON .)
    ALWAYS          reduce using rule 25 (portlist -> LPAREN RPAREN SEMICOLON .)
    INITIAL         reduce using rule 25 (portlist -> LPAREN RPAREN SEMICOLON .)
    ID              reduce using rule 25 (portlist -> LPAREN RPAREN SEMICOLON .)
    FUNCTION        reduce using rule 25 (portlist -> LPAREN RPAREN SEMICOLON .)
    TASK            reduce using rule 25 (portlist -> LPAREN RPAREN SEMICOLON .)
    LPAREN          reduce using rule 25 (portlist -> LPAREN RPAREN SEMICOLON .)
    INPUT           reduce using rule 25 (portlist -> LPAREN RPAREN SEMICOLON .)
    OUTPUT          reduce using rule 25 (portlist -> LPAREN RPAREN SEMICOLON .)
    INOUT           reduce using rule 25 (portlist -> LPAREN RPAREN SEMICOLON .)
    TRI             reduce using rule 25 (portlist -> LPAREN RPAREN SEMICOLON .)
    REG             reduce using rule 25 (portlist -> LPAREN RPAREN SEMICOLON .)
    WIRE            reduce using rule 25 (portlist -> LPAREN RPAREN SEMICOLON .)
    SIGNED          reduce using rule 25 (portlist -> LPAREN RPAREN SEMICOLON .)
    ENDMODULE       reduce using rule 25 (portlist -> LPAREN RPAREN SEMICOLON .)


state 120

    (39) ioports -> ioports COMMA . ioport
    (41) ioport -> . sigtypes portname
    (42) ioport -> . sigtypes width portname
    (45) ioport -> . portname
    (30) sigtypes -> . sigtypes sigtype
    (31) sigtypes -> . sigtype
    (29) portname -> . ID
    (32) sigtype -> . INPUT
    (33) sigtype -> . OUTPUT
    (34) sigtype -> . INOUT
    (35) sigtype -> . TRI
    (36) sigtype -> . REG
    (37) sigtype -> . WIRE
    (38) sigtype -> . SIGNED

    ID              shift and go to state 34
    INPUT           shift and go to state 37
    OUTPUT          shift and go to state 24
    INOUT           shift and go to state 25
    TRI             shift and go to state 36
    REG             shift and go to state 35
    WIRE            shift and go to state 26
    SIGNED          shift and go to state 29

    sigtypes                       shift and go to state 260
    portname                       shift and go to state 261
    ioport                         shift and go to state 262
    sigtype                        shift and go to state 33

state 121

    (24) portlist -> LPAREN ioports RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 263


state 122

    (9) moduledef -> MODULE modulename paramlist portlist items ENDMODULE .

    MODULE          reduce using rule 9 (moduledef -> MODULE modulename paramlist portlist items ENDMODULE .)
    LPAREN          reduce using rule 9 (moduledef -> MODULE modulename paramlist portlist items ENDMODULE .)
    $end            reduce using rule 9 (moduledef -> MODULE modulename paramlist portlist items ENDMODULE .)


state 123

    (48) items -> items item .

    ENDMODULE       reduce using rule 48 (items -> items item .)
    GENERATE        reduce using rule 48 (items -> items item .)
    INTEGER         reduce using rule 48 (items -> items item .)
    REAL            reduce using rule 48 (items -> items item .)
    PARAMETER       reduce using rule 48 (items -> items item .)
    LOCALPARAM      reduce using rule 48 (items -> items item .)
    GENVAR          reduce using rule 48 (items -> items item .)
    ASSIGN          reduce using rule 48 (items -> items item .)
    ALWAYS          reduce using rule 48 (items -> items item .)
    INITIAL         reduce using rule 48 (items -> items item .)
    ID              reduce using rule 48 (items -> items item .)
    FUNCTION        reduce using rule 48 (items -> items item .)
    TASK            reduce using rule 48 (items -> items item .)
    LPAREN          reduce using rule 48 (items -> items item .)
    INPUT           reduce using rule 48 (items -> items item .)
    OUTPUT          reduce using rule 48 (items -> items item .)
    INOUT           reduce using rule 48 (items -> items item .)
    TRI             reduce using rule 48 (items -> items item .)
    REG             reduce using rule 48 (items -> items item .)
    WIRE            reduce using rule 48 (items -> items item .)
    SIGNED          reduce using rule 48 (items -> items item .)


state 124

    (299) genvarlist -> genvar .

    SEMICOLON       reduce using rule 299 (genvarlist -> genvar .)
    COMMA           reduce using rule 299 (genvarlist -> genvar .)


state 125

    (300) genvar -> ID .

    SEMICOLON       reduce using rule 300 (genvar -> ID .)
    COMMA           reduce using rule 300 (genvar -> ID .)


state 126

    (297) genvardecl -> GENVAR genvarlist . SEMICOLON
    (298) genvarlist -> genvarlist . COMMA genvar

    SEMICOLON       shift and go to state 265
    COMMA           shift and go to state 264


state 127

    (326) function -> FUNCTION ID . SEMICOLON function_statement ENDFUNCTION

    SEMICOLON       shift and go to state 266


state 128

    (325) function -> FUNCTION width . ID SEMICOLON function_statement ENDFUNCTION

    ID              shift and go to state 267


state 129

    (214) basic_statement -> parallelblock .

    ENDCASE         reduce using rule 214 (basic_statement -> parallelblock .)
    DEFAULT         reduce using rule 214 (basic_statement -> parallelblock .)
    MINUS           reduce using rule 214 (basic_statement -> parallelblock .)
    PLUS            reduce using rule 214 (basic_statement -> parallelblock .)
    LNOT            reduce using rule 214 (basic_statement -> parallelblock .)
    NOT             reduce using rule 214 (basic_statement -> parallelblock .)
    AND             reduce using rule 214 (basic_statement -> parallelblock .)
    NAND            reduce using rule 214 (basic_statement -> parallelblock .)
    NOR             reduce using rule 214 (basic_statement -> parallelblock .)
    OR              reduce using rule 214 (basic_statement -> parallelblock .)
    XOR             reduce using rule 214 (basic_statement -> parallelblock .)
    XNOR            reduce using rule 214 (basic_statement -> parallelblock .)
    LPAREN          reduce using rule 214 (basic_statement -> parallelblock .)
    LBRACE          reduce using rule 214 (basic_statement -> parallelblock .)
    DOLLER          reduce using rule 214 (basic_statement -> parallelblock .)
    ID              reduce using rule 214 (basic_statement -> parallelblock .)
    INTNUMBER_DEC   reduce using rule 214 (basic_statement -> parallelblock .)
    SIGNED_INTNUMBER_DEC reduce using rule 214 (basic_statement -> parallelblock .)
    INTNUMBER_BIN   reduce using rule 214 (basic_statement -> parallelblock .)
    SIGNED_INTNUMBER_BIN reduce using rule 214 (basic_statement -> parallelblock .)
    INTNUMBER_OCT   reduce using rule 214 (basic_statement -> parallelblock .)
    SIGNED_INTNUMBER_OCT reduce using rule 214 (basic_statement -> parallelblock .)
    INTNUMBER_HEX   reduce using rule 214 (basic_statement -> parallelblock .)
    SIGNED_INTNUMBER_HEX reduce using rule 214 (basic_statement -> parallelblock .)
    FLOATNUMBER     reduce using rule 214 (basic_statement -> parallelblock .)
    STRING_LITERAL  reduce using rule 214 (basic_statement -> parallelblock .)
    JOIN            reduce using rule 214 (basic_statement -> parallelblock .)
    IF              reduce using rule 214 (basic_statement -> parallelblock .)
    CASE            reduce using rule 214 (basic_statement -> parallelblock .)
    FOR             reduce using rule 214 (basic_statement -> parallelblock .)
    WHILE           reduce using rule 214 (basic_statement -> parallelblock .)
    WAIT            reduce using rule 214 (basic_statement -> parallelblock .)
    FOREVER         reduce using rule 214 (basic_statement -> parallelblock .)
    BEGIN           reduce using rule 214 (basic_statement -> parallelblock .)
    FORK            reduce using rule 214 (basic_statement -> parallelblock .)
    DELAY           reduce using rule 214 (basic_statement -> parallelblock .)
    AT              reduce using rule 214 (basic_statement -> parallelblock .)
    DISABLE         reduce using rule 214 (basic_statement -> parallelblock .)
    SEMICOLON       reduce using rule 214 (basic_statement -> parallelblock .)
    ENDMODULE       reduce using rule 214 (basic_statement -> parallelblock .)
    GENERATE        reduce using rule 214 (basic_statement -> parallelblock .)
    INTEGER         reduce using rule 214 (basic_statement -> parallelblock .)
    REAL            reduce using rule 214 (basic_statement -> parallelblock .)
    PARAMETER       reduce using rule 214 (basic_statement -> parallelblock .)
    LOCALPARAM      reduce using rule 214 (basic_statement -> parallelblock .)
    GENVAR          reduce using rule 214 (basic_statement -> parallelblock .)
    ASSIGN          reduce using rule 214 (basic_statement -> parallelblock .)
    ALWAYS          reduce using rule 214 (basic_statement -> parallelblock .)
    INITIAL         reduce using rule 214 (basic_statement -> parallelblock .)
    FUNCTION        reduce using rule 214 (basic_statement -> parallelblock .)
    TASK            reduce using rule 214 (basic_statement -> parallelblock .)
    INPUT           reduce using rule 214 (basic_statement -> parallelblock .)
    OUTPUT          reduce using rule 214 (basic_statement -> parallelblock .)
    INOUT           reduce using rule 214 (basic_statement -> parallelblock .)
    TRI             reduce using rule 214 (basic_statement -> parallelblock .)
    REG             reduce using rule 214 (basic_statement -> parallelblock .)
    WIRE            reduce using rule 214 (basic_statement -> parallelblock .)
    SIGNED          reduce using rule 214 (basic_statement -> parallelblock .)
    ENDGENERATE     reduce using rule 214 (basic_statement -> parallelblock .)
    ELSE            reduce using rule 214 (basic_statement -> parallelblock .)
    END             reduce using rule 214 (basic_statement -> parallelblock .)
    ENDFUNCTION     reduce using rule 214 (basic_statement -> parallelblock .)
    ENDTASK         reduce using rule 214 (basic_statement -> parallelblock .)


state 130

    (207) basic_statement -> for_statement .

    ENDCASE         reduce using rule 207 (basic_statement -> for_statement .)
    DEFAULT         reduce using rule 207 (basic_statement -> for_statement .)
    MINUS           reduce using rule 207 (basic_statement -> for_statement .)
    PLUS            reduce using rule 207 (basic_statement -> for_statement .)
    LNOT            reduce using rule 207 (basic_statement -> for_statement .)
    NOT             reduce using rule 207 (basic_statement -> for_statement .)
    AND             reduce using rule 207 (basic_statement -> for_statement .)
    NAND            reduce using rule 207 (basic_statement -> for_statement .)
    NOR             reduce using rule 207 (basic_statement -> for_statement .)
    OR              reduce using rule 207 (basic_statement -> for_statement .)
    XOR             reduce using rule 207 (basic_statement -> for_statement .)
    XNOR            reduce using rule 207 (basic_statement -> for_statement .)
    LPAREN          reduce using rule 207 (basic_statement -> for_statement .)
    LBRACE          reduce using rule 207 (basic_statement -> for_statement .)
    DOLLER          reduce using rule 207 (basic_statement -> for_statement .)
    ID              reduce using rule 207 (basic_statement -> for_statement .)
    INTNUMBER_DEC   reduce using rule 207 (basic_statement -> for_statement .)
    SIGNED_INTNUMBER_DEC reduce using rule 207 (basic_statement -> for_statement .)
    INTNUMBER_BIN   reduce using rule 207 (basic_statement -> for_statement .)
    SIGNED_INTNUMBER_BIN reduce using rule 207 (basic_statement -> for_statement .)
    INTNUMBER_OCT   reduce using rule 207 (basic_statement -> for_statement .)
    SIGNED_INTNUMBER_OCT reduce using rule 207 (basic_statement -> for_statement .)
    INTNUMBER_HEX   reduce using rule 207 (basic_statement -> for_statement .)
    SIGNED_INTNUMBER_HEX reduce using rule 207 (basic_statement -> for_statement .)
    FLOATNUMBER     reduce using rule 207 (basic_statement -> for_statement .)
    STRING_LITERAL  reduce using rule 207 (basic_statement -> for_statement .)
    JOIN            reduce using rule 207 (basic_statement -> for_statement .)
    IF              reduce using rule 207 (basic_statement -> for_statement .)
    CASE            reduce using rule 207 (basic_statement -> for_statement .)
    FOR             reduce using rule 207 (basic_statement -> for_statement .)
    WHILE           reduce using rule 207 (basic_statement -> for_statement .)
    WAIT            reduce using rule 207 (basic_statement -> for_statement .)
    FOREVER         reduce using rule 207 (basic_statement -> for_statement .)
    BEGIN           reduce using rule 207 (basic_statement -> for_statement .)
    FORK            reduce using rule 207 (basic_statement -> for_statement .)
    DELAY           reduce using rule 207 (basic_statement -> for_statement .)
    AT              reduce using rule 207 (basic_statement -> for_statement .)
    DISABLE         reduce using rule 207 (basic_statement -> for_statement .)
    SEMICOLON       reduce using rule 207 (basic_statement -> for_statement .)
    ENDMODULE       reduce using rule 207 (basic_statement -> for_statement .)
    GENERATE        reduce using rule 207 (basic_statement -> for_statement .)
    INTEGER         reduce using rule 207 (basic_statement -> for_statement .)
    REAL            reduce using rule 207 (basic_statement -> for_statement .)
    PARAMETER       reduce using rule 207 (basic_statement -> for_statement .)
    LOCALPARAM      reduce using rule 207 (basic_statement -> for_statement .)
    GENVAR          reduce using rule 207 (basic_statement -> for_statement .)
    ASSIGN          reduce using rule 207 (basic_statement -> for_statement .)
    ALWAYS          reduce using rule 207 (basic_statement -> for_statement .)
    INITIAL         reduce using rule 207 (basic_statement -> for_statement .)
    FUNCTION        reduce using rule 207 (basic_statement -> for_statement .)
    TASK            reduce using rule 207 (basic_statement -> for_statement .)
    INPUT           reduce using rule 207 (basic_statement -> for_statement .)
    OUTPUT          reduce using rule 207 (basic_statement -> for_statement .)
    INOUT           reduce using rule 207 (basic_statement -> for_statement .)
    TRI             reduce using rule 207 (basic_statement -> for_statement .)
    REG             reduce using rule 207 (basic_statement -> for_statement .)
    WIRE            reduce using rule 207 (basic_statement -> for_statement .)
    SIGNED          reduce using rule 207 (basic_statement -> for_statement .)
    ENDGENERATE     reduce using rule 207 (basic_statement -> for_statement .)
    ELSE            reduce using rule 207 (basic_statement -> for_statement .)
    END             reduce using rule 207 (basic_statement -> for_statement .)
    ENDFUNCTION     reduce using rule 207 (basic_statement -> for_statement .)
    ENDTASK         reduce using rule 207 (basic_statement -> for_statement .)


state 131

    (273) wait_statement -> WAIT . LPAREN cond RPAREN waitcontent_statement

    LPAREN          shift and go to state 268


state 132

    (205) basic_statement -> if_statement .

    ENDCASE         reduce using rule 205 (basic_statement -> if_statement .)
    DEFAULT         reduce using rule 205 (basic_statement -> if_statement .)
    MINUS           reduce using rule 205 (basic_statement -> if_statement .)
    PLUS            reduce using rule 205 (basic_statement -> if_statement .)
    LNOT            reduce using rule 205 (basic_statement -> if_statement .)
    NOT             reduce using rule 205 (basic_statement -> if_statement .)
    AND             reduce using rule 205 (basic_statement -> if_statement .)
    NAND            reduce using rule 205 (basic_statement -> if_statement .)
    NOR             reduce using rule 205 (basic_statement -> if_statement .)
    OR              reduce using rule 205 (basic_statement -> if_statement .)
    XOR             reduce using rule 205 (basic_statement -> if_statement .)
    XNOR            reduce using rule 205 (basic_statement -> if_statement .)
    LPAREN          reduce using rule 205 (basic_statement -> if_statement .)
    LBRACE          reduce using rule 205 (basic_statement -> if_statement .)
    DOLLER          reduce using rule 205 (basic_statement -> if_statement .)
    ID              reduce using rule 205 (basic_statement -> if_statement .)
    INTNUMBER_DEC   reduce using rule 205 (basic_statement -> if_statement .)
    SIGNED_INTNUMBER_DEC reduce using rule 205 (basic_statement -> if_statement .)
    INTNUMBER_BIN   reduce using rule 205 (basic_statement -> if_statement .)
    SIGNED_INTNUMBER_BIN reduce using rule 205 (basic_statement -> if_statement .)
    INTNUMBER_OCT   reduce using rule 205 (basic_statement -> if_statement .)
    SIGNED_INTNUMBER_OCT reduce using rule 205 (basic_statement -> if_statement .)
    INTNUMBER_HEX   reduce using rule 205 (basic_statement -> if_statement .)
    SIGNED_INTNUMBER_HEX reduce using rule 205 (basic_statement -> if_statement .)
    FLOATNUMBER     reduce using rule 205 (basic_statement -> if_statement .)
    STRING_LITERAL  reduce using rule 205 (basic_statement -> if_statement .)
    JOIN            reduce using rule 205 (basic_statement -> if_statement .)
    IF              reduce using rule 205 (basic_statement -> if_statement .)
    CASE            reduce using rule 205 (basic_statement -> if_statement .)
    FOR             reduce using rule 205 (basic_statement -> if_statement .)
    WHILE           reduce using rule 205 (basic_statement -> if_statement .)
    WAIT            reduce using rule 205 (basic_statement -> if_statement .)
    FOREVER         reduce using rule 205 (basic_statement -> if_statement .)
    BEGIN           reduce using rule 205 (basic_statement -> if_statement .)
    FORK            reduce using rule 205 (basic_statement -> if_statement .)
    DELAY           reduce using rule 205 (basic_statement -> if_statement .)
    AT              reduce using rule 205 (basic_statement -> if_statement .)
    DISABLE         reduce using rule 205 (basic_statement -> if_statement .)
    SEMICOLON       reduce using rule 205 (basic_statement -> if_statement .)
    ENDMODULE       reduce using rule 205 (basic_statement -> if_statement .)
    GENERATE        reduce using rule 205 (basic_statement -> if_statement .)
    INTEGER         reduce using rule 205 (basic_statement -> if_statement .)
    REAL            reduce using rule 205 (basic_statement -> if_statement .)
    PARAMETER       reduce using rule 205 (basic_statement -> if_statement .)
    LOCALPARAM      reduce using rule 205 (basic_statement -> if_statement .)
    GENVAR          reduce using rule 205 (basic_statement -> if_statement .)
    ASSIGN          reduce using rule 205 (basic_statement -> if_statement .)
    ALWAYS          reduce using rule 205 (basic_statement -> if_statement .)
    INITIAL         reduce using rule 205 (basic_statement -> if_statement .)
    FUNCTION        reduce using rule 205 (basic_statement -> if_statement .)
    TASK            reduce using rule 205 (basic_statement -> if_statement .)
    INPUT           reduce using rule 205 (basic_statement -> if_statement .)
    OUTPUT          reduce using rule 205 (basic_statement -> if_statement .)
    INOUT           reduce using rule 205 (basic_statement -> if_statement .)
    TRI             reduce using rule 205 (basic_statement -> if_statement .)
    REG             reduce using rule 205 (basic_statement -> if_statement .)
    WIRE            reduce using rule 205 (basic_statement -> if_statement .)
    SIGNED          reduce using rule 205 (basic_statement -> if_statement .)
    ENDGENERATE     reduce using rule 205 (basic_statement -> if_statement .)
    ELSE            reduce using rule 205 (basic_statement -> if_statement .)
    END             reduce using rule 205 (basic_statement -> if_statement .)
    ENDFUNCTION     reduce using rule 205 (basic_statement -> if_statement .)
    ENDTASK         reduce using rule 205 (basic_statement -> if_statement .)


state 133

    (364) single_statement -> disable . SEMICOLON

    SEMICOLON       shift and go to state 269


state 134

    (270) initial -> INITIAL initial_statement .

    ELSE            reduce using rule 270 (initial -> INITIAL initial_statement .)
    ENDGENERATE     reduce using rule 270 (initial -> INITIAL initial_statement .)
    IF              reduce using rule 270 (initial -> INITIAL initial_statement .)
    FOR             reduce using rule 270 (initial -> INITIAL initial_statement .)
    INTEGER         reduce using rule 270 (initial -> INITIAL initial_statement .)
    REAL            reduce using rule 270 (initial -> INITIAL initial_statement .)
    PARAMETER       reduce using rule 270 (initial -> INITIAL initial_statement .)
    LOCALPARAM      reduce using rule 270 (initial -> INITIAL initial_statement .)
    GENVAR          reduce using rule 270 (initial -> INITIAL initial_statement .)
    ASSIGN          reduce using rule 270 (initial -> INITIAL initial_statement .)
    ALWAYS          reduce using rule 270 (initial -> INITIAL initial_statement .)
    INITIAL         reduce using rule 270 (initial -> INITIAL initial_statement .)
    ID              reduce using rule 270 (initial -> INITIAL initial_statement .)
    FUNCTION        reduce using rule 270 (initial -> INITIAL initial_statement .)
    TASK            reduce using rule 270 (initial -> INITIAL initial_statement .)
    LPAREN          reduce using rule 270 (initial -> INITIAL initial_statement .)
    INPUT           reduce using rule 270 (initial -> INITIAL initial_statement .)
    OUTPUT          reduce using rule 270 (initial -> INITIAL initial_statement .)
    INOUT           reduce using rule 270 (initial -> INITIAL initial_statement .)
    TRI             reduce using rule 270 (initial -> INITIAL initial_statement .)
    REG             reduce using rule 270 (initial -> INITIAL initial_statement .)
    WIRE            reduce using rule 270 (initial -> INITIAL initial_statement .)
    SIGNED          reduce using rule 270 (initial -> INITIAL initial_statement .)
    END             reduce using rule 270 (initial -> INITIAL initial_statement .)
    ENDMODULE       reduce using rule 270 (initial -> INITIAL initial_statement .)
    GENERATE        reduce using rule 270 (initial -> INITIAL initial_statement .)


state 135

    (209) basic_statement -> event_statement .

    ENDCASE         reduce using rule 209 (basic_statement -> event_statement .)
    DEFAULT         reduce using rule 209 (basic_statement -> event_statement .)
    MINUS           reduce using rule 209 (basic_statement -> event_statement .)
    PLUS            reduce using rule 209 (basic_statement -> event_statement .)
    LNOT            reduce using rule 209 (basic_statement -> event_statement .)
    NOT             reduce using rule 209 (basic_statement -> event_statement .)
    AND             reduce using rule 209 (basic_statement -> event_statement .)
    NAND            reduce using rule 209 (basic_statement -> event_statement .)
    NOR             reduce using rule 209 (basic_statement -> event_statement .)
    OR              reduce using rule 209 (basic_statement -> event_statement .)
    XOR             reduce using rule 209 (basic_statement -> event_statement .)
    XNOR            reduce using rule 209 (basic_statement -> event_statement .)
    LPAREN          reduce using rule 209 (basic_statement -> event_statement .)
    LBRACE          reduce using rule 209 (basic_statement -> event_statement .)
    DOLLER          reduce using rule 209 (basic_statement -> event_statement .)
    ID              reduce using rule 209 (basic_statement -> event_statement .)
    INTNUMBER_DEC   reduce using rule 209 (basic_statement -> event_statement .)
    SIGNED_INTNUMBER_DEC reduce using rule 209 (basic_statement -> event_statement .)
    INTNUMBER_BIN   reduce using rule 209 (basic_statement -> event_statement .)
    SIGNED_INTNUMBER_BIN reduce using rule 209 (basic_statement -> event_statement .)
    INTNUMBER_OCT   reduce using rule 209 (basic_statement -> event_statement .)
    SIGNED_INTNUMBER_OCT reduce using rule 209 (basic_statement -> event_statement .)
    INTNUMBER_HEX   reduce using rule 209 (basic_statement -> event_statement .)
    SIGNED_INTNUMBER_HEX reduce using rule 209 (basic_statement -> event_statement .)
    FLOATNUMBER     reduce using rule 209 (basic_statement -> event_statement .)
    STRING_LITERAL  reduce using rule 209 (basic_statement -> event_statement .)
    JOIN            reduce using rule 209 (basic_statement -> event_statement .)
    IF              reduce using rule 209 (basic_statement -> event_statement .)
    CASE            reduce using rule 209 (basic_statement -> event_statement .)
    FOR             reduce using rule 209 (basic_statement -> event_statement .)
    WHILE           reduce using rule 209 (basic_statement -> event_statement .)
    WAIT            reduce using rule 209 (basic_statement -> event_statement .)
    FOREVER         reduce using rule 209 (basic_statement -> event_statement .)
    BEGIN           reduce using rule 209 (basic_statement -> event_statement .)
    FORK            reduce using rule 209 (basic_statement -> event_statement .)
    DELAY           reduce using rule 209 (basic_statement -> event_statement .)
    AT              reduce using rule 209 (basic_statement -> event_statement .)
    DISABLE         reduce using rule 209 (basic_statement -> event_statement .)
    SEMICOLON       reduce using rule 209 (basic_statement -> event_statement .)
    ENDMODULE       reduce using rule 209 (basic_statement -> event_statement .)
    GENERATE        reduce using rule 209 (basic_statement -> event_statement .)
    INTEGER         reduce using rule 209 (basic_statement -> event_statement .)
    REAL            reduce using rule 209 (basic_statement -> event_statement .)
    PARAMETER       reduce using rule 209 (basic_statement -> event_statement .)
    LOCALPARAM      reduce using rule 209 (basic_statement -> event_statement .)
    GENVAR          reduce using rule 209 (basic_statement -> event_statement .)
    ASSIGN          reduce using rule 209 (basic_statement -> event_statement .)
    ALWAYS          reduce using rule 209 (basic_statement -> event_statement .)
    INITIAL         reduce using rule 209 (basic_statement -> event_statement .)
    FUNCTION        reduce using rule 209 (basic_statement -> event_statement .)
    TASK            reduce using rule 209 (basic_statement -> event_statement .)
    INPUT           reduce using rule 209 (basic_statement -> event_statement .)
    OUTPUT          reduce using rule 209 (basic_statement -> event_statement .)
    INOUT           reduce using rule 209 (basic_statement -> event_statement .)
    TRI             reduce using rule 209 (basic_statement -> event_statement .)
    REG             reduce using rule 209 (basic_statement -> event_statement .)
    WIRE            reduce using rule 209 (basic_statement -> event_statement .)
    SIGNED          reduce using rule 209 (basic_statement -> event_statement .)
    ENDGENERATE     reduce using rule 209 (basic_statement -> event_statement .)
    ELSE            reduce using rule 209 (basic_statement -> event_statement .)
    END             reduce using rule 209 (basic_statement -> event_statement .)
    ENDFUNCTION     reduce using rule 209 (basic_statement -> event_statement .)
    ENDTASK         reduce using rule 209 (basic_statement -> event_statement .)


state 136

    (262) case_statement -> CASE . LPAREN case_comp RPAREN casecontent_statements ENDCASE

    LPAREN          shift and go to state 270


state 137

    (215) basic_statement -> blocking_substitution .

    ENDCASE         reduce using rule 215 (basic_statement -> blocking_substitution .)
    DEFAULT         reduce using rule 215 (basic_statement -> blocking_substitution .)
    MINUS           reduce using rule 215 (basic_statement -> blocking_substitution .)
    PLUS            reduce using rule 215 (basic_statement -> blocking_substitution .)
    LNOT            reduce using rule 215 (basic_statement -> blocking_substitution .)
    NOT             reduce using rule 215 (basic_statement -> blocking_substitution .)
    AND             reduce using rule 215 (basic_statement -> blocking_substitution .)
    NAND            reduce using rule 215 (basic_statement -> blocking_substitution .)
    NOR             reduce using rule 215 (basic_statement -> blocking_substitution .)
    OR              reduce using rule 215 (basic_statement -> blocking_substitution .)
    XOR             reduce using rule 215 (basic_statement -> blocking_substitution .)
    XNOR            reduce using rule 215 (basic_statement -> blocking_substitution .)
    LPAREN          reduce using rule 215 (basic_statement -> blocking_substitution .)
    LBRACE          reduce using rule 215 (basic_statement -> blocking_substitution .)
    DOLLER          reduce using rule 215 (basic_statement -> blocking_substitution .)
    ID              reduce using rule 215 (basic_statement -> blocking_substitution .)
    INTNUMBER_DEC   reduce using rule 215 (basic_statement -> blocking_substitution .)
    SIGNED_INTNUMBER_DEC reduce using rule 215 (basic_statement -> blocking_substitution .)
    INTNUMBER_BIN   reduce using rule 215 (basic_statement -> blocking_substitution .)
    SIGNED_INTNUMBER_BIN reduce using rule 215 (basic_statement -> blocking_substitution .)
    INTNUMBER_OCT   reduce using rule 215 (basic_statement -> blocking_substitution .)
    SIGNED_INTNUMBER_OCT reduce using rule 215 (basic_statement -> blocking_substitution .)
    INTNUMBER_HEX   reduce using rule 215 (basic_statement -> blocking_substitution .)
    SIGNED_INTNUMBER_HEX reduce using rule 215 (basic_statement -> blocking_substitution .)
    FLOATNUMBER     reduce using rule 215 (basic_statement -> blocking_substitution .)
    STRING_LITERAL  reduce using rule 215 (basic_statement -> blocking_substitution .)
    JOIN            reduce using rule 215 (basic_statement -> blocking_substitution .)
    IF              reduce using rule 215 (basic_statement -> blocking_substitution .)
    CASE            reduce using rule 215 (basic_statement -> blocking_substitution .)
    FOR             reduce using rule 215 (basic_statement -> blocking_substitution .)
    WHILE           reduce using rule 215 (basic_statement -> blocking_substitution .)
    WAIT            reduce using rule 215 (basic_statement -> blocking_substitution .)
    FOREVER         reduce using rule 215 (basic_statement -> blocking_substitution .)
    BEGIN           reduce using rule 215 (basic_statement -> blocking_substitution .)
    FORK            reduce using rule 215 (basic_statement -> blocking_substitution .)
    DELAY           reduce using rule 215 (basic_statement -> blocking_substitution .)
    AT              reduce using rule 215 (basic_statement -> blocking_substitution .)
    DISABLE         reduce using rule 215 (basic_statement -> blocking_substitution .)
    SEMICOLON       reduce using rule 215 (basic_statement -> blocking_substitution .)
    ENDMODULE       reduce using rule 215 (basic_statement -> blocking_substitution .)
    GENERATE        reduce using rule 215 (basic_statement -> blocking_substitution .)
    INTEGER         reduce using rule 215 (basic_statement -> blocking_substitution .)
    REAL            reduce using rule 215 (basic_statement -> blocking_substitution .)
    PARAMETER       reduce using rule 215 (basic_statement -> blocking_substitution .)
    LOCALPARAM      reduce using rule 215 (basic_statement -> blocking_substitution .)
    GENVAR          reduce using rule 215 (basic_statement -> blocking_substitution .)
    ASSIGN          reduce using rule 215 (basic_statement -> blocking_substitution .)
    ALWAYS          reduce using rule 215 (basic_statement -> blocking_substitution .)
    INITIAL         reduce using rule 215 (basic_statement -> blocking_substitution .)
    FUNCTION        reduce using rule 215 (basic_statement -> blocking_substitution .)
    TASK            reduce using rule 215 (basic_statement -> blocking_substitution .)
    INPUT           reduce using rule 215 (basic_statement -> blocking_substitution .)
    OUTPUT          reduce using rule 215 (basic_statement -> blocking_substitution .)
    INOUT           reduce using rule 215 (basic_statement -> blocking_substitution .)
    TRI             reduce using rule 215 (basic_statement -> blocking_substitution .)
    REG             reduce using rule 215 (basic_statement -> blocking_substitution .)
    WIRE            reduce using rule 215 (basic_statement -> blocking_substitution .)
    SIGNED          reduce using rule 215 (basic_statement -> blocking_substitution .)
    ENDGENERATE     reduce using rule 215 (basic_statement -> blocking_substitution .)
    ELSE            reduce using rule 215 (basic_statement -> blocking_substitution .)
    END             reduce using rule 215 (basic_statement -> blocking_substitution .)
    ENDFUNCTION     reduce using rule 215 (basic_statement -> blocking_substitution .)
    ENDTASK         reduce using rule 215 (basic_statement -> blocking_substitution .)


state 138

    (242) parallelblock -> FORK . block_statements JOIN
    (243) parallelblock -> FORK . JOIN
    (229) block_statements -> . block_statements block_statement
    (230) block_statements -> . block_statement
    (231) block_statement -> . basic_statement
    (205) basic_statement -> . if_statement
    (206) basic_statement -> . case_statement
    (207) basic_statement -> . for_statement
    (208) basic_statement -> . while_statement
    (209) basic_statement -> . event_statement
    (210) basic_statement -> . wait_statement
    (211) basic_statement -> . forever_statement
    (212) basic_statement -> . block
    (213) basic_statement -> . namedblock
    (214) basic_statement -> . parallelblock
    (215) basic_statement -> . blocking_substitution
    (216) basic_statement -> . nonblocking_substitution
    (217) basic_statement -> . single_statement
    (244) if_statement -> . IF LPAREN cond RPAREN true_statement ELSE else_statement
    (245) if_statement -> . IF LPAREN cond RPAREN true_statement
    (246) if_statement -> . delays IF LPAREN cond RPAREN true_statement ELSE else_statement
    (247) if_statement -> . delays IF LPAREN cond RPAREN true_statement
    (262) case_statement -> . CASE LPAREN case_comp RPAREN casecontent_statements ENDCASE
    (252) for_statement -> . FOR LPAREN forpre forcond forpost RPAREN forcontent_statement
    (260) while_statement -> . WHILE LPAREN cond RPAREN whilecontent_statement
    (272) event_statement -> . senslist SEMICOLON
    (273) wait_statement -> . WAIT LPAREN cond RPAREN waitcontent_statement
    (276) forever_statement -> . FOREVER basic_statement
    (227) block -> . BEGIN block_statements END
    (228) block -> . BEGIN END
    (232) namedblock -> . BEGIN COLON ID namedblock_statements END
    (233) namedblock -> . BEGIN COLON ID END
    (242) parallelblock -> . FORK block_statements JOIN
    (243) parallelblock -> . FORK JOIN
    (219) blocking_substitution -> . delays lvalue EQUALS delays rvalue SEMICOLON
    (221) nonblocking_substitution -> . delays lvalue LE delays rvalue SEMICOLON
    (362) single_statement -> . DELAY expression SEMICOLON
    (363) single_statement -> . systemcall SEMICOLON
    (364) single_statement -> . disable SEMICOLON
    (222) delays -> . DELAY LPAREN expression RPAREN
    (223) delays -> . DELAY identifier
    (224) delays -> . DELAY intnumber
    (225) delays -> . DELAY floatnumber
    (226) delays -> . empty
    (186) senslist -> . AT LPAREN edgesigs RPAREN
    (193) senslist -> . empty
    (194) senslist -> . AT levelsig
    (195) senslist -> . AT LPAREN levelsigs RPAREN
    (203) senslist -> . AT TIMES
    (204) senslist -> . AT LPAREN TIMES RPAREN
    (319) systemcall -> . DOLLER ID
    (320) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (361) disable -> . DISABLE ID
    (365) empty -> .

  ! shift/reduce conflict for IF resolved as shift
    JOIN            shift and go to state 273
    IF              shift and go to state 150
    CASE            shift and go to state 136
    FOR             shift and go to state 144
    WHILE           shift and go to state 146
    WAIT            shift and go to state 131
    FOREVER         shift and go to state 143
    BEGIN           shift and go to state 153
    FORK            shift and go to state 138
    DELAY           shift and go to state 147
    AT              shift and go to state 159
    DOLLER          shift and go to state 100
    DISABLE         shift and go to state 155
    LBRACE          reduce using rule 365 (empty -> .)
    ID              reduce using rule 365 (empty -> .)
    SEMICOLON       reduce using rule 365 (empty -> .)

  ! IF              [ reduce using rule 365 (empty -> .) ]

    block_statements               shift and go to state 272
    parallelblock                  shift and go to state 129
    for_statement                  shift and go to state 130
    empty                          shift and go to state 157
    if_statement                   shift and go to state 132
    while_statement                shift and go to state 148
    blocking_substitution          shift and go to state 137
    systemcall                     shift and go to state 158
    basic_statement                shift and go to state 274
    event_statement                shift and go to state 135
    wait_statement                 shift and go to state 151
    forever_statement              shift and go to state 152
    case_statement                 shift and go to state 139
    disable                        shift and go to state 133
    senslist                       shift and go to state 154
    single_statement               shift and go to state 140
    block                          shift and go to state 156
    delays                         shift and go to state 141
    nonblocking_substitution       shift and go to state 142
    block_statement                shift and go to state 271
    namedblock                     shift and go to state 145

state 139

    (206) basic_statement -> case_statement .

    ENDCASE         reduce using rule 206 (basic_statement -> case_statement .)
    DEFAULT         reduce using rule 206 (basic_statement -> case_statement .)
    MINUS           reduce using rule 206 (basic_statement -> case_statement .)
    PLUS            reduce using rule 206 (basic_statement -> case_statement .)
    LNOT            reduce using rule 206 (basic_statement -> case_statement .)
    NOT             reduce using rule 206 (basic_statement -> case_statement .)
    AND             reduce using rule 206 (basic_statement -> case_statement .)
    NAND            reduce using rule 206 (basic_statement -> case_statement .)
    NOR             reduce using rule 206 (basic_statement -> case_statement .)
    OR              reduce using rule 206 (basic_statement -> case_statement .)
    XOR             reduce using rule 206 (basic_statement -> case_statement .)
    XNOR            reduce using rule 206 (basic_statement -> case_statement .)
    LPAREN          reduce using rule 206 (basic_statement -> case_statement .)
    LBRACE          reduce using rule 206 (basic_statement -> case_statement .)
    DOLLER          reduce using rule 206 (basic_statement -> case_statement .)
    ID              reduce using rule 206 (basic_statement -> case_statement .)
    INTNUMBER_DEC   reduce using rule 206 (basic_statement -> case_statement .)
    SIGNED_INTNUMBER_DEC reduce using rule 206 (basic_statement -> case_statement .)
    INTNUMBER_BIN   reduce using rule 206 (basic_statement -> case_statement .)
    SIGNED_INTNUMBER_BIN reduce using rule 206 (basic_statement -> case_statement .)
    INTNUMBER_OCT   reduce using rule 206 (basic_statement -> case_statement .)
    SIGNED_INTNUMBER_OCT reduce using rule 206 (basic_statement -> case_statement .)
    INTNUMBER_HEX   reduce using rule 206 (basic_statement -> case_statement .)
    SIGNED_INTNUMBER_HEX reduce using rule 206 (basic_statement -> case_statement .)
    FLOATNUMBER     reduce using rule 206 (basic_statement -> case_statement .)
    STRING_LITERAL  reduce using rule 206 (basic_statement -> case_statement .)
    JOIN            reduce using rule 206 (basic_statement -> case_statement .)
    IF              reduce using rule 206 (basic_statement -> case_statement .)
    CASE            reduce using rule 206 (basic_statement -> case_statement .)
    FOR             reduce using rule 206 (basic_statement -> case_statement .)
    WHILE           reduce using rule 206 (basic_statement -> case_statement .)
    WAIT            reduce using rule 206 (basic_statement -> case_statement .)
    FOREVER         reduce using rule 206 (basic_statement -> case_statement .)
    BEGIN           reduce using rule 206 (basic_statement -> case_statement .)
    FORK            reduce using rule 206 (basic_statement -> case_statement .)
    DELAY           reduce using rule 206 (basic_statement -> case_statement .)
    AT              reduce using rule 206 (basic_statement -> case_statement .)
    DISABLE         reduce using rule 206 (basic_statement -> case_statement .)
    SEMICOLON       reduce using rule 206 (basic_statement -> case_statement .)
    ENDMODULE       reduce using rule 206 (basic_statement -> case_statement .)
    GENERATE        reduce using rule 206 (basic_statement -> case_statement .)
    INTEGER         reduce using rule 206 (basic_statement -> case_statement .)
    REAL            reduce using rule 206 (basic_statement -> case_statement .)
    PARAMETER       reduce using rule 206 (basic_statement -> case_statement .)
    LOCALPARAM      reduce using rule 206 (basic_statement -> case_statement .)
    GENVAR          reduce using rule 206 (basic_statement -> case_statement .)
    ASSIGN          reduce using rule 206 (basic_statement -> case_statement .)
    ALWAYS          reduce using rule 206 (basic_statement -> case_statement .)
    INITIAL         reduce using rule 206 (basic_statement -> case_statement .)
    FUNCTION        reduce using rule 206 (basic_statement -> case_statement .)
    TASK            reduce using rule 206 (basic_statement -> case_statement .)
    INPUT           reduce using rule 206 (basic_statement -> case_statement .)
    OUTPUT          reduce using rule 206 (basic_statement -> case_statement .)
    INOUT           reduce using rule 206 (basic_statement -> case_statement .)
    TRI             reduce using rule 206 (basic_statement -> case_statement .)
    REG             reduce using rule 206 (basic_statement -> case_statement .)
    WIRE            reduce using rule 206 (basic_statement -> case_statement .)
    SIGNED          reduce using rule 206 (basic_statement -> case_statement .)
    ENDGENERATE     reduce using rule 206 (basic_statement -> case_statement .)
    ELSE            reduce using rule 206 (basic_statement -> case_statement .)
    END             reduce using rule 206 (basic_statement -> case_statement .)
    ENDFUNCTION     reduce using rule 206 (basic_statement -> case_statement .)
    ENDTASK         reduce using rule 206 (basic_statement -> case_statement .)


state 140

    (217) basic_statement -> single_statement .

    ENDCASE         reduce using rule 217 (basic_statement -> single_statement .)
    DEFAULT         reduce using rule 217 (basic_statement -> single_statement .)
    MINUS           reduce using rule 217 (basic_statement -> single_statement .)
    PLUS            reduce using rule 217 (basic_statement -> single_statement .)
    LNOT            reduce using rule 217 (basic_statement -> single_statement .)
    NOT             reduce using rule 217 (basic_statement -> single_statement .)
    AND             reduce using rule 217 (basic_statement -> single_statement .)
    NAND            reduce using rule 217 (basic_statement -> single_statement .)
    NOR             reduce using rule 217 (basic_statement -> single_statement .)
    OR              reduce using rule 217 (basic_statement -> single_statement .)
    XOR             reduce using rule 217 (basic_statement -> single_statement .)
    XNOR            reduce using rule 217 (basic_statement -> single_statement .)
    LPAREN          reduce using rule 217 (basic_statement -> single_statement .)
    LBRACE          reduce using rule 217 (basic_statement -> single_statement .)
    DOLLER          reduce using rule 217 (basic_statement -> single_statement .)
    ID              reduce using rule 217 (basic_statement -> single_statement .)
    INTNUMBER_DEC   reduce using rule 217 (basic_statement -> single_statement .)
    SIGNED_INTNUMBER_DEC reduce using rule 217 (basic_statement -> single_statement .)
    INTNUMBER_BIN   reduce using rule 217 (basic_statement -> single_statement .)
    SIGNED_INTNUMBER_BIN reduce using rule 217 (basic_statement -> single_statement .)
    INTNUMBER_OCT   reduce using rule 217 (basic_statement -> single_statement .)
    SIGNED_INTNUMBER_OCT reduce using rule 217 (basic_statement -> single_statement .)
    INTNUMBER_HEX   reduce using rule 217 (basic_statement -> single_statement .)
    SIGNED_INTNUMBER_HEX reduce using rule 217 (basic_statement -> single_statement .)
    FLOATNUMBER     reduce using rule 217 (basic_statement -> single_statement .)
    STRING_LITERAL  reduce using rule 217 (basic_statement -> single_statement .)
    JOIN            reduce using rule 217 (basic_statement -> single_statement .)
    IF              reduce using rule 217 (basic_statement -> single_statement .)
    CASE            reduce using rule 217 (basic_statement -> single_statement .)
    FOR             reduce using rule 217 (basic_statement -> single_statement .)
    WHILE           reduce using rule 217 (basic_statement -> single_statement .)
    WAIT            reduce using rule 217 (basic_statement -> single_statement .)
    FOREVER         reduce using rule 217 (basic_statement -> single_statement .)
    BEGIN           reduce using rule 217 (basic_statement -> single_statement .)
    FORK            reduce using rule 217 (basic_statement -> single_statement .)
    DELAY           reduce using rule 217 (basic_statement -> single_statement .)
    AT              reduce using rule 217 (basic_statement -> single_statement .)
    DISABLE         reduce using rule 217 (basic_statement -> single_statement .)
    SEMICOLON       reduce using rule 217 (basic_statement -> single_statement .)
    ENDMODULE       reduce using rule 217 (basic_statement -> single_statement .)
    GENERATE        reduce using rule 217 (basic_statement -> single_statement .)
    INTEGER         reduce using rule 217 (basic_statement -> single_statement .)
    REAL            reduce using rule 217 (basic_statement -> single_statement .)
    PARAMETER       reduce using rule 217 (basic_statement -> single_statement .)
    LOCALPARAM      reduce using rule 217 (basic_statement -> single_statement .)
    GENVAR          reduce using rule 217 (basic_statement -> single_statement .)
    ASSIGN          reduce using rule 217 (basic_statement -> single_statement .)
    ALWAYS          reduce using rule 217 (basic_statement -> single_statement .)
    INITIAL         reduce using rule 217 (basic_statement -> single_statement .)
    FUNCTION        reduce using rule 217 (basic_statement -> single_statement .)
    TASK            reduce using rule 217 (basic_statement -> single_statement .)
    INPUT           reduce using rule 217 (basic_statement -> single_statement .)
    OUTPUT          reduce using rule 217 (basic_statement -> single_statement .)
    INOUT           reduce using rule 217 (basic_statement -> single_statement .)
    TRI             reduce using rule 217 (basic_statement -> single_statement .)
    REG             reduce using rule 217 (basic_statement -> single_statement .)
    WIRE            reduce using rule 217 (basic_statement -> single_statement .)
    SIGNED          reduce using rule 217 (basic_statement -> single_statement .)
    ENDGENERATE     reduce using rule 217 (basic_statement -> single_statement .)
    ELSE            reduce using rule 217 (basic_statement -> single_statement .)
    END             reduce using rule 217 (basic_statement -> single_statement .)
    ENDFUNCTION     reduce using rule 217 (basic_statement -> single_statement .)
    ENDTASK         reduce using rule 217 (basic_statement -> single_statement .)


state 141

    (246) if_statement -> delays . IF LPAREN cond RPAREN true_statement ELSE else_statement
    (247) if_statement -> delays . IF LPAREN cond RPAREN true_statement
    (219) blocking_substitution -> delays . lvalue EQUALS delays rvalue SEMICOLON
    (221) nonblocking_substitution -> delays . lvalue LE delays rvalue SEMICOLON
    (111) lvalue -> . lpartselect
    (112) lvalue -> . lpointer
    (113) lvalue -> . lconcat
    (114) lvalue -> . identifier
    (97) lpartselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (98) lpartselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (99) lpartselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (100) lpartselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (101) lpartselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (102) lpartselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (103) lpointer -> . pointer
    (104) lconcat -> . LBRACE lconcatlist RBRACE
    (357) identifier -> . ID
    (358) identifier -> . scope ID
    (170) pointer -> . identifier LBRACKET expression RBRACKET
    (171) pointer -> . pointer LBRACKET expression RBRACKET
    (359) scope -> . identifier DOT
    (360) scope -> . pointer DOT

    IF              shift and go to state 275
    LBRACE          shift and go to state 162
    ID              shift and go to state 85

    lpointer                       shift and go to state 165
    lpartselect                    shift and go to state 166
    lvalue                         shift and go to state 276
    identifier                     shift and go to state 168
    pointer                        shift and go to state 169
    scope                          shift and go to state 84
    lconcat                        shift and go to state 164

state 142

    (216) basic_statement -> nonblocking_substitution .

    ENDCASE         reduce using rule 216 (basic_statement -> nonblocking_substitution .)
    DEFAULT         reduce using rule 216 (basic_statement -> nonblocking_substitution .)
    MINUS           reduce using rule 216 (basic_statement -> nonblocking_substitution .)
    PLUS            reduce using rule 216 (basic_statement -> nonblocking_substitution .)
    LNOT            reduce using rule 216 (basic_statement -> nonblocking_substitution .)
    NOT             reduce using rule 216 (basic_statement -> nonblocking_substitution .)
    AND             reduce using rule 216 (basic_statement -> nonblocking_substitution .)
    NAND            reduce using rule 216 (basic_statement -> nonblocking_substitution .)
    NOR             reduce using rule 216 (basic_statement -> nonblocking_substitution .)
    OR              reduce using rule 216 (basic_statement -> nonblocking_substitution .)
    XOR             reduce using rule 216 (basic_statement -> nonblocking_substitution .)
    XNOR            reduce using rule 216 (basic_statement -> nonblocking_substitution .)
    LPAREN          reduce using rule 216 (basic_statement -> nonblocking_substitution .)
    LBRACE          reduce using rule 216 (basic_statement -> nonblocking_substitution .)
    DOLLER          reduce using rule 216 (basic_statement -> nonblocking_substitution .)
    ID              reduce using rule 216 (basic_statement -> nonblocking_substitution .)
    INTNUMBER_DEC   reduce using rule 216 (basic_statement -> nonblocking_substitution .)
    SIGNED_INTNUMBER_DEC reduce using rule 216 (basic_statement -> nonblocking_substitution .)
    INTNUMBER_BIN   reduce using rule 216 (basic_statement -> nonblocking_substitution .)
    SIGNED_INTNUMBER_BIN reduce using rule 216 (basic_statement -> nonblocking_substitution .)
    INTNUMBER_OCT   reduce using rule 216 (basic_statement -> nonblocking_substitution .)
    SIGNED_INTNUMBER_OCT reduce using rule 216 (basic_statement -> nonblocking_substitution .)
    INTNUMBER_HEX   reduce using rule 216 (basic_statement -> nonblocking_substitution .)
    SIGNED_INTNUMBER_HEX reduce using rule 216 (basic_statement -> nonblocking_substitution .)
    FLOATNUMBER     reduce using rule 216 (basic_statement -> nonblocking_substitution .)
    STRING_LITERAL  reduce using rule 216 (basic_statement -> nonblocking_substitution .)
    JOIN            reduce using rule 216 (basic_statement -> nonblocking_substitution .)
    IF              reduce using rule 216 (basic_statement -> nonblocking_substitution .)
    CASE            reduce using rule 216 (basic_statement -> nonblocking_substitution .)
    FOR             reduce using rule 216 (basic_statement -> nonblocking_substitution .)
    WHILE           reduce using rule 216 (basic_statement -> nonblocking_substitution .)
    WAIT            reduce using rule 216 (basic_statement -> nonblocking_substitution .)
    FOREVER         reduce using rule 216 (basic_statement -> nonblocking_substitution .)
    BEGIN           reduce using rule 216 (basic_statement -> nonblocking_substitution .)
    FORK            reduce using rule 216 (basic_statement -> nonblocking_substitution .)
    DELAY           reduce using rule 216 (basic_statement -> nonblocking_substitution .)
    AT              reduce using rule 216 (basic_statement -> nonblocking_substitution .)
    DISABLE         reduce using rule 216 (basic_statement -> nonblocking_substitution .)
    SEMICOLON       reduce using rule 216 (basic_statement -> nonblocking_substitution .)
    ENDMODULE       reduce using rule 216 (basic_statement -> nonblocking_substitution .)
    GENERATE        reduce using rule 216 (basic_statement -> nonblocking_substitution .)
    INTEGER         reduce using rule 216 (basic_statement -> nonblocking_substitution .)
    REAL            reduce using rule 216 (basic_statement -> nonblocking_substitution .)
    PARAMETER       reduce using rule 216 (basic_statement -> nonblocking_substitution .)
    LOCALPARAM      reduce using rule 216 (basic_statement -> nonblocking_substitution .)
    GENVAR          reduce using rule 216 (basic_statement -> nonblocking_substitution .)
    ASSIGN          reduce using rule 216 (basic_statement -> nonblocking_substitution .)
    ALWAYS          reduce using rule 216 (basic_statement -> nonblocking_substitution .)
    INITIAL         reduce using rule 216 (basic_statement -> nonblocking_substitution .)
    FUNCTION        reduce using rule 216 (basic_statement -> nonblocking_substitution .)
    TASK            reduce using rule 216 (basic_statement -> nonblocking_substitution .)
    INPUT           reduce using rule 216 (basic_statement -> nonblocking_substitution .)
    OUTPUT          reduce using rule 216 (basic_statement -> nonblocking_substitution .)
    INOUT           reduce using rule 216 (basic_statement -> nonblocking_substitution .)
    TRI             reduce using rule 216 (basic_statement -> nonblocking_substitution .)
    REG             reduce using rule 216 (basic_statement -> nonblocking_substitution .)
    WIRE            reduce using rule 216 (basic_statement -> nonblocking_substitution .)
    SIGNED          reduce using rule 216 (basic_statement -> nonblocking_substitution .)
    ENDGENERATE     reduce using rule 216 (basic_statement -> nonblocking_substitution .)
    ELSE            reduce using rule 216 (basic_statement -> nonblocking_substitution .)
    END             reduce using rule 216 (basic_statement -> nonblocking_substitution .)
    ENDFUNCTION     reduce using rule 216 (basic_statement -> nonblocking_substitution .)
    ENDTASK         reduce using rule 216 (basic_statement -> nonblocking_substitution .)


state 143

    (276) forever_statement -> FOREVER . basic_statement
    (205) basic_statement -> . if_statement
    (206) basic_statement -> . case_statement
    (207) basic_statement -> . for_statement
    (208) basic_statement -> . while_statement
    (209) basic_statement -> . event_statement
    (210) basic_statement -> . wait_statement
    (211) basic_statement -> . forever_statement
    (212) basic_statement -> . block
    (213) basic_statement -> . namedblock
    (214) basic_statement -> . parallelblock
    (215) basic_statement -> . blocking_substitution
    (216) basic_statement -> . nonblocking_substitution
    (217) basic_statement -> . single_statement
    (244) if_statement -> . IF LPAREN cond RPAREN true_statement ELSE else_statement
    (245) if_statement -> . IF LPAREN cond RPAREN true_statement
    (246) if_statement -> . delays IF LPAREN cond RPAREN true_statement ELSE else_statement
    (247) if_statement -> . delays IF LPAREN cond RPAREN true_statement
    (262) case_statement -> . CASE LPAREN case_comp RPAREN casecontent_statements ENDCASE
    (252) for_statement -> . FOR LPAREN forpre forcond forpost RPAREN forcontent_statement
    (260) while_statement -> . WHILE LPAREN cond RPAREN whilecontent_statement
    (272) event_statement -> . senslist SEMICOLON
    (273) wait_statement -> . WAIT LPAREN cond RPAREN waitcontent_statement
    (276) forever_statement -> . FOREVER basic_statement
    (227) block -> . BEGIN block_statements END
    (228) block -> . BEGIN END
    (232) namedblock -> . BEGIN COLON ID namedblock_statements END
    (233) namedblock -> . BEGIN COLON ID END
    (242) parallelblock -> . FORK block_statements JOIN
    (243) parallelblock -> . FORK JOIN
    (219) blocking_substitution -> . delays lvalue EQUALS delays rvalue SEMICOLON
    (221) nonblocking_substitution -> . delays lvalue LE delays rvalue SEMICOLON
    (362) single_statement -> . DELAY expression SEMICOLON
    (363) single_statement -> . systemcall SEMICOLON
    (364) single_statement -> . disable SEMICOLON
    (222) delays -> . DELAY LPAREN expression RPAREN
    (223) delays -> . DELAY identifier
    (224) delays -> . DELAY intnumber
    (225) delays -> . DELAY floatnumber
    (226) delays -> . empty
    (186) senslist -> . AT LPAREN edgesigs RPAREN
    (193) senslist -> . empty
    (194) senslist -> . AT levelsig
    (195) senslist -> . AT LPAREN levelsigs RPAREN
    (203) senslist -> . AT TIMES
    (204) senslist -> . AT LPAREN TIMES RPAREN
    (319) systemcall -> . DOLLER ID
    (320) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (361) disable -> . DISABLE ID
    (365) empty -> .

  ! shift/reduce conflict for IF resolved as shift
    IF              shift and go to state 150
    CASE            shift and go to state 136
    FOR             shift and go to state 144
    WHILE           shift and go to state 146
    WAIT            shift and go to state 131
    FOREVER         shift and go to state 143
    BEGIN           shift and go to state 153
    FORK            shift and go to state 138
    DELAY           shift and go to state 147
    AT              shift and go to state 159
    DOLLER          shift and go to state 100
    DISABLE         shift and go to state 155
    LBRACE          reduce using rule 365 (empty -> .)
    ID              reduce using rule 365 (empty -> .)
    SEMICOLON       reduce using rule 365 (empty -> .)

  ! IF              [ reduce using rule 365 (empty -> .) ]

    parallelblock                  shift and go to state 129
    for_statement                  shift and go to state 130
    empty                          shift and go to state 157
    if_statement                   shift and go to state 132
    while_statement                shift and go to state 148
    blocking_substitution          shift and go to state 137
    systemcall                     shift and go to state 158
    basic_statement                shift and go to state 277
    event_statement                shift and go to state 135
    wait_statement                 shift and go to state 151
    forever_statement              shift and go to state 152
    case_statement                 shift and go to state 139
    disable                        shift and go to state 133
    senslist                       shift and go to state 154
    single_statement               shift and go to state 140
    block                          shift and go to state 156
    delays                         shift and go to state 141
    nonblocking_substitution       shift and go to state 142
    namedblock                     shift and go to state 145

state 144

    (252) for_statement -> FOR . LPAREN forpre forcond forpost RPAREN forcontent_statement

    LPAREN          shift and go to state 278


state 145

    (213) basic_statement -> namedblock .

    ENDCASE         reduce using rule 213 (basic_statement -> namedblock .)
    DEFAULT         reduce using rule 213 (basic_statement -> namedblock .)
    MINUS           reduce using rule 213 (basic_statement -> namedblock .)
    PLUS            reduce using rule 213 (basic_statement -> namedblock .)
    LNOT            reduce using rule 213 (basic_statement -> namedblock .)
    NOT             reduce using rule 213 (basic_statement -> namedblock .)
    AND             reduce using rule 213 (basic_statement -> namedblock .)
    NAND            reduce using rule 213 (basic_statement -> namedblock .)
    NOR             reduce using rule 213 (basic_statement -> namedblock .)
    OR              reduce using rule 213 (basic_statement -> namedblock .)
    XOR             reduce using rule 213 (basic_statement -> namedblock .)
    XNOR            reduce using rule 213 (basic_statement -> namedblock .)
    LPAREN          reduce using rule 213 (basic_statement -> namedblock .)
    LBRACE          reduce using rule 213 (basic_statement -> namedblock .)
    DOLLER          reduce using rule 213 (basic_statement -> namedblock .)
    ID              reduce using rule 213 (basic_statement -> namedblock .)
    INTNUMBER_DEC   reduce using rule 213 (basic_statement -> namedblock .)
    SIGNED_INTNUMBER_DEC reduce using rule 213 (basic_statement -> namedblock .)
    INTNUMBER_BIN   reduce using rule 213 (basic_statement -> namedblock .)
    SIGNED_INTNUMBER_BIN reduce using rule 213 (basic_statement -> namedblock .)
    INTNUMBER_OCT   reduce using rule 213 (basic_statement -> namedblock .)
    SIGNED_INTNUMBER_OCT reduce using rule 213 (basic_statement -> namedblock .)
    INTNUMBER_HEX   reduce using rule 213 (basic_statement -> namedblock .)
    SIGNED_INTNUMBER_HEX reduce using rule 213 (basic_statement -> namedblock .)
    FLOATNUMBER     reduce using rule 213 (basic_statement -> namedblock .)
    STRING_LITERAL  reduce using rule 213 (basic_statement -> namedblock .)
    JOIN            reduce using rule 213 (basic_statement -> namedblock .)
    IF              reduce using rule 213 (basic_statement -> namedblock .)
    CASE            reduce using rule 213 (basic_statement -> namedblock .)
    FOR             reduce using rule 213 (basic_statement -> namedblock .)
    WHILE           reduce using rule 213 (basic_statement -> namedblock .)
    WAIT            reduce using rule 213 (basic_statement -> namedblock .)
    FOREVER         reduce using rule 213 (basic_statement -> namedblock .)
    BEGIN           reduce using rule 213 (basic_statement -> namedblock .)
    FORK            reduce using rule 213 (basic_statement -> namedblock .)
    DELAY           reduce using rule 213 (basic_statement -> namedblock .)
    AT              reduce using rule 213 (basic_statement -> namedblock .)
    DISABLE         reduce using rule 213 (basic_statement -> namedblock .)
    SEMICOLON       reduce using rule 213 (basic_statement -> namedblock .)
    ENDMODULE       reduce using rule 213 (basic_statement -> namedblock .)
    GENERATE        reduce using rule 213 (basic_statement -> namedblock .)
    INTEGER         reduce using rule 213 (basic_statement -> namedblock .)
    REAL            reduce using rule 213 (basic_statement -> namedblock .)
    PARAMETER       reduce using rule 213 (basic_statement -> namedblock .)
    LOCALPARAM      reduce using rule 213 (basic_statement -> namedblock .)
    GENVAR          reduce using rule 213 (basic_statement -> namedblock .)
    ASSIGN          reduce using rule 213 (basic_statement -> namedblock .)
    ALWAYS          reduce using rule 213 (basic_statement -> namedblock .)
    INITIAL         reduce using rule 213 (basic_statement -> namedblock .)
    FUNCTION        reduce using rule 213 (basic_statement -> namedblock .)
    TASK            reduce using rule 213 (basic_statement -> namedblock .)
    INPUT           reduce using rule 213 (basic_statement -> namedblock .)
    OUTPUT          reduce using rule 213 (basic_statement -> namedblock .)
    INOUT           reduce using rule 213 (basic_statement -> namedblock .)
    TRI             reduce using rule 213 (basic_statement -> namedblock .)
    REG             reduce using rule 213 (basic_statement -> namedblock .)
    WIRE            reduce using rule 213 (basic_statement -> namedblock .)
    SIGNED          reduce using rule 213 (basic_statement -> namedblock .)
    ENDGENERATE     reduce using rule 213 (basic_statement -> namedblock .)
    ELSE            reduce using rule 213 (basic_statement -> namedblock .)
    END             reduce using rule 213 (basic_statement -> namedblock .)
    ENDFUNCTION     reduce using rule 213 (basic_statement -> namedblock .)
    ENDTASK         reduce using rule 213 (basic_statement -> namedblock .)


state 146

    (260) while_statement -> WHILE . LPAREN cond RPAREN whilecontent_statement

    LPAREN          shift and go to state 279


state 147

    (362) single_statement -> DELAY . expression SEMICOLON
    (222) delays -> DELAY . LPAREN expression RPAREN
    (223) delays -> DELAY . identifier
    (224) delays -> DELAY . intnumber
    (225) delays -> DELAY . floatnumber
    (116) expression -> . MINUS expression
    (117) expression -> . PLUS expression
    (118) expression -> . LNOT expression
    (119) expression -> . NOT expression
    (120) expression -> . AND expression
    (121) expression -> . NAND expression
    (122) expression -> . NOR expression
    (123) expression -> . OR expression
    (124) expression -> . XOR expression
    (125) expression -> . XNOR expression
    (126) expression -> . expression POWER expression
    (127) expression -> . expression TIMES expression
    (128) expression -> . expression DIVIDE expression
    (129) expression -> . expression MOD expression
    (130) expression -> . expression PLUS expression
    (131) expression -> . expression MINUS expression
    (132) expression -> . expression LSHIFT expression
    (133) expression -> . expression RSHIFT expression
    (134) expression -> . expression LSHIFTA expression
    (135) expression -> . expression RSHIFTA expression
    (136) expression -> . expression LT expression
    (137) expression -> . expression GT expression
    (138) expression -> . expression LE expression
    (139) expression -> . expression GE expression
    (140) expression -> . expression EQ expression
    (141) expression -> . expression NE expression
    (142) expression -> . expression EQL expression
    (143) expression -> . expression NEL expression
    (144) expression -> . expression AND expression
    (145) expression -> . expression XOR expression
    (146) expression -> . expression XNOR expression
    (147) expression -> . expression OR expression
    (148) expression -> . expression LAND expression
    (149) expression -> . expression LOR expression
    (150) expression -> . expression COND expression COLON expression
    (151) expression -> . LPAREN expression RPAREN
    (152) expression -> . concat
    (153) expression -> . repeat
    (154) expression -> . partselect
    (155) expression -> . pointer
    (156) expression -> . functioncall
    (157) expression -> . systemcall
    (158) expression -> . identifier
    (159) expression -> . const_expression
    (357) identifier -> . ID
    (358) identifier -> . scope ID
    (176) intnumber -> . INTNUMBER_DEC
    (177) intnumber -> . SIGNED_INTNUMBER_DEC
    (178) intnumber -> . INTNUMBER_BIN
    (179) intnumber -> . SIGNED_INTNUMBER_BIN
    (180) intnumber -> . INTNUMBER_OCT
    (181) intnumber -> . SIGNED_INTNUMBER_OCT
    (182) intnumber -> . INTNUMBER_HEX
    (183) intnumber -> . SIGNED_INTNUMBER_HEX
    (175) floatnumber -> . FLOATNUMBER
    (160) concat -> . LBRACE concatlist RBRACE
    (163) repeat -> . LBRACE expression concat RBRACE
    (164) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (165) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (166) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (167) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (168) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (169) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (170) pointer -> . identifier LBRACKET expression RBRACKET
    (171) pointer -> . pointer LBRACKET expression RBRACKET
    (339) functioncall -> . identifier LPAREN func_args RPAREN
    (319) systemcall -> . DOLLER ID
    (320) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (172) const_expression -> . intnumber
    (173) const_expression -> . floatnumber
    (174) const_expression -> . stringliteral
    (359) scope -> . identifier DOT
    (360) scope -> . pointer DOT
    (184) stringliteral -> . STRING_LITERAL

    LPAREN          shift and go to state 284
    MINUS           shift and go to state 97
    PLUS            shift and go to state 89
    LNOT            shift and go to state 95
    NOT             shift and go to state 78
    AND             shift and go to state 91
    NAND            shift and go to state 98
    NOR             shift and go to state 76
    OR              shift and go to state 105
    XOR             shift and go to state 82
    XNOR            shift and go to state 87
    ID              shift and go to state 85
    INTNUMBER_DEC   shift and go to state 79
    SIGNED_INTNUMBER_DEC shift and go to state 101
    INTNUMBER_BIN   shift and go to state 111
    SIGNED_INTNUMBER_BIN shift and go to state 112
    INTNUMBER_OCT   shift and go to state 86
    SIGNED_INTNUMBER_OCT shift and go to state 106
    INTNUMBER_HEX   shift and go to state 93
    SIGNED_INTNUMBER_HEX shift and go to state 83
    FLOATNUMBER     shift and go to state 102
    LBRACE          shift and go to state 77
    DOLLER          shift and go to state 100
    STRING_LITERAL  shift and go to state 107

    stringliteral                  shift and go to state 99
    intnumber                      shift and go to state 281
    expression                     shift and go to state 283
    repeat                         shift and go to state 108
    partselect                     shift and go to state 103
    identifier                     shift and go to state 280
    pointer                        shift and go to state 80
    functioncall                   shift and go to state 94
    scope                          shift and go to state 84
    systemcall                     shift and go to state 109
    const_expression               shift and go to state 110
    concat                         shift and go to state 88
    floatnumber                    shift and go to state 282

state 148

    (208) basic_statement -> while_statement .

    ENDCASE         reduce using rule 208 (basic_statement -> while_statement .)
    DEFAULT         reduce using rule 208 (basic_statement -> while_statement .)
    MINUS           reduce using rule 208 (basic_statement -> while_statement .)
    PLUS            reduce using rule 208 (basic_statement -> while_statement .)
    LNOT            reduce using rule 208 (basic_statement -> while_statement .)
    NOT             reduce using rule 208 (basic_statement -> while_statement .)
    AND             reduce using rule 208 (basic_statement -> while_statement .)
    NAND            reduce using rule 208 (basic_statement -> while_statement .)
    NOR             reduce using rule 208 (basic_statement -> while_statement .)
    OR              reduce using rule 208 (basic_statement -> while_statement .)
    XOR             reduce using rule 208 (basic_statement -> while_statement .)
    XNOR            reduce using rule 208 (basic_statement -> while_statement .)
    LPAREN          reduce using rule 208 (basic_statement -> while_statement .)
    LBRACE          reduce using rule 208 (basic_statement -> while_statement .)
    DOLLER          reduce using rule 208 (basic_statement -> while_statement .)
    ID              reduce using rule 208 (basic_statement -> while_statement .)
    INTNUMBER_DEC   reduce using rule 208 (basic_statement -> while_statement .)
    SIGNED_INTNUMBER_DEC reduce using rule 208 (basic_statement -> while_statement .)
    INTNUMBER_BIN   reduce using rule 208 (basic_statement -> while_statement .)
    SIGNED_INTNUMBER_BIN reduce using rule 208 (basic_statement -> while_statement .)
    INTNUMBER_OCT   reduce using rule 208 (basic_statement -> while_statement .)
    SIGNED_INTNUMBER_OCT reduce using rule 208 (basic_statement -> while_statement .)
    INTNUMBER_HEX   reduce using rule 208 (basic_statement -> while_statement .)
    SIGNED_INTNUMBER_HEX reduce using rule 208 (basic_statement -> while_statement .)
    FLOATNUMBER     reduce using rule 208 (basic_statement -> while_statement .)
    STRING_LITERAL  reduce using rule 208 (basic_statement -> while_statement .)
    JOIN            reduce using rule 208 (basic_statement -> while_statement .)
    IF              reduce using rule 208 (basic_statement -> while_statement .)
    CASE            reduce using rule 208 (basic_statement -> while_statement .)
    FOR             reduce using rule 208 (basic_statement -> while_statement .)
    WHILE           reduce using rule 208 (basic_statement -> while_statement .)
    WAIT            reduce using rule 208 (basic_statement -> while_statement .)
    FOREVER         reduce using rule 208 (basic_statement -> while_statement .)
    BEGIN           reduce using rule 208 (basic_statement -> while_statement .)
    FORK            reduce using rule 208 (basic_statement -> while_statement .)
    DELAY           reduce using rule 208 (basic_statement -> while_statement .)
    AT              reduce using rule 208 (basic_statement -> while_statement .)
    DISABLE         reduce using rule 208 (basic_statement -> while_statement .)
    SEMICOLON       reduce using rule 208 (basic_statement -> while_statement .)
    ENDMODULE       reduce using rule 208 (basic_statement -> while_statement .)
    GENERATE        reduce using rule 208 (basic_statement -> while_statement .)
    INTEGER         reduce using rule 208 (basic_statement -> while_statement .)
    REAL            reduce using rule 208 (basic_statement -> while_statement .)
    PARAMETER       reduce using rule 208 (basic_statement -> while_statement .)
    LOCALPARAM      reduce using rule 208 (basic_statement -> while_statement .)
    GENVAR          reduce using rule 208 (basic_statement -> while_statement .)
    ASSIGN          reduce using rule 208 (basic_statement -> while_statement .)
    ALWAYS          reduce using rule 208 (basic_statement -> while_statement .)
    INITIAL         reduce using rule 208 (basic_statement -> while_statement .)
    FUNCTION        reduce using rule 208 (basic_statement -> while_statement .)
    TASK            reduce using rule 208 (basic_statement -> while_statement .)
    INPUT           reduce using rule 208 (basic_statement -> while_statement .)
    OUTPUT          reduce using rule 208 (basic_statement -> while_statement .)
    INOUT           reduce using rule 208 (basic_statement -> while_statement .)
    TRI             reduce using rule 208 (basic_statement -> while_statement .)
    REG             reduce using rule 208 (basic_statement -> while_statement .)
    WIRE            reduce using rule 208 (basic_statement -> while_statement .)
    SIGNED          reduce using rule 208 (basic_statement -> while_statement .)
    ENDGENERATE     reduce using rule 208 (basic_statement -> while_statement .)
    ELSE            reduce using rule 208 (basic_statement -> while_statement .)
    END             reduce using rule 208 (basic_statement -> while_statement .)
    ENDFUNCTION     reduce using rule 208 (basic_statement -> while_statement .)
    ENDTASK         reduce using rule 208 (basic_statement -> while_statement .)


state 149

    (271) initial_statement -> basic_statement .

    ENDMODULE       reduce using rule 271 (initial_statement -> basic_statement .)
    GENERATE        reduce using rule 271 (initial_statement -> basic_statement .)
    INTEGER         reduce using rule 271 (initial_statement -> basic_statement .)
    REAL            reduce using rule 271 (initial_statement -> basic_statement .)
    PARAMETER       reduce using rule 271 (initial_statement -> basic_statement .)
    LOCALPARAM      reduce using rule 271 (initial_statement -> basic_statement .)
    GENVAR          reduce using rule 271 (initial_statement -> basic_statement .)
    ASSIGN          reduce using rule 271 (initial_statement -> basic_statement .)
    ALWAYS          reduce using rule 271 (initial_statement -> basic_statement .)
    INITIAL         reduce using rule 271 (initial_statement -> basic_statement .)
    ID              reduce using rule 271 (initial_statement -> basic_statement .)
    FUNCTION        reduce using rule 271 (initial_statement -> basic_statement .)
    TASK            reduce using rule 271 (initial_statement -> basic_statement .)
    LPAREN          reduce using rule 271 (initial_statement -> basic_statement .)
    INPUT           reduce using rule 271 (initial_statement -> basic_statement .)
    OUTPUT          reduce using rule 271 (initial_statement -> basic_statement .)
    INOUT           reduce using rule 271 (initial_statement -> basic_statement .)
    TRI             reduce using rule 271 (initial_statement -> basic_statement .)
    REG             reduce using rule 271 (initial_statement -> basic_statement .)
    WIRE            reduce using rule 271 (initial_statement -> basic_statement .)
    SIGNED          reduce using rule 271 (initial_statement -> basic_statement .)
    ENDGENERATE     reduce using rule 271 (initial_statement -> basic_statement .)
    IF              reduce using rule 271 (initial_statement -> basic_statement .)
    FOR             reduce using rule 271 (initial_statement -> basic_statement .)
    ELSE            reduce using rule 271 (initial_statement -> basic_statement .)
    END             reduce using rule 271 (initial_statement -> basic_statement .)


state 150

    (244) if_statement -> IF . LPAREN cond RPAREN true_statement ELSE else_statement
    (245) if_statement -> IF . LPAREN cond RPAREN true_statement

    LPAREN          shift and go to state 285


state 151

    (210) basic_statement -> wait_statement .

    ENDCASE         reduce using rule 210 (basic_statement -> wait_statement .)
    DEFAULT         reduce using rule 210 (basic_statement -> wait_statement .)
    MINUS           reduce using rule 210 (basic_statement -> wait_statement .)
    PLUS            reduce using rule 210 (basic_statement -> wait_statement .)
    LNOT            reduce using rule 210 (basic_statement -> wait_statement .)
    NOT             reduce using rule 210 (basic_statement -> wait_statement .)
    AND             reduce using rule 210 (basic_statement -> wait_statement .)
    NAND            reduce using rule 210 (basic_statement -> wait_statement .)
    NOR             reduce using rule 210 (basic_statement -> wait_statement .)
    OR              reduce using rule 210 (basic_statement -> wait_statement .)
    XOR             reduce using rule 210 (basic_statement -> wait_statement .)
    XNOR            reduce using rule 210 (basic_statement -> wait_statement .)
    LPAREN          reduce using rule 210 (basic_statement -> wait_statement .)
    LBRACE          reduce using rule 210 (basic_statement -> wait_statement .)
    DOLLER          reduce using rule 210 (basic_statement -> wait_statement .)
    ID              reduce using rule 210 (basic_statement -> wait_statement .)
    INTNUMBER_DEC   reduce using rule 210 (basic_statement -> wait_statement .)
    SIGNED_INTNUMBER_DEC reduce using rule 210 (basic_statement -> wait_statement .)
    INTNUMBER_BIN   reduce using rule 210 (basic_statement -> wait_statement .)
    SIGNED_INTNUMBER_BIN reduce using rule 210 (basic_statement -> wait_statement .)
    INTNUMBER_OCT   reduce using rule 210 (basic_statement -> wait_statement .)
    SIGNED_INTNUMBER_OCT reduce using rule 210 (basic_statement -> wait_statement .)
    INTNUMBER_HEX   reduce using rule 210 (basic_statement -> wait_statement .)
    SIGNED_INTNUMBER_HEX reduce using rule 210 (basic_statement -> wait_statement .)
    FLOATNUMBER     reduce using rule 210 (basic_statement -> wait_statement .)
    STRING_LITERAL  reduce using rule 210 (basic_statement -> wait_statement .)
    JOIN            reduce using rule 210 (basic_statement -> wait_statement .)
    IF              reduce using rule 210 (basic_statement -> wait_statement .)
    CASE            reduce using rule 210 (basic_statement -> wait_statement .)
    FOR             reduce using rule 210 (basic_statement -> wait_statement .)
    WHILE           reduce using rule 210 (basic_statement -> wait_statement .)
    WAIT            reduce using rule 210 (basic_statement -> wait_statement .)
    FOREVER         reduce using rule 210 (basic_statement -> wait_statement .)
    BEGIN           reduce using rule 210 (basic_statement -> wait_statement .)
    FORK            reduce using rule 210 (basic_statement -> wait_statement .)
    DELAY           reduce using rule 210 (basic_statement -> wait_statement .)
    AT              reduce using rule 210 (basic_statement -> wait_statement .)
    DISABLE         reduce using rule 210 (basic_statement -> wait_statement .)
    SEMICOLON       reduce using rule 210 (basic_statement -> wait_statement .)
    ENDMODULE       reduce using rule 210 (basic_statement -> wait_statement .)
    GENERATE        reduce using rule 210 (basic_statement -> wait_statement .)
    INTEGER         reduce using rule 210 (basic_statement -> wait_statement .)
    REAL            reduce using rule 210 (basic_statement -> wait_statement .)
    PARAMETER       reduce using rule 210 (basic_statement -> wait_statement .)
    LOCALPARAM      reduce using rule 210 (basic_statement -> wait_statement .)
    GENVAR          reduce using rule 210 (basic_statement -> wait_statement .)
    ASSIGN          reduce using rule 210 (basic_statement -> wait_statement .)
    ALWAYS          reduce using rule 210 (basic_statement -> wait_statement .)
    INITIAL         reduce using rule 210 (basic_statement -> wait_statement .)
    FUNCTION        reduce using rule 210 (basic_statement -> wait_statement .)
    TASK            reduce using rule 210 (basic_statement -> wait_statement .)
    INPUT           reduce using rule 210 (basic_statement -> wait_statement .)
    OUTPUT          reduce using rule 210 (basic_statement -> wait_statement .)
    INOUT           reduce using rule 210 (basic_statement -> wait_statement .)
    TRI             reduce using rule 210 (basic_statement -> wait_statement .)
    REG             reduce using rule 210 (basic_statement -> wait_statement .)
    WIRE            reduce using rule 210 (basic_statement -> wait_statement .)
    SIGNED          reduce using rule 210 (basic_statement -> wait_statement .)
    ENDGENERATE     reduce using rule 210 (basic_statement -> wait_statement .)
    ELSE            reduce using rule 210 (basic_statement -> wait_statement .)
    END             reduce using rule 210 (basic_statement -> wait_statement .)
    ENDFUNCTION     reduce using rule 210 (basic_statement -> wait_statement .)
    ENDTASK         reduce using rule 210 (basic_statement -> wait_statement .)


state 152

    (211) basic_statement -> forever_statement .

    ENDCASE         reduce using rule 211 (basic_statement -> forever_statement .)
    DEFAULT         reduce using rule 211 (basic_statement -> forever_statement .)
    MINUS           reduce using rule 211 (basic_statement -> forever_statement .)
    PLUS            reduce using rule 211 (basic_statement -> forever_statement .)
    LNOT            reduce using rule 211 (basic_statement -> forever_statement .)
    NOT             reduce using rule 211 (basic_statement -> forever_statement .)
    AND             reduce using rule 211 (basic_statement -> forever_statement .)
    NAND            reduce using rule 211 (basic_statement -> forever_statement .)
    NOR             reduce using rule 211 (basic_statement -> forever_statement .)
    OR              reduce using rule 211 (basic_statement -> forever_statement .)
    XOR             reduce using rule 211 (basic_statement -> forever_statement .)
    XNOR            reduce using rule 211 (basic_statement -> forever_statement .)
    LPAREN          reduce using rule 211 (basic_statement -> forever_statement .)
    LBRACE          reduce using rule 211 (basic_statement -> forever_statement .)
    DOLLER          reduce using rule 211 (basic_statement -> forever_statement .)
    ID              reduce using rule 211 (basic_statement -> forever_statement .)
    INTNUMBER_DEC   reduce using rule 211 (basic_statement -> forever_statement .)
    SIGNED_INTNUMBER_DEC reduce using rule 211 (basic_statement -> forever_statement .)
    INTNUMBER_BIN   reduce using rule 211 (basic_statement -> forever_statement .)
    SIGNED_INTNUMBER_BIN reduce using rule 211 (basic_statement -> forever_statement .)
    INTNUMBER_OCT   reduce using rule 211 (basic_statement -> forever_statement .)
    SIGNED_INTNUMBER_OCT reduce using rule 211 (basic_statement -> forever_statement .)
    INTNUMBER_HEX   reduce using rule 211 (basic_statement -> forever_statement .)
    SIGNED_INTNUMBER_HEX reduce using rule 211 (basic_statement -> forever_statement .)
    FLOATNUMBER     reduce using rule 211 (basic_statement -> forever_statement .)
    STRING_LITERAL  reduce using rule 211 (basic_statement -> forever_statement .)
    JOIN            reduce using rule 211 (basic_statement -> forever_statement .)
    IF              reduce using rule 211 (basic_statement -> forever_statement .)
    CASE            reduce using rule 211 (basic_statement -> forever_statement .)
    FOR             reduce using rule 211 (basic_statement -> forever_statement .)
    WHILE           reduce using rule 211 (basic_statement -> forever_statement .)
    WAIT            reduce using rule 211 (basic_statement -> forever_statement .)
    FOREVER         reduce using rule 211 (basic_statement -> forever_statement .)
    BEGIN           reduce using rule 211 (basic_statement -> forever_statement .)
    FORK            reduce using rule 211 (basic_statement -> forever_statement .)
    DELAY           reduce using rule 211 (basic_statement -> forever_statement .)
    AT              reduce using rule 211 (basic_statement -> forever_statement .)
    DISABLE         reduce using rule 211 (basic_statement -> forever_statement .)
    SEMICOLON       reduce using rule 211 (basic_statement -> forever_statement .)
    ENDMODULE       reduce using rule 211 (basic_statement -> forever_statement .)
    GENERATE        reduce using rule 211 (basic_statement -> forever_statement .)
    INTEGER         reduce using rule 211 (basic_statement -> forever_statement .)
    REAL            reduce using rule 211 (basic_statement -> forever_statement .)
    PARAMETER       reduce using rule 211 (basic_statement -> forever_statement .)
    LOCALPARAM      reduce using rule 211 (basic_statement -> forever_statement .)
    GENVAR          reduce using rule 211 (basic_statement -> forever_statement .)
    ASSIGN          reduce using rule 211 (basic_statement -> forever_statement .)
    ALWAYS          reduce using rule 211 (basic_statement -> forever_statement .)
    INITIAL         reduce using rule 211 (basic_statement -> forever_statement .)
    FUNCTION        reduce using rule 211 (basic_statement -> forever_statement .)
    TASK            reduce using rule 211 (basic_statement -> forever_statement .)
    INPUT           reduce using rule 211 (basic_statement -> forever_statement .)
    OUTPUT          reduce using rule 211 (basic_statement -> forever_statement .)
    INOUT           reduce using rule 211 (basic_statement -> forever_statement .)
    TRI             reduce using rule 211 (basic_statement -> forever_statement .)
    REG             reduce using rule 211 (basic_statement -> forever_statement .)
    WIRE            reduce using rule 211 (basic_statement -> forever_statement .)
    SIGNED          reduce using rule 211 (basic_statement -> forever_statement .)
    ENDGENERATE     reduce using rule 211 (basic_statement -> forever_statement .)
    ELSE            reduce using rule 211 (basic_statement -> forever_statement .)
    END             reduce using rule 211 (basic_statement -> forever_statement .)
    ENDFUNCTION     reduce using rule 211 (basic_statement -> forever_statement .)
    ENDTASK         reduce using rule 211 (basic_statement -> forever_statement .)


state 153

    (227) block -> BEGIN . block_statements END
    (228) block -> BEGIN . END
    (232) namedblock -> BEGIN . COLON ID namedblock_statements END
    (233) namedblock -> BEGIN . COLON ID END
    (229) block_statements -> . block_statements block_statement
    (230) block_statements -> . block_statement
    (231) block_statement -> . basic_statement
    (205) basic_statement -> . if_statement
    (206) basic_statement -> . case_statement
    (207) basic_statement -> . for_statement
    (208) basic_statement -> . while_statement
    (209) basic_statement -> . event_statement
    (210) basic_statement -> . wait_statement
    (211) basic_statement -> . forever_statement
    (212) basic_statement -> . block
    (213) basic_statement -> . namedblock
    (214) basic_statement -> . parallelblock
    (215) basic_statement -> . blocking_substitution
    (216) basic_statement -> . nonblocking_substitution
    (217) basic_statement -> . single_statement
    (244) if_statement -> . IF LPAREN cond RPAREN true_statement ELSE else_statement
    (245) if_statement -> . IF LPAREN cond RPAREN true_statement
    (246) if_statement -> . delays IF LPAREN cond RPAREN true_statement ELSE else_statement
    (247) if_statement -> . delays IF LPAREN cond RPAREN true_statement
    (262) case_statement -> . CASE LPAREN case_comp RPAREN casecontent_statements ENDCASE
    (252) for_statement -> . FOR LPAREN forpre forcond forpost RPAREN forcontent_statement
    (260) while_statement -> . WHILE LPAREN cond RPAREN whilecontent_statement
    (272) event_statement -> . senslist SEMICOLON
    (273) wait_statement -> . WAIT LPAREN cond RPAREN waitcontent_statement
    (276) forever_statement -> . FOREVER basic_statement
    (227) block -> . BEGIN block_statements END
    (228) block -> . BEGIN END
    (232) namedblock -> . BEGIN COLON ID namedblock_statements END
    (233) namedblock -> . BEGIN COLON ID END
    (242) parallelblock -> . FORK block_statements JOIN
    (243) parallelblock -> . FORK JOIN
    (219) blocking_substitution -> . delays lvalue EQUALS delays rvalue SEMICOLON
    (221) nonblocking_substitution -> . delays lvalue LE delays rvalue SEMICOLON
    (362) single_statement -> . DELAY expression SEMICOLON
    (363) single_statement -> . systemcall SEMICOLON
    (364) single_statement -> . disable SEMICOLON
    (222) delays -> . DELAY LPAREN expression RPAREN
    (223) delays -> . DELAY identifier
    (224) delays -> . DELAY intnumber
    (225) delays -> . DELAY floatnumber
    (226) delays -> . empty
    (186) senslist -> . AT LPAREN edgesigs RPAREN
    (193) senslist -> . empty
    (194) senslist -> . AT levelsig
    (195) senslist -> . AT LPAREN levelsigs RPAREN
    (203) senslist -> . AT TIMES
    (204) senslist -> . AT LPAREN TIMES RPAREN
    (319) systemcall -> . DOLLER ID
    (320) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (361) disable -> . DISABLE ID
    (365) empty -> .

  ! shift/reduce conflict for IF resolved as shift
    END             shift and go to state 286
    COLON           shift and go to state 288
    IF              shift and go to state 150
    CASE            shift and go to state 136
    FOR             shift and go to state 144
    WHILE           shift and go to state 146
    WAIT            shift and go to state 131
    FOREVER         shift and go to state 143
    BEGIN           shift and go to state 153
    FORK            shift and go to state 138
    DELAY           shift and go to state 147
    AT              shift and go to state 159
    DOLLER          shift and go to state 100
    DISABLE         shift and go to state 155
    LBRACE          reduce using rule 365 (empty -> .)
    ID              reduce using rule 365 (empty -> .)
    SEMICOLON       reduce using rule 365 (empty -> .)

  ! IF              [ reduce using rule 365 (empty -> .) ]

    block_statements               shift and go to state 287
    parallelblock                  shift and go to state 129
    for_statement                  shift and go to state 130
    empty                          shift and go to state 157
    if_statement                   shift and go to state 132
    while_statement                shift and go to state 148
    blocking_substitution          shift and go to state 137
    systemcall                     shift and go to state 158
    basic_statement                shift and go to state 274
    event_statement                shift and go to state 135
    wait_statement                 shift and go to state 151
    forever_statement              shift and go to state 152
    case_statement                 shift and go to state 139
    disable                        shift and go to state 133
    senslist                       shift and go to state 154
    single_statement               shift and go to state 140
    block                          shift and go to state 156
    delays                         shift and go to state 141
    nonblocking_substitution       shift and go to state 142
    block_statement                shift and go to state 271
    namedblock                     shift and go to state 145

state 154

    (272) event_statement -> senslist . SEMICOLON

    SEMICOLON       shift and go to state 289


state 155

    (361) disable -> DISABLE . ID

    ID              shift and go to state 290


state 156

    (212) basic_statement -> block .

    ENDCASE         reduce using rule 212 (basic_statement -> block .)
    DEFAULT         reduce using rule 212 (basic_statement -> block .)
    MINUS           reduce using rule 212 (basic_statement -> block .)
    PLUS            reduce using rule 212 (basic_statement -> block .)
    LNOT            reduce using rule 212 (basic_statement -> block .)
    NOT             reduce using rule 212 (basic_statement -> block .)
    AND             reduce using rule 212 (basic_statement -> block .)
    NAND            reduce using rule 212 (basic_statement -> block .)
    NOR             reduce using rule 212 (basic_statement -> block .)
    OR              reduce using rule 212 (basic_statement -> block .)
    XOR             reduce using rule 212 (basic_statement -> block .)
    XNOR            reduce using rule 212 (basic_statement -> block .)
    LPAREN          reduce using rule 212 (basic_statement -> block .)
    LBRACE          reduce using rule 212 (basic_statement -> block .)
    DOLLER          reduce using rule 212 (basic_statement -> block .)
    ID              reduce using rule 212 (basic_statement -> block .)
    INTNUMBER_DEC   reduce using rule 212 (basic_statement -> block .)
    SIGNED_INTNUMBER_DEC reduce using rule 212 (basic_statement -> block .)
    INTNUMBER_BIN   reduce using rule 212 (basic_statement -> block .)
    SIGNED_INTNUMBER_BIN reduce using rule 212 (basic_statement -> block .)
    INTNUMBER_OCT   reduce using rule 212 (basic_statement -> block .)
    SIGNED_INTNUMBER_OCT reduce using rule 212 (basic_statement -> block .)
    INTNUMBER_HEX   reduce using rule 212 (basic_statement -> block .)
    SIGNED_INTNUMBER_HEX reduce using rule 212 (basic_statement -> block .)
    FLOATNUMBER     reduce using rule 212 (basic_statement -> block .)
    STRING_LITERAL  reduce using rule 212 (basic_statement -> block .)
    JOIN            reduce using rule 212 (basic_statement -> block .)
    IF              reduce using rule 212 (basic_statement -> block .)
    CASE            reduce using rule 212 (basic_statement -> block .)
    FOR             reduce using rule 212 (basic_statement -> block .)
    WHILE           reduce using rule 212 (basic_statement -> block .)
    WAIT            reduce using rule 212 (basic_statement -> block .)
    FOREVER         reduce using rule 212 (basic_statement -> block .)
    BEGIN           reduce using rule 212 (basic_statement -> block .)
    FORK            reduce using rule 212 (basic_statement -> block .)
    DELAY           reduce using rule 212 (basic_statement -> block .)
    AT              reduce using rule 212 (basic_statement -> block .)
    DISABLE         reduce using rule 212 (basic_statement -> block .)
    SEMICOLON       reduce using rule 212 (basic_statement -> block .)
    ENDMODULE       reduce using rule 212 (basic_statement -> block .)
    GENERATE        reduce using rule 212 (basic_statement -> block .)
    INTEGER         reduce using rule 212 (basic_statement -> block .)
    REAL            reduce using rule 212 (basic_statement -> block .)
    PARAMETER       reduce using rule 212 (basic_statement -> block .)
    LOCALPARAM      reduce using rule 212 (basic_statement -> block .)
    GENVAR          reduce using rule 212 (basic_statement -> block .)
    ASSIGN          reduce using rule 212 (basic_statement -> block .)
    ALWAYS          reduce using rule 212 (basic_statement -> block .)
    INITIAL         reduce using rule 212 (basic_statement -> block .)
    FUNCTION        reduce using rule 212 (basic_statement -> block .)
    TASK            reduce using rule 212 (basic_statement -> block .)
    INPUT           reduce using rule 212 (basic_statement -> block .)
    OUTPUT          reduce using rule 212 (basic_statement -> block .)
    INOUT           reduce using rule 212 (basic_statement -> block .)
    TRI             reduce using rule 212 (basic_statement -> block .)
    REG             reduce using rule 212 (basic_statement -> block .)
    WIRE            reduce using rule 212 (basic_statement -> block .)
    SIGNED          reduce using rule 212 (basic_statement -> block .)
    ENDGENERATE     reduce using rule 212 (basic_statement -> block .)
    ELSE            reduce using rule 212 (basic_statement -> block .)
    END             reduce using rule 212 (basic_statement -> block .)
    ENDFUNCTION     reduce using rule 212 (basic_statement -> block .)
    ENDTASK         reduce using rule 212 (basic_statement -> block .)


state 157

    (226) delays -> empty .
    (193) senslist -> empty .

    IF              reduce using rule 226 (delays -> empty .)
    LBRACE          reduce using rule 226 (delays -> empty .)
    ID              reduce using rule 226 (delays -> empty .)
    SEMICOLON       reduce using rule 193 (senslist -> empty .)


state 158

    (363) single_statement -> systemcall . SEMICOLON

    SEMICOLON       shift and go to state 291


state 159

    (186) senslist -> AT . LPAREN edgesigs RPAREN
    (194) senslist -> AT . levelsig
    (195) senslist -> AT . LPAREN levelsigs RPAREN
    (203) senslist -> AT . TIMES
    (204) senslist -> AT . LPAREN TIMES RPAREN
    (196) levelsig -> . levelsig_base
    (197) levelsig_base -> . identifier
    (198) levelsig_base -> . pointer
    (199) levelsig_base -> . partselect
    (357) identifier -> . ID
    (358) identifier -> . scope ID
    (170) pointer -> . identifier LBRACKET expression RBRACKET
    (171) pointer -> . pointer LBRACKET expression RBRACKET
    (164) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (165) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (166) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (167) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (168) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (169) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (359) scope -> . identifier DOT
    (360) scope -> . pointer DOT

    LPAREN          shift and go to state 298
    TIMES           shift and go to state 292
    ID              shift and go to state 85

    pointer                        shift and go to state 296
    scope                          shift and go to state 84
    levelsig                       shift and go to state 297
    levelsig_base                  shift and go to state 293
    partselect                     shift and go to state 294
    identifier                     shift and go to state 295

state 160

    (193) senslist -> empty .

    IF              reduce using rule 193 (senslist -> empty .)
    CASE            reduce using rule 193 (senslist -> empty .)
    FOR             reduce using rule 193 (senslist -> empty .)
    WHILE           reduce using rule 193 (senslist -> empty .)
    WAIT            reduce using rule 193 (senslist -> empty .)
    FOREVER         reduce using rule 193 (senslist -> empty .)
    BEGIN           reduce using rule 193 (senslist -> empty .)
    FORK            reduce using rule 193 (senslist -> empty .)
    DELAY           reduce using rule 193 (senslist -> empty .)
    AT              reduce using rule 193 (senslist -> empty .)
    DOLLER          reduce using rule 193 (senslist -> empty .)
    DISABLE         reduce using rule 193 (senslist -> empty .)
    LBRACE          reduce using rule 193 (senslist -> empty .)
    ID              reduce using rule 193 (senslist -> empty .)
    SEMICOLON       reduce using rule 193 (senslist -> empty .)


state 161

    (185) always -> ALWAYS senslist . always_statement
    (218) always_statement -> . basic_statement
    (205) basic_statement -> . if_statement
    (206) basic_statement -> . case_statement
    (207) basic_statement -> . for_statement
    (208) basic_statement -> . while_statement
    (209) basic_statement -> . event_statement
    (210) basic_statement -> . wait_statement
    (211) basic_statement -> . forever_statement
    (212) basic_statement -> . block
    (213) basic_statement -> . namedblock
    (214) basic_statement -> . parallelblock
    (215) basic_statement -> . blocking_substitution
    (216) basic_statement -> . nonblocking_substitution
    (217) basic_statement -> . single_statement
    (244) if_statement -> . IF LPAREN cond RPAREN true_statement ELSE else_statement
    (245) if_statement -> . IF LPAREN cond RPAREN true_statement
    (246) if_statement -> . delays IF LPAREN cond RPAREN true_statement ELSE else_statement
    (247) if_statement -> . delays IF LPAREN cond RPAREN true_statement
    (262) case_statement -> . CASE LPAREN case_comp RPAREN casecontent_statements ENDCASE
    (252) for_statement -> . FOR LPAREN forpre forcond forpost RPAREN forcontent_statement
    (260) while_statement -> . WHILE LPAREN cond RPAREN whilecontent_statement
    (272) event_statement -> . senslist SEMICOLON
    (273) wait_statement -> . WAIT LPAREN cond RPAREN waitcontent_statement
    (276) forever_statement -> . FOREVER basic_statement
    (227) block -> . BEGIN block_statements END
    (228) block -> . BEGIN END
    (232) namedblock -> . BEGIN COLON ID namedblock_statements END
    (233) namedblock -> . BEGIN COLON ID END
    (242) parallelblock -> . FORK block_statements JOIN
    (243) parallelblock -> . FORK JOIN
    (219) blocking_substitution -> . delays lvalue EQUALS delays rvalue SEMICOLON
    (221) nonblocking_substitution -> . delays lvalue LE delays rvalue SEMICOLON
    (362) single_statement -> . DELAY expression SEMICOLON
    (363) single_statement -> . systemcall SEMICOLON
    (364) single_statement -> . disable SEMICOLON
    (222) delays -> . DELAY LPAREN expression RPAREN
    (223) delays -> . DELAY identifier
    (224) delays -> . DELAY intnumber
    (225) delays -> . DELAY floatnumber
    (226) delays -> . empty
    (186) senslist -> . AT LPAREN edgesigs RPAREN
    (193) senslist -> . empty
    (194) senslist -> . AT levelsig
    (195) senslist -> . AT LPAREN levelsigs RPAREN
    (203) senslist -> . AT TIMES
    (204) senslist -> . AT LPAREN TIMES RPAREN
    (319) systemcall -> . DOLLER ID
    (320) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (361) disable -> . DISABLE ID
    (365) empty -> .

  ! shift/reduce conflict for IF resolved as shift
    IF              shift and go to state 150
    CASE            shift and go to state 136
    FOR             shift and go to state 144
    WHILE           shift and go to state 146
    WAIT            shift and go to state 131
    FOREVER         shift and go to state 143
    BEGIN           shift and go to state 153
    FORK            shift and go to state 138
    DELAY           shift and go to state 147
    AT              shift and go to state 159
    DOLLER          shift and go to state 100
    DISABLE         shift and go to state 155
    LBRACE          reduce using rule 365 (empty -> .)
    ID              reduce using rule 365 (empty -> .)
    SEMICOLON       reduce using rule 365 (empty -> .)

  ! IF              [ reduce using rule 365 (empty -> .) ]

    parallelblock                  shift and go to state 129
    for_statement                  shift and go to state 130
    empty                          shift and go to state 157
    if_statement                   shift and go to state 132
    while_statement                shift and go to state 148
    blocking_substitution          shift and go to state 137
    systemcall                     shift and go to state 158
    basic_statement                shift and go to state 300
    always_statement               shift and go to state 299
    event_statement                shift and go to state 135
    wait_statement                 shift and go to state 151
    forever_statement              shift and go to state 152
    case_statement                 shift and go to state 139
    disable                        shift and go to state 133
    senslist                       shift and go to state 154
    single_statement               shift and go to state 140
    block                          shift and go to state 156
    delays                         shift and go to state 141
    nonblocking_substitution       shift and go to state 142
    namedblock                     shift and go to state 145

state 162

    (104) lconcat -> LBRACE . lconcatlist RBRACE
    (105) lconcatlist -> . lconcatlist COMMA lconcat_one
    (106) lconcatlist -> . lconcat_one
    (107) lconcat_one -> . identifier
    (108) lconcat_one -> . lpartselect
    (109) lconcat_one -> . lpointer
    (110) lconcat_one -> . lconcat
    (357) identifier -> . ID
    (358) identifier -> . scope ID
    (97) lpartselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (98) lpartselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (99) lpartselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (100) lpartselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (101) lpartselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (102) lpartselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (103) lpointer -> . pointer
    (104) lconcat -> . LBRACE lconcatlist RBRACE
    (359) scope -> . identifier DOT
    (360) scope -> . pointer DOT
    (170) pointer -> . identifier LBRACKET expression RBRACKET
    (171) pointer -> . pointer LBRACKET expression RBRACKET

    ID              shift and go to state 85
    LBRACE          shift and go to state 162

    pointer                        shift and go to state 305
    lconcat_one                    shift and go to state 301
    scope                          shift and go to state 84
    lconcatlist                    shift and go to state 306
    lpointer                       shift and go to state 302
    lpartselect                    shift and go to state 303
    identifier                     shift and go to state 304
    lconcat                        shift and go to state 307

state 163

    (226) delays -> empty .

    MINUS           reduce using rule 226 (delays -> empty .)
    PLUS            reduce using rule 226 (delays -> empty .)
    LNOT            reduce using rule 226 (delays -> empty .)
    NOT             reduce using rule 226 (delays -> empty .)
    AND             reduce using rule 226 (delays -> empty .)
    NAND            reduce using rule 226 (delays -> empty .)
    NOR             reduce using rule 226 (delays -> empty .)
    OR              reduce using rule 226 (delays -> empty .)
    XOR             reduce using rule 226 (delays -> empty .)
    XNOR            reduce using rule 226 (delays -> empty .)
    LPAREN          reduce using rule 226 (delays -> empty .)
    LBRACE          reduce using rule 226 (delays -> empty .)
    DOLLER          reduce using rule 226 (delays -> empty .)
    ID              reduce using rule 226 (delays -> empty .)
    INTNUMBER_DEC   reduce using rule 226 (delays -> empty .)
    SIGNED_INTNUMBER_DEC reduce using rule 226 (delays -> empty .)
    INTNUMBER_BIN   reduce using rule 226 (delays -> empty .)
    SIGNED_INTNUMBER_BIN reduce using rule 226 (delays -> empty .)
    INTNUMBER_OCT   reduce using rule 226 (delays -> empty .)
    SIGNED_INTNUMBER_OCT reduce using rule 226 (delays -> empty .)
    INTNUMBER_HEX   reduce using rule 226 (delays -> empty .)
    SIGNED_INTNUMBER_HEX reduce using rule 226 (delays -> empty .)
    FLOATNUMBER     reduce using rule 226 (delays -> empty .)
    STRING_LITERAL  reduce using rule 226 (delays -> empty .)
    IF              reduce using rule 226 (delays -> empty .)


state 164

    (113) lvalue -> lconcat .

    EQUALS          reduce using rule 113 (lvalue -> lconcat .)
    LE              reduce using rule 113 (lvalue -> lconcat .)


state 165

    (112) lvalue -> lpointer .

    EQUALS          reduce using rule 112 (lvalue -> lpointer .)
    LE              reduce using rule 112 (lvalue -> lpointer .)


state 166

    (111) lvalue -> lpartselect .

    EQUALS          reduce using rule 111 (lvalue -> lpartselect .)
    LE              reduce using rule 111 (lvalue -> lpartselect .)


state 167

    (95) assignment -> ASSIGN lvalue . EQUALS rvalue SEMICOLON

    EQUALS          shift and go to state 308


state 168

    (114) lvalue -> identifier .
    (100) lpartselect -> identifier . LBRACKET expression COLON expression RBRACKET
    (101) lpartselect -> identifier . LBRACKET expression PLUSCOLON expression RBRACKET
    (102) lpartselect -> identifier . LBRACKET expression MINUSCOLON expression RBRACKET
    (170) pointer -> identifier . LBRACKET expression RBRACKET
    (359) scope -> identifier . DOT

    EQUALS          reduce using rule 114 (lvalue -> identifier .)
    LE              reduce using rule 114 (lvalue -> identifier .)
    LBRACKET        shift and go to state 309
    DOT             shift and go to state 252


state 169

    (97) lpartselect -> pointer . LBRACKET expression COLON expression RBRACKET
    (98) lpartselect -> pointer . LBRACKET expression PLUSCOLON expression RBRACKET
    (99) lpartselect -> pointer . LBRACKET expression MINUSCOLON expression RBRACKET
    (103) lpointer -> pointer .
    (171) pointer -> pointer . LBRACKET expression RBRACKET
    (360) scope -> pointer . DOT

    LBRACKET        shift and go to state 310
    EQUALS          reduce using rule 103 (lpointer -> pointer .)
    LE              reduce using rule 103 (lpointer -> pointer .)
    DOT             shift and go to state 215


state 170

    (222) delays -> DELAY . LPAREN expression RPAREN
    (223) delays -> DELAY . identifier
    (224) delays -> DELAY . intnumber
    (225) delays -> DELAY . floatnumber
    (357) identifier -> . ID
    (358) identifier -> . scope ID
    (176) intnumber -> . INTNUMBER_DEC
    (177) intnumber -> . SIGNED_INTNUMBER_DEC
    (178) intnumber -> . INTNUMBER_BIN
    (179) intnumber -> . SIGNED_INTNUMBER_BIN
    (180) intnumber -> . INTNUMBER_OCT
    (181) intnumber -> . SIGNED_INTNUMBER_OCT
    (182) intnumber -> . INTNUMBER_HEX
    (183) intnumber -> . SIGNED_INTNUMBER_HEX
    (175) floatnumber -> . FLOATNUMBER
    (359) scope -> . identifier DOT
    (360) scope -> . pointer DOT
    (170) pointer -> . identifier LBRACKET expression RBRACKET
    (171) pointer -> . pointer LBRACKET expression RBRACKET

    LPAREN          shift and go to state 311
    ID              shift and go to state 85
    INTNUMBER_DEC   shift and go to state 79
    SIGNED_INTNUMBER_DEC shift and go to state 101
    INTNUMBER_BIN   shift and go to state 111
    SIGNED_INTNUMBER_BIN shift and go to state 112
    INTNUMBER_OCT   shift and go to state 86
    SIGNED_INTNUMBER_OCT shift and go to state 106
    INTNUMBER_HEX   shift and go to state 93
    SIGNED_INTNUMBER_HEX shift and go to state 83
    FLOATNUMBER     shift and go to state 102

    pointer                        shift and go to state 315
    scope                          shift and go to state 84
    intnumber                      shift and go to state 313
    identifier                     shift and go to state 312
    floatnumber                    shift and go to state 314

state 171

    (96) assignment -> ASSIGN delays . lvalue EQUALS delays rvalue SEMICOLON
    (111) lvalue -> . lpartselect
    (112) lvalue -> . lpointer
    (113) lvalue -> . lconcat
    (114) lvalue -> . identifier
    (97) lpartselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (98) lpartselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (99) lpartselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (100) lpartselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (101) lpartselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (102) lpartselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (103) lpointer -> . pointer
    (104) lconcat -> . LBRACE lconcatlist RBRACE
    (357) identifier -> . ID
    (358) identifier -> . scope ID
    (170) pointer -> . identifier LBRACKET expression RBRACKET
    (171) pointer -> . pointer LBRACKET expression RBRACKET
    (359) scope -> . identifier DOT
    (360) scope -> . pointer DOT

    LBRACE          shift and go to state 162
    ID              shift and go to state 85

    pointer                        shift and go to state 169
    scope                          shift and go to state 84
    lpointer                       shift and go to state 165
    lpartselect                    shift and go to state 166
    lvalue                         shift and go to state 316
    identifier                     shift and go to state 168
    lconcat                        shift and go to state 164

state 172

    (82) realdecl -> REAL realnamelist . SEMICOLON
    (83) realnamelist -> realnamelist . COMMA realname

    SEMICOLON       shift and go to state 318
    COMMA           shift and go to state 317


state 173

    (85) realname -> ID .

    SEMICOLON       reduce using rule 85 (realname -> ID .)
    COMMA           reduce using rule 85 (realname -> ID .)


state 174

    (84) realnamelist -> realname .

    SEMICOLON       reduce using rule 84 (realnamelist -> realname .)
    COMMA           reduce using rule 84 (realnamelist -> realname .)


state 175

    (277) instance -> ID parameterlist . ID LPAREN instance_ports RPAREN SEMICOLON

    ID              shift and go to state 319


state 176

    (278) parameterlist -> DELAY . LPAREN param_args RPAREN
    (279) parameterlist -> DELAY . LPAREN param_args_noname RPAREN

    LPAREN          shift and go to state 320


state 177

    (280) parameterlist -> empty .

    ID              reduce using rule 280 (parameterlist -> empty .)


state 178

    (93) param_substitution_list -> param_substitution .

    SEMICOLON       reduce using rule 93 (param_substitution_list -> param_substitution .)
    COMMA           reduce using rule 93 (param_substitution_list -> param_substitution .)
    RPAREN          reduce using rule 93 (param_substitution_list -> param_substitution .)


state 179

    (90) localparamdecl -> LOCALPARAM width . param_substitution_list SEMICOLON
    (92) param_substitution_list -> . param_substitution_list COMMA param_substitution
    (93) param_substitution_list -> . param_substitution
    (94) param_substitution -> . ID EQUALS rvalue

    ID              shift and go to state 181

    param_substitution             shift and go to state 178
    param_substitution_list        shift and go to state 321

state 180

    (91) localparamdecl -> LOCALPARAM INTEGER . param_substitution_list SEMICOLON
    (92) param_substitution_list -> . param_substitution_list COMMA param_substitution
    (93) param_substitution_list -> . param_substitution
    (94) param_substitution -> . ID EQUALS rvalue

    ID              shift and go to state 181

    param_substitution             shift and go to state 178
    param_substitution_list        shift and go to state 322

state 181

    (94) param_substitution -> ID . EQUALS rvalue

    EQUALS          shift and go to state 323


state 182

    (89) localparamdecl -> LOCALPARAM param_substitution_list . SEMICOLON
    (92) param_substitution_list -> param_substitution_list . COMMA param_substitution

    SEMICOLON       shift and go to state 325
    COMMA           shift and go to state 324


state 183

    (304) generate_items -> generate_item .

    END             reduce using rule 304 (generate_items -> generate_item .)
    IF              reduce using rule 304 (generate_items -> generate_item .)
    FOR             reduce using rule 304 (generate_items -> generate_item .)
    INTEGER         reduce using rule 304 (generate_items -> generate_item .)
    REAL            reduce using rule 304 (generate_items -> generate_item .)
    PARAMETER       reduce using rule 304 (generate_items -> generate_item .)
    LOCALPARAM      reduce using rule 304 (generate_items -> generate_item .)
    GENVAR          reduce using rule 304 (generate_items -> generate_item .)
    ASSIGN          reduce using rule 304 (generate_items -> generate_item .)
    ALWAYS          reduce using rule 304 (generate_items -> generate_item .)
    INITIAL         reduce using rule 304 (generate_items -> generate_item .)
    ID              reduce using rule 304 (generate_items -> generate_item .)
    FUNCTION        reduce using rule 304 (generate_items -> generate_item .)
    TASK            reduce using rule 304 (generate_items -> generate_item .)
    LPAREN          reduce using rule 304 (generate_items -> generate_item .)
    INPUT           reduce using rule 304 (generate_items -> generate_item .)
    OUTPUT          reduce using rule 304 (generate_items -> generate_item .)
    INOUT           reduce using rule 304 (generate_items -> generate_item .)
    TRI             reduce using rule 304 (generate_items -> generate_item .)
    REG             reduce using rule 304 (generate_items -> generate_item .)
    WIRE            reduce using rule 304 (generate_items -> generate_item .)
    SIGNED          reduce using rule 304 (generate_items -> generate_item .)
    ENDGENERATE     reduce using rule 304 (generate_items -> generate_item .)


state 184

    (302) generate_items -> empty .

    END             reduce using rule 302 (generate_items -> empty .)
    IF              reduce using rule 302 (generate_items -> empty .)
    FOR             reduce using rule 302 (generate_items -> empty .)
    INTEGER         reduce using rule 302 (generate_items -> empty .)
    REAL            reduce using rule 302 (generate_items -> empty .)
    PARAMETER       reduce using rule 302 (generate_items -> empty .)
    LOCALPARAM      reduce using rule 302 (generate_items -> empty .)
    GENVAR          reduce using rule 302 (generate_items -> empty .)
    ASSIGN          reduce using rule 302 (generate_items -> empty .)
    ALWAYS          reduce using rule 302 (generate_items -> empty .)
    INITIAL         reduce using rule 302 (generate_items -> empty .)
    ID              reduce using rule 302 (generate_items -> empty .)
    FUNCTION        reduce using rule 302 (generate_items -> empty .)
    TASK            reduce using rule 302 (generate_items -> empty .)
    LPAREN          reduce using rule 302 (generate_items -> empty .)
    INPUT           reduce using rule 302 (generate_items -> empty .)
    OUTPUT          reduce using rule 302 (generate_items -> empty .)
    INOUT           reduce using rule 302 (generate_items -> empty .)
    TRI             reduce using rule 302 (generate_items -> empty .)
    REG             reduce using rule 302 (generate_items -> empty .)
    WIRE            reduce using rule 302 (generate_items -> empty .)
    SIGNED          reduce using rule 302 (generate_items -> empty .)
    ENDGENERATE     reduce using rule 302 (generate_items -> empty .)


state 185

    (306) generate_item -> generate_if .

    ENDGENERATE     reduce using rule 306 (generate_item -> generate_if .)
    IF              reduce using rule 306 (generate_item -> generate_if .)
    FOR             reduce using rule 306 (generate_item -> generate_if .)
    INTEGER         reduce using rule 306 (generate_item -> generate_if .)
    REAL            reduce using rule 306 (generate_item -> generate_if .)
    PARAMETER       reduce using rule 306 (generate_item -> generate_if .)
    LOCALPARAM      reduce using rule 306 (generate_item -> generate_if .)
    GENVAR          reduce using rule 306 (generate_item -> generate_if .)
    ASSIGN          reduce using rule 306 (generate_item -> generate_if .)
    ALWAYS          reduce using rule 306 (generate_item -> generate_if .)
    INITIAL         reduce using rule 306 (generate_item -> generate_if .)
    ID              reduce using rule 306 (generate_item -> generate_if .)
    FUNCTION        reduce using rule 306 (generate_item -> generate_if .)
    TASK            reduce using rule 306 (generate_item -> generate_if .)
    LPAREN          reduce using rule 306 (generate_item -> generate_if .)
    INPUT           reduce using rule 306 (generate_item -> generate_if .)
    OUTPUT          reduce using rule 306 (generate_item -> generate_if .)
    INOUT           reduce using rule 306 (generate_item -> generate_if .)
    TRI             reduce using rule 306 (generate_item -> generate_if .)
    REG             reduce using rule 306 (generate_item -> generate_if .)
    WIRE            reduce using rule 306 (generate_item -> generate_if .)
    SIGNED          reduce using rule 306 (generate_item -> generate_if .)
    ELSE            reduce using rule 306 (generate_item -> generate_if .)
    END             reduce using rule 306 (generate_item -> generate_if .)


state 186

    (316) generate_for -> FOR . LPAREN forpre forcond forpost RPAREN generate_forcontent

    LPAREN          shift and go to state 326


state 187

    (305) generate_item -> standard_item .

    ENDGENERATE     reduce using rule 305 (generate_item -> standard_item .)
    IF              reduce using rule 305 (generate_item -> standard_item .)
    FOR             reduce using rule 305 (generate_item -> standard_item .)
    INTEGER         reduce using rule 305 (generate_item -> standard_item .)
    REAL            reduce using rule 305 (generate_item -> standard_item .)
    PARAMETER       reduce using rule 305 (generate_item -> standard_item .)
    LOCALPARAM      reduce using rule 305 (generate_item -> standard_item .)
    GENVAR          reduce using rule 305 (generate_item -> standard_item .)
    ASSIGN          reduce using rule 305 (generate_item -> standard_item .)
    ALWAYS          reduce using rule 305 (generate_item -> standard_item .)
    INITIAL         reduce using rule 305 (generate_item -> standard_item .)
    ID              reduce using rule 305 (generate_item -> standard_item .)
    FUNCTION        reduce using rule 305 (generate_item -> standard_item .)
    TASK            reduce using rule 305 (generate_item -> standard_item .)
    LPAREN          reduce using rule 305 (generate_item -> standard_item .)
    INPUT           reduce using rule 305 (generate_item -> standard_item .)
    OUTPUT          reduce using rule 305 (generate_item -> standard_item .)
    INOUT           reduce using rule 305 (generate_item -> standard_item .)
    TRI             reduce using rule 305 (generate_item -> standard_item .)
    REG             reduce using rule 305 (generate_item -> standard_item .)
    WIRE            reduce using rule 305 (generate_item -> standard_item .)
    SIGNED          reduce using rule 305 (generate_item -> standard_item .)
    ELSE            reduce using rule 305 (generate_item -> standard_item .)
    END             reduce using rule 305 (generate_item -> standard_item .)


state 188

    (310) generate_if -> IF . LPAREN cond RPAREN gif_true_item ELSE gif_false_item
    (311) generate_if -> IF . LPAREN cond RPAREN gif_true_item

    LPAREN          shift and go to state 327


state 189

    (301) generate -> GENERATE generate_items . ENDGENERATE
    (303) generate_items -> generate_items . generate_item
    (305) generate_item -> . standard_item
    (306) generate_item -> . generate_if
    (307) generate_item -> . generate_for
    (53) standard_item -> . decl
    (54) standard_item -> . integerdecl
    (55) standard_item -> . realdecl
    (56) standard_item -> . declassign
    (57) standard_item -> . parameterdecl
    (58) standard_item -> . localparamdecl
    (59) standard_item -> . genvardecl
    (60) standard_item -> . assignment
    (61) standard_item -> . always
    (62) standard_item -> . initial
    (63) standard_item -> . instance
    (64) standard_item -> . function
    (65) standard_item -> . task
    (66) standard_item -> . pragma
    (310) generate_if -> . IF LPAREN cond RPAREN gif_true_item ELSE gif_false_item
    (311) generate_if -> . IF LPAREN cond RPAREN gif_true_item
    (316) generate_for -> . FOR LPAREN forpre forcond forpost RPAREN generate_forcontent
    (67) decl -> . sigtypes declnamelist SEMICOLON
    (68) decl -> . sigtypes width declnamelist SEMICOLON
    (77) integerdecl -> . INTEGER integernamelist SEMICOLON
    (78) integerdecl -> . INTEGER SIGNED integernamelist SEMICOLON
    (82) realdecl -> . REAL realnamelist SEMICOLON
    (73) declassign -> . sigtypes declassign_element SEMICOLON
    (74) declassign -> . sigtypes width declassign_element SEMICOLON
    (86) parameterdecl -> . PARAMETER param_substitution_list SEMICOLON
    (87) parameterdecl -> . PARAMETER width param_substitution_list SEMICOLON
    (88) parameterdecl -> . PARAMETER INTEGER param_substitution_list SEMICOLON
    (89) localparamdecl -> . LOCALPARAM param_substitution_list SEMICOLON
    (90) localparamdecl -> . LOCALPARAM width param_substitution_list SEMICOLON
    (91) localparamdecl -> . LOCALPARAM INTEGER param_substitution_list SEMICOLON
    (297) genvardecl -> . GENVAR genvarlist SEMICOLON
    (95) assignment -> . ASSIGN lvalue EQUALS rvalue SEMICOLON
    (96) assignment -> . ASSIGN delays lvalue EQUALS delays rvalue SEMICOLON
    (185) always -> . ALWAYS senslist always_statement
    (270) initial -> . INITIAL initial_statement
    (277) instance -> . ID parameterlist ID LPAREN instance_ports RPAREN SEMICOLON
    (325) function -> . FUNCTION width ID SEMICOLON function_statement ENDFUNCTION
    (326) function -> . FUNCTION ID SEMICOLON function_statement ENDFUNCTION
    (343) task -> . TASK ID SEMICOLON task_statement ENDTASK
    (7) pragma -> . LPAREN TIMES ID EQUALS expression TIMES RPAREN
    (8) pragma -> . LPAREN TIMES ID TIMES RPAREN
    (30) sigtypes -> . sigtypes sigtype
    (31) sigtypes -> . sigtype
    (32) sigtype -> . INPUT
    (33) sigtype -> . OUTPUT
    (34) sigtype -> . INOUT
    (35) sigtype -> . TRI
    (36) sigtype -> . REG
    (37) sigtype -> . WIRE
    (38) sigtype -> . SIGNED

    ENDGENERATE     shift and go to state 329
    IF              shift and go to state 188
    FOR             shift and go to state 186
    INTEGER         shift and go to state 69
    REAL            shift and go to state 49
    PARAMETER       shift and go to state 66
    LOCALPARAM      shift and go to state 52
    GENVAR          shift and go to state 42
    ASSIGN          shift and go to state 48
    ALWAYS          shift and go to state 46
    INITIAL         shift and go to state 45
    ID              shift and go to state 51
    FUNCTION        shift and go to state 44
    TASK            shift and go to state 67
    LPAREN          shift and go to state 6
    INPUT           shift and go to state 37
    OUTPUT          shift and go to state 24
    INOUT           shift and go to state 25
    TRI             shift and go to state 36
    REG             shift and go to state 35
    WIRE            shift and go to state 26
    SIGNED          shift and go to state 29

    generate_item                  shift and go to state 328
    generate_if                    shift and go to state 185
    always                         shift and go to state 41
    genvardecl                     shift and go to state 43
    integerdecl                    shift and go to state 47
    sigtype                        shift and go to state 33
    instance                       shift and go to state 50
    localparamdecl                 shift and go to state 53
    standard_item                  shift and go to state 187
    declassign                     shift and go to state 58
    task                           shift and go to state 57
    function                       shift and go to state 59
    realdecl                       shift and go to state 60
    sigtypes                       shift and go to state 61
    decl                           shift and go to state 62
    pragma                         shift and go to state 63
    parameterdecl                  shift and go to state 64
    generate_for                   shift and go to state 190
    initial                        shift and go to state 65
    assignment                     shift and go to state 68

state 190

    (307) generate_item -> generate_for .

    ENDGENERATE     reduce using rule 307 (generate_item -> generate_for .)
    IF              reduce using rule 307 (generate_item -> generate_for .)
    FOR             reduce using rule 307 (generate_item -> generate_for .)
    INTEGER         reduce using rule 307 (generate_item -> generate_for .)
    REAL            reduce using rule 307 (generate_item -> generate_for .)
    PARAMETER       reduce using rule 307 (generate_item -> generate_for .)
    LOCALPARAM      reduce using rule 307 (generate_item -> generate_for .)
    GENVAR          reduce using rule 307 (generate_item -> generate_for .)
    ASSIGN          reduce using rule 307 (generate_item -> generate_for .)
    ALWAYS          reduce using rule 307 (generate_item -> generate_for .)
    INITIAL         reduce using rule 307 (generate_item -> generate_for .)
    ID              reduce using rule 307 (generate_item -> generate_for .)
    FUNCTION        reduce using rule 307 (generate_item -> generate_for .)
    TASK            reduce using rule 307 (generate_item -> generate_for .)
    LPAREN          reduce using rule 307 (generate_item -> generate_for .)
    INPUT           reduce using rule 307 (generate_item -> generate_for .)
    OUTPUT          reduce using rule 307 (generate_item -> generate_for .)
    INOUT           reduce using rule 307 (generate_item -> generate_for .)
    TRI             reduce using rule 307 (generate_item -> generate_for .)
    REG             reduce using rule 307 (generate_item -> generate_for .)
    WIRE            reduce using rule 307 (generate_item -> generate_for .)
    SIGNED          reduce using rule 307 (generate_item -> generate_for .)
    ELSE            reduce using rule 307 (generate_item -> generate_for .)
    END             reduce using rule 307 (generate_item -> generate_for .)


state 191

    (67) decl -> sigtypes declnamelist . SEMICOLON
    (69) declnamelist -> declnamelist . COMMA declname

    SEMICOLON       shift and go to state 331
    COMMA           shift and go to state 330


state 192

    (73) declassign -> sigtypes declassign_element . SEMICOLON

    SEMICOLON       shift and go to state 332


state 193

    (76) declassign_element -> delays . ID EQUALS delays rvalue

    ID              shift and go to state 333


state 194

    (68) decl -> sigtypes width . declnamelist SEMICOLON
    (74) declassign -> sigtypes width . declassign_element SEMICOLON
    (69) declnamelist -> . declnamelist COMMA declname
    (70) declnamelist -> . declname
    (75) declassign_element -> . ID EQUALS rvalue
    (76) declassign_element -> . delays ID EQUALS delays rvalue
    (71) declname -> . ID
    (72) declname -> . ID length
    (222) delays -> . DELAY LPAREN expression RPAREN
    (223) delays -> . DELAY identifier
    (224) delays -> . DELAY intnumber
    (225) delays -> . DELAY floatnumber
    (226) delays -> . empty
    (365) empty -> .

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 196
    DELAY           shift and go to state 170

  ! ID              [ reduce using rule 365 (empty -> .) ]

    declassign_element             shift and go to state 334
    empty                          shift and go to state 163
    declname                       shift and go to state 195
    declnamelist                   shift and go to state 335
    delays                         shift and go to state 193

state 195

    (70) declnamelist -> declname .

    SEMICOLON       reduce using rule 70 (declnamelist -> declname .)
    COMMA           reduce using rule 70 (declnamelist -> declname .)


state 196

    (75) declassign_element -> ID . EQUALS rvalue
    (71) declname -> ID .
    (72) declname -> ID . length
    (47) length -> . LBRACKET expression COLON expression RBRACKET

    EQUALS          shift and go to state 337
    SEMICOLON       reduce using rule 71 (declname -> ID .)
    COMMA           reduce using rule 71 (declname -> ID .)
    LBRACKET        shift and go to state 336

    length                         shift and go to state 338

state 197

    (86) parameterdecl -> PARAMETER param_substitution_list . SEMICOLON
    (92) param_substitution_list -> param_substitution_list . COMMA param_substitution

    SEMICOLON       shift and go to state 339
    COMMA           shift and go to state 324


state 198

    (87) parameterdecl -> PARAMETER width . param_substitution_list SEMICOLON
    (92) param_substitution_list -> . param_substitution_list COMMA param_substitution
    (93) param_substitution_list -> . param_substitution
    (94) param_substitution -> . ID EQUALS rvalue

    ID              shift and go to state 181

    param_substitution             shift and go to state 178
    param_substitution_list        shift and go to state 340

state 199

    (88) parameterdecl -> PARAMETER INTEGER . param_substitution_list SEMICOLON
    (92) param_substitution_list -> . param_substitution_list COMMA param_substitution
    (93) param_substitution_list -> . param_substitution
    (94) param_substitution -> . ID EQUALS rvalue

    ID              shift and go to state 181

    param_substitution             shift and go to state 178
    param_substitution_list        shift and go to state 341

state 200

    (343) task -> TASK ID . SEMICOLON task_statement ENDTASK

    SEMICOLON       shift and go to state 342


state 201

    (78) integerdecl -> INTEGER SIGNED . integernamelist SEMICOLON
    (79) integernamelist -> . integernamelist COMMA integername
    (80) integernamelist -> . integername
    (81) integername -> . ID

    ID              shift and go to state 203

    integername                    shift and go to state 204
    integernamelist                shift and go to state 343

state 202

    (77) integerdecl -> INTEGER integernamelist . SEMICOLON
    (79) integernamelist -> integernamelist . COMMA integername

    SEMICOLON       shift and go to state 344
    COMMA           shift and go to state 345


state 203

    (81) integername -> ID .

    SEMICOLON       reduce using rule 81 (integername -> ID .)
    COMMA           reduce using rule 81 (integername -> ID .)


state 204

    (80) integernamelist -> integername .

    SEMICOLON       reduce using rule 80 (integernamelist -> integername .)
    COMMA           reduce using rule 80 (integernamelist -> integername .)


state 205

    (14) params_begin -> params_begin param .

    PARAMETER       reduce using rule 14 (params_begin -> params_begin param .)


state 206

    (13) params -> params_begin param_end .

    RPAREN          reduce using rule 13 (params -> params_begin param_end .)


state 207

    (21) param_end -> PARAMETER width . param_substitution_list
    (18) param -> PARAMETER width . param_substitution_list COMMA
    (92) param_substitution_list -> . param_substitution_list COMMA param_substitution
    (93) param_substitution_list -> . param_substitution
    (94) param_substitution -> . ID EQUALS rvalue

    ID              shift and go to state 181

    param_substitution             shift and go to state 178
    param_substitution_list        shift and go to state 346

state 208

    (20) param_end -> PARAMETER param_substitution_list .
    (17) param -> PARAMETER param_substitution_list . COMMA
    (92) param_substitution_list -> param_substitution_list . COMMA param_substitution

    RPAREN          reduce using rule 20 (param_end -> PARAMETER param_substitution_list .)
    COMMA           shift and go to state 347


state 209

    (22) param_end -> PARAMETER INTEGER . param_substitution_list
    (19) param -> PARAMETER INTEGER . param_substitution_list COMMA
    (92) param_substitution_list -> . param_substitution_list COMMA param_substitution
    (93) param_substitution_list -> . param_substitution
    (94) param_substitution -> . ID EQUALS rvalue

    ID              shift and go to state 181

    param_substitution             shift and go to state 178
    param_substitution_list        shift and go to state 348

state 210

    (11) paramlist -> DELAY LPAREN params RPAREN .

    LPAREN          reduce using rule 11 (paramlist -> DELAY LPAREN params RPAREN .)
    SEMICOLON       reduce using rule 11 (paramlist -> DELAY LPAREN params RPAREN .)


state 211

    (122) expression -> NOR expression .
    (126) expression -> expression . POWER expression
    (127) expression -> expression . TIMES expression
    (128) expression -> expression . DIVIDE expression
    (129) expression -> expression . MOD expression
    (130) expression -> expression . PLUS expression
    (131) expression -> expression . MINUS expression
    (132) expression -> expression . LSHIFT expression
    (133) expression -> expression . RSHIFT expression
    (134) expression -> expression . LSHIFTA expression
    (135) expression -> expression . RSHIFTA expression
    (136) expression -> expression . LT expression
    (137) expression -> expression . GT expression
    (138) expression -> expression . LE expression
    (139) expression -> expression . GE expression
    (140) expression -> expression . EQ expression
    (141) expression -> expression . NE expression
    (142) expression -> expression . EQL expression
    (143) expression -> expression . NEL expression
    (144) expression -> expression . AND expression
    (145) expression -> expression . XOR expression
    (146) expression -> expression . XNOR expression
    (147) expression -> expression . OR expression
    (148) expression -> expression . LAND expression
    (149) expression -> expression . LOR expression
    (150) expression -> expression . COND expression COLON expression

    POWER           reduce using rule 122 (expression -> NOR expression .)
    TIMES           reduce using rule 122 (expression -> NOR expression .)
    DIVIDE          reduce using rule 122 (expression -> NOR expression .)
    MOD             reduce using rule 122 (expression -> NOR expression .)
    PLUS            reduce using rule 122 (expression -> NOR expression .)
    MINUS           reduce using rule 122 (expression -> NOR expression .)
    LSHIFT          reduce using rule 122 (expression -> NOR expression .)
    RSHIFT          reduce using rule 122 (expression -> NOR expression .)
    LSHIFTA         reduce using rule 122 (expression -> NOR expression .)
    RSHIFTA         reduce using rule 122 (expression -> NOR expression .)
    LT              reduce using rule 122 (expression -> NOR expression .)
    GT              reduce using rule 122 (expression -> NOR expression .)
    LE              reduce using rule 122 (expression -> NOR expression .)
    GE              reduce using rule 122 (expression -> NOR expression .)
    EQ              reduce using rule 122 (expression -> NOR expression .)
    NE              reduce using rule 122 (expression -> NOR expression .)
    EQL             reduce using rule 122 (expression -> NOR expression .)
    NEL             reduce using rule 122 (expression -> NOR expression .)
    AND             reduce using rule 122 (expression -> NOR expression .)
    XOR             reduce using rule 122 (expression -> NOR expression .)
    XNOR            reduce using rule 122 (expression -> NOR expression .)
    OR              reduce using rule 122 (expression -> NOR expression .)
    LAND            reduce using rule 122 (expression -> NOR expression .)
    LOR             reduce using rule 122 (expression -> NOR expression .)
    COND            reduce using rule 122 (expression -> NOR expression .)
    LBRACE          reduce using rule 122 (expression -> NOR expression .)
    RBRACE          reduce using rule 122 (expression -> NOR expression .)
    COMMA           reduce using rule 122 (expression -> NOR expression .)
    RPAREN          reduce using rule 122 (expression -> NOR expression .)
    COLON           reduce using rule 122 (expression -> NOR expression .)
    SEMICOLON       reduce using rule 122 (expression -> NOR expression .)
    PLUSCOLON       reduce using rule 122 (expression -> NOR expression .)
    MINUSCOLON      reduce using rule 122 (expression -> NOR expression .)
    RBRACKET        reduce using rule 122 (expression -> NOR expression .)

  ! POWER           [ shift and go to state 246 ]
  ! TIMES           [ shift and go to state 349 ]
  ! DIVIDE          [ shift and go to state 244 ]
  ! MOD             [ shift and go to state 231 ]
  ! PLUS            [ shift and go to state 240 ]
  ! MINUS           [ shift and go to state 229 ]
  ! LSHIFT          [ shift and go to state 243 ]
  ! RSHIFT          [ shift and go to state 226 ]
  ! LSHIFTA         [ shift and go to state 241 ]
  ! RSHIFTA         [ shift and go to state 238 ]
  ! LT              [ shift and go to state 235 ]
  ! GT              [ shift and go to state 228 ]
  ! LE              [ shift and go to state 222 ]
  ! GE              [ shift and go to state 239 ]
  ! EQ              [ shift and go to state 223 ]
  ! NE              [ shift and go to state 225 ]
  ! EQL             [ shift and go to state 245 ]
  ! NEL             [ shift and go to state 242 ]
  ! AND             [ shift and go to state 224 ]
  ! XOR             [ shift and go to state 237 ]
  ! XNOR            [ shift and go to state 232 ]
  ! OR              [ shift and go to state 234 ]
  ! LAND            [ shift and go to state 227 ]
  ! LOR             [ shift and go to state 230 ]
  ! COND            [ shift and go to state 233 ]


state 212

    (163) repeat -> LBRACE expression . concat RBRACE
    (162) concatlist -> expression .
    (126) expression -> expression . POWER expression
    (127) expression -> expression . TIMES expression
    (128) expression -> expression . DIVIDE expression
    (129) expression -> expression . MOD expression
    (130) expression -> expression . PLUS expression
    (131) expression -> expression . MINUS expression
    (132) expression -> expression . LSHIFT expression
    (133) expression -> expression . RSHIFT expression
    (134) expression -> expression . LSHIFTA expression
    (135) expression -> expression . RSHIFTA expression
    (136) expression -> expression . LT expression
    (137) expression -> expression . GT expression
    (138) expression -> expression . LE expression
    (139) expression -> expression . GE expression
    (140) expression -> expression . EQ expression
    (141) expression -> expression . NE expression
    (142) expression -> expression . EQL expression
    (143) expression -> expression . NEL expression
    (144) expression -> expression . AND expression
    (145) expression -> expression . XOR expression
    (146) expression -> expression . XNOR expression
    (147) expression -> expression . OR expression
    (148) expression -> expression . LAND expression
    (149) expression -> expression . LOR expression
    (150) expression -> expression . COND expression COLON expression
    (160) concat -> . LBRACE concatlist RBRACE

    RBRACE          reduce using rule 162 (concatlist -> expression .)
    COMMA           reduce using rule 162 (concatlist -> expression .)
    POWER           shift and go to state 246
    TIMES           shift and go to state 349
    DIVIDE          shift and go to state 244
    MOD             shift and go to state 231
    PLUS            shift and go to state 240
    MINUS           shift and go to state 229
    LSHIFT          shift and go to state 243
    RSHIFT          shift and go to state 226
    LSHIFTA         shift and go to state 241
    RSHIFTA         shift and go to state 238
    LT              shift and go to state 235
    GT              shift and go to state 228
    LE              shift and go to state 222
    GE              shift and go to state 239
    EQ              shift and go to state 223
    NE              shift and go to state 225
    EQL             shift and go to state 245
    NEL             shift and go to state 242
    AND             shift and go to state 224
    XOR             shift and go to state 237
    XNOR            shift and go to state 232
    OR              shift and go to state 234
    LAND            shift and go to state 227
    LOR             shift and go to state 230
    COND            shift and go to state 233
    LBRACE          shift and go to state 350

    concat                         shift and go to state 351

state 213

    (160) concat -> LBRACE concatlist . RBRACE
    (161) concatlist -> concatlist . COMMA expression

    RBRACE          shift and go to state 352
    COMMA           shift and go to state 353


state 214

    (119) expression -> NOT expression .
    (126) expression -> expression . POWER expression
    (127) expression -> expression . TIMES expression
    (128) expression -> expression . DIVIDE expression
    (129) expression -> expression . MOD expression
    (130) expression -> expression . PLUS expression
    (131) expression -> expression . MINUS expression
    (132) expression -> expression . LSHIFT expression
    (133) expression -> expression . RSHIFT expression
    (134) expression -> expression . LSHIFTA expression
    (135) expression -> expression . RSHIFTA expression
    (136) expression -> expression . LT expression
    (137) expression -> expression . GT expression
    (138) expression -> expression . LE expression
    (139) expression -> expression . GE expression
    (140) expression -> expression . EQ expression
    (141) expression -> expression . NE expression
    (142) expression -> expression . EQL expression
    (143) expression -> expression . NEL expression
    (144) expression -> expression . AND expression
    (145) expression -> expression . XOR expression
    (146) expression -> expression . XNOR expression
    (147) expression -> expression . OR expression
    (148) expression -> expression . LAND expression
    (149) expression -> expression . LOR expression
    (150) expression -> expression . COND expression COLON expression

    POWER           reduce using rule 119 (expression -> NOT expression .)
    TIMES           reduce using rule 119 (expression -> NOT expression .)
    DIVIDE          reduce using rule 119 (expression -> NOT expression .)
    MOD             reduce using rule 119 (expression -> NOT expression .)
    PLUS            reduce using rule 119 (expression -> NOT expression .)
    MINUS           reduce using rule 119 (expression -> NOT expression .)
    LSHIFT          reduce using rule 119 (expression -> NOT expression .)
    RSHIFT          reduce using rule 119 (expression -> NOT expression .)
    LSHIFTA         reduce using rule 119 (expression -> NOT expression .)
    RSHIFTA         reduce using rule 119 (expression -> NOT expression .)
    LT              reduce using rule 119 (expression -> NOT expression .)
    GT              reduce using rule 119 (expression -> NOT expression .)
    LE              reduce using rule 119 (expression -> NOT expression .)
    GE              reduce using rule 119 (expression -> NOT expression .)
    EQ              reduce using rule 119 (expression -> NOT expression .)
    NE              reduce using rule 119 (expression -> NOT expression .)
    EQL             reduce using rule 119 (expression -> NOT expression .)
    NEL             reduce using rule 119 (expression -> NOT expression .)
    AND             reduce using rule 119 (expression -> NOT expression .)
    XOR             reduce using rule 119 (expression -> NOT expression .)
    XNOR            reduce using rule 119 (expression -> NOT expression .)
    OR              reduce using rule 119 (expression -> NOT expression .)
    LAND            reduce using rule 119 (expression -> NOT expression .)
    LOR             reduce using rule 119 (expression -> NOT expression .)
    COND            reduce using rule 119 (expression -> NOT expression .)
    LBRACE          reduce using rule 119 (expression -> NOT expression .)
    RBRACE          reduce using rule 119 (expression -> NOT expression .)
    COMMA           reduce using rule 119 (expression -> NOT expression .)
    RPAREN          reduce using rule 119 (expression -> NOT expression .)
    COLON           reduce using rule 119 (expression -> NOT expression .)
    SEMICOLON       reduce using rule 119 (expression -> NOT expression .)
    PLUSCOLON       reduce using rule 119 (expression -> NOT expression .)
    MINUSCOLON      reduce using rule 119 (expression -> NOT expression .)
    RBRACKET        reduce using rule 119 (expression -> NOT expression .)

  ! POWER           [ shift and go to state 246 ]
  ! TIMES           [ shift and go to state 349 ]
  ! DIVIDE          [ shift and go to state 244 ]
  ! MOD             [ shift and go to state 231 ]
  ! PLUS            [ shift and go to state 240 ]
  ! MINUS           [ shift and go to state 229 ]
  ! LSHIFT          [ shift and go to state 243 ]
  ! RSHIFT          [ shift and go to state 226 ]
  ! LSHIFTA         [ shift and go to state 241 ]
  ! RSHIFTA         [ shift and go to state 238 ]
  ! LT              [ shift and go to state 235 ]
  ! GT              [ shift and go to state 228 ]
  ! LE              [ shift and go to state 222 ]
  ! GE              [ shift and go to state 239 ]
  ! EQ              [ shift and go to state 223 ]
  ! NE              [ shift and go to state 225 ]
  ! EQL             [ shift and go to state 245 ]
  ! NEL             [ shift and go to state 242 ]
  ! AND             [ shift and go to state 224 ]
  ! XOR             [ shift and go to state 237 ]
  ! XNOR            [ shift and go to state 232 ]
  ! OR              [ shift and go to state 234 ]
  ! LAND            [ shift and go to state 227 ]
  ! LOR             [ shift and go to state 230 ]
  ! COND            [ shift and go to state 233 ]


state 215

    (360) scope -> pointer DOT .

    ID              reduce using rule 360 (scope -> pointer DOT .)


state 216

    (167) partselect -> pointer LBRACKET . expression COLON expression RBRACKET
    (168) partselect -> pointer LBRACKET . expression PLUSCOLON expression RBRACKET
    (169) partselect -> pointer LBRACKET . expression MINUSCOLON expression RBRACKET
    (171) pointer -> pointer LBRACKET . expression RBRACKET
    (116) expression -> . MINUS expression
    (117) expression -> . PLUS expression
    (118) expression -> . LNOT expression
    (119) expression -> . NOT expression
    (120) expression -> . AND expression
    (121) expression -> . NAND expression
    (122) expression -> . NOR expression
    (123) expression -> . OR expression
    (124) expression -> . XOR expression
    (125) expression -> . XNOR expression
    (126) expression -> . expression POWER expression
    (127) expression -> . expression TIMES expression
    (128) expression -> . expression DIVIDE expression
    (129) expression -> . expression MOD expression
    (130) expression -> . expression PLUS expression
    (131) expression -> . expression MINUS expression
    (132) expression -> . expression LSHIFT expression
    (133) expression -> . expression RSHIFT expression
    (134) expression -> . expression LSHIFTA expression
    (135) expression -> . expression RSHIFTA expression
    (136) expression -> . expression LT expression
    (137) expression -> . expression GT expression
    (138) expression -> . expression LE expression
    (139) expression -> . expression GE expression
    (140) expression -> . expression EQ expression
    (141) expression -> . expression NE expression
    (142) expression -> . expression EQL expression
    (143) expression -> . expression NEL expression
    (144) expression -> . expression AND expression
    (145) expression -> . expression XOR expression
    (146) expression -> . expression XNOR expression
    (147) expression -> . expression OR expression
    (148) expression -> . expression LAND expression
    (149) expression -> . expression LOR expression
    (150) expression -> . expression COND expression COLON expression
    (151) expression -> . LPAREN expression RPAREN
    (152) expression -> . concat
    (153) expression -> . repeat
    (154) expression -> . partselect
    (155) expression -> . pointer
    (156) expression -> . functioncall
    (157) expression -> . systemcall
    (158) expression -> . identifier
    (159) expression -> . const_expression
    (160) concat -> . LBRACE concatlist RBRACE
    (163) repeat -> . LBRACE expression concat RBRACE
    (164) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (165) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (166) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (167) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (168) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (169) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (170) pointer -> . identifier LBRACKET expression RBRACKET
    (171) pointer -> . pointer LBRACKET expression RBRACKET
    (339) functioncall -> . identifier LPAREN func_args RPAREN
    (319) systemcall -> . DOLLER ID
    (320) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (357) identifier -> . ID
    (358) identifier -> . scope ID
    (172) const_expression -> . intnumber
    (173) const_expression -> . floatnumber
    (174) const_expression -> . stringliteral
    (359) scope -> . identifier DOT
    (360) scope -> . pointer DOT
    (176) intnumber -> . INTNUMBER_DEC
    (177) intnumber -> . SIGNED_INTNUMBER_DEC
    (178) intnumber -> . INTNUMBER_BIN
    (179) intnumber -> . SIGNED_INTNUMBER_BIN
    (180) intnumber -> . INTNUMBER_OCT
    (181) intnumber -> . SIGNED_INTNUMBER_OCT
    (182) intnumber -> . INTNUMBER_HEX
    (183) intnumber -> . SIGNED_INTNUMBER_HEX
    (175) floatnumber -> . FLOATNUMBER
    (184) stringliteral -> . STRING_LITERAL

    MINUS           shift and go to state 97
    PLUS            shift and go to state 89
    LNOT            shift and go to state 95
    NOT             shift and go to state 78
    AND             shift and go to state 91
    NAND            shift and go to state 98
    NOR             shift and go to state 76
    OR              shift and go to state 105
    XOR             shift and go to state 82
    XNOR            shift and go to state 87
    LPAREN          shift and go to state 96
    LBRACE          shift and go to state 77
    DOLLER          shift and go to state 100
    ID              shift and go to state 85
    INTNUMBER_DEC   shift and go to state 79
    SIGNED_INTNUMBER_DEC shift and go to state 101
    INTNUMBER_BIN   shift and go to state 111
    SIGNED_INTNUMBER_BIN shift and go to state 112
    INTNUMBER_OCT   shift and go to state 86
    SIGNED_INTNUMBER_OCT shift and go to state 106
    INTNUMBER_HEX   shift and go to state 93
    SIGNED_INTNUMBER_HEX shift and go to state 83
    FLOATNUMBER     shift and go to state 102
    STRING_LITERAL  shift and go to state 107

    stringliteral                  shift and go to state 99
    intnumber                      shift and go to state 81
    expression                     shift and go to state 354
    repeat                         shift and go to state 108
    partselect                     shift and go to state 103
    identifier                     shift and go to state 104
    pointer                        shift and go to state 80
    functioncall                   shift and go to state 94
    scope                          shift and go to state 84
    systemcall                     shift and go to state 109
    const_expression               shift and go to state 110
    concat                         shift and go to state 88
    floatnumber                    shift and go to state 90

state 217

    (124) expression -> XOR expression .
    (126) expression -> expression . POWER expression
    (127) expression -> expression . TIMES expression
    (128) expression -> expression . DIVIDE expression
    (129) expression -> expression . MOD expression
    (130) expression -> expression . PLUS expression
    (131) expression -> expression . MINUS expression
    (132) expression -> expression . LSHIFT expression
    (133) expression -> expression . RSHIFT expression
    (134) expression -> expression . LSHIFTA expression
    (135) expression -> expression . RSHIFTA expression
    (136) expression -> expression . LT expression
    (137) expression -> expression . GT expression
    (138) expression -> expression . LE expression
    (139) expression -> expression . GE expression
    (140) expression -> expression . EQ expression
    (141) expression -> expression . NE expression
    (142) expression -> expression . EQL expression
    (143) expression -> expression . NEL expression
    (144) expression -> expression . AND expression
    (145) expression -> expression . XOR expression
    (146) expression -> expression . XNOR expression
    (147) expression -> expression . OR expression
    (148) expression -> expression . LAND expression
    (149) expression -> expression . LOR expression
    (150) expression -> expression . COND expression COLON expression

    POWER           reduce using rule 124 (expression -> XOR expression .)
    TIMES           reduce using rule 124 (expression -> XOR expression .)
    DIVIDE          reduce using rule 124 (expression -> XOR expression .)
    MOD             reduce using rule 124 (expression -> XOR expression .)
    PLUS            reduce using rule 124 (expression -> XOR expression .)
    MINUS           reduce using rule 124 (expression -> XOR expression .)
    LSHIFT          reduce using rule 124 (expression -> XOR expression .)
    RSHIFT          reduce using rule 124 (expression -> XOR expression .)
    LSHIFTA         reduce using rule 124 (expression -> XOR expression .)
    RSHIFTA         reduce using rule 124 (expression -> XOR expression .)
    LT              reduce using rule 124 (expression -> XOR expression .)
    GT              reduce using rule 124 (expression -> XOR expression .)
    LE              reduce using rule 124 (expression -> XOR expression .)
    GE              reduce using rule 124 (expression -> XOR expression .)
    EQ              reduce using rule 124 (expression -> XOR expression .)
    NE              reduce using rule 124 (expression -> XOR expression .)
    EQL             reduce using rule 124 (expression -> XOR expression .)
    NEL             reduce using rule 124 (expression -> XOR expression .)
    AND             reduce using rule 124 (expression -> XOR expression .)
    XOR             reduce using rule 124 (expression -> XOR expression .)
    XNOR            reduce using rule 124 (expression -> XOR expression .)
    OR              reduce using rule 124 (expression -> XOR expression .)
    LAND            reduce using rule 124 (expression -> XOR expression .)
    LOR             reduce using rule 124 (expression -> XOR expression .)
    COND            reduce using rule 124 (expression -> XOR expression .)
    LBRACE          reduce using rule 124 (expression -> XOR expression .)
    RBRACE          reduce using rule 124 (expression -> XOR expression .)
    COMMA           reduce using rule 124 (expression -> XOR expression .)
    RPAREN          reduce using rule 124 (expression -> XOR expression .)
    COLON           reduce using rule 124 (expression -> XOR expression .)
    SEMICOLON       reduce using rule 124 (expression -> XOR expression .)
    PLUSCOLON       reduce using rule 124 (expression -> XOR expression .)
    MINUSCOLON      reduce using rule 124 (expression -> XOR expression .)
    RBRACKET        reduce using rule 124 (expression -> XOR expression .)

  ! POWER           [ shift and go to state 246 ]
  ! TIMES           [ shift and go to state 349 ]
  ! DIVIDE          [ shift and go to state 244 ]
  ! MOD             [ shift and go to state 231 ]
  ! PLUS            [ shift and go to state 240 ]
  ! MINUS           [ shift and go to state 229 ]
  ! LSHIFT          [ shift and go to state 243 ]
  ! RSHIFT          [ shift and go to state 226 ]
  ! LSHIFTA         [ shift and go to state 241 ]
  ! RSHIFTA         [ shift and go to state 238 ]
  ! LT              [ shift and go to state 235 ]
  ! GT              [ shift and go to state 228 ]
  ! LE              [ shift and go to state 222 ]
  ! GE              [ shift and go to state 239 ]
  ! EQ              [ shift and go to state 223 ]
  ! NE              [ shift and go to state 225 ]
  ! EQL             [ shift and go to state 245 ]
  ! NEL             [ shift and go to state 242 ]
  ! AND             [ shift and go to state 224 ]
  ! XOR             [ shift and go to state 237 ]
  ! XNOR            [ shift and go to state 232 ]
  ! OR              [ shift and go to state 234 ]
  ! LAND            [ shift and go to state 227 ]
  ! LOR             [ shift and go to state 230 ]
  ! COND            [ shift and go to state 233 ]


state 218

    (358) identifier -> scope ID .

    LBRACKET        reduce using rule 358 (identifier -> scope ID .)
    LPAREN          reduce using rule 358 (identifier -> scope ID .)
    DOT             reduce using rule 358 (identifier -> scope ID .)
    COLON           reduce using rule 358 (identifier -> scope ID .)
    PLUSCOLON       reduce using rule 358 (identifier -> scope ID .)
    MINUSCOLON      reduce using rule 358 (identifier -> scope ID .)
    RBRACKET        reduce using rule 358 (identifier -> scope ID .)
    POWER           reduce using rule 358 (identifier -> scope ID .)
    TIMES           reduce using rule 358 (identifier -> scope ID .)
    DIVIDE          reduce using rule 358 (identifier -> scope ID .)
    MOD             reduce using rule 358 (identifier -> scope ID .)
    PLUS            reduce using rule 358 (identifier -> scope ID .)
    MINUS           reduce using rule 358 (identifier -> scope ID .)
    LSHIFT          reduce using rule 358 (identifier -> scope ID .)
    RSHIFT          reduce using rule 358 (identifier -> scope ID .)
    LSHIFTA         reduce using rule 358 (identifier -> scope ID .)
    RSHIFTA         reduce using rule 358 (identifier -> scope ID .)
    LT              reduce using rule 358 (identifier -> scope ID .)
    GT              reduce using rule 358 (identifier -> scope ID .)
    LE              reduce using rule 358 (identifier -> scope ID .)
    GE              reduce using rule 358 (identifier -> scope ID .)
    EQ              reduce using rule 358 (identifier -> scope ID .)
    NE              reduce using rule 358 (identifier -> scope ID .)
    EQL             reduce using rule 358 (identifier -> scope ID .)
    NEL             reduce using rule 358 (identifier -> scope ID .)
    AND             reduce using rule 358 (identifier -> scope ID .)
    XOR             reduce using rule 358 (identifier -> scope ID .)
    XNOR            reduce using rule 358 (identifier -> scope ID .)
    OR              reduce using rule 358 (identifier -> scope ID .)
    LAND            reduce using rule 358 (identifier -> scope ID .)
    LOR             reduce using rule 358 (identifier -> scope ID .)
    COND            reduce using rule 358 (identifier -> scope ID .)
    RPAREN          reduce using rule 358 (identifier -> scope ID .)
    LBRACE          reduce using rule 358 (identifier -> scope ID .)
    RBRACE          reduce using rule 358 (identifier -> scope ID .)
    COMMA           reduce using rule 358 (identifier -> scope ID .)
    SEMICOLON       reduce using rule 358 (identifier -> scope ID .)
    EQUALS          reduce using rule 358 (identifier -> scope ID .)
    SENS_OR         reduce using rule 358 (identifier -> scope ID .)
    IF              reduce using rule 358 (identifier -> scope ID .)
    CASE            reduce using rule 358 (identifier -> scope ID .)
    FOR             reduce using rule 358 (identifier -> scope ID .)
    WHILE           reduce using rule 358 (identifier -> scope ID .)
    WAIT            reduce using rule 358 (identifier -> scope ID .)
    FOREVER         reduce using rule 358 (identifier -> scope ID .)
    BEGIN           reduce using rule 358 (identifier -> scope ID .)
    FORK            reduce using rule 358 (identifier -> scope ID .)
    DELAY           reduce using rule 358 (identifier -> scope ID .)
    AT              reduce using rule 358 (identifier -> scope ID .)
    DOLLER          reduce using rule 358 (identifier -> scope ID .)
    DISABLE         reduce using rule 358 (identifier -> scope ID .)
    ID              reduce using rule 358 (identifier -> scope ID .)
    LNOT            reduce using rule 358 (identifier -> scope ID .)
    NOT             reduce using rule 358 (identifier -> scope ID .)
    NAND            reduce using rule 358 (identifier -> scope ID .)
    NOR             reduce using rule 358 (identifier -> scope ID .)
    INTNUMBER_DEC   reduce using rule 358 (identifier -> scope ID .)
    SIGNED_INTNUMBER_DEC reduce using rule 358 (identifier -> scope ID .)
    INTNUMBER_BIN   reduce using rule 358 (identifier -> scope ID .)
    SIGNED_INTNUMBER_BIN reduce using rule 358 (identifier -> scope ID .)
    INTNUMBER_OCT   reduce using rule 358 (identifier -> scope ID .)
    SIGNED_INTNUMBER_OCT reduce using rule 358 (identifier -> scope ID .)
    INTNUMBER_HEX   reduce using rule 358 (identifier -> scope ID .)
    SIGNED_INTNUMBER_HEX reduce using rule 358 (identifier -> scope ID .)
    FLOATNUMBER     reduce using rule 358 (identifier -> scope ID .)
    STRING_LITERAL  reduce using rule 358 (identifier -> scope ID .)


state 219

    (125) expression -> XNOR expression .
    (126) expression -> expression . POWER expression
    (127) expression -> expression . TIMES expression
    (128) expression -> expression . DIVIDE expression
    (129) expression -> expression . MOD expression
    (130) expression -> expression . PLUS expression
    (131) expression -> expression . MINUS expression
    (132) expression -> expression . LSHIFT expression
    (133) expression -> expression . RSHIFT expression
    (134) expression -> expression . LSHIFTA expression
    (135) expression -> expression . RSHIFTA expression
    (136) expression -> expression . LT expression
    (137) expression -> expression . GT expression
    (138) expression -> expression . LE expression
    (139) expression -> expression . GE expression
    (140) expression -> expression . EQ expression
    (141) expression -> expression . NE expression
    (142) expression -> expression . EQL expression
    (143) expression -> expression . NEL expression
    (144) expression -> expression . AND expression
    (145) expression -> expression . XOR expression
    (146) expression -> expression . XNOR expression
    (147) expression -> expression . OR expression
    (148) expression -> expression . LAND expression
    (149) expression -> expression . LOR expression
    (150) expression -> expression . COND expression COLON expression

    POWER           reduce using rule 125 (expression -> XNOR expression .)
    TIMES           reduce using rule 125 (expression -> XNOR expression .)
    DIVIDE          reduce using rule 125 (expression -> XNOR expression .)
    MOD             reduce using rule 125 (expression -> XNOR expression .)
    PLUS            reduce using rule 125 (expression -> XNOR expression .)
    MINUS           reduce using rule 125 (expression -> XNOR expression .)
    LSHIFT          reduce using rule 125 (expression -> XNOR expression .)
    RSHIFT          reduce using rule 125 (expression -> XNOR expression .)
    LSHIFTA         reduce using rule 125 (expression -> XNOR expression .)
    RSHIFTA         reduce using rule 125 (expression -> XNOR expression .)
    LT              reduce using rule 125 (expression -> XNOR expression .)
    GT              reduce using rule 125 (expression -> XNOR expression .)
    LE              reduce using rule 125 (expression -> XNOR expression .)
    GE              reduce using rule 125 (expression -> XNOR expression .)
    EQ              reduce using rule 125 (expression -> XNOR expression .)
    NE              reduce using rule 125 (expression -> XNOR expression .)
    EQL             reduce using rule 125 (expression -> XNOR expression .)
    NEL             reduce using rule 125 (expression -> XNOR expression .)
    AND             reduce using rule 125 (expression -> XNOR expression .)
    XOR             reduce using rule 125 (expression -> XNOR expression .)
    XNOR            reduce using rule 125 (expression -> XNOR expression .)
    OR              reduce using rule 125 (expression -> XNOR expression .)
    LAND            reduce using rule 125 (expression -> XNOR expression .)
    LOR             reduce using rule 125 (expression -> XNOR expression .)
    COND            reduce using rule 125 (expression -> XNOR expression .)
    LBRACE          reduce using rule 125 (expression -> XNOR expression .)
    RBRACE          reduce using rule 125 (expression -> XNOR expression .)
    COMMA           reduce using rule 125 (expression -> XNOR expression .)
    RPAREN          reduce using rule 125 (expression -> XNOR expression .)
    COLON           reduce using rule 125 (expression -> XNOR expression .)
    SEMICOLON       reduce using rule 125 (expression -> XNOR expression .)
    PLUSCOLON       reduce using rule 125 (expression -> XNOR expression .)
    MINUSCOLON      reduce using rule 125 (expression -> XNOR expression .)
    RBRACKET        reduce using rule 125 (expression -> XNOR expression .)

  ! POWER           [ shift and go to state 246 ]
  ! TIMES           [ shift and go to state 349 ]
  ! DIVIDE          [ shift and go to state 244 ]
  ! MOD             [ shift and go to state 231 ]
  ! PLUS            [ shift and go to state 240 ]
  ! MINUS           [ shift and go to state 229 ]
  ! LSHIFT          [ shift and go to state 243 ]
  ! RSHIFT          [ shift and go to state 226 ]
  ! LSHIFTA         [ shift and go to state 241 ]
  ! RSHIFTA         [ shift and go to state 238 ]
  ! LT              [ shift and go to state 235 ]
  ! GT              [ shift and go to state 228 ]
  ! LE              [ shift and go to state 222 ]
  ! GE              [ shift and go to state 239 ]
  ! EQ              [ shift and go to state 223 ]
  ! NE              [ shift and go to state 225 ]
  ! EQL             [ shift and go to state 245 ]
  ! NEL             [ shift and go to state 242 ]
  ! AND             [ shift and go to state 224 ]
  ! XOR             [ shift and go to state 237 ]
  ! XNOR            [ shift and go to state 232 ]
  ! OR              [ shift and go to state 234 ]
  ! LAND            [ shift and go to state 227 ]
  ! LOR             [ shift and go to state 230 ]
  ! COND            [ shift and go to state 233 ]


state 220

    (117) expression -> PLUS expression .
    (126) expression -> expression . POWER expression
    (127) expression -> expression . TIMES expression
    (128) expression -> expression . DIVIDE expression
    (129) expression -> expression . MOD expression
    (130) expression -> expression . PLUS expression
    (131) expression -> expression . MINUS expression
    (132) expression -> expression . LSHIFT expression
    (133) expression -> expression . RSHIFT expression
    (134) expression -> expression . LSHIFTA expression
    (135) expression -> expression . RSHIFTA expression
    (136) expression -> expression . LT expression
    (137) expression -> expression . GT expression
    (138) expression -> expression . LE expression
    (139) expression -> expression . GE expression
    (140) expression -> expression . EQ expression
    (141) expression -> expression . NE expression
    (142) expression -> expression . EQL expression
    (143) expression -> expression . NEL expression
    (144) expression -> expression . AND expression
    (145) expression -> expression . XOR expression
    (146) expression -> expression . XNOR expression
    (147) expression -> expression . OR expression
    (148) expression -> expression . LAND expression
    (149) expression -> expression . LOR expression
    (150) expression -> expression . COND expression COLON expression

    POWER           reduce using rule 117 (expression -> PLUS expression .)
    TIMES           reduce using rule 117 (expression -> PLUS expression .)
    DIVIDE          reduce using rule 117 (expression -> PLUS expression .)
    MOD             reduce using rule 117 (expression -> PLUS expression .)
    PLUS            reduce using rule 117 (expression -> PLUS expression .)
    MINUS           reduce using rule 117 (expression -> PLUS expression .)
    LSHIFT          reduce using rule 117 (expression -> PLUS expression .)
    RSHIFT          reduce using rule 117 (expression -> PLUS expression .)
    LSHIFTA         reduce using rule 117 (expression -> PLUS expression .)
    RSHIFTA         reduce using rule 117 (expression -> PLUS expression .)
    LT              reduce using rule 117 (expression -> PLUS expression .)
    GT              reduce using rule 117 (expression -> PLUS expression .)
    LE              reduce using rule 117 (expression -> PLUS expression .)
    GE              reduce using rule 117 (expression -> PLUS expression .)
    EQ              reduce using rule 117 (expression -> PLUS expression .)
    NE              reduce using rule 117 (expression -> PLUS expression .)
    EQL             reduce using rule 117 (expression -> PLUS expression .)
    NEL             reduce using rule 117 (expression -> PLUS expression .)
    AND             reduce using rule 117 (expression -> PLUS expression .)
    XOR             reduce using rule 117 (expression -> PLUS expression .)
    XNOR            reduce using rule 117 (expression -> PLUS expression .)
    OR              reduce using rule 117 (expression -> PLUS expression .)
    LAND            reduce using rule 117 (expression -> PLUS expression .)
    LOR             reduce using rule 117 (expression -> PLUS expression .)
    COND            reduce using rule 117 (expression -> PLUS expression .)
    LBRACE          reduce using rule 117 (expression -> PLUS expression .)
    RBRACE          reduce using rule 117 (expression -> PLUS expression .)
    COMMA           reduce using rule 117 (expression -> PLUS expression .)
    RPAREN          reduce using rule 117 (expression -> PLUS expression .)
    COLON           reduce using rule 117 (expression -> PLUS expression .)
    SEMICOLON       reduce using rule 117 (expression -> PLUS expression .)
    PLUSCOLON       reduce using rule 117 (expression -> PLUS expression .)
    MINUSCOLON      reduce using rule 117 (expression -> PLUS expression .)
    RBRACKET        reduce using rule 117 (expression -> PLUS expression .)

  ! POWER           [ shift and go to state 246 ]
  ! TIMES           [ shift and go to state 349 ]
  ! DIVIDE          [ shift and go to state 244 ]
  ! MOD             [ shift and go to state 231 ]
  ! PLUS            [ shift and go to state 240 ]
  ! MINUS           [ shift and go to state 229 ]
  ! LSHIFT          [ shift and go to state 243 ]
  ! RSHIFT          [ shift and go to state 226 ]
  ! LSHIFTA         [ shift and go to state 241 ]
  ! RSHIFTA         [ shift and go to state 238 ]
  ! LT              [ shift and go to state 235 ]
  ! GT              [ shift and go to state 228 ]
  ! LE              [ shift and go to state 222 ]
  ! GE              [ shift and go to state 239 ]
  ! EQ              [ shift and go to state 223 ]
  ! NE              [ shift and go to state 225 ]
  ! EQL             [ shift and go to state 245 ]
  ! NEL             [ shift and go to state 242 ]
  ! AND             [ shift and go to state 224 ]
  ! XOR             [ shift and go to state 237 ]
  ! XNOR            [ shift and go to state 232 ]
  ! OR              [ shift and go to state 234 ]
  ! LAND            [ shift and go to state 227 ]
  ! LOR             [ shift and go to state 230 ]
  ! COND            [ shift and go to state 233 ]


state 221

    (120) expression -> AND expression .
    (126) expression -> expression . POWER expression
    (127) expression -> expression . TIMES expression
    (128) expression -> expression . DIVIDE expression
    (129) expression -> expression . MOD expression
    (130) expression -> expression . PLUS expression
    (131) expression -> expression . MINUS expression
    (132) expression -> expression . LSHIFT expression
    (133) expression -> expression . RSHIFT expression
    (134) expression -> expression . LSHIFTA expression
    (135) expression -> expression . RSHIFTA expression
    (136) expression -> expression . LT expression
    (137) expression -> expression . GT expression
    (138) expression -> expression . LE expression
    (139) expression -> expression . GE expression
    (140) expression -> expression . EQ expression
    (141) expression -> expression . NE expression
    (142) expression -> expression . EQL expression
    (143) expression -> expression . NEL expression
    (144) expression -> expression . AND expression
    (145) expression -> expression . XOR expression
    (146) expression -> expression . XNOR expression
    (147) expression -> expression . OR expression
    (148) expression -> expression . LAND expression
    (149) expression -> expression . LOR expression
    (150) expression -> expression . COND expression COLON expression

    POWER           reduce using rule 120 (expression -> AND expression .)
    TIMES           reduce using rule 120 (expression -> AND expression .)
    DIVIDE          reduce using rule 120 (expression -> AND expression .)
    MOD             reduce using rule 120 (expression -> AND expression .)
    PLUS            reduce using rule 120 (expression -> AND expression .)
    MINUS           reduce using rule 120 (expression -> AND expression .)
    LSHIFT          reduce using rule 120 (expression -> AND expression .)
    RSHIFT          reduce using rule 120 (expression -> AND expression .)
    LSHIFTA         reduce using rule 120 (expression -> AND expression .)
    RSHIFTA         reduce using rule 120 (expression -> AND expression .)
    LT              reduce using rule 120 (expression -> AND expression .)
    GT              reduce using rule 120 (expression -> AND expression .)
    LE              reduce using rule 120 (expression -> AND expression .)
    GE              reduce using rule 120 (expression -> AND expression .)
    EQ              reduce using rule 120 (expression -> AND expression .)
    NE              reduce using rule 120 (expression -> AND expression .)
    EQL             reduce using rule 120 (expression -> AND expression .)
    NEL             reduce using rule 120 (expression -> AND expression .)
    AND             reduce using rule 120 (expression -> AND expression .)
    XOR             reduce using rule 120 (expression -> AND expression .)
    XNOR            reduce using rule 120 (expression -> AND expression .)
    OR              reduce using rule 120 (expression -> AND expression .)
    LAND            reduce using rule 120 (expression -> AND expression .)
    LOR             reduce using rule 120 (expression -> AND expression .)
    COND            reduce using rule 120 (expression -> AND expression .)
    LBRACE          reduce using rule 120 (expression -> AND expression .)
    RBRACE          reduce using rule 120 (expression -> AND expression .)
    COMMA           reduce using rule 120 (expression -> AND expression .)
    RPAREN          reduce using rule 120 (expression -> AND expression .)
    COLON           reduce using rule 120 (expression -> AND expression .)
    SEMICOLON       reduce using rule 120 (expression -> AND expression .)
    PLUSCOLON       reduce using rule 120 (expression -> AND expression .)
    MINUSCOLON      reduce using rule 120 (expression -> AND expression .)
    RBRACKET        reduce using rule 120 (expression -> AND expression .)

  ! POWER           [ shift and go to state 246 ]
  ! TIMES           [ shift and go to state 349 ]
  ! DIVIDE          [ shift and go to state 244 ]
  ! MOD             [ shift and go to state 231 ]
  ! PLUS            [ shift and go to state 240 ]
  ! MINUS           [ shift and go to state 229 ]
  ! LSHIFT          [ shift and go to state 243 ]
  ! RSHIFT          [ shift and go to state 226 ]
  ! LSHIFTA         [ shift and go to state 241 ]
  ! RSHIFTA         [ shift and go to state 238 ]
  ! LT              [ shift and go to state 235 ]
  ! GT              [ shift and go to state 228 ]
  ! LE              [ shift and go to state 222 ]
  ! GE              [ shift and go to state 239 ]
  ! EQ              [ shift and go to state 223 ]
  ! NE              [ shift and go to state 225 ]
  ! EQL             [ shift and go to state 245 ]
  ! NEL             [ shift and go to state 242 ]
  ! AND             [ shift and go to state 224 ]
  ! XOR             [ shift and go to state 237 ]
  ! XNOR            [ shift and go to state 232 ]
  ! OR              [ shift and go to state 234 ]
  ! LAND            [ shift and go to state 227 ]
  ! LOR             [ shift and go to state 230 ]
  ! COND            [ shift and go to state 233 ]


state 222

    (138) expression -> expression LE . expression
    (116) expression -> . MINUS expression
    (117) expression -> . PLUS expression
    (118) expression -> . LNOT expression
    (119) expression -> . NOT expression
    (120) expression -> . AND expression
    (121) expression -> . NAND expression
    (122) expression -> . NOR expression
    (123) expression -> . OR expression
    (124) expression -> . XOR expression
    (125) expression -> . XNOR expression
    (126) expression -> . expression POWER expression
    (127) expression -> . expression TIMES expression
    (128) expression -> . expression DIVIDE expression
    (129) expression -> . expression MOD expression
    (130) expression -> . expression PLUS expression
    (131) expression -> . expression MINUS expression
    (132) expression -> . expression LSHIFT expression
    (133) expression -> . expression RSHIFT expression
    (134) expression -> . expression LSHIFTA expression
    (135) expression -> . expression RSHIFTA expression
    (136) expression -> . expression LT expression
    (137) expression -> . expression GT expression
    (138) expression -> . expression LE expression
    (139) expression -> . expression GE expression
    (140) expression -> . expression EQ expression
    (141) expression -> . expression NE expression
    (142) expression -> . expression EQL expression
    (143) expression -> . expression NEL expression
    (144) expression -> . expression AND expression
    (145) expression -> . expression XOR expression
    (146) expression -> . expression XNOR expression
    (147) expression -> . expression OR expression
    (148) expression -> . expression LAND expression
    (149) expression -> . expression LOR expression
    (150) expression -> . expression COND expression COLON expression
    (151) expression -> . LPAREN expression RPAREN
    (152) expression -> . concat
    (153) expression -> . repeat
    (154) expression -> . partselect
    (155) expression -> . pointer
    (156) expression -> . functioncall
    (157) expression -> . systemcall
    (158) expression -> . identifier
    (159) expression -> . const_expression
    (160) concat -> . LBRACE concatlist RBRACE
    (163) repeat -> . LBRACE expression concat RBRACE
    (164) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (165) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (166) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (167) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (168) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (169) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (170) pointer -> . identifier LBRACKET expression RBRACKET
    (171) pointer -> . pointer LBRACKET expression RBRACKET
    (339) functioncall -> . identifier LPAREN func_args RPAREN
    (319) systemcall -> . DOLLER ID
    (320) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (357) identifier -> . ID
    (358) identifier -> . scope ID
    (172) const_expression -> . intnumber
    (173) const_expression -> . floatnumber
    (174) const_expression -> . stringliteral
    (359) scope -> . identifier DOT
    (360) scope -> . pointer DOT
    (176) intnumber -> . INTNUMBER_DEC
    (177) intnumber -> . SIGNED_INTNUMBER_DEC
    (178) intnumber -> . INTNUMBER_BIN
    (179) intnumber -> . SIGNED_INTNUMBER_BIN
    (180) intnumber -> . INTNUMBER_OCT
    (181) intnumber -> . SIGNED_INTNUMBER_OCT
    (182) intnumber -> . INTNUMBER_HEX
    (183) intnumber -> . SIGNED_INTNUMBER_HEX
    (175) floatnumber -> . FLOATNUMBER
    (184) stringliteral -> . STRING_LITERAL

    MINUS           shift and go to state 97
    PLUS            shift and go to state 89
    LNOT            shift and go to state 95
    NOT             shift and go to state 78
    AND             shift and go to state 91
    NAND            shift and go to state 98
    NOR             shift and go to state 76
    OR              shift and go to state 105
    XOR             shift and go to state 82
    XNOR            shift and go to state 87
    LPAREN          shift and go to state 96
    LBRACE          shift and go to state 77
    DOLLER          shift and go to state 100
    ID              shift and go to state 85
    INTNUMBER_DEC   shift and go to state 79
    SIGNED_INTNUMBER_DEC shift and go to state 101
    INTNUMBER_BIN   shift and go to state 111
    SIGNED_INTNUMBER_BIN shift and go to state 112
    INTNUMBER_OCT   shift and go to state 86
    SIGNED_INTNUMBER_OCT shift and go to state 106
    INTNUMBER_HEX   shift and go to state 93
    SIGNED_INTNUMBER_HEX shift and go to state 83
    FLOATNUMBER     shift and go to state 102
    STRING_LITERAL  shift and go to state 107

    stringliteral                  shift and go to state 99
    intnumber                      shift and go to state 81
    expression                     shift and go to state 355
    repeat                         shift and go to state 108
    partselect                     shift and go to state 103
    identifier                     shift and go to state 104
    pointer                        shift and go to state 80
    functioncall                   shift and go to state 94
    scope                          shift and go to state 84
    systemcall                     shift and go to state 109
    const_expression               shift and go to state 110
    concat                         shift and go to state 88
    floatnumber                    shift and go to state 90

state 223

    (140) expression -> expression EQ . expression
    (116) expression -> . MINUS expression
    (117) expression -> . PLUS expression
    (118) expression -> . LNOT expression
    (119) expression -> . NOT expression
    (120) expression -> . AND expression
    (121) expression -> . NAND expression
    (122) expression -> . NOR expression
    (123) expression -> . OR expression
    (124) expression -> . XOR expression
    (125) expression -> . XNOR expression
    (126) expression -> . expression POWER expression
    (127) expression -> . expression TIMES expression
    (128) expression -> . expression DIVIDE expression
    (129) expression -> . expression MOD expression
    (130) expression -> . expression PLUS expression
    (131) expression -> . expression MINUS expression
    (132) expression -> . expression LSHIFT expression
    (133) expression -> . expression RSHIFT expression
    (134) expression -> . expression LSHIFTA expression
    (135) expression -> . expression RSHIFTA expression
    (136) expression -> . expression LT expression
    (137) expression -> . expression GT expression
    (138) expression -> . expression LE expression
    (139) expression -> . expression GE expression
    (140) expression -> . expression EQ expression
    (141) expression -> . expression NE expression
    (142) expression -> . expression EQL expression
    (143) expression -> . expression NEL expression
    (144) expression -> . expression AND expression
    (145) expression -> . expression XOR expression
    (146) expression -> . expression XNOR expression
    (147) expression -> . expression OR expression
    (148) expression -> . expression LAND expression
    (149) expression -> . expression LOR expression
    (150) expression -> . expression COND expression COLON expression
    (151) expression -> . LPAREN expression RPAREN
    (152) expression -> . concat
    (153) expression -> . repeat
    (154) expression -> . partselect
    (155) expression -> . pointer
    (156) expression -> . functioncall
    (157) expression -> . systemcall
    (158) expression -> . identifier
    (159) expression -> . const_expression
    (160) concat -> . LBRACE concatlist RBRACE
    (163) repeat -> . LBRACE expression concat RBRACE
    (164) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (165) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (166) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (167) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (168) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (169) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (170) pointer -> . identifier LBRACKET expression RBRACKET
    (171) pointer -> . pointer LBRACKET expression RBRACKET
    (339) functioncall -> . identifier LPAREN func_args RPAREN
    (319) systemcall -> . DOLLER ID
    (320) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (357) identifier -> . ID
    (358) identifier -> . scope ID
    (172) const_expression -> . intnumber
    (173) const_expression -> . floatnumber
    (174) const_expression -> . stringliteral
    (359) scope -> . identifier DOT
    (360) scope -> . pointer DOT
    (176) intnumber -> . INTNUMBER_DEC
    (177) intnumber -> . SIGNED_INTNUMBER_DEC
    (178) intnumber -> . INTNUMBER_BIN
    (179) intnumber -> . SIGNED_INTNUMBER_BIN
    (180) intnumber -> . INTNUMBER_OCT
    (181) intnumber -> . SIGNED_INTNUMBER_OCT
    (182) intnumber -> . INTNUMBER_HEX
    (183) intnumber -> . SIGNED_INTNUMBER_HEX
    (175) floatnumber -> . FLOATNUMBER
    (184) stringliteral -> . STRING_LITERAL

    MINUS           shift and go to state 97
    PLUS            shift and go to state 89
    LNOT            shift and go to state 95
    NOT             shift and go to state 78
    AND             shift and go to state 91
    NAND            shift and go to state 98
    NOR             shift and go to state 76
    OR              shift and go to state 105
    XOR             shift and go to state 82
    XNOR            shift and go to state 87
    LPAREN          shift and go to state 96
    LBRACE          shift and go to state 77
    DOLLER          shift and go to state 100
    ID              shift and go to state 85
    INTNUMBER_DEC   shift and go to state 79
    SIGNED_INTNUMBER_DEC shift and go to state 101
    INTNUMBER_BIN   shift and go to state 111
    SIGNED_INTNUMBER_BIN shift and go to state 112
    INTNUMBER_OCT   shift and go to state 86
    SIGNED_INTNUMBER_OCT shift and go to state 106
    INTNUMBER_HEX   shift and go to state 93
    SIGNED_INTNUMBER_HEX shift and go to state 83
    FLOATNUMBER     shift and go to state 102
    STRING_LITERAL  shift and go to state 107

    stringliteral                  shift and go to state 99
    intnumber                      shift and go to state 81
    expression                     shift and go to state 356
    repeat                         shift and go to state 108
    partselect                     shift and go to state 103
    identifier                     shift and go to state 104
    pointer                        shift and go to state 80
    functioncall                   shift and go to state 94
    scope                          shift and go to state 84
    systemcall                     shift and go to state 109
    const_expression               shift and go to state 110
    concat                         shift and go to state 88
    floatnumber                    shift and go to state 90

state 224

    (144) expression -> expression AND . expression
    (116) expression -> . MINUS expression
    (117) expression -> . PLUS expression
    (118) expression -> . LNOT expression
    (119) expression -> . NOT expression
    (120) expression -> . AND expression
    (121) expression -> . NAND expression
    (122) expression -> . NOR expression
    (123) expression -> . OR expression
    (124) expression -> . XOR expression
    (125) expression -> . XNOR expression
    (126) expression -> . expression POWER expression
    (127) expression -> . expression TIMES expression
    (128) expression -> . expression DIVIDE expression
    (129) expression -> . expression MOD expression
    (130) expression -> . expression PLUS expression
    (131) expression -> . expression MINUS expression
    (132) expression -> . expression LSHIFT expression
    (133) expression -> . expression RSHIFT expression
    (134) expression -> . expression LSHIFTA expression
    (135) expression -> . expression RSHIFTA expression
    (136) expression -> . expression LT expression
    (137) expression -> . expression GT expression
    (138) expression -> . expression LE expression
    (139) expression -> . expression GE expression
    (140) expression -> . expression EQ expression
    (141) expression -> . expression NE expression
    (142) expression -> . expression EQL expression
    (143) expression -> . expression NEL expression
    (144) expression -> . expression AND expression
    (145) expression -> . expression XOR expression
    (146) expression -> . expression XNOR expression
    (147) expression -> . expression OR expression
    (148) expression -> . expression LAND expression
    (149) expression -> . expression LOR expression
    (150) expression -> . expression COND expression COLON expression
    (151) expression -> . LPAREN expression RPAREN
    (152) expression -> . concat
    (153) expression -> . repeat
    (154) expression -> . partselect
    (155) expression -> . pointer
    (156) expression -> . functioncall
    (157) expression -> . systemcall
    (158) expression -> . identifier
    (159) expression -> . const_expression
    (160) concat -> . LBRACE concatlist RBRACE
    (163) repeat -> . LBRACE expression concat RBRACE
    (164) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (165) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (166) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (167) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (168) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (169) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (170) pointer -> . identifier LBRACKET expression RBRACKET
    (171) pointer -> . pointer LBRACKET expression RBRACKET
    (339) functioncall -> . identifier LPAREN func_args RPAREN
    (319) systemcall -> . DOLLER ID
    (320) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (357) identifier -> . ID
    (358) identifier -> . scope ID
    (172) const_expression -> . intnumber
    (173) const_expression -> . floatnumber
    (174) const_expression -> . stringliteral
    (359) scope -> . identifier DOT
    (360) scope -> . pointer DOT
    (176) intnumber -> . INTNUMBER_DEC
    (177) intnumber -> . SIGNED_INTNUMBER_DEC
    (178) intnumber -> . INTNUMBER_BIN
    (179) intnumber -> . SIGNED_INTNUMBER_BIN
    (180) intnumber -> . INTNUMBER_OCT
    (181) intnumber -> . SIGNED_INTNUMBER_OCT
    (182) intnumber -> . INTNUMBER_HEX
    (183) intnumber -> . SIGNED_INTNUMBER_HEX
    (175) floatnumber -> . FLOATNUMBER
    (184) stringliteral -> . STRING_LITERAL

    MINUS           shift and go to state 97
    PLUS            shift and go to state 89
    LNOT            shift and go to state 95
    NOT             shift and go to state 78
    AND             shift and go to state 91
    NAND            shift and go to state 98
    NOR             shift and go to state 76
    OR              shift and go to state 105
    XOR             shift and go to state 82
    XNOR            shift and go to state 87
    LPAREN          shift and go to state 96
    LBRACE          shift and go to state 77
    DOLLER          shift and go to state 100
    ID              shift and go to state 85
    INTNUMBER_DEC   shift and go to state 79
    SIGNED_INTNUMBER_DEC shift and go to state 101
    INTNUMBER_BIN   shift and go to state 111
    SIGNED_INTNUMBER_BIN shift and go to state 112
    INTNUMBER_OCT   shift and go to state 86
    SIGNED_INTNUMBER_OCT shift and go to state 106
    INTNUMBER_HEX   shift and go to state 93
    SIGNED_INTNUMBER_HEX shift and go to state 83
    FLOATNUMBER     shift and go to state 102
    STRING_LITERAL  shift and go to state 107

    stringliteral                  shift and go to state 99
    intnumber                      shift and go to state 81
    expression                     shift and go to state 357
    repeat                         shift and go to state 108
    partselect                     shift and go to state 103
    identifier                     shift and go to state 104
    pointer                        shift and go to state 80
    functioncall                   shift and go to state 94
    scope                          shift and go to state 84
    systemcall                     shift and go to state 109
    const_expression               shift and go to state 110
    concat                         shift and go to state 88
    floatnumber                    shift and go to state 90

state 225

    (141) expression -> expression NE . expression
    (116) expression -> . MINUS expression
    (117) expression -> . PLUS expression
    (118) expression -> . LNOT expression
    (119) expression -> . NOT expression
    (120) expression -> . AND expression
    (121) expression -> . NAND expression
    (122) expression -> . NOR expression
    (123) expression -> . OR expression
    (124) expression -> . XOR expression
    (125) expression -> . XNOR expression
    (126) expression -> . expression POWER expression
    (127) expression -> . expression TIMES expression
    (128) expression -> . expression DIVIDE expression
    (129) expression -> . expression MOD expression
    (130) expression -> . expression PLUS expression
    (131) expression -> . expression MINUS expression
    (132) expression -> . expression LSHIFT expression
    (133) expression -> . expression RSHIFT expression
    (134) expression -> . expression LSHIFTA expression
    (135) expression -> . expression RSHIFTA expression
    (136) expression -> . expression LT expression
    (137) expression -> . expression GT expression
    (138) expression -> . expression LE expression
    (139) expression -> . expression GE expression
    (140) expression -> . expression EQ expression
    (141) expression -> . expression NE expression
    (142) expression -> . expression EQL expression
    (143) expression -> . expression NEL expression
    (144) expression -> . expression AND expression
    (145) expression -> . expression XOR expression
    (146) expression -> . expression XNOR expression
    (147) expression -> . expression OR expression
    (148) expression -> . expression LAND expression
    (149) expression -> . expression LOR expression
    (150) expression -> . expression COND expression COLON expression
    (151) expression -> . LPAREN expression RPAREN
    (152) expression -> . concat
    (153) expression -> . repeat
    (154) expression -> . partselect
    (155) expression -> . pointer
    (156) expression -> . functioncall
    (157) expression -> . systemcall
    (158) expression -> . identifier
    (159) expression -> . const_expression
    (160) concat -> . LBRACE concatlist RBRACE
    (163) repeat -> . LBRACE expression concat RBRACE
    (164) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (165) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (166) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (167) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (168) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (169) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (170) pointer -> . identifier LBRACKET expression RBRACKET
    (171) pointer -> . pointer LBRACKET expression RBRACKET
    (339) functioncall -> . identifier LPAREN func_args RPAREN
    (319) systemcall -> . DOLLER ID
    (320) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (357) identifier -> . ID
    (358) identifier -> . scope ID
    (172) const_expression -> . intnumber
    (173) const_expression -> . floatnumber
    (174) const_expression -> . stringliteral
    (359) scope -> . identifier DOT
    (360) scope -> . pointer DOT
    (176) intnumber -> . INTNUMBER_DEC
    (177) intnumber -> . SIGNED_INTNUMBER_DEC
    (178) intnumber -> . INTNUMBER_BIN
    (179) intnumber -> . SIGNED_INTNUMBER_BIN
    (180) intnumber -> . INTNUMBER_OCT
    (181) intnumber -> . SIGNED_INTNUMBER_OCT
    (182) intnumber -> . INTNUMBER_HEX
    (183) intnumber -> . SIGNED_INTNUMBER_HEX
    (175) floatnumber -> . FLOATNUMBER
    (184) stringliteral -> . STRING_LITERAL

    MINUS           shift and go to state 97
    PLUS            shift and go to state 89
    LNOT            shift and go to state 95
    NOT             shift and go to state 78
    AND             shift and go to state 91
    NAND            shift and go to state 98
    NOR             shift and go to state 76
    OR              shift and go to state 105
    XOR             shift and go to state 82
    XNOR            shift and go to state 87
    LPAREN          shift and go to state 96
    LBRACE          shift and go to state 77
    DOLLER          shift and go to state 100
    ID              shift and go to state 85
    INTNUMBER_DEC   shift and go to state 79
    SIGNED_INTNUMBER_DEC shift and go to state 101
    INTNUMBER_BIN   shift and go to state 111
    SIGNED_INTNUMBER_BIN shift and go to state 112
    INTNUMBER_OCT   shift and go to state 86
    SIGNED_INTNUMBER_OCT shift and go to state 106
    INTNUMBER_HEX   shift and go to state 93
    SIGNED_INTNUMBER_HEX shift and go to state 83
    FLOATNUMBER     shift and go to state 102
    STRING_LITERAL  shift and go to state 107

    stringliteral                  shift and go to state 99
    intnumber                      shift and go to state 81
    expression                     shift and go to state 358
    repeat                         shift and go to state 108
    partselect                     shift and go to state 103
    identifier                     shift and go to state 104
    pointer                        shift and go to state 80
    functioncall                   shift and go to state 94
    scope                          shift and go to state 84
    systemcall                     shift and go to state 109
    const_expression               shift and go to state 110
    concat                         shift and go to state 88
    floatnumber                    shift and go to state 90

state 226

    (133) expression -> expression RSHIFT . expression
    (116) expression -> . MINUS expression
    (117) expression -> . PLUS expression
    (118) expression -> . LNOT expression
    (119) expression -> . NOT expression
    (120) expression -> . AND expression
    (121) expression -> . NAND expression
    (122) expression -> . NOR expression
    (123) expression -> . OR expression
    (124) expression -> . XOR expression
    (125) expression -> . XNOR expression
    (126) expression -> . expression POWER expression
    (127) expression -> . expression TIMES expression
    (128) expression -> . expression DIVIDE expression
    (129) expression -> . expression MOD expression
    (130) expression -> . expression PLUS expression
    (131) expression -> . expression MINUS expression
    (132) expression -> . expression LSHIFT expression
    (133) expression -> . expression RSHIFT expression
    (134) expression -> . expression LSHIFTA expression
    (135) expression -> . expression RSHIFTA expression
    (136) expression -> . expression LT expression
    (137) expression -> . expression GT expression
    (138) expression -> . expression LE expression
    (139) expression -> . expression GE expression
    (140) expression -> . expression EQ expression
    (141) expression -> . expression NE expression
    (142) expression -> . expression EQL expression
    (143) expression -> . expression NEL expression
    (144) expression -> . expression AND expression
    (145) expression -> . expression XOR expression
    (146) expression -> . expression XNOR expression
    (147) expression -> . expression OR expression
    (148) expression -> . expression LAND expression
    (149) expression -> . expression LOR expression
    (150) expression -> . expression COND expression COLON expression
    (151) expression -> . LPAREN expression RPAREN
    (152) expression -> . concat
    (153) expression -> . repeat
    (154) expression -> . partselect
    (155) expression -> . pointer
    (156) expression -> . functioncall
    (157) expression -> . systemcall
    (158) expression -> . identifier
    (159) expression -> . const_expression
    (160) concat -> . LBRACE concatlist RBRACE
    (163) repeat -> . LBRACE expression concat RBRACE
    (164) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (165) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (166) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (167) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (168) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (169) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (170) pointer -> . identifier LBRACKET expression RBRACKET
    (171) pointer -> . pointer LBRACKET expression RBRACKET
    (339) functioncall -> . identifier LPAREN func_args RPAREN
    (319) systemcall -> . DOLLER ID
    (320) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (357) identifier -> . ID
    (358) identifier -> . scope ID
    (172) const_expression -> . intnumber
    (173) const_expression -> . floatnumber
    (174) const_expression -> . stringliteral
    (359) scope -> . identifier DOT
    (360) scope -> . pointer DOT
    (176) intnumber -> . INTNUMBER_DEC
    (177) intnumber -> . SIGNED_INTNUMBER_DEC
    (178) intnumber -> . INTNUMBER_BIN
    (179) intnumber -> . SIGNED_INTNUMBER_BIN
    (180) intnumber -> . INTNUMBER_OCT
    (181) intnumber -> . SIGNED_INTNUMBER_OCT
    (182) intnumber -> . INTNUMBER_HEX
    (183) intnumber -> . SIGNED_INTNUMBER_HEX
    (175) floatnumber -> . FLOATNUMBER
    (184) stringliteral -> . STRING_LITERAL

    MINUS           shift and go to state 97
    PLUS            shift and go to state 89
    LNOT            shift and go to state 95
    NOT             shift and go to state 78
    AND             shift and go to state 91
    NAND            shift and go to state 98
    NOR             shift and go to state 76
    OR              shift and go to state 105
    XOR             shift and go to state 82
    XNOR            shift and go to state 87
    LPAREN          shift and go to state 96
    LBRACE          shift and go to state 77
    DOLLER          shift and go to state 100
    ID              shift and go to state 85
    INTNUMBER_DEC   shift and go to state 79
    SIGNED_INTNUMBER_DEC shift and go to state 101
    INTNUMBER_BIN   shift and go to state 111
    SIGNED_INTNUMBER_BIN shift and go to state 112
    INTNUMBER_OCT   shift and go to state 86
    SIGNED_INTNUMBER_OCT shift and go to state 106
    INTNUMBER_HEX   shift and go to state 93
    SIGNED_INTNUMBER_HEX shift and go to state 83
    FLOATNUMBER     shift and go to state 102
    STRING_LITERAL  shift and go to state 107

    stringliteral                  shift and go to state 99
    intnumber                      shift and go to state 81
    expression                     shift and go to state 359
    repeat                         shift and go to state 108
    partselect                     shift and go to state 103
    identifier                     shift and go to state 104
    pointer                        shift and go to state 80
    functioncall                   shift and go to state 94
    scope                          shift and go to state 84
    systemcall                     shift and go to state 109
    const_expression               shift and go to state 110
    concat                         shift and go to state 88
    floatnumber                    shift and go to state 90

state 227

    (148) expression -> expression LAND . expression
    (116) expression -> . MINUS expression
    (117) expression -> . PLUS expression
    (118) expression -> . LNOT expression
    (119) expression -> . NOT expression
    (120) expression -> . AND expression
    (121) expression -> . NAND expression
    (122) expression -> . NOR expression
    (123) expression -> . OR expression
    (124) expression -> . XOR expression
    (125) expression -> . XNOR expression
    (126) expression -> . expression POWER expression
    (127) expression -> . expression TIMES expression
    (128) expression -> . expression DIVIDE expression
    (129) expression -> . expression MOD expression
    (130) expression -> . expression PLUS expression
    (131) expression -> . expression MINUS expression
    (132) expression -> . expression LSHIFT expression
    (133) expression -> . expression RSHIFT expression
    (134) expression -> . expression LSHIFTA expression
    (135) expression -> . expression RSHIFTA expression
    (136) expression -> . expression LT expression
    (137) expression -> . expression GT expression
    (138) expression -> . expression LE expression
    (139) expression -> . expression GE expression
    (140) expression -> . expression EQ expression
    (141) expression -> . expression NE expression
    (142) expression -> . expression EQL expression
    (143) expression -> . expression NEL expression
    (144) expression -> . expression AND expression
    (145) expression -> . expression XOR expression
    (146) expression -> . expression XNOR expression
    (147) expression -> . expression OR expression
    (148) expression -> . expression LAND expression
    (149) expression -> . expression LOR expression
    (150) expression -> . expression COND expression COLON expression
    (151) expression -> . LPAREN expression RPAREN
    (152) expression -> . concat
    (153) expression -> . repeat
    (154) expression -> . partselect
    (155) expression -> . pointer
    (156) expression -> . functioncall
    (157) expression -> . systemcall
    (158) expression -> . identifier
    (159) expression -> . const_expression
    (160) concat -> . LBRACE concatlist RBRACE
    (163) repeat -> . LBRACE expression concat RBRACE
    (164) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (165) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (166) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (167) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (168) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (169) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (170) pointer -> . identifier LBRACKET expression RBRACKET
    (171) pointer -> . pointer LBRACKET expression RBRACKET
    (339) functioncall -> . identifier LPAREN func_args RPAREN
    (319) systemcall -> . DOLLER ID
    (320) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (357) identifier -> . ID
    (358) identifier -> . scope ID
    (172) const_expression -> . intnumber
    (173) const_expression -> . floatnumber
    (174) const_expression -> . stringliteral
    (359) scope -> . identifier DOT
    (360) scope -> . pointer DOT
    (176) intnumber -> . INTNUMBER_DEC
    (177) intnumber -> . SIGNED_INTNUMBER_DEC
    (178) intnumber -> . INTNUMBER_BIN
    (179) intnumber -> . SIGNED_INTNUMBER_BIN
    (180) intnumber -> . INTNUMBER_OCT
    (181) intnumber -> . SIGNED_INTNUMBER_OCT
    (182) intnumber -> . INTNUMBER_HEX
    (183) intnumber -> . SIGNED_INTNUMBER_HEX
    (175) floatnumber -> . FLOATNUMBER
    (184) stringliteral -> . STRING_LITERAL

    MINUS           shift and go to state 97
    PLUS            shift and go to state 89
    LNOT            shift and go to state 95
    NOT             shift and go to state 78
    AND             shift and go to state 91
    NAND            shift and go to state 98
    NOR             shift and go to state 76
    OR              shift and go to state 105
    XOR             shift and go to state 82
    XNOR            shift and go to state 87
    LPAREN          shift and go to state 96
    LBRACE          shift and go to state 77
    DOLLER          shift and go to state 100
    ID              shift and go to state 85
    INTNUMBER_DEC   shift and go to state 79
    SIGNED_INTNUMBER_DEC shift and go to state 101
    INTNUMBER_BIN   shift and go to state 111
    SIGNED_INTNUMBER_BIN shift and go to state 112
    INTNUMBER_OCT   shift and go to state 86
    SIGNED_INTNUMBER_OCT shift and go to state 106
    INTNUMBER_HEX   shift and go to state 93
    SIGNED_INTNUMBER_HEX shift and go to state 83
    FLOATNUMBER     shift and go to state 102
    STRING_LITERAL  shift and go to state 107

    stringliteral                  shift and go to state 99
    intnumber                      shift and go to state 81
    expression                     shift and go to state 360
    repeat                         shift and go to state 108
    partselect                     shift and go to state 103
    identifier                     shift and go to state 104
    pointer                        shift and go to state 80
    functioncall                   shift and go to state 94
    scope                          shift and go to state 84
    systemcall                     shift and go to state 109
    const_expression               shift and go to state 110
    concat                         shift and go to state 88
    floatnumber                    shift and go to state 90

state 228

    (137) expression -> expression GT . expression
    (116) expression -> . MINUS expression
    (117) expression -> . PLUS expression
    (118) expression -> . LNOT expression
    (119) expression -> . NOT expression
    (120) expression -> . AND expression
    (121) expression -> . NAND expression
    (122) expression -> . NOR expression
    (123) expression -> . OR expression
    (124) expression -> . XOR expression
    (125) expression -> . XNOR expression
    (126) expression -> . expression POWER expression
    (127) expression -> . expression TIMES expression
    (128) expression -> . expression DIVIDE expression
    (129) expression -> . expression MOD expression
    (130) expression -> . expression PLUS expression
    (131) expression -> . expression MINUS expression
    (132) expression -> . expression LSHIFT expression
    (133) expression -> . expression RSHIFT expression
    (134) expression -> . expression LSHIFTA expression
    (135) expression -> . expression RSHIFTA expression
    (136) expression -> . expression LT expression
    (137) expression -> . expression GT expression
    (138) expression -> . expression LE expression
    (139) expression -> . expression GE expression
    (140) expression -> . expression EQ expression
    (141) expression -> . expression NE expression
    (142) expression -> . expression EQL expression
    (143) expression -> . expression NEL expression
    (144) expression -> . expression AND expression
    (145) expression -> . expression XOR expression
    (146) expression -> . expression XNOR expression
    (147) expression -> . expression OR expression
    (148) expression -> . expression LAND expression
    (149) expression -> . expression LOR expression
    (150) expression -> . expression COND expression COLON expression
    (151) expression -> . LPAREN expression RPAREN
    (152) expression -> . concat
    (153) expression -> . repeat
    (154) expression -> . partselect
    (155) expression -> . pointer
    (156) expression -> . functioncall
    (157) expression -> . systemcall
    (158) expression -> . identifier
    (159) expression -> . const_expression
    (160) concat -> . LBRACE concatlist RBRACE
    (163) repeat -> . LBRACE expression concat RBRACE
    (164) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (165) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (166) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (167) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (168) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (169) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (170) pointer -> . identifier LBRACKET expression RBRACKET
    (171) pointer -> . pointer LBRACKET expression RBRACKET
    (339) functioncall -> . identifier LPAREN func_args RPAREN
    (319) systemcall -> . DOLLER ID
    (320) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (357) identifier -> . ID
    (358) identifier -> . scope ID
    (172) const_expression -> . intnumber
    (173) const_expression -> . floatnumber
    (174) const_expression -> . stringliteral
    (359) scope -> . identifier DOT
    (360) scope -> . pointer DOT
    (176) intnumber -> . INTNUMBER_DEC
    (177) intnumber -> . SIGNED_INTNUMBER_DEC
    (178) intnumber -> . INTNUMBER_BIN
    (179) intnumber -> . SIGNED_INTNUMBER_BIN
    (180) intnumber -> . INTNUMBER_OCT
    (181) intnumber -> . SIGNED_INTNUMBER_OCT
    (182) intnumber -> . INTNUMBER_HEX
    (183) intnumber -> . SIGNED_INTNUMBER_HEX
    (175) floatnumber -> . FLOATNUMBER
    (184) stringliteral -> . STRING_LITERAL

    MINUS           shift and go to state 97
    PLUS            shift and go to state 89
    LNOT            shift and go to state 95
    NOT             shift and go to state 78
    AND             shift and go to state 91
    NAND            shift and go to state 98
    NOR             shift and go to state 76
    OR              shift and go to state 105
    XOR             shift and go to state 82
    XNOR            shift and go to state 87
    LPAREN          shift and go to state 96
    LBRACE          shift and go to state 77
    DOLLER          shift and go to state 100
    ID              shift and go to state 85
    INTNUMBER_DEC   shift and go to state 79
    SIGNED_INTNUMBER_DEC shift and go to state 101
    INTNUMBER_BIN   shift and go to state 111
    SIGNED_INTNUMBER_BIN shift and go to state 112
    INTNUMBER_OCT   shift and go to state 86
    SIGNED_INTNUMBER_OCT shift and go to state 106
    INTNUMBER_HEX   shift and go to state 93
    SIGNED_INTNUMBER_HEX shift and go to state 83
    FLOATNUMBER     shift and go to state 102
    STRING_LITERAL  shift and go to state 107

    stringliteral                  shift and go to state 99
    intnumber                      shift and go to state 81
    expression                     shift and go to state 361
    repeat                         shift and go to state 108
    partselect                     shift and go to state 103
    identifier                     shift and go to state 104
    pointer                        shift and go to state 80
    functioncall                   shift and go to state 94
    scope                          shift and go to state 84
    systemcall                     shift and go to state 109
    const_expression               shift and go to state 110
    concat                         shift and go to state 88
    floatnumber                    shift and go to state 90

state 229

    (131) expression -> expression MINUS . expression
    (116) expression -> . MINUS expression
    (117) expression -> . PLUS expression
    (118) expression -> . LNOT expression
    (119) expression -> . NOT expression
    (120) expression -> . AND expression
    (121) expression -> . NAND expression
    (122) expression -> . NOR expression
    (123) expression -> . OR expression
    (124) expression -> . XOR expression
    (125) expression -> . XNOR expression
    (126) expression -> . expression POWER expression
    (127) expression -> . expression TIMES expression
    (128) expression -> . expression DIVIDE expression
    (129) expression -> . expression MOD expression
    (130) expression -> . expression PLUS expression
    (131) expression -> . expression MINUS expression
    (132) expression -> . expression LSHIFT expression
    (133) expression -> . expression RSHIFT expression
    (134) expression -> . expression LSHIFTA expression
    (135) expression -> . expression RSHIFTA expression
    (136) expression -> . expression LT expression
    (137) expression -> . expression GT expression
    (138) expression -> . expression LE expression
    (139) expression -> . expression GE expression
    (140) expression -> . expression EQ expression
    (141) expression -> . expression NE expression
    (142) expression -> . expression EQL expression
    (143) expression -> . expression NEL expression
    (144) expression -> . expression AND expression
    (145) expression -> . expression XOR expression
    (146) expression -> . expression XNOR expression
    (147) expression -> . expression OR expression
    (148) expression -> . expression LAND expression
    (149) expression -> . expression LOR expression
    (150) expression -> . expression COND expression COLON expression
    (151) expression -> . LPAREN expression RPAREN
    (152) expression -> . concat
    (153) expression -> . repeat
    (154) expression -> . partselect
    (155) expression -> . pointer
    (156) expression -> . functioncall
    (157) expression -> . systemcall
    (158) expression -> . identifier
    (159) expression -> . const_expression
    (160) concat -> . LBRACE concatlist RBRACE
    (163) repeat -> . LBRACE expression concat RBRACE
    (164) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (165) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (166) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (167) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (168) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (169) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (170) pointer -> . identifier LBRACKET expression RBRACKET
    (171) pointer -> . pointer LBRACKET expression RBRACKET
    (339) functioncall -> . identifier LPAREN func_args RPAREN
    (319) systemcall -> . DOLLER ID
    (320) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (357) identifier -> . ID
    (358) identifier -> . scope ID
    (172) const_expression -> . intnumber
    (173) const_expression -> . floatnumber
    (174) const_expression -> . stringliteral
    (359) scope -> . identifier DOT
    (360) scope -> . pointer DOT
    (176) intnumber -> . INTNUMBER_DEC
    (177) intnumber -> . SIGNED_INTNUMBER_DEC
    (178) intnumber -> . INTNUMBER_BIN
    (179) intnumber -> . SIGNED_INTNUMBER_BIN
    (180) intnumber -> . INTNUMBER_OCT
    (181) intnumber -> . SIGNED_INTNUMBER_OCT
    (182) intnumber -> . INTNUMBER_HEX
    (183) intnumber -> . SIGNED_INTNUMBER_HEX
    (175) floatnumber -> . FLOATNUMBER
    (184) stringliteral -> . STRING_LITERAL

    MINUS           shift and go to state 97
    PLUS            shift and go to state 89
    LNOT            shift and go to state 95
    NOT             shift and go to state 78
    AND             shift and go to state 91
    NAND            shift and go to state 98
    NOR             shift and go to state 76
    OR              shift and go to state 105
    XOR             shift and go to state 82
    XNOR            shift and go to state 87
    LPAREN          shift and go to state 96
    LBRACE          shift and go to state 77
    DOLLER          shift and go to state 100
    ID              shift and go to state 85
    INTNUMBER_DEC   shift and go to state 79
    SIGNED_INTNUMBER_DEC shift and go to state 101
    INTNUMBER_BIN   shift and go to state 111
    SIGNED_INTNUMBER_BIN shift and go to state 112
    INTNUMBER_OCT   shift and go to state 86
    SIGNED_INTNUMBER_OCT shift and go to state 106
    INTNUMBER_HEX   shift and go to state 93
    SIGNED_INTNUMBER_HEX shift and go to state 83
    FLOATNUMBER     shift and go to state 102
    STRING_LITERAL  shift and go to state 107

    stringliteral                  shift and go to state 99
    intnumber                      shift and go to state 81
    expression                     shift and go to state 362
    repeat                         shift and go to state 108
    partselect                     shift and go to state 103
    identifier                     shift and go to state 104
    pointer                        shift and go to state 80
    functioncall                   shift and go to state 94
    scope                          shift and go to state 84
    systemcall                     shift and go to state 109
    const_expression               shift and go to state 110
    concat                         shift and go to state 88
    floatnumber                    shift and go to state 90

state 230

    (149) expression -> expression LOR . expression
    (116) expression -> . MINUS expression
    (117) expression -> . PLUS expression
    (118) expression -> . LNOT expression
    (119) expression -> . NOT expression
    (120) expression -> . AND expression
    (121) expression -> . NAND expression
    (122) expression -> . NOR expression
    (123) expression -> . OR expression
    (124) expression -> . XOR expression
    (125) expression -> . XNOR expression
    (126) expression -> . expression POWER expression
    (127) expression -> . expression TIMES expression
    (128) expression -> . expression DIVIDE expression
    (129) expression -> . expression MOD expression
    (130) expression -> . expression PLUS expression
    (131) expression -> . expression MINUS expression
    (132) expression -> . expression LSHIFT expression
    (133) expression -> . expression RSHIFT expression
    (134) expression -> . expression LSHIFTA expression
    (135) expression -> . expression RSHIFTA expression
    (136) expression -> . expression LT expression
    (137) expression -> . expression GT expression
    (138) expression -> . expression LE expression
    (139) expression -> . expression GE expression
    (140) expression -> . expression EQ expression
    (141) expression -> . expression NE expression
    (142) expression -> . expression EQL expression
    (143) expression -> . expression NEL expression
    (144) expression -> . expression AND expression
    (145) expression -> . expression XOR expression
    (146) expression -> . expression XNOR expression
    (147) expression -> . expression OR expression
    (148) expression -> . expression LAND expression
    (149) expression -> . expression LOR expression
    (150) expression -> . expression COND expression COLON expression
    (151) expression -> . LPAREN expression RPAREN
    (152) expression -> . concat
    (153) expression -> . repeat
    (154) expression -> . partselect
    (155) expression -> . pointer
    (156) expression -> . functioncall
    (157) expression -> . systemcall
    (158) expression -> . identifier
    (159) expression -> . const_expression
    (160) concat -> . LBRACE concatlist RBRACE
    (163) repeat -> . LBRACE expression concat RBRACE
    (164) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (165) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (166) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (167) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (168) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (169) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (170) pointer -> . identifier LBRACKET expression RBRACKET
    (171) pointer -> . pointer LBRACKET expression RBRACKET
    (339) functioncall -> . identifier LPAREN func_args RPAREN
    (319) systemcall -> . DOLLER ID
    (320) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (357) identifier -> . ID
    (358) identifier -> . scope ID
    (172) const_expression -> . intnumber
    (173) const_expression -> . floatnumber
    (174) const_expression -> . stringliteral
    (359) scope -> . identifier DOT
    (360) scope -> . pointer DOT
    (176) intnumber -> . INTNUMBER_DEC
    (177) intnumber -> . SIGNED_INTNUMBER_DEC
    (178) intnumber -> . INTNUMBER_BIN
    (179) intnumber -> . SIGNED_INTNUMBER_BIN
    (180) intnumber -> . INTNUMBER_OCT
    (181) intnumber -> . SIGNED_INTNUMBER_OCT
    (182) intnumber -> . INTNUMBER_HEX
    (183) intnumber -> . SIGNED_INTNUMBER_HEX
    (175) floatnumber -> . FLOATNUMBER
    (184) stringliteral -> . STRING_LITERAL

    MINUS           shift and go to state 97
    PLUS            shift and go to state 89
    LNOT            shift and go to state 95
    NOT             shift and go to state 78
    AND             shift and go to state 91
    NAND            shift and go to state 98
    NOR             shift and go to state 76
    OR              shift and go to state 105
    XOR             shift and go to state 82
    XNOR            shift and go to state 87
    LPAREN          shift and go to state 96
    LBRACE          shift and go to state 77
    DOLLER          shift and go to state 100
    ID              shift and go to state 85
    INTNUMBER_DEC   shift and go to state 79
    SIGNED_INTNUMBER_DEC shift and go to state 101
    INTNUMBER_BIN   shift and go to state 111
    SIGNED_INTNUMBER_BIN shift and go to state 112
    INTNUMBER_OCT   shift and go to state 86
    SIGNED_INTNUMBER_OCT shift and go to state 106
    INTNUMBER_HEX   shift and go to state 93
    SIGNED_INTNUMBER_HEX shift and go to state 83
    FLOATNUMBER     shift and go to state 102
    STRING_LITERAL  shift and go to state 107

    stringliteral                  shift and go to state 99
    intnumber                      shift and go to state 81
    expression                     shift and go to state 363
    repeat                         shift and go to state 108
    partselect                     shift and go to state 103
    identifier                     shift and go to state 104
    pointer                        shift and go to state 80
    functioncall                   shift and go to state 94
    scope                          shift and go to state 84
    systemcall                     shift and go to state 109
    const_expression               shift and go to state 110
    concat                         shift and go to state 88
    floatnumber                    shift and go to state 90

state 231

    (129) expression -> expression MOD . expression
    (116) expression -> . MINUS expression
    (117) expression -> . PLUS expression
    (118) expression -> . LNOT expression
    (119) expression -> . NOT expression
    (120) expression -> . AND expression
    (121) expression -> . NAND expression
    (122) expression -> . NOR expression
    (123) expression -> . OR expression
    (124) expression -> . XOR expression
    (125) expression -> . XNOR expression
    (126) expression -> . expression POWER expression
    (127) expression -> . expression TIMES expression
    (128) expression -> . expression DIVIDE expression
    (129) expression -> . expression MOD expression
    (130) expression -> . expression PLUS expression
    (131) expression -> . expression MINUS expression
    (132) expression -> . expression LSHIFT expression
    (133) expression -> . expression RSHIFT expression
    (134) expression -> . expression LSHIFTA expression
    (135) expression -> . expression RSHIFTA expression
    (136) expression -> . expression LT expression
    (137) expression -> . expression GT expression
    (138) expression -> . expression LE expression
    (139) expression -> . expression GE expression
    (140) expression -> . expression EQ expression
    (141) expression -> . expression NE expression
    (142) expression -> . expression EQL expression
    (143) expression -> . expression NEL expression
    (144) expression -> . expression AND expression
    (145) expression -> . expression XOR expression
    (146) expression -> . expression XNOR expression
    (147) expression -> . expression OR expression
    (148) expression -> . expression LAND expression
    (149) expression -> . expression LOR expression
    (150) expression -> . expression COND expression COLON expression
    (151) expression -> . LPAREN expression RPAREN
    (152) expression -> . concat
    (153) expression -> . repeat
    (154) expression -> . partselect
    (155) expression -> . pointer
    (156) expression -> . functioncall
    (157) expression -> . systemcall
    (158) expression -> . identifier
    (159) expression -> . const_expression
    (160) concat -> . LBRACE concatlist RBRACE
    (163) repeat -> . LBRACE expression concat RBRACE
    (164) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (165) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (166) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (167) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (168) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (169) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (170) pointer -> . identifier LBRACKET expression RBRACKET
    (171) pointer -> . pointer LBRACKET expression RBRACKET
    (339) functioncall -> . identifier LPAREN func_args RPAREN
    (319) systemcall -> . DOLLER ID
    (320) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (357) identifier -> . ID
    (358) identifier -> . scope ID
    (172) const_expression -> . intnumber
    (173) const_expression -> . floatnumber
    (174) const_expression -> . stringliteral
    (359) scope -> . identifier DOT
    (360) scope -> . pointer DOT
    (176) intnumber -> . INTNUMBER_DEC
    (177) intnumber -> . SIGNED_INTNUMBER_DEC
    (178) intnumber -> . INTNUMBER_BIN
    (179) intnumber -> . SIGNED_INTNUMBER_BIN
    (180) intnumber -> . INTNUMBER_OCT
    (181) intnumber -> . SIGNED_INTNUMBER_OCT
    (182) intnumber -> . INTNUMBER_HEX
    (183) intnumber -> . SIGNED_INTNUMBER_HEX
    (175) floatnumber -> . FLOATNUMBER
    (184) stringliteral -> . STRING_LITERAL

    MINUS           shift and go to state 97
    PLUS            shift and go to state 89
    LNOT            shift and go to state 95
    NOT             shift and go to state 78
    AND             shift and go to state 91
    NAND            shift and go to state 98
    NOR             shift and go to state 76
    OR              shift and go to state 105
    XOR             shift and go to state 82
    XNOR            shift and go to state 87
    LPAREN          shift and go to state 96
    LBRACE          shift and go to state 77
    DOLLER          shift and go to state 100
    ID              shift and go to state 85
    INTNUMBER_DEC   shift and go to state 79
    SIGNED_INTNUMBER_DEC shift and go to state 101
    INTNUMBER_BIN   shift and go to state 111
    SIGNED_INTNUMBER_BIN shift and go to state 112
    INTNUMBER_OCT   shift and go to state 86
    SIGNED_INTNUMBER_OCT shift and go to state 106
    INTNUMBER_HEX   shift and go to state 93
    SIGNED_INTNUMBER_HEX shift and go to state 83
    FLOATNUMBER     shift and go to state 102
    STRING_LITERAL  shift and go to state 107

    stringliteral                  shift and go to state 99
    intnumber                      shift and go to state 81
    expression                     shift and go to state 364
    repeat                         shift and go to state 108
    partselect                     shift and go to state 103
    identifier                     shift and go to state 104
    pointer                        shift and go to state 80
    functioncall                   shift and go to state 94
    scope                          shift and go to state 84
    systemcall                     shift and go to state 109
    const_expression               shift and go to state 110
    concat                         shift and go to state 88
    floatnumber                    shift and go to state 90

state 232

    (146) expression -> expression XNOR . expression
    (116) expression -> . MINUS expression
    (117) expression -> . PLUS expression
    (118) expression -> . LNOT expression
    (119) expression -> . NOT expression
    (120) expression -> . AND expression
    (121) expression -> . NAND expression
    (122) expression -> . NOR expression
    (123) expression -> . OR expression
    (124) expression -> . XOR expression
    (125) expression -> . XNOR expression
    (126) expression -> . expression POWER expression
    (127) expression -> . expression TIMES expression
    (128) expression -> . expression DIVIDE expression
    (129) expression -> . expression MOD expression
    (130) expression -> . expression PLUS expression
    (131) expression -> . expression MINUS expression
    (132) expression -> . expression LSHIFT expression
    (133) expression -> . expression RSHIFT expression
    (134) expression -> . expression LSHIFTA expression
    (135) expression -> . expression RSHIFTA expression
    (136) expression -> . expression LT expression
    (137) expression -> . expression GT expression
    (138) expression -> . expression LE expression
    (139) expression -> . expression GE expression
    (140) expression -> . expression EQ expression
    (141) expression -> . expression NE expression
    (142) expression -> . expression EQL expression
    (143) expression -> . expression NEL expression
    (144) expression -> . expression AND expression
    (145) expression -> . expression XOR expression
    (146) expression -> . expression XNOR expression
    (147) expression -> . expression OR expression
    (148) expression -> . expression LAND expression
    (149) expression -> . expression LOR expression
    (150) expression -> . expression COND expression COLON expression
    (151) expression -> . LPAREN expression RPAREN
    (152) expression -> . concat
    (153) expression -> . repeat
    (154) expression -> . partselect
    (155) expression -> . pointer
    (156) expression -> . functioncall
    (157) expression -> . systemcall
    (158) expression -> . identifier
    (159) expression -> . const_expression
    (160) concat -> . LBRACE concatlist RBRACE
    (163) repeat -> . LBRACE expression concat RBRACE
    (164) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (165) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (166) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (167) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (168) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (169) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (170) pointer -> . identifier LBRACKET expression RBRACKET
    (171) pointer -> . pointer LBRACKET expression RBRACKET
    (339) functioncall -> . identifier LPAREN func_args RPAREN
    (319) systemcall -> . DOLLER ID
    (320) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (357) identifier -> . ID
    (358) identifier -> . scope ID
    (172) const_expression -> . intnumber
    (173) const_expression -> . floatnumber
    (174) const_expression -> . stringliteral
    (359) scope -> . identifier DOT
    (360) scope -> . pointer DOT
    (176) intnumber -> . INTNUMBER_DEC
    (177) intnumber -> . SIGNED_INTNUMBER_DEC
    (178) intnumber -> . INTNUMBER_BIN
    (179) intnumber -> . SIGNED_INTNUMBER_BIN
    (180) intnumber -> . INTNUMBER_OCT
    (181) intnumber -> . SIGNED_INTNUMBER_OCT
    (182) intnumber -> . INTNUMBER_HEX
    (183) intnumber -> . SIGNED_INTNUMBER_HEX
    (175) floatnumber -> . FLOATNUMBER
    (184) stringliteral -> . STRING_LITERAL

    MINUS           shift and go to state 97
    PLUS            shift and go to state 89
    LNOT            shift and go to state 95
    NOT             shift and go to state 78
    AND             shift and go to state 91
    NAND            shift and go to state 98
    NOR             shift and go to state 76
    OR              shift and go to state 105
    XOR             shift and go to state 82
    XNOR            shift and go to state 87
    LPAREN          shift and go to state 96
    LBRACE          shift and go to state 77
    DOLLER          shift and go to state 100
    ID              shift and go to state 85
    INTNUMBER_DEC   shift and go to state 79
    SIGNED_INTNUMBER_DEC shift and go to state 101
    INTNUMBER_BIN   shift and go to state 111
    SIGNED_INTNUMBER_BIN shift and go to state 112
    INTNUMBER_OCT   shift and go to state 86
    SIGNED_INTNUMBER_OCT shift and go to state 106
    INTNUMBER_HEX   shift and go to state 93
    SIGNED_INTNUMBER_HEX shift and go to state 83
    FLOATNUMBER     shift and go to state 102
    STRING_LITERAL  shift and go to state 107

    stringliteral                  shift and go to state 99
    intnumber                      shift and go to state 81
    expression                     shift and go to state 365
    repeat                         shift and go to state 108
    partselect                     shift and go to state 103
    identifier                     shift and go to state 104
    pointer                        shift and go to state 80
    functioncall                   shift and go to state 94
    scope                          shift and go to state 84
    systemcall                     shift and go to state 109
    const_expression               shift and go to state 110
    concat                         shift and go to state 88
    floatnumber                    shift and go to state 90

state 233

    (150) expression -> expression COND . expression COLON expression
    (116) expression -> . MINUS expression
    (117) expression -> . PLUS expression
    (118) expression -> . LNOT expression
    (119) expression -> . NOT expression
    (120) expression -> . AND expression
    (121) expression -> . NAND expression
    (122) expression -> . NOR expression
    (123) expression -> . OR expression
    (124) expression -> . XOR expression
    (125) expression -> . XNOR expression
    (126) expression -> . expression POWER expression
    (127) expression -> . expression TIMES expression
    (128) expression -> . expression DIVIDE expression
    (129) expression -> . expression MOD expression
    (130) expression -> . expression PLUS expression
    (131) expression -> . expression MINUS expression
    (132) expression -> . expression LSHIFT expression
    (133) expression -> . expression RSHIFT expression
    (134) expression -> . expression LSHIFTA expression
    (135) expression -> . expression RSHIFTA expression
    (136) expression -> . expression LT expression
    (137) expression -> . expression GT expression
    (138) expression -> . expression LE expression
    (139) expression -> . expression GE expression
    (140) expression -> . expression EQ expression
    (141) expression -> . expression NE expression
    (142) expression -> . expression EQL expression
    (143) expression -> . expression NEL expression
    (144) expression -> . expression AND expression
    (145) expression -> . expression XOR expression
    (146) expression -> . expression XNOR expression
    (147) expression -> . expression OR expression
    (148) expression -> . expression LAND expression
    (149) expression -> . expression LOR expression
    (150) expression -> . expression COND expression COLON expression
    (151) expression -> . LPAREN expression RPAREN
    (152) expression -> . concat
    (153) expression -> . repeat
    (154) expression -> . partselect
    (155) expression -> . pointer
    (156) expression -> . functioncall
    (157) expression -> . systemcall
    (158) expression -> . identifier
    (159) expression -> . const_expression
    (160) concat -> . LBRACE concatlist RBRACE
    (163) repeat -> . LBRACE expression concat RBRACE
    (164) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (165) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (166) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (167) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (168) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (169) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (170) pointer -> . identifier LBRACKET expression RBRACKET
    (171) pointer -> . pointer LBRACKET expression RBRACKET
    (339) functioncall -> . identifier LPAREN func_args RPAREN
    (319) systemcall -> . DOLLER ID
    (320) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (357) identifier -> . ID
    (358) identifier -> . scope ID
    (172) const_expression -> . intnumber
    (173) const_expression -> . floatnumber
    (174) const_expression -> . stringliteral
    (359) scope -> . identifier DOT
    (360) scope -> . pointer DOT
    (176) intnumber -> . INTNUMBER_DEC
    (177) intnumber -> . SIGNED_INTNUMBER_DEC
    (178) intnumber -> . INTNUMBER_BIN
    (179) intnumber -> . SIGNED_INTNUMBER_BIN
    (180) intnumber -> . INTNUMBER_OCT
    (181) intnumber -> . SIGNED_INTNUMBER_OCT
    (182) intnumber -> . INTNUMBER_HEX
    (183) intnumber -> . SIGNED_INTNUMBER_HEX
    (175) floatnumber -> . FLOATNUMBER
    (184) stringliteral -> . STRING_LITERAL

    MINUS           shift and go to state 97
    PLUS            shift and go to state 89
    LNOT            shift and go to state 95
    NOT             shift and go to state 78
    AND             shift and go to state 91
    NAND            shift and go to state 98
    NOR             shift and go to state 76
    OR              shift and go to state 105
    XOR             shift and go to state 82
    XNOR            shift and go to state 87
    LPAREN          shift and go to state 96
    LBRACE          shift and go to state 77
    DOLLER          shift and go to state 100
    ID              shift and go to state 85
    INTNUMBER_DEC   shift and go to state 79
    SIGNED_INTNUMBER_DEC shift and go to state 101
    INTNUMBER_BIN   shift and go to state 111
    SIGNED_INTNUMBER_BIN shift and go to state 112
    INTNUMBER_OCT   shift and go to state 86
    SIGNED_INTNUMBER_OCT shift and go to state 106
    INTNUMBER_HEX   shift and go to state 93
    SIGNED_INTNUMBER_HEX shift and go to state 83
    FLOATNUMBER     shift and go to state 102
    STRING_LITERAL  shift and go to state 107

    stringliteral                  shift and go to state 99
    intnumber                      shift and go to state 81
    expression                     shift and go to state 366
    repeat                         shift and go to state 108
    partselect                     shift and go to state 103
    identifier                     shift and go to state 104
    pointer                        shift and go to state 80
    functioncall                   shift and go to state 94
    scope                          shift and go to state 84
    systemcall                     shift and go to state 109
    const_expression               shift and go to state 110
    concat                         shift and go to state 88
    floatnumber                    shift and go to state 90

state 234

    (147) expression -> expression OR . expression
    (116) expression -> . MINUS expression
    (117) expression -> . PLUS expression
    (118) expression -> . LNOT expression
    (119) expression -> . NOT expression
    (120) expression -> . AND expression
    (121) expression -> . NAND expression
    (122) expression -> . NOR expression
    (123) expression -> . OR expression
    (124) expression -> . XOR expression
    (125) expression -> . XNOR expression
    (126) expression -> . expression POWER expression
    (127) expression -> . expression TIMES expression
    (128) expression -> . expression DIVIDE expression
    (129) expression -> . expression MOD expression
    (130) expression -> . expression PLUS expression
    (131) expression -> . expression MINUS expression
    (132) expression -> . expression LSHIFT expression
    (133) expression -> . expression RSHIFT expression
    (134) expression -> . expression LSHIFTA expression
    (135) expression -> . expression RSHIFTA expression
    (136) expression -> . expression LT expression
    (137) expression -> . expression GT expression
    (138) expression -> . expression LE expression
    (139) expression -> . expression GE expression
    (140) expression -> . expression EQ expression
    (141) expression -> . expression NE expression
    (142) expression -> . expression EQL expression
    (143) expression -> . expression NEL expression
    (144) expression -> . expression AND expression
    (145) expression -> . expression XOR expression
    (146) expression -> . expression XNOR expression
    (147) expression -> . expression OR expression
    (148) expression -> . expression LAND expression
    (149) expression -> . expression LOR expression
    (150) expression -> . expression COND expression COLON expression
    (151) expression -> . LPAREN expression RPAREN
    (152) expression -> . concat
    (153) expression -> . repeat
    (154) expression -> . partselect
    (155) expression -> . pointer
    (156) expression -> . functioncall
    (157) expression -> . systemcall
    (158) expression -> . identifier
    (159) expression -> . const_expression
    (160) concat -> . LBRACE concatlist RBRACE
    (163) repeat -> . LBRACE expression concat RBRACE
    (164) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (165) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (166) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (167) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (168) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (169) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (170) pointer -> . identifier LBRACKET expression RBRACKET
    (171) pointer -> . pointer LBRACKET expression RBRACKET
    (339) functioncall -> . identifier LPAREN func_args RPAREN
    (319) systemcall -> . DOLLER ID
    (320) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (357) identifier -> . ID
    (358) identifier -> . scope ID
    (172) const_expression -> . intnumber
    (173) const_expression -> . floatnumber
    (174) const_expression -> . stringliteral
    (359) scope -> . identifier DOT
    (360) scope -> . pointer DOT
    (176) intnumber -> . INTNUMBER_DEC
    (177) intnumber -> . SIGNED_INTNUMBER_DEC
    (178) intnumber -> . INTNUMBER_BIN
    (179) intnumber -> . SIGNED_INTNUMBER_BIN
    (180) intnumber -> . INTNUMBER_OCT
    (181) intnumber -> . SIGNED_INTNUMBER_OCT
    (182) intnumber -> . INTNUMBER_HEX
    (183) intnumber -> . SIGNED_INTNUMBER_HEX
    (175) floatnumber -> . FLOATNUMBER
    (184) stringliteral -> . STRING_LITERAL

    MINUS           shift and go to state 97
    PLUS            shift and go to state 89
    LNOT            shift and go to state 95
    NOT             shift and go to state 78
    AND             shift and go to state 91
    NAND            shift and go to state 98
    NOR             shift and go to state 76
    OR              shift and go to state 105
    XOR             shift and go to state 82
    XNOR            shift and go to state 87
    LPAREN          shift and go to state 96
    LBRACE          shift and go to state 77
    DOLLER          shift and go to state 100
    ID              shift and go to state 85
    INTNUMBER_DEC   shift and go to state 79
    SIGNED_INTNUMBER_DEC shift and go to state 101
    INTNUMBER_BIN   shift and go to state 111
    SIGNED_INTNUMBER_BIN shift and go to state 112
    INTNUMBER_OCT   shift and go to state 86
    SIGNED_INTNUMBER_OCT shift and go to state 106
    INTNUMBER_HEX   shift and go to state 93
    SIGNED_INTNUMBER_HEX shift and go to state 83
    FLOATNUMBER     shift and go to state 102
    STRING_LITERAL  shift and go to state 107

    stringliteral                  shift and go to state 99
    intnumber                      shift and go to state 81
    expression                     shift and go to state 367
    repeat                         shift and go to state 108
    partselect                     shift and go to state 103
    identifier                     shift and go to state 104
    pointer                        shift and go to state 80
    functioncall                   shift and go to state 94
    scope                          shift and go to state 84
    systemcall                     shift and go to state 109
    const_expression               shift and go to state 110
    concat                         shift and go to state 88
    floatnumber                    shift and go to state 90

state 235

    (136) expression -> expression LT . expression
    (116) expression -> . MINUS expression
    (117) expression -> . PLUS expression
    (118) expression -> . LNOT expression
    (119) expression -> . NOT expression
    (120) expression -> . AND expression
    (121) expression -> . NAND expression
    (122) expression -> . NOR expression
    (123) expression -> . OR expression
    (124) expression -> . XOR expression
    (125) expression -> . XNOR expression
    (126) expression -> . expression POWER expression
    (127) expression -> . expression TIMES expression
    (128) expression -> . expression DIVIDE expression
    (129) expression -> . expression MOD expression
    (130) expression -> . expression PLUS expression
    (131) expression -> . expression MINUS expression
    (132) expression -> . expression LSHIFT expression
    (133) expression -> . expression RSHIFT expression
    (134) expression -> . expression LSHIFTA expression
    (135) expression -> . expression RSHIFTA expression
    (136) expression -> . expression LT expression
    (137) expression -> . expression GT expression
    (138) expression -> . expression LE expression
    (139) expression -> . expression GE expression
    (140) expression -> . expression EQ expression
    (141) expression -> . expression NE expression
    (142) expression -> . expression EQL expression
    (143) expression -> . expression NEL expression
    (144) expression -> . expression AND expression
    (145) expression -> . expression XOR expression
    (146) expression -> . expression XNOR expression
    (147) expression -> . expression OR expression
    (148) expression -> . expression LAND expression
    (149) expression -> . expression LOR expression
    (150) expression -> . expression COND expression COLON expression
    (151) expression -> . LPAREN expression RPAREN
    (152) expression -> . concat
    (153) expression -> . repeat
    (154) expression -> . partselect
    (155) expression -> . pointer
    (156) expression -> . functioncall
    (157) expression -> . systemcall
    (158) expression -> . identifier
    (159) expression -> . const_expression
    (160) concat -> . LBRACE concatlist RBRACE
    (163) repeat -> . LBRACE expression concat RBRACE
    (164) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (165) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (166) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (167) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (168) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (169) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (170) pointer -> . identifier LBRACKET expression RBRACKET
    (171) pointer -> . pointer LBRACKET expression RBRACKET
    (339) functioncall -> . identifier LPAREN func_args RPAREN
    (319) systemcall -> . DOLLER ID
    (320) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (357) identifier -> . ID
    (358) identifier -> . scope ID
    (172) const_expression -> . intnumber
    (173) const_expression -> . floatnumber
    (174) const_expression -> . stringliteral
    (359) scope -> . identifier DOT
    (360) scope -> . pointer DOT
    (176) intnumber -> . INTNUMBER_DEC
    (177) intnumber -> . SIGNED_INTNUMBER_DEC
    (178) intnumber -> . INTNUMBER_BIN
    (179) intnumber -> . SIGNED_INTNUMBER_BIN
    (180) intnumber -> . INTNUMBER_OCT
    (181) intnumber -> . SIGNED_INTNUMBER_OCT
    (182) intnumber -> . INTNUMBER_HEX
    (183) intnumber -> . SIGNED_INTNUMBER_HEX
    (175) floatnumber -> . FLOATNUMBER
    (184) stringliteral -> . STRING_LITERAL

    MINUS           shift and go to state 97
    PLUS            shift and go to state 89
    LNOT            shift and go to state 95
    NOT             shift and go to state 78
    AND             shift and go to state 91
    NAND            shift and go to state 98
    NOR             shift and go to state 76
    OR              shift and go to state 105
    XOR             shift and go to state 82
    XNOR            shift and go to state 87
    LPAREN          shift and go to state 96
    LBRACE          shift and go to state 77
    DOLLER          shift and go to state 100
    ID              shift and go to state 85
    INTNUMBER_DEC   shift and go to state 79
    SIGNED_INTNUMBER_DEC shift and go to state 101
    INTNUMBER_BIN   shift and go to state 111
    SIGNED_INTNUMBER_BIN shift and go to state 112
    INTNUMBER_OCT   shift and go to state 86
    SIGNED_INTNUMBER_OCT shift and go to state 106
    INTNUMBER_HEX   shift and go to state 93
    SIGNED_INTNUMBER_HEX shift and go to state 83
    FLOATNUMBER     shift and go to state 102
    STRING_LITERAL  shift and go to state 107

    stringliteral                  shift and go to state 99
    intnumber                      shift and go to state 81
    expression                     shift and go to state 368
    repeat                         shift and go to state 108
    partselect                     shift and go to state 103
    identifier                     shift and go to state 104
    pointer                        shift and go to state 80
    functioncall                   shift and go to state 94
    scope                          shift and go to state 84
    systemcall                     shift and go to state 109
    const_expression               shift and go to state 110
    concat                         shift and go to state 88
    floatnumber                    shift and go to state 90

state 236

    (7) pragma -> LPAREN TIMES ID EQUALS expression TIMES . RPAREN
    (127) expression -> expression TIMES . expression
    (116) expression -> . MINUS expression
    (117) expression -> . PLUS expression
    (118) expression -> . LNOT expression
    (119) expression -> . NOT expression
    (120) expression -> . AND expression
    (121) expression -> . NAND expression
    (122) expression -> . NOR expression
    (123) expression -> . OR expression
    (124) expression -> . XOR expression
    (125) expression -> . XNOR expression
    (126) expression -> . expression POWER expression
    (127) expression -> . expression TIMES expression
    (128) expression -> . expression DIVIDE expression
    (129) expression -> . expression MOD expression
    (130) expression -> . expression PLUS expression
    (131) expression -> . expression MINUS expression
    (132) expression -> . expression LSHIFT expression
    (133) expression -> . expression RSHIFT expression
    (134) expression -> . expression LSHIFTA expression
    (135) expression -> . expression RSHIFTA expression
    (136) expression -> . expression LT expression
    (137) expression -> . expression GT expression
    (138) expression -> . expression LE expression
    (139) expression -> . expression GE expression
    (140) expression -> . expression EQ expression
    (141) expression -> . expression NE expression
    (142) expression -> . expression EQL expression
    (143) expression -> . expression NEL expression
    (144) expression -> . expression AND expression
    (145) expression -> . expression XOR expression
    (146) expression -> . expression XNOR expression
    (147) expression -> . expression OR expression
    (148) expression -> . expression LAND expression
    (149) expression -> . expression LOR expression
    (150) expression -> . expression COND expression COLON expression
    (151) expression -> . LPAREN expression RPAREN
    (152) expression -> . concat
    (153) expression -> . repeat
    (154) expression -> . partselect
    (155) expression -> . pointer
    (156) expression -> . functioncall
    (157) expression -> . systemcall
    (158) expression -> . identifier
    (159) expression -> . const_expression
    (160) concat -> . LBRACE concatlist RBRACE
    (163) repeat -> . LBRACE expression concat RBRACE
    (164) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (165) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (166) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (167) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (168) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (169) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (170) pointer -> . identifier LBRACKET expression RBRACKET
    (171) pointer -> . pointer LBRACKET expression RBRACKET
    (339) functioncall -> . identifier LPAREN func_args RPAREN
    (319) systemcall -> . DOLLER ID
    (320) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (357) identifier -> . ID
    (358) identifier -> . scope ID
    (172) const_expression -> . intnumber
    (173) const_expression -> . floatnumber
    (174) const_expression -> . stringliteral
    (359) scope -> . identifier DOT
    (360) scope -> . pointer DOT
    (176) intnumber -> . INTNUMBER_DEC
    (177) intnumber -> . SIGNED_INTNUMBER_DEC
    (178) intnumber -> . INTNUMBER_BIN
    (179) intnumber -> . SIGNED_INTNUMBER_BIN
    (180) intnumber -> . INTNUMBER_OCT
    (181) intnumber -> . SIGNED_INTNUMBER_OCT
    (182) intnumber -> . INTNUMBER_HEX
    (183) intnumber -> . SIGNED_INTNUMBER_HEX
    (175) floatnumber -> . FLOATNUMBER
    (184) stringliteral -> . STRING_LITERAL

    RPAREN          shift and go to state 369
    MINUS           shift and go to state 97
    PLUS            shift and go to state 89
    LNOT            shift and go to state 95
    NOT             shift and go to state 78
    AND             shift and go to state 91
    NAND            shift and go to state 98
    NOR             shift and go to state 76
    OR              shift and go to state 105
    XOR             shift and go to state 82
    XNOR            shift and go to state 87
    LPAREN          shift and go to state 96
    LBRACE          shift and go to state 77
    DOLLER          shift and go to state 100
    ID              shift and go to state 85
    INTNUMBER_DEC   shift and go to state 79
    SIGNED_INTNUMBER_DEC shift and go to state 101
    INTNUMBER_BIN   shift and go to state 111
    SIGNED_INTNUMBER_BIN shift and go to state 112
    INTNUMBER_OCT   shift and go to state 86
    SIGNED_INTNUMBER_OCT shift and go to state 106
    INTNUMBER_HEX   shift and go to state 93
    SIGNED_INTNUMBER_HEX shift and go to state 83
    FLOATNUMBER     shift and go to state 102
    STRING_LITERAL  shift and go to state 107

    stringliteral                  shift and go to state 99
    intnumber                      shift and go to state 81
    expression                     shift and go to state 370
    repeat                         shift and go to state 108
    partselect                     shift and go to state 103
    identifier                     shift and go to state 104
    pointer                        shift and go to state 80
    functioncall                   shift and go to state 94
    scope                          shift and go to state 84
    systemcall                     shift and go to state 109
    const_expression               shift and go to state 110
    concat                         shift and go to state 88
    floatnumber                    shift and go to state 90

state 237

    (145) expression -> expression XOR . expression
    (116) expression -> . MINUS expression
    (117) expression -> . PLUS expression
    (118) expression -> . LNOT expression
    (119) expression -> . NOT expression
    (120) expression -> . AND expression
    (121) expression -> . NAND expression
    (122) expression -> . NOR expression
    (123) expression -> . OR expression
    (124) expression -> . XOR expression
    (125) expression -> . XNOR expression
    (126) expression -> . expression POWER expression
    (127) expression -> . expression TIMES expression
    (128) expression -> . expression DIVIDE expression
    (129) expression -> . expression MOD expression
    (130) expression -> . expression PLUS expression
    (131) expression -> . expression MINUS expression
    (132) expression -> . expression LSHIFT expression
    (133) expression -> . expression RSHIFT expression
    (134) expression -> . expression LSHIFTA expression
    (135) expression -> . expression RSHIFTA expression
    (136) expression -> . expression LT expression
    (137) expression -> . expression GT expression
    (138) expression -> . expression LE expression
    (139) expression -> . expression GE expression
    (140) expression -> . expression EQ expression
    (141) expression -> . expression NE expression
    (142) expression -> . expression EQL expression
    (143) expression -> . expression NEL expression
    (144) expression -> . expression AND expression
    (145) expression -> . expression XOR expression
    (146) expression -> . expression XNOR expression
    (147) expression -> . expression OR expression
    (148) expression -> . expression LAND expression
    (149) expression -> . expression LOR expression
    (150) expression -> . expression COND expression COLON expression
    (151) expression -> . LPAREN expression RPAREN
    (152) expression -> . concat
    (153) expression -> . repeat
    (154) expression -> . partselect
    (155) expression -> . pointer
    (156) expression -> . functioncall
    (157) expression -> . systemcall
    (158) expression -> . identifier
    (159) expression -> . const_expression
    (160) concat -> . LBRACE concatlist RBRACE
    (163) repeat -> . LBRACE expression concat RBRACE
    (164) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (165) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (166) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (167) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (168) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (169) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (170) pointer -> . identifier LBRACKET expression RBRACKET
    (171) pointer -> . pointer LBRACKET expression RBRACKET
    (339) functioncall -> . identifier LPAREN func_args RPAREN
    (319) systemcall -> . DOLLER ID
    (320) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (357) identifier -> . ID
    (358) identifier -> . scope ID
    (172) const_expression -> . intnumber
    (173) const_expression -> . floatnumber
    (174) const_expression -> . stringliteral
    (359) scope -> . identifier DOT
    (360) scope -> . pointer DOT
    (176) intnumber -> . INTNUMBER_DEC
    (177) intnumber -> . SIGNED_INTNUMBER_DEC
    (178) intnumber -> . INTNUMBER_BIN
    (179) intnumber -> . SIGNED_INTNUMBER_BIN
    (180) intnumber -> . INTNUMBER_OCT
    (181) intnumber -> . SIGNED_INTNUMBER_OCT
    (182) intnumber -> . INTNUMBER_HEX
    (183) intnumber -> . SIGNED_INTNUMBER_HEX
    (175) floatnumber -> . FLOATNUMBER
    (184) stringliteral -> . STRING_LITERAL

    MINUS           shift and go to state 97
    PLUS            shift and go to state 89
    LNOT            shift and go to state 95
    NOT             shift and go to state 78
    AND             shift and go to state 91
    NAND            shift and go to state 98
    NOR             shift and go to state 76
    OR              shift and go to state 105
    XOR             shift and go to state 82
    XNOR            shift and go to state 87
    LPAREN          shift and go to state 96
    LBRACE          shift and go to state 77
    DOLLER          shift and go to state 100
    ID              shift and go to state 85
    INTNUMBER_DEC   shift and go to state 79
    SIGNED_INTNUMBER_DEC shift and go to state 101
    INTNUMBER_BIN   shift and go to state 111
    SIGNED_INTNUMBER_BIN shift and go to state 112
    INTNUMBER_OCT   shift and go to state 86
    SIGNED_INTNUMBER_OCT shift and go to state 106
    INTNUMBER_HEX   shift and go to state 93
    SIGNED_INTNUMBER_HEX shift and go to state 83
    FLOATNUMBER     shift and go to state 102
    STRING_LITERAL  shift and go to state 107

    stringliteral                  shift and go to state 99
    intnumber                      shift and go to state 81
    expression                     shift and go to state 371
    repeat                         shift and go to state 108
    partselect                     shift and go to state 103
    identifier                     shift and go to state 104
    pointer                        shift and go to state 80
    functioncall                   shift and go to state 94
    scope                          shift and go to state 84
    systemcall                     shift and go to state 109
    const_expression               shift and go to state 110
    concat                         shift and go to state 88
    floatnumber                    shift and go to state 90

state 238

    (135) expression -> expression RSHIFTA . expression
    (116) expression -> . MINUS expression
    (117) expression -> . PLUS expression
    (118) expression -> . LNOT expression
    (119) expression -> . NOT expression
    (120) expression -> . AND expression
    (121) expression -> . NAND expression
    (122) expression -> . NOR expression
    (123) expression -> . OR expression
    (124) expression -> . XOR expression
    (125) expression -> . XNOR expression
    (126) expression -> . expression POWER expression
    (127) expression -> . expression TIMES expression
    (128) expression -> . expression DIVIDE expression
    (129) expression -> . expression MOD expression
    (130) expression -> . expression PLUS expression
    (131) expression -> . expression MINUS expression
    (132) expression -> . expression LSHIFT expression
    (133) expression -> . expression RSHIFT expression
    (134) expression -> . expression LSHIFTA expression
    (135) expression -> . expression RSHIFTA expression
    (136) expression -> . expression LT expression
    (137) expression -> . expression GT expression
    (138) expression -> . expression LE expression
    (139) expression -> . expression GE expression
    (140) expression -> . expression EQ expression
    (141) expression -> . expression NE expression
    (142) expression -> . expression EQL expression
    (143) expression -> . expression NEL expression
    (144) expression -> . expression AND expression
    (145) expression -> . expression XOR expression
    (146) expression -> . expression XNOR expression
    (147) expression -> . expression OR expression
    (148) expression -> . expression LAND expression
    (149) expression -> . expression LOR expression
    (150) expression -> . expression COND expression COLON expression
    (151) expression -> . LPAREN expression RPAREN
    (152) expression -> . concat
    (153) expression -> . repeat
    (154) expression -> . partselect
    (155) expression -> . pointer
    (156) expression -> . functioncall
    (157) expression -> . systemcall
    (158) expression -> . identifier
    (159) expression -> . const_expression
    (160) concat -> . LBRACE concatlist RBRACE
    (163) repeat -> . LBRACE expression concat RBRACE
    (164) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (165) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (166) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (167) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (168) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (169) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (170) pointer -> . identifier LBRACKET expression RBRACKET
    (171) pointer -> . pointer LBRACKET expression RBRACKET
    (339) functioncall -> . identifier LPAREN func_args RPAREN
    (319) systemcall -> . DOLLER ID
    (320) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (357) identifier -> . ID
    (358) identifier -> . scope ID
    (172) const_expression -> . intnumber
    (173) const_expression -> . floatnumber
    (174) const_expression -> . stringliteral
    (359) scope -> . identifier DOT
    (360) scope -> . pointer DOT
    (176) intnumber -> . INTNUMBER_DEC
    (177) intnumber -> . SIGNED_INTNUMBER_DEC
    (178) intnumber -> . INTNUMBER_BIN
    (179) intnumber -> . SIGNED_INTNUMBER_BIN
    (180) intnumber -> . INTNUMBER_OCT
    (181) intnumber -> . SIGNED_INTNUMBER_OCT
    (182) intnumber -> . INTNUMBER_HEX
    (183) intnumber -> . SIGNED_INTNUMBER_HEX
    (175) floatnumber -> . FLOATNUMBER
    (184) stringliteral -> . STRING_LITERAL

    MINUS           shift and go to state 97
    PLUS            shift and go to state 89
    LNOT            shift and go to state 95
    NOT             shift and go to state 78
    AND             shift and go to state 91
    NAND            shift and go to state 98
    NOR             shift and go to state 76
    OR              shift and go to state 105
    XOR             shift and go to state 82
    XNOR            shift and go to state 87
    LPAREN          shift and go to state 96
    LBRACE          shift and go to state 77
    DOLLER          shift and go to state 100
    ID              shift and go to state 85
    INTNUMBER_DEC   shift and go to state 79
    SIGNED_INTNUMBER_DEC shift and go to state 101
    INTNUMBER_BIN   shift and go to state 111
    SIGNED_INTNUMBER_BIN shift and go to state 112
    INTNUMBER_OCT   shift and go to state 86
    SIGNED_INTNUMBER_OCT shift and go to state 106
    INTNUMBER_HEX   shift and go to state 93
    SIGNED_INTNUMBER_HEX shift and go to state 83
    FLOATNUMBER     shift and go to state 102
    STRING_LITERAL  shift and go to state 107

    stringliteral                  shift and go to state 99
    intnumber                      shift and go to state 81
    expression                     shift and go to state 372
    repeat                         shift and go to state 108
    partselect                     shift and go to state 103
    identifier                     shift and go to state 104
    pointer                        shift and go to state 80
    functioncall                   shift and go to state 94
    scope                          shift and go to state 84
    systemcall                     shift and go to state 109
    const_expression               shift and go to state 110
    concat                         shift and go to state 88
    floatnumber                    shift and go to state 90

state 239

    (139) expression -> expression GE . expression
    (116) expression -> . MINUS expression
    (117) expression -> . PLUS expression
    (118) expression -> . LNOT expression
    (119) expression -> . NOT expression
    (120) expression -> . AND expression
    (121) expression -> . NAND expression
    (122) expression -> . NOR expression
    (123) expression -> . OR expression
    (124) expression -> . XOR expression
    (125) expression -> . XNOR expression
    (126) expression -> . expression POWER expression
    (127) expression -> . expression TIMES expression
    (128) expression -> . expression DIVIDE expression
    (129) expression -> . expression MOD expression
    (130) expression -> . expression PLUS expression
    (131) expression -> . expression MINUS expression
    (132) expression -> . expression LSHIFT expression
    (133) expression -> . expression RSHIFT expression
    (134) expression -> . expression LSHIFTA expression
    (135) expression -> . expression RSHIFTA expression
    (136) expression -> . expression LT expression
    (137) expression -> . expression GT expression
    (138) expression -> . expression LE expression
    (139) expression -> . expression GE expression
    (140) expression -> . expression EQ expression
    (141) expression -> . expression NE expression
    (142) expression -> . expression EQL expression
    (143) expression -> . expression NEL expression
    (144) expression -> . expression AND expression
    (145) expression -> . expression XOR expression
    (146) expression -> . expression XNOR expression
    (147) expression -> . expression OR expression
    (148) expression -> . expression LAND expression
    (149) expression -> . expression LOR expression
    (150) expression -> . expression COND expression COLON expression
    (151) expression -> . LPAREN expression RPAREN
    (152) expression -> . concat
    (153) expression -> . repeat
    (154) expression -> . partselect
    (155) expression -> . pointer
    (156) expression -> . functioncall
    (157) expression -> . systemcall
    (158) expression -> . identifier
    (159) expression -> . const_expression
    (160) concat -> . LBRACE concatlist RBRACE
    (163) repeat -> . LBRACE expression concat RBRACE
    (164) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (165) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (166) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (167) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (168) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (169) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (170) pointer -> . identifier LBRACKET expression RBRACKET
    (171) pointer -> . pointer LBRACKET expression RBRACKET
    (339) functioncall -> . identifier LPAREN func_args RPAREN
    (319) systemcall -> . DOLLER ID
    (320) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (357) identifier -> . ID
    (358) identifier -> . scope ID
    (172) const_expression -> . intnumber
    (173) const_expression -> . floatnumber
    (174) const_expression -> . stringliteral
    (359) scope -> . identifier DOT
    (360) scope -> . pointer DOT
    (176) intnumber -> . INTNUMBER_DEC
    (177) intnumber -> . SIGNED_INTNUMBER_DEC
    (178) intnumber -> . INTNUMBER_BIN
    (179) intnumber -> . SIGNED_INTNUMBER_BIN
    (180) intnumber -> . INTNUMBER_OCT
    (181) intnumber -> . SIGNED_INTNUMBER_OCT
    (182) intnumber -> . INTNUMBER_HEX
    (183) intnumber -> . SIGNED_INTNUMBER_HEX
    (175) floatnumber -> . FLOATNUMBER
    (184) stringliteral -> . STRING_LITERAL

    MINUS           shift and go to state 97
    PLUS            shift and go to state 89
    LNOT            shift and go to state 95
    NOT             shift and go to state 78
    AND             shift and go to state 91
    NAND            shift and go to state 98
    NOR             shift and go to state 76
    OR              shift and go to state 105
    XOR             shift and go to state 82
    XNOR            shift and go to state 87
    LPAREN          shift and go to state 96
    LBRACE          shift and go to state 77
    DOLLER          shift and go to state 100
    ID              shift and go to state 85
    INTNUMBER_DEC   shift and go to state 79
    SIGNED_INTNUMBER_DEC shift and go to state 101
    INTNUMBER_BIN   shift and go to state 111
    SIGNED_INTNUMBER_BIN shift and go to state 112
    INTNUMBER_OCT   shift and go to state 86
    SIGNED_INTNUMBER_OCT shift and go to state 106
    INTNUMBER_HEX   shift and go to state 93
    SIGNED_INTNUMBER_HEX shift and go to state 83
    FLOATNUMBER     shift and go to state 102
    STRING_LITERAL  shift and go to state 107

    stringliteral                  shift and go to state 99
    intnumber                      shift and go to state 81
    expression                     shift and go to state 373
    repeat                         shift and go to state 108
    partselect                     shift and go to state 103
    identifier                     shift and go to state 104
    pointer                        shift and go to state 80
    functioncall                   shift and go to state 94
    scope                          shift and go to state 84
    systemcall                     shift and go to state 109
    const_expression               shift and go to state 110
    concat                         shift and go to state 88
    floatnumber                    shift and go to state 90

state 240

    (130) expression -> expression PLUS . expression
    (116) expression -> . MINUS expression
    (117) expression -> . PLUS expression
    (118) expression -> . LNOT expression
    (119) expression -> . NOT expression
    (120) expression -> . AND expression
    (121) expression -> . NAND expression
    (122) expression -> . NOR expression
    (123) expression -> . OR expression
    (124) expression -> . XOR expression
    (125) expression -> . XNOR expression
    (126) expression -> . expression POWER expression
    (127) expression -> . expression TIMES expression
    (128) expression -> . expression DIVIDE expression
    (129) expression -> . expression MOD expression
    (130) expression -> . expression PLUS expression
    (131) expression -> . expression MINUS expression
    (132) expression -> . expression LSHIFT expression
    (133) expression -> . expression RSHIFT expression
    (134) expression -> . expression LSHIFTA expression
    (135) expression -> . expression RSHIFTA expression
    (136) expression -> . expression LT expression
    (137) expression -> . expression GT expression
    (138) expression -> . expression LE expression
    (139) expression -> . expression GE expression
    (140) expression -> . expression EQ expression
    (141) expression -> . expression NE expression
    (142) expression -> . expression EQL expression
    (143) expression -> . expression NEL expression
    (144) expression -> . expression AND expression
    (145) expression -> . expression XOR expression
    (146) expression -> . expression XNOR expression
    (147) expression -> . expression OR expression
    (148) expression -> . expression LAND expression
    (149) expression -> . expression LOR expression
    (150) expression -> . expression COND expression COLON expression
    (151) expression -> . LPAREN expression RPAREN
    (152) expression -> . concat
    (153) expression -> . repeat
    (154) expression -> . partselect
    (155) expression -> . pointer
    (156) expression -> . functioncall
    (157) expression -> . systemcall
    (158) expression -> . identifier
    (159) expression -> . const_expression
    (160) concat -> . LBRACE concatlist RBRACE
    (163) repeat -> . LBRACE expression concat RBRACE
    (164) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (165) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (166) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (167) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (168) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (169) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (170) pointer -> . identifier LBRACKET expression RBRACKET
    (171) pointer -> . pointer LBRACKET expression RBRACKET
    (339) functioncall -> . identifier LPAREN func_args RPAREN
    (319) systemcall -> . DOLLER ID
    (320) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (357) identifier -> . ID
    (358) identifier -> . scope ID
    (172) const_expression -> . intnumber
    (173) const_expression -> . floatnumber
    (174) const_expression -> . stringliteral
    (359) scope -> . identifier DOT
    (360) scope -> . pointer DOT
    (176) intnumber -> . INTNUMBER_DEC
    (177) intnumber -> . SIGNED_INTNUMBER_DEC
    (178) intnumber -> . INTNUMBER_BIN
    (179) intnumber -> . SIGNED_INTNUMBER_BIN
    (180) intnumber -> . INTNUMBER_OCT
    (181) intnumber -> . SIGNED_INTNUMBER_OCT
    (182) intnumber -> . INTNUMBER_HEX
    (183) intnumber -> . SIGNED_INTNUMBER_HEX
    (175) floatnumber -> . FLOATNUMBER
    (184) stringliteral -> . STRING_LITERAL

    MINUS           shift and go to state 97
    PLUS            shift and go to state 89
    LNOT            shift and go to state 95
    NOT             shift and go to state 78
    AND             shift and go to state 91
    NAND            shift and go to state 98
    NOR             shift and go to state 76
    OR              shift and go to state 105
    XOR             shift and go to state 82
    XNOR            shift and go to state 87
    LPAREN          shift and go to state 96
    LBRACE          shift and go to state 77
    DOLLER          shift and go to state 100
    ID              shift and go to state 85
    INTNUMBER_DEC   shift and go to state 79
    SIGNED_INTNUMBER_DEC shift and go to state 101
    INTNUMBER_BIN   shift and go to state 111
    SIGNED_INTNUMBER_BIN shift and go to state 112
    INTNUMBER_OCT   shift and go to state 86
    SIGNED_INTNUMBER_OCT shift and go to state 106
    INTNUMBER_HEX   shift and go to state 93
    SIGNED_INTNUMBER_HEX shift and go to state 83
    FLOATNUMBER     shift and go to state 102
    STRING_LITERAL  shift and go to state 107

    stringliteral                  shift and go to state 99
    intnumber                      shift and go to state 81
    expression                     shift and go to state 374
    repeat                         shift and go to state 108
    partselect                     shift and go to state 103
    identifier                     shift and go to state 104
    pointer                        shift and go to state 80
    functioncall                   shift and go to state 94
    scope                          shift and go to state 84
    systemcall                     shift and go to state 109
    const_expression               shift and go to state 110
    concat                         shift and go to state 88
    floatnumber                    shift and go to state 90

state 241

    (134) expression -> expression LSHIFTA . expression
    (116) expression -> . MINUS expression
    (117) expression -> . PLUS expression
    (118) expression -> . LNOT expression
    (119) expression -> . NOT expression
    (120) expression -> . AND expression
    (121) expression -> . NAND expression
    (122) expression -> . NOR expression
    (123) expression -> . OR expression
    (124) expression -> . XOR expression
    (125) expression -> . XNOR expression
    (126) expression -> . expression POWER expression
    (127) expression -> . expression TIMES expression
    (128) expression -> . expression DIVIDE expression
    (129) expression -> . expression MOD expression
    (130) expression -> . expression PLUS expression
    (131) expression -> . expression MINUS expression
    (132) expression -> . expression LSHIFT expression
    (133) expression -> . expression RSHIFT expression
    (134) expression -> . expression LSHIFTA expression
    (135) expression -> . expression RSHIFTA expression
    (136) expression -> . expression LT expression
    (137) expression -> . expression GT expression
    (138) expression -> . expression LE expression
    (139) expression -> . expression GE expression
    (140) expression -> . expression EQ expression
    (141) expression -> . expression NE expression
    (142) expression -> . expression EQL expression
    (143) expression -> . expression NEL expression
    (144) expression -> . expression AND expression
    (145) expression -> . expression XOR expression
    (146) expression -> . expression XNOR expression
    (147) expression -> . expression OR expression
    (148) expression -> . expression LAND expression
    (149) expression -> . expression LOR expression
    (150) expression -> . expression COND expression COLON expression
    (151) expression -> . LPAREN expression RPAREN
    (152) expression -> . concat
    (153) expression -> . repeat
    (154) expression -> . partselect
    (155) expression -> . pointer
    (156) expression -> . functioncall
    (157) expression -> . systemcall
    (158) expression -> . identifier
    (159) expression -> . const_expression
    (160) concat -> . LBRACE concatlist RBRACE
    (163) repeat -> . LBRACE expression concat RBRACE
    (164) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (165) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (166) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (167) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (168) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (169) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (170) pointer -> . identifier LBRACKET expression RBRACKET
    (171) pointer -> . pointer LBRACKET expression RBRACKET
    (339) functioncall -> . identifier LPAREN func_args RPAREN
    (319) systemcall -> . DOLLER ID
    (320) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (357) identifier -> . ID
    (358) identifier -> . scope ID
    (172) const_expression -> . intnumber
    (173) const_expression -> . floatnumber
    (174) const_expression -> . stringliteral
    (359) scope -> . identifier DOT
    (360) scope -> . pointer DOT
    (176) intnumber -> . INTNUMBER_DEC
    (177) intnumber -> . SIGNED_INTNUMBER_DEC
    (178) intnumber -> . INTNUMBER_BIN
    (179) intnumber -> . SIGNED_INTNUMBER_BIN
    (180) intnumber -> . INTNUMBER_OCT
    (181) intnumber -> . SIGNED_INTNUMBER_OCT
    (182) intnumber -> . INTNUMBER_HEX
    (183) intnumber -> . SIGNED_INTNUMBER_HEX
    (175) floatnumber -> . FLOATNUMBER
    (184) stringliteral -> . STRING_LITERAL

    MINUS           shift and go to state 97
    PLUS            shift and go to state 89
    LNOT            shift and go to state 95
    NOT             shift and go to state 78
    AND             shift and go to state 91
    NAND            shift and go to state 98
    NOR             shift and go to state 76
    OR              shift and go to state 105
    XOR             shift and go to state 82
    XNOR            shift and go to state 87
    LPAREN          shift and go to state 96
    LBRACE          shift and go to state 77
    DOLLER          shift and go to state 100
    ID              shift and go to state 85
    INTNUMBER_DEC   shift and go to state 79
    SIGNED_INTNUMBER_DEC shift and go to state 101
    INTNUMBER_BIN   shift and go to state 111
    SIGNED_INTNUMBER_BIN shift and go to state 112
    INTNUMBER_OCT   shift and go to state 86
    SIGNED_INTNUMBER_OCT shift and go to state 106
    INTNUMBER_HEX   shift and go to state 93
    SIGNED_INTNUMBER_HEX shift and go to state 83
    FLOATNUMBER     shift and go to state 102
    STRING_LITERAL  shift and go to state 107

    stringliteral                  shift and go to state 99
    intnumber                      shift and go to state 81
    expression                     shift and go to state 375
    repeat                         shift and go to state 108
    partselect                     shift and go to state 103
    identifier                     shift and go to state 104
    pointer                        shift and go to state 80
    functioncall                   shift and go to state 94
    scope                          shift and go to state 84
    systemcall                     shift and go to state 109
    const_expression               shift and go to state 110
    concat                         shift and go to state 88
    floatnumber                    shift and go to state 90

state 242

    (143) expression -> expression NEL . expression
    (116) expression -> . MINUS expression
    (117) expression -> . PLUS expression
    (118) expression -> . LNOT expression
    (119) expression -> . NOT expression
    (120) expression -> . AND expression
    (121) expression -> . NAND expression
    (122) expression -> . NOR expression
    (123) expression -> . OR expression
    (124) expression -> . XOR expression
    (125) expression -> . XNOR expression
    (126) expression -> . expression POWER expression
    (127) expression -> . expression TIMES expression
    (128) expression -> . expression DIVIDE expression
    (129) expression -> . expression MOD expression
    (130) expression -> . expression PLUS expression
    (131) expression -> . expression MINUS expression
    (132) expression -> . expression LSHIFT expression
    (133) expression -> . expression RSHIFT expression
    (134) expression -> . expression LSHIFTA expression
    (135) expression -> . expression RSHIFTA expression
    (136) expression -> . expression LT expression
    (137) expression -> . expression GT expression
    (138) expression -> . expression LE expression
    (139) expression -> . expression GE expression
    (140) expression -> . expression EQ expression
    (141) expression -> . expression NE expression
    (142) expression -> . expression EQL expression
    (143) expression -> . expression NEL expression
    (144) expression -> . expression AND expression
    (145) expression -> . expression XOR expression
    (146) expression -> . expression XNOR expression
    (147) expression -> . expression OR expression
    (148) expression -> . expression LAND expression
    (149) expression -> . expression LOR expression
    (150) expression -> . expression COND expression COLON expression
    (151) expression -> . LPAREN expression RPAREN
    (152) expression -> . concat
    (153) expression -> . repeat
    (154) expression -> . partselect
    (155) expression -> . pointer
    (156) expression -> . functioncall
    (157) expression -> . systemcall
    (158) expression -> . identifier
    (159) expression -> . const_expression
    (160) concat -> . LBRACE concatlist RBRACE
    (163) repeat -> . LBRACE expression concat RBRACE
    (164) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (165) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (166) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (167) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (168) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (169) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (170) pointer -> . identifier LBRACKET expression RBRACKET
    (171) pointer -> . pointer LBRACKET expression RBRACKET
    (339) functioncall -> . identifier LPAREN func_args RPAREN
    (319) systemcall -> . DOLLER ID
    (320) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (357) identifier -> . ID
    (358) identifier -> . scope ID
    (172) const_expression -> . intnumber
    (173) const_expression -> . floatnumber
    (174) const_expression -> . stringliteral
    (359) scope -> . identifier DOT
    (360) scope -> . pointer DOT
    (176) intnumber -> . INTNUMBER_DEC
    (177) intnumber -> . SIGNED_INTNUMBER_DEC
    (178) intnumber -> . INTNUMBER_BIN
    (179) intnumber -> . SIGNED_INTNUMBER_BIN
    (180) intnumber -> . INTNUMBER_OCT
    (181) intnumber -> . SIGNED_INTNUMBER_OCT
    (182) intnumber -> . INTNUMBER_HEX
    (183) intnumber -> . SIGNED_INTNUMBER_HEX
    (175) floatnumber -> . FLOATNUMBER
    (184) stringliteral -> . STRING_LITERAL

    MINUS           shift and go to state 97
    PLUS            shift and go to state 89
    LNOT            shift and go to state 95
    NOT             shift and go to state 78
    AND             shift and go to state 91
    NAND            shift and go to state 98
    NOR             shift and go to state 76
    OR              shift and go to state 105
    XOR             shift and go to state 82
    XNOR            shift and go to state 87
    LPAREN          shift and go to state 96
    LBRACE          shift and go to state 77
    DOLLER          shift and go to state 100
    ID              shift and go to state 85
    INTNUMBER_DEC   shift and go to state 79
    SIGNED_INTNUMBER_DEC shift and go to state 101
    INTNUMBER_BIN   shift and go to state 111
    SIGNED_INTNUMBER_BIN shift and go to state 112
    INTNUMBER_OCT   shift and go to state 86
    SIGNED_INTNUMBER_OCT shift and go to state 106
    INTNUMBER_HEX   shift and go to state 93
    SIGNED_INTNUMBER_HEX shift and go to state 83
    FLOATNUMBER     shift and go to state 102
    STRING_LITERAL  shift and go to state 107

    stringliteral                  shift and go to state 99
    intnumber                      shift and go to state 81
    expression                     shift and go to state 376
    repeat                         shift and go to state 108
    partselect                     shift and go to state 103
    identifier                     shift and go to state 104
    pointer                        shift and go to state 80
    functioncall                   shift and go to state 94
    scope                          shift and go to state 84
    systemcall                     shift and go to state 109
    const_expression               shift and go to state 110
    concat                         shift and go to state 88
    floatnumber                    shift and go to state 90

state 243

    (132) expression -> expression LSHIFT . expression
    (116) expression -> . MINUS expression
    (117) expression -> . PLUS expression
    (118) expression -> . LNOT expression
    (119) expression -> . NOT expression
    (120) expression -> . AND expression
    (121) expression -> . NAND expression
    (122) expression -> . NOR expression
    (123) expression -> . OR expression
    (124) expression -> . XOR expression
    (125) expression -> . XNOR expression
    (126) expression -> . expression POWER expression
    (127) expression -> . expression TIMES expression
    (128) expression -> . expression DIVIDE expression
    (129) expression -> . expression MOD expression
    (130) expression -> . expression PLUS expression
    (131) expression -> . expression MINUS expression
    (132) expression -> . expression LSHIFT expression
    (133) expression -> . expression RSHIFT expression
    (134) expression -> . expression LSHIFTA expression
    (135) expression -> . expression RSHIFTA expression
    (136) expression -> . expression LT expression
    (137) expression -> . expression GT expression
    (138) expression -> . expression LE expression
    (139) expression -> . expression GE expression
    (140) expression -> . expression EQ expression
    (141) expression -> . expression NE expression
    (142) expression -> . expression EQL expression
    (143) expression -> . expression NEL expression
    (144) expression -> . expression AND expression
    (145) expression -> . expression XOR expression
    (146) expression -> . expression XNOR expression
    (147) expression -> . expression OR expression
    (148) expression -> . expression LAND expression
    (149) expression -> . expression LOR expression
    (150) expression -> . expression COND expression COLON expression
    (151) expression -> . LPAREN expression RPAREN
    (152) expression -> . concat
    (153) expression -> . repeat
    (154) expression -> . partselect
    (155) expression -> . pointer
    (156) expression -> . functioncall
    (157) expression -> . systemcall
    (158) expression -> . identifier
    (159) expression -> . const_expression
    (160) concat -> . LBRACE concatlist RBRACE
    (163) repeat -> . LBRACE expression concat RBRACE
    (164) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (165) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (166) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (167) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (168) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (169) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (170) pointer -> . identifier LBRACKET expression RBRACKET
    (171) pointer -> . pointer LBRACKET expression RBRACKET
    (339) functioncall -> . identifier LPAREN func_args RPAREN
    (319) systemcall -> . DOLLER ID
    (320) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (357) identifier -> . ID
    (358) identifier -> . scope ID
    (172) const_expression -> . intnumber
    (173) const_expression -> . floatnumber
    (174) const_expression -> . stringliteral
    (359) scope -> . identifier DOT
    (360) scope -> . pointer DOT
    (176) intnumber -> . INTNUMBER_DEC
    (177) intnumber -> . SIGNED_INTNUMBER_DEC
    (178) intnumber -> . INTNUMBER_BIN
    (179) intnumber -> . SIGNED_INTNUMBER_BIN
    (180) intnumber -> . INTNUMBER_OCT
    (181) intnumber -> . SIGNED_INTNUMBER_OCT
    (182) intnumber -> . INTNUMBER_HEX
    (183) intnumber -> . SIGNED_INTNUMBER_HEX
    (175) floatnumber -> . FLOATNUMBER
    (184) stringliteral -> . STRING_LITERAL

    MINUS           shift and go to state 97
    PLUS            shift and go to state 89
    LNOT            shift and go to state 95
    NOT             shift and go to state 78
    AND             shift and go to state 91
    NAND            shift and go to state 98
    NOR             shift and go to state 76
    OR              shift and go to state 105
    XOR             shift and go to state 82
    XNOR            shift and go to state 87
    LPAREN          shift and go to state 96
    LBRACE          shift and go to state 77
    DOLLER          shift and go to state 100
    ID              shift and go to state 85
    INTNUMBER_DEC   shift and go to state 79
    SIGNED_INTNUMBER_DEC shift and go to state 101
    INTNUMBER_BIN   shift and go to state 111
    SIGNED_INTNUMBER_BIN shift and go to state 112
    INTNUMBER_OCT   shift and go to state 86
    SIGNED_INTNUMBER_OCT shift and go to state 106
    INTNUMBER_HEX   shift and go to state 93
    SIGNED_INTNUMBER_HEX shift and go to state 83
    FLOATNUMBER     shift and go to state 102
    STRING_LITERAL  shift and go to state 107

    stringliteral                  shift and go to state 99
    intnumber                      shift and go to state 81
    expression                     shift and go to state 377
    repeat                         shift and go to state 108
    partselect                     shift and go to state 103
    identifier                     shift and go to state 104
    pointer                        shift and go to state 80
    functioncall                   shift and go to state 94
    scope                          shift and go to state 84
    systemcall                     shift and go to state 109
    const_expression               shift and go to state 110
    concat                         shift and go to state 88
    floatnumber                    shift and go to state 90

state 244

    (128) expression -> expression DIVIDE . expression
    (116) expression -> . MINUS expression
    (117) expression -> . PLUS expression
    (118) expression -> . LNOT expression
    (119) expression -> . NOT expression
    (120) expression -> . AND expression
    (121) expression -> . NAND expression
    (122) expression -> . NOR expression
    (123) expression -> . OR expression
    (124) expression -> . XOR expression
    (125) expression -> . XNOR expression
    (126) expression -> . expression POWER expression
    (127) expression -> . expression TIMES expression
    (128) expression -> . expression DIVIDE expression
    (129) expression -> . expression MOD expression
    (130) expression -> . expression PLUS expression
    (131) expression -> . expression MINUS expression
    (132) expression -> . expression LSHIFT expression
    (133) expression -> . expression RSHIFT expression
    (134) expression -> . expression LSHIFTA expression
    (135) expression -> . expression RSHIFTA expression
    (136) expression -> . expression LT expression
    (137) expression -> . expression GT expression
    (138) expression -> . expression LE expression
    (139) expression -> . expression GE expression
    (140) expression -> . expression EQ expression
    (141) expression -> . expression NE expression
    (142) expression -> . expression EQL expression
    (143) expression -> . expression NEL expression
    (144) expression -> . expression AND expression
    (145) expression -> . expression XOR expression
    (146) expression -> . expression XNOR expression
    (147) expression -> . expression OR expression
    (148) expression -> . expression LAND expression
    (149) expression -> . expression LOR expression
    (150) expression -> . expression COND expression COLON expression
    (151) expression -> . LPAREN expression RPAREN
    (152) expression -> . concat
    (153) expression -> . repeat
    (154) expression -> . partselect
    (155) expression -> . pointer
    (156) expression -> . functioncall
    (157) expression -> . systemcall
    (158) expression -> . identifier
    (159) expression -> . const_expression
    (160) concat -> . LBRACE concatlist RBRACE
    (163) repeat -> . LBRACE expression concat RBRACE
    (164) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (165) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (166) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (167) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (168) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (169) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (170) pointer -> . identifier LBRACKET expression RBRACKET
    (171) pointer -> . pointer LBRACKET expression RBRACKET
    (339) functioncall -> . identifier LPAREN func_args RPAREN
    (319) systemcall -> . DOLLER ID
    (320) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (357) identifier -> . ID
    (358) identifier -> . scope ID
    (172) const_expression -> . intnumber
    (173) const_expression -> . floatnumber
    (174) const_expression -> . stringliteral
    (359) scope -> . identifier DOT
    (360) scope -> . pointer DOT
    (176) intnumber -> . INTNUMBER_DEC
    (177) intnumber -> . SIGNED_INTNUMBER_DEC
    (178) intnumber -> . INTNUMBER_BIN
    (179) intnumber -> . SIGNED_INTNUMBER_BIN
    (180) intnumber -> . INTNUMBER_OCT
    (181) intnumber -> . SIGNED_INTNUMBER_OCT
    (182) intnumber -> . INTNUMBER_HEX
    (183) intnumber -> . SIGNED_INTNUMBER_HEX
    (175) floatnumber -> . FLOATNUMBER
    (184) stringliteral -> . STRING_LITERAL

    MINUS           shift and go to state 97
    PLUS            shift and go to state 89
    LNOT            shift and go to state 95
    NOT             shift and go to state 78
    AND             shift and go to state 91
    NAND            shift and go to state 98
    NOR             shift and go to state 76
    OR              shift and go to state 105
    XOR             shift and go to state 82
    XNOR            shift and go to state 87
    LPAREN          shift and go to state 96
    LBRACE          shift and go to state 77
    DOLLER          shift and go to state 100
    ID              shift and go to state 85
    INTNUMBER_DEC   shift and go to state 79
    SIGNED_INTNUMBER_DEC shift and go to state 101
    INTNUMBER_BIN   shift and go to state 111
    SIGNED_INTNUMBER_BIN shift and go to state 112
    INTNUMBER_OCT   shift and go to state 86
    SIGNED_INTNUMBER_OCT shift and go to state 106
    INTNUMBER_HEX   shift and go to state 93
    SIGNED_INTNUMBER_HEX shift and go to state 83
    FLOATNUMBER     shift and go to state 102
    STRING_LITERAL  shift and go to state 107

    stringliteral                  shift and go to state 99
    intnumber                      shift and go to state 81
    expression                     shift and go to state 378
    repeat                         shift and go to state 108
    partselect                     shift and go to state 103
    identifier                     shift and go to state 104
    pointer                        shift and go to state 80
    functioncall                   shift and go to state 94
    scope                          shift and go to state 84
    systemcall                     shift and go to state 109
    const_expression               shift and go to state 110
    concat                         shift and go to state 88
    floatnumber                    shift and go to state 90

state 245

    (142) expression -> expression EQL . expression
    (116) expression -> . MINUS expression
    (117) expression -> . PLUS expression
    (118) expression -> . LNOT expression
    (119) expression -> . NOT expression
    (120) expression -> . AND expression
    (121) expression -> . NAND expression
    (122) expression -> . NOR expression
    (123) expression -> . OR expression
    (124) expression -> . XOR expression
    (125) expression -> . XNOR expression
    (126) expression -> . expression POWER expression
    (127) expression -> . expression TIMES expression
    (128) expression -> . expression DIVIDE expression
    (129) expression -> . expression MOD expression
    (130) expression -> . expression PLUS expression
    (131) expression -> . expression MINUS expression
    (132) expression -> . expression LSHIFT expression
    (133) expression -> . expression RSHIFT expression
    (134) expression -> . expression LSHIFTA expression
    (135) expression -> . expression RSHIFTA expression
    (136) expression -> . expression LT expression
    (137) expression -> . expression GT expression
    (138) expression -> . expression LE expression
    (139) expression -> . expression GE expression
    (140) expression -> . expression EQ expression
    (141) expression -> . expression NE expression
    (142) expression -> . expression EQL expression
    (143) expression -> . expression NEL expression
    (144) expression -> . expression AND expression
    (145) expression -> . expression XOR expression
    (146) expression -> . expression XNOR expression
    (147) expression -> . expression OR expression
    (148) expression -> . expression LAND expression
    (149) expression -> . expression LOR expression
    (150) expression -> . expression COND expression COLON expression
    (151) expression -> . LPAREN expression RPAREN
    (152) expression -> . concat
    (153) expression -> . repeat
    (154) expression -> . partselect
    (155) expression -> . pointer
    (156) expression -> . functioncall
    (157) expression -> . systemcall
    (158) expression -> . identifier
    (159) expression -> . const_expression
    (160) concat -> . LBRACE concatlist RBRACE
    (163) repeat -> . LBRACE expression concat RBRACE
    (164) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (165) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (166) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (167) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (168) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (169) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (170) pointer -> . identifier LBRACKET expression RBRACKET
    (171) pointer -> . pointer LBRACKET expression RBRACKET
    (339) functioncall -> . identifier LPAREN func_args RPAREN
    (319) systemcall -> . DOLLER ID
    (320) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (357) identifier -> . ID
    (358) identifier -> . scope ID
    (172) const_expression -> . intnumber
    (173) const_expression -> . floatnumber
    (174) const_expression -> . stringliteral
    (359) scope -> . identifier DOT
    (360) scope -> . pointer DOT
    (176) intnumber -> . INTNUMBER_DEC
    (177) intnumber -> . SIGNED_INTNUMBER_DEC
    (178) intnumber -> . INTNUMBER_BIN
    (179) intnumber -> . SIGNED_INTNUMBER_BIN
    (180) intnumber -> . INTNUMBER_OCT
    (181) intnumber -> . SIGNED_INTNUMBER_OCT
    (182) intnumber -> . INTNUMBER_HEX
    (183) intnumber -> . SIGNED_INTNUMBER_HEX
    (175) floatnumber -> . FLOATNUMBER
    (184) stringliteral -> . STRING_LITERAL

    MINUS           shift and go to state 97
    PLUS            shift and go to state 89
    LNOT            shift and go to state 95
    NOT             shift and go to state 78
    AND             shift and go to state 91
    NAND            shift and go to state 98
    NOR             shift and go to state 76
    OR              shift and go to state 105
    XOR             shift and go to state 82
    XNOR            shift and go to state 87
    LPAREN          shift and go to state 96
    LBRACE          shift and go to state 77
    DOLLER          shift and go to state 100
    ID              shift and go to state 85
    INTNUMBER_DEC   shift and go to state 79
    SIGNED_INTNUMBER_DEC shift and go to state 101
    INTNUMBER_BIN   shift and go to state 111
    SIGNED_INTNUMBER_BIN shift and go to state 112
    INTNUMBER_OCT   shift and go to state 86
    SIGNED_INTNUMBER_OCT shift and go to state 106
    INTNUMBER_HEX   shift and go to state 93
    SIGNED_INTNUMBER_HEX shift and go to state 83
    FLOATNUMBER     shift and go to state 102
    STRING_LITERAL  shift and go to state 107

    stringliteral                  shift and go to state 99
    intnumber                      shift and go to state 81
    expression                     shift and go to state 379
    repeat                         shift and go to state 108
    partselect                     shift and go to state 103
    identifier                     shift and go to state 104
    pointer                        shift and go to state 80
    functioncall                   shift and go to state 94
    scope                          shift and go to state 84
    systemcall                     shift and go to state 109
    const_expression               shift and go to state 110
    concat                         shift and go to state 88
    floatnumber                    shift and go to state 90

state 246

    (126) expression -> expression POWER . expression
    (116) expression -> . MINUS expression
    (117) expression -> . PLUS expression
    (118) expression -> . LNOT expression
    (119) expression -> . NOT expression
    (120) expression -> . AND expression
    (121) expression -> . NAND expression
    (122) expression -> . NOR expression
    (123) expression -> . OR expression
    (124) expression -> . XOR expression
    (125) expression -> . XNOR expression
    (126) expression -> . expression POWER expression
    (127) expression -> . expression TIMES expression
    (128) expression -> . expression DIVIDE expression
    (129) expression -> . expression MOD expression
    (130) expression -> . expression PLUS expression
    (131) expression -> . expression MINUS expression
    (132) expression -> . expression LSHIFT expression
    (133) expression -> . expression RSHIFT expression
    (134) expression -> . expression LSHIFTA expression
    (135) expression -> . expression RSHIFTA expression
    (136) expression -> . expression LT expression
    (137) expression -> . expression GT expression
    (138) expression -> . expression LE expression
    (139) expression -> . expression GE expression
    (140) expression -> . expression EQ expression
    (141) expression -> . expression NE expression
    (142) expression -> . expression EQL expression
    (143) expression -> . expression NEL expression
    (144) expression -> . expression AND expression
    (145) expression -> . expression XOR expression
    (146) expression -> . expression XNOR expression
    (147) expression -> . expression OR expression
    (148) expression -> . expression LAND expression
    (149) expression -> . expression LOR expression
    (150) expression -> . expression COND expression COLON expression
    (151) expression -> . LPAREN expression RPAREN
    (152) expression -> . concat
    (153) expression -> . repeat
    (154) expression -> . partselect
    (155) expression -> . pointer
    (156) expression -> . functioncall
    (157) expression -> . systemcall
    (158) expression -> . identifier
    (159) expression -> . const_expression
    (160) concat -> . LBRACE concatlist RBRACE
    (163) repeat -> . LBRACE expression concat RBRACE
    (164) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (165) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (166) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (167) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (168) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (169) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (170) pointer -> . identifier LBRACKET expression RBRACKET
    (171) pointer -> . pointer LBRACKET expression RBRACKET
    (339) functioncall -> . identifier LPAREN func_args RPAREN
    (319) systemcall -> . DOLLER ID
    (320) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (357) identifier -> . ID
    (358) identifier -> . scope ID
    (172) const_expression -> . intnumber
    (173) const_expression -> . floatnumber
    (174) const_expression -> . stringliteral
    (359) scope -> . identifier DOT
    (360) scope -> . pointer DOT
    (176) intnumber -> . INTNUMBER_DEC
    (177) intnumber -> . SIGNED_INTNUMBER_DEC
    (178) intnumber -> . INTNUMBER_BIN
    (179) intnumber -> . SIGNED_INTNUMBER_BIN
    (180) intnumber -> . INTNUMBER_OCT
    (181) intnumber -> . SIGNED_INTNUMBER_OCT
    (182) intnumber -> . INTNUMBER_HEX
    (183) intnumber -> . SIGNED_INTNUMBER_HEX
    (175) floatnumber -> . FLOATNUMBER
    (184) stringliteral -> . STRING_LITERAL

    MINUS           shift and go to state 97
    PLUS            shift and go to state 89
    LNOT            shift and go to state 95
    NOT             shift and go to state 78
    AND             shift and go to state 91
    NAND            shift and go to state 98
    NOR             shift and go to state 76
    OR              shift and go to state 105
    XOR             shift and go to state 82
    XNOR            shift and go to state 87
    LPAREN          shift and go to state 96
    LBRACE          shift and go to state 77
    DOLLER          shift and go to state 100
    ID              shift and go to state 85
    INTNUMBER_DEC   shift and go to state 79
    SIGNED_INTNUMBER_DEC shift and go to state 101
    INTNUMBER_BIN   shift and go to state 111
    SIGNED_INTNUMBER_BIN shift and go to state 112
    INTNUMBER_OCT   shift and go to state 86
    SIGNED_INTNUMBER_OCT shift and go to state 106
    INTNUMBER_HEX   shift and go to state 93
    SIGNED_INTNUMBER_HEX shift and go to state 83
    FLOATNUMBER     shift and go to state 102
    STRING_LITERAL  shift and go to state 107

    stringliteral                  shift and go to state 99
    intnumber                      shift and go to state 81
    expression                     shift and go to state 380
    repeat                         shift and go to state 108
    partselect                     shift and go to state 103
    identifier                     shift and go to state 104
    pointer                        shift and go to state 80
    functioncall                   shift and go to state 94
    scope                          shift and go to state 84
    systemcall                     shift and go to state 109
    const_expression               shift and go to state 110
    concat                         shift and go to state 88
    floatnumber                    shift and go to state 90

state 247

    (118) expression -> LNOT expression .
    (126) expression -> expression . POWER expression
    (127) expression -> expression . TIMES expression
    (128) expression -> expression . DIVIDE expression
    (129) expression -> expression . MOD expression
    (130) expression -> expression . PLUS expression
    (131) expression -> expression . MINUS expression
    (132) expression -> expression . LSHIFT expression
    (133) expression -> expression . RSHIFT expression
    (134) expression -> expression . LSHIFTA expression
    (135) expression -> expression . RSHIFTA expression
    (136) expression -> expression . LT expression
    (137) expression -> expression . GT expression
    (138) expression -> expression . LE expression
    (139) expression -> expression . GE expression
    (140) expression -> expression . EQ expression
    (141) expression -> expression . NE expression
    (142) expression -> expression . EQL expression
    (143) expression -> expression . NEL expression
    (144) expression -> expression . AND expression
    (145) expression -> expression . XOR expression
    (146) expression -> expression . XNOR expression
    (147) expression -> expression . OR expression
    (148) expression -> expression . LAND expression
    (149) expression -> expression . LOR expression
    (150) expression -> expression . COND expression COLON expression

    POWER           reduce using rule 118 (expression -> LNOT expression .)
    TIMES           reduce using rule 118 (expression -> LNOT expression .)
    DIVIDE          reduce using rule 118 (expression -> LNOT expression .)
    MOD             reduce using rule 118 (expression -> LNOT expression .)
    PLUS            reduce using rule 118 (expression -> LNOT expression .)
    MINUS           reduce using rule 118 (expression -> LNOT expression .)
    LSHIFT          reduce using rule 118 (expression -> LNOT expression .)
    RSHIFT          reduce using rule 118 (expression -> LNOT expression .)
    LSHIFTA         reduce using rule 118 (expression -> LNOT expression .)
    RSHIFTA         reduce using rule 118 (expression -> LNOT expression .)
    LT              reduce using rule 118 (expression -> LNOT expression .)
    GT              reduce using rule 118 (expression -> LNOT expression .)
    LE              reduce using rule 118 (expression -> LNOT expression .)
    GE              reduce using rule 118 (expression -> LNOT expression .)
    EQ              reduce using rule 118 (expression -> LNOT expression .)
    NE              reduce using rule 118 (expression -> LNOT expression .)
    EQL             reduce using rule 118 (expression -> LNOT expression .)
    NEL             reduce using rule 118 (expression -> LNOT expression .)
    AND             reduce using rule 118 (expression -> LNOT expression .)
    XOR             reduce using rule 118 (expression -> LNOT expression .)
    XNOR            reduce using rule 118 (expression -> LNOT expression .)
    OR              reduce using rule 118 (expression -> LNOT expression .)
    LAND            reduce using rule 118 (expression -> LNOT expression .)
    LOR             reduce using rule 118 (expression -> LNOT expression .)
    COND            reduce using rule 118 (expression -> LNOT expression .)
    LBRACE          reduce using rule 118 (expression -> LNOT expression .)
    RBRACE          reduce using rule 118 (expression -> LNOT expression .)
    COMMA           reduce using rule 118 (expression -> LNOT expression .)
    RPAREN          reduce using rule 118 (expression -> LNOT expression .)
    COLON           reduce using rule 118 (expression -> LNOT expression .)
    SEMICOLON       reduce using rule 118 (expression -> LNOT expression .)
    PLUSCOLON       reduce using rule 118 (expression -> LNOT expression .)
    MINUSCOLON      reduce using rule 118 (expression -> LNOT expression .)
    RBRACKET        reduce using rule 118 (expression -> LNOT expression .)

  ! POWER           [ shift and go to state 246 ]
  ! TIMES           [ shift and go to state 349 ]
  ! DIVIDE          [ shift and go to state 244 ]
  ! MOD             [ shift and go to state 231 ]
  ! PLUS            [ shift and go to state 240 ]
  ! MINUS           [ shift and go to state 229 ]
  ! LSHIFT          [ shift and go to state 243 ]
  ! RSHIFT          [ shift and go to state 226 ]
  ! LSHIFTA         [ shift and go to state 241 ]
  ! RSHIFTA         [ shift and go to state 238 ]
  ! LT              [ shift and go to state 235 ]
  ! GT              [ shift and go to state 228 ]
  ! LE              [ shift and go to state 222 ]
  ! GE              [ shift and go to state 239 ]
  ! EQ              [ shift and go to state 223 ]
  ! NE              [ shift and go to state 225 ]
  ! EQL             [ shift and go to state 245 ]
  ! NEL             [ shift and go to state 242 ]
  ! AND             [ shift and go to state 224 ]
  ! XOR             [ shift and go to state 237 ]
  ! XNOR            [ shift and go to state 232 ]
  ! OR              [ shift and go to state 234 ]
  ! LAND            [ shift and go to state 227 ]
  ! LOR             [ shift and go to state 230 ]
  ! COND            [ shift and go to state 233 ]


state 248

    (151) expression -> LPAREN expression . RPAREN
    (126) expression -> expression . POWER expression
    (127) expression -> expression . TIMES expression
    (128) expression -> expression . DIVIDE expression
    (129) expression -> expression . MOD expression
    (130) expression -> expression . PLUS expression
    (131) expression -> expression . MINUS expression
    (132) expression -> expression . LSHIFT expression
    (133) expression -> expression . RSHIFT expression
    (134) expression -> expression . LSHIFTA expression
    (135) expression -> expression . RSHIFTA expression
    (136) expression -> expression . LT expression
    (137) expression -> expression . GT expression
    (138) expression -> expression . LE expression
    (139) expression -> expression . GE expression
    (140) expression -> expression . EQ expression
    (141) expression -> expression . NE expression
    (142) expression -> expression . EQL expression
    (143) expression -> expression . NEL expression
    (144) expression -> expression . AND expression
    (145) expression -> expression . XOR expression
    (146) expression -> expression . XNOR expression
    (147) expression -> expression . OR expression
    (148) expression -> expression . LAND expression
    (149) expression -> expression . LOR expression
    (150) expression -> expression . COND expression COLON expression

    RPAREN          shift and go to state 381
    POWER           shift and go to state 246
    TIMES           shift and go to state 349
    DIVIDE          shift and go to state 244
    MOD             shift and go to state 231
    PLUS            shift and go to state 240
    MINUS           shift and go to state 229
    LSHIFT          shift and go to state 243
    RSHIFT          shift and go to state 226
    LSHIFTA         shift and go to state 241
    RSHIFTA         shift and go to state 238
    LT              shift and go to state 235
    GT              shift and go to state 228
    LE              shift and go to state 222
    GE              shift and go to state 239
    EQ              shift and go to state 223
    NE              shift and go to state 225
    EQL             shift and go to state 245
    NEL             shift and go to state 242
    AND             shift and go to state 224
    XOR             shift and go to state 237
    XNOR            shift and go to state 232
    OR              shift and go to state 234
    LAND            shift and go to state 227
    LOR             shift and go to state 230
    COND            shift and go to state 233


state 249

    (116) expression -> MINUS expression .
    (126) expression -> expression . POWER expression
    (127) expression -> expression . TIMES expression
    (128) expression -> expression . DIVIDE expression
    (129) expression -> expression . MOD expression
    (130) expression -> expression . PLUS expression
    (131) expression -> expression . MINUS expression
    (132) expression -> expression . LSHIFT expression
    (133) expression -> expression . RSHIFT expression
    (134) expression -> expression . LSHIFTA expression
    (135) expression -> expression . RSHIFTA expression
    (136) expression -> expression . LT expression
    (137) expression -> expression . GT expression
    (138) expression -> expression . LE expression
    (139) expression -> expression . GE expression
    (140) expression -> expression . EQ expression
    (141) expression -> expression . NE expression
    (142) expression -> expression . EQL expression
    (143) expression -> expression . NEL expression
    (144) expression -> expression . AND expression
    (145) expression -> expression . XOR expression
    (146) expression -> expression . XNOR expression
    (147) expression -> expression . OR expression
    (148) expression -> expression . LAND expression
    (149) expression -> expression . LOR expression
    (150) expression -> expression . COND expression COLON expression

    POWER           reduce using rule 116 (expression -> MINUS expression .)
    TIMES           reduce using rule 116 (expression -> MINUS expression .)
    DIVIDE          reduce using rule 116 (expression -> MINUS expression .)
    MOD             reduce using rule 116 (expression -> MINUS expression .)
    PLUS            reduce using rule 116 (expression -> MINUS expression .)
    MINUS           reduce using rule 116 (expression -> MINUS expression .)
    LSHIFT          reduce using rule 116 (expression -> MINUS expression .)
    RSHIFT          reduce using rule 116 (expression -> MINUS expression .)
    LSHIFTA         reduce using rule 116 (expression -> MINUS expression .)
    RSHIFTA         reduce using rule 116 (expression -> MINUS expression .)
    LT              reduce using rule 116 (expression -> MINUS expression .)
    GT              reduce using rule 116 (expression -> MINUS expression .)
    LE              reduce using rule 116 (expression -> MINUS expression .)
    GE              reduce using rule 116 (expression -> MINUS expression .)
    EQ              reduce using rule 116 (expression -> MINUS expression .)
    NE              reduce using rule 116 (expression -> MINUS expression .)
    EQL             reduce using rule 116 (expression -> MINUS expression .)
    NEL             reduce using rule 116 (expression -> MINUS expression .)
    AND             reduce using rule 116 (expression -> MINUS expression .)
    XOR             reduce using rule 116 (expression -> MINUS expression .)
    XNOR            reduce using rule 116 (expression -> MINUS expression .)
    OR              reduce using rule 116 (expression -> MINUS expression .)
    LAND            reduce using rule 116 (expression -> MINUS expression .)
    LOR             reduce using rule 116 (expression -> MINUS expression .)
    COND            reduce using rule 116 (expression -> MINUS expression .)
    LBRACE          reduce using rule 116 (expression -> MINUS expression .)
    RBRACE          reduce using rule 116 (expression -> MINUS expression .)
    COMMA           reduce using rule 116 (expression -> MINUS expression .)
    RPAREN          reduce using rule 116 (expression -> MINUS expression .)
    COLON           reduce using rule 116 (expression -> MINUS expression .)
    SEMICOLON       reduce using rule 116 (expression -> MINUS expression .)
    PLUSCOLON       reduce using rule 116 (expression -> MINUS expression .)
    MINUSCOLON      reduce using rule 116 (expression -> MINUS expression .)
    RBRACKET        reduce using rule 116 (expression -> MINUS expression .)

  ! POWER           [ shift and go to state 246 ]
  ! TIMES           [ shift and go to state 349 ]
  ! DIVIDE          [ shift and go to state 244 ]
  ! MOD             [ shift and go to state 231 ]
  ! PLUS            [ shift and go to state 240 ]
  ! MINUS           [ shift and go to state 229 ]
  ! LSHIFT          [ shift and go to state 243 ]
  ! RSHIFT          [ shift and go to state 226 ]
  ! LSHIFTA         [ shift and go to state 241 ]
  ! RSHIFTA         [ shift and go to state 238 ]
  ! LT              [ shift and go to state 235 ]
  ! GT              [ shift and go to state 228 ]
  ! LE              [ shift and go to state 222 ]
  ! GE              [ shift and go to state 239 ]
  ! EQ              [ shift and go to state 223 ]
  ! NE              [ shift and go to state 225 ]
  ! EQL             [ shift and go to state 245 ]
  ! NEL             [ shift and go to state 242 ]
  ! AND             [ shift and go to state 224 ]
  ! XOR             [ shift and go to state 237 ]
  ! XNOR            [ shift and go to state 232 ]
  ! OR              [ shift and go to state 234 ]
  ! LAND            [ shift and go to state 227 ]
  ! LOR             [ shift and go to state 230 ]
  ! COND            [ shift and go to state 233 ]


state 250

    (121) expression -> NAND expression .
    (126) expression -> expression . POWER expression
    (127) expression -> expression . TIMES expression
    (128) expression -> expression . DIVIDE expression
    (129) expression -> expression . MOD expression
    (130) expression -> expression . PLUS expression
    (131) expression -> expression . MINUS expression
    (132) expression -> expression . LSHIFT expression
    (133) expression -> expression . RSHIFT expression
    (134) expression -> expression . LSHIFTA expression
    (135) expression -> expression . RSHIFTA expression
    (136) expression -> expression . LT expression
    (137) expression -> expression . GT expression
    (138) expression -> expression . LE expression
    (139) expression -> expression . GE expression
    (140) expression -> expression . EQ expression
    (141) expression -> expression . NE expression
    (142) expression -> expression . EQL expression
    (143) expression -> expression . NEL expression
    (144) expression -> expression . AND expression
    (145) expression -> expression . XOR expression
    (146) expression -> expression . XNOR expression
    (147) expression -> expression . OR expression
    (148) expression -> expression . LAND expression
    (149) expression -> expression . LOR expression
    (150) expression -> expression . COND expression COLON expression

    POWER           reduce using rule 121 (expression -> NAND expression .)
    TIMES           reduce using rule 121 (expression -> NAND expression .)
    DIVIDE          reduce using rule 121 (expression -> NAND expression .)
    MOD             reduce using rule 121 (expression -> NAND expression .)
    PLUS            reduce using rule 121 (expression -> NAND expression .)
    MINUS           reduce using rule 121 (expression -> NAND expression .)
    LSHIFT          reduce using rule 121 (expression -> NAND expression .)
    RSHIFT          reduce using rule 121 (expression -> NAND expression .)
    LSHIFTA         reduce using rule 121 (expression -> NAND expression .)
    RSHIFTA         reduce using rule 121 (expression -> NAND expression .)
    LT              reduce using rule 121 (expression -> NAND expression .)
    GT              reduce using rule 121 (expression -> NAND expression .)
    LE              reduce using rule 121 (expression -> NAND expression .)
    GE              reduce using rule 121 (expression -> NAND expression .)
    EQ              reduce using rule 121 (expression -> NAND expression .)
    NE              reduce using rule 121 (expression -> NAND expression .)
    EQL             reduce using rule 121 (expression -> NAND expression .)
    NEL             reduce using rule 121 (expression -> NAND expression .)
    AND             reduce using rule 121 (expression -> NAND expression .)
    XOR             reduce using rule 121 (expression -> NAND expression .)
    XNOR            reduce using rule 121 (expression -> NAND expression .)
    OR              reduce using rule 121 (expression -> NAND expression .)
    LAND            reduce using rule 121 (expression -> NAND expression .)
    LOR             reduce using rule 121 (expression -> NAND expression .)
    COND            reduce using rule 121 (expression -> NAND expression .)
    LBRACE          reduce using rule 121 (expression -> NAND expression .)
    RBRACE          reduce using rule 121 (expression -> NAND expression .)
    COMMA           reduce using rule 121 (expression -> NAND expression .)
    RPAREN          reduce using rule 121 (expression -> NAND expression .)
    COLON           reduce using rule 121 (expression -> NAND expression .)
    SEMICOLON       reduce using rule 121 (expression -> NAND expression .)
    PLUSCOLON       reduce using rule 121 (expression -> NAND expression .)
    MINUSCOLON      reduce using rule 121 (expression -> NAND expression .)
    RBRACKET        reduce using rule 121 (expression -> NAND expression .)

  ! POWER           [ shift and go to state 246 ]
  ! TIMES           [ shift and go to state 349 ]
  ! DIVIDE          [ shift and go to state 244 ]
  ! MOD             [ shift and go to state 231 ]
  ! PLUS            [ shift and go to state 240 ]
  ! MINUS           [ shift and go to state 229 ]
  ! LSHIFT          [ shift and go to state 243 ]
  ! RSHIFT          [ shift and go to state 226 ]
  ! LSHIFTA         [ shift and go to state 241 ]
  ! RSHIFTA         [ shift and go to state 238 ]
  ! LT              [ shift and go to state 235 ]
  ! GT              [ shift and go to state 228 ]
  ! LE              [ shift and go to state 222 ]
  ! GE              [ shift and go to state 239 ]
  ! EQ              [ shift and go to state 223 ]
  ! NE              [ shift and go to state 225 ]
  ! EQL             [ shift and go to state 245 ]
  ! NEL             [ shift and go to state 242 ]
  ! AND             [ shift and go to state 224 ]
  ! XOR             [ shift and go to state 237 ]
  ! XNOR            [ shift and go to state 232 ]
  ! OR              [ shift and go to state 234 ]
  ! LAND            [ shift and go to state 227 ]
  ! LOR             [ shift and go to state 230 ]
  ! COND            [ shift and go to state 233 ]


state 251

    (319) systemcall -> DOLLER ID .
    (320) systemcall -> DOLLER ID . LPAREN sysargs RPAREN

    RPAREN          reduce using rule 319 (systemcall -> DOLLER ID .)
    POWER           reduce using rule 319 (systemcall -> DOLLER ID .)
    TIMES           reduce using rule 319 (systemcall -> DOLLER ID .)
    DIVIDE          reduce using rule 319 (systemcall -> DOLLER ID .)
    MOD             reduce using rule 319 (systemcall -> DOLLER ID .)
    PLUS            reduce using rule 319 (systemcall -> DOLLER ID .)
    MINUS           reduce using rule 319 (systemcall -> DOLLER ID .)
    LSHIFT          reduce using rule 319 (systemcall -> DOLLER ID .)
    RSHIFT          reduce using rule 319 (systemcall -> DOLLER ID .)
    LSHIFTA         reduce using rule 319 (systemcall -> DOLLER ID .)
    RSHIFTA         reduce using rule 319 (systemcall -> DOLLER ID .)
    LT              reduce using rule 319 (systemcall -> DOLLER ID .)
    GT              reduce using rule 319 (systemcall -> DOLLER ID .)
    LE              reduce using rule 319 (systemcall -> DOLLER ID .)
    GE              reduce using rule 319 (systemcall -> DOLLER ID .)
    EQ              reduce using rule 319 (systemcall -> DOLLER ID .)
    NE              reduce using rule 319 (systemcall -> DOLLER ID .)
    EQL             reduce using rule 319 (systemcall -> DOLLER ID .)
    NEL             reduce using rule 319 (systemcall -> DOLLER ID .)
    AND             reduce using rule 319 (systemcall -> DOLLER ID .)
    XOR             reduce using rule 319 (systemcall -> DOLLER ID .)
    XNOR            reduce using rule 319 (systemcall -> DOLLER ID .)
    OR              reduce using rule 319 (systemcall -> DOLLER ID .)
    LAND            reduce using rule 319 (systemcall -> DOLLER ID .)
    LOR             reduce using rule 319 (systemcall -> DOLLER ID .)
    COND            reduce using rule 319 (systemcall -> DOLLER ID .)
    SEMICOLON       reduce using rule 319 (systemcall -> DOLLER ID .)
    RBRACKET        reduce using rule 319 (systemcall -> DOLLER ID .)
    COLON           reduce using rule 319 (systemcall -> DOLLER ID .)
    PLUSCOLON       reduce using rule 319 (systemcall -> DOLLER ID .)
    MINUSCOLON      reduce using rule 319 (systemcall -> DOLLER ID .)
    LBRACE          reduce using rule 319 (systemcall -> DOLLER ID .)
    RBRACE          reduce using rule 319 (systemcall -> DOLLER ID .)
    COMMA           reduce using rule 319 (systemcall -> DOLLER ID .)
    LPAREN          shift and go to state 382


state 252

    (359) scope -> identifier DOT .

    ID              reduce using rule 359 (scope -> identifier DOT .)


state 253

    (339) functioncall -> identifier LPAREN . func_args RPAREN
    (340) func_args -> . func_args COMMA expression
    (341) func_args -> . expression
    (342) func_args -> . empty
    (116) expression -> . MINUS expression
    (117) expression -> . PLUS expression
    (118) expression -> . LNOT expression
    (119) expression -> . NOT expression
    (120) expression -> . AND expression
    (121) expression -> . NAND expression
    (122) expression -> . NOR expression
    (123) expression -> . OR expression
    (124) expression -> . XOR expression
    (125) expression -> . XNOR expression
    (126) expression -> . expression POWER expression
    (127) expression -> . expression TIMES expression
    (128) expression -> . expression DIVIDE expression
    (129) expression -> . expression MOD expression
    (130) expression -> . expression PLUS expression
    (131) expression -> . expression MINUS expression
    (132) expression -> . expression LSHIFT expression
    (133) expression -> . expression RSHIFT expression
    (134) expression -> . expression LSHIFTA expression
    (135) expression -> . expression RSHIFTA expression
    (136) expression -> . expression LT expression
    (137) expression -> . expression GT expression
    (138) expression -> . expression LE expression
    (139) expression -> . expression GE expression
    (140) expression -> . expression EQ expression
    (141) expression -> . expression NE expression
    (142) expression -> . expression EQL expression
    (143) expression -> . expression NEL expression
    (144) expression -> . expression AND expression
    (145) expression -> . expression XOR expression
    (146) expression -> . expression XNOR expression
    (147) expression -> . expression OR expression
    (148) expression -> . expression LAND expression
    (149) expression -> . expression LOR expression
    (150) expression -> . expression COND expression COLON expression
    (151) expression -> . LPAREN expression RPAREN
    (152) expression -> . concat
    (153) expression -> . repeat
    (154) expression -> . partselect
    (155) expression -> . pointer
    (156) expression -> . functioncall
    (157) expression -> . systemcall
    (158) expression -> . identifier
    (159) expression -> . const_expression
    (365) empty -> .
    (160) concat -> . LBRACE concatlist RBRACE
    (163) repeat -> . LBRACE expression concat RBRACE
    (164) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (165) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (166) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (167) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (168) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (169) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (170) pointer -> . identifier LBRACKET expression RBRACKET
    (171) pointer -> . pointer LBRACKET expression RBRACKET
    (339) functioncall -> . identifier LPAREN func_args RPAREN
    (319) systemcall -> . DOLLER ID
    (320) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (357) identifier -> . ID
    (358) identifier -> . scope ID
    (172) const_expression -> . intnumber
    (173) const_expression -> . floatnumber
    (174) const_expression -> . stringliteral
    (359) scope -> . identifier DOT
    (360) scope -> . pointer DOT
    (176) intnumber -> . INTNUMBER_DEC
    (177) intnumber -> . SIGNED_INTNUMBER_DEC
    (178) intnumber -> . INTNUMBER_BIN
    (179) intnumber -> . SIGNED_INTNUMBER_BIN
    (180) intnumber -> . INTNUMBER_OCT
    (181) intnumber -> . SIGNED_INTNUMBER_OCT
    (182) intnumber -> . INTNUMBER_HEX
    (183) intnumber -> . SIGNED_INTNUMBER_HEX
    (175) floatnumber -> . FLOATNUMBER
    (184) stringliteral -> . STRING_LITERAL

    MINUS           shift and go to state 97
    PLUS            shift and go to state 89
    LNOT            shift and go to state 95
    NOT             shift and go to state 78
    AND             shift and go to state 91
    NAND            shift and go to state 98
    NOR             shift and go to state 76
    OR              shift and go to state 105
    XOR             shift and go to state 82
    XNOR            shift and go to state 87
    LPAREN          shift and go to state 96
    RPAREN          reduce using rule 365 (empty -> .)
    COMMA           reduce using rule 365 (empty -> .)
    LBRACE          shift and go to state 77
    DOLLER          shift and go to state 100
    ID              shift and go to state 85
    INTNUMBER_DEC   shift and go to state 79
    SIGNED_INTNUMBER_DEC shift and go to state 101
    INTNUMBER_BIN   shift and go to state 111
    SIGNED_INTNUMBER_BIN shift and go to state 112
    INTNUMBER_OCT   shift and go to state 86
    SIGNED_INTNUMBER_OCT shift and go to state 106
    INTNUMBER_HEX   shift and go to state 93
    SIGNED_INTNUMBER_HEX shift and go to state 83
    FLOATNUMBER     shift and go to state 102
    STRING_LITERAL  shift and go to state 107

    stringliteral                  shift and go to state 99
    intnumber                      shift and go to state 81
    expression                     shift and go to state 385
    repeat                         shift and go to state 108
    empty                          shift and go to state 383
    partselect                     shift and go to state 103
    identifier                     shift and go to state 104
    pointer                        shift and go to state 80
    functioncall                   shift and go to state 94
    scope                          shift and go to state 84
    systemcall                     shift and go to state 109
    const_expression               shift and go to state 110
    concat                         shift and go to state 88
    func_args                      shift and go to state 384
    floatnumber                    shift and go to state 90

state 254

    (164) partselect -> identifier LBRACKET . expression COLON expression RBRACKET
    (165) partselect -> identifier LBRACKET . expression PLUSCOLON expression RBRACKET
    (166) partselect -> identifier LBRACKET . expression MINUSCOLON expression RBRACKET
    (170) pointer -> identifier LBRACKET . expression RBRACKET
    (116) expression -> . MINUS expression
    (117) expression -> . PLUS expression
    (118) expression -> . LNOT expression
    (119) expression -> . NOT expression
    (120) expression -> . AND expression
    (121) expression -> . NAND expression
    (122) expression -> . NOR expression
    (123) expression -> . OR expression
    (124) expression -> . XOR expression
    (125) expression -> . XNOR expression
    (126) expression -> . expression POWER expression
    (127) expression -> . expression TIMES expression
    (128) expression -> . expression DIVIDE expression
    (129) expression -> . expression MOD expression
    (130) expression -> . expression PLUS expression
    (131) expression -> . expression MINUS expression
    (132) expression -> . expression LSHIFT expression
    (133) expression -> . expression RSHIFT expression
    (134) expression -> . expression LSHIFTA expression
    (135) expression -> . expression RSHIFTA expression
    (136) expression -> . expression LT expression
    (137) expression -> . expression GT expression
    (138) expression -> . expression LE expression
    (139) expression -> . expression GE expression
    (140) expression -> . expression EQ expression
    (141) expression -> . expression NE expression
    (142) expression -> . expression EQL expression
    (143) expression -> . expression NEL expression
    (144) expression -> . expression AND expression
    (145) expression -> . expression XOR expression
    (146) expression -> . expression XNOR expression
    (147) expression -> . expression OR expression
    (148) expression -> . expression LAND expression
    (149) expression -> . expression LOR expression
    (150) expression -> . expression COND expression COLON expression
    (151) expression -> . LPAREN expression RPAREN
    (152) expression -> . concat
    (153) expression -> . repeat
    (154) expression -> . partselect
    (155) expression -> . pointer
    (156) expression -> . functioncall
    (157) expression -> . systemcall
    (158) expression -> . identifier
    (159) expression -> . const_expression
    (160) concat -> . LBRACE concatlist RBRACE
    (163) repeat -> . LBRACE expression concat RBRACE
    (164) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (165) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (166) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (167) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (168) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (169) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (170) pointer -> . identifier LBRACKET expression RBRACKET
    (171) pointer -> . pointer LBRACKET expression RBRACKET
    (339) functioncall -> . identifier LPAREN func_args RPAREN
    (319) systemcall -> . DOLLER ID
    (320) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (357) identifier -> . ID
    (358) identifier -> . scope ID
    (172) const_expression -> . intnumber
    (173) const_expression -> . floatnumber
    (174) const_expression -> . stringliteral
    (359) scope -> . identifier DOT
    (360) scope -> . pointer DOT
    (176) intnumber -> . INTNUMBER_DEC
    (177) intnumber -> . SIGNED_INTNUMBER_DEC
    (178) intnumber -> . INTNUMBER_BIN
    (179) intnumber -> . SIGNED_INTNUMBER_BIN
    (180) intnumber -> . INTNUMBER_OCT
    (181) intnumber -> . SIGNED_INTNUMBER_OCT
    (182) intnumber -> . INTNUMBER_HEX
    (183) intnumber -> . SIGNED_INTNUMBER_HEX
    (175) floatnumber -> . FLOATNUMBER
    (184) stringliteral -> . STRING_LITERAL

    MINUS           shift and go to state 97
    PLUS            shift and go to state 89
    LNOT            shift and go to state 95
    NOT             shift and go to state 78
    AND             shift and go to state 91
    NAND            shift and go to state 98
    NOR             shift and go to state 76
    OR              shift and go to state 105
    XOR             shift and go to state 82
    XNOR            shift and go to state 87
    LPAREN          shift and go to state 96
    LBRACE          shift and go to state 77
    DOLLER          shift and go to state 100
    ID              shift and go to state 85
    INTNUMBER_DEC   shift and go to state 79
    SIGNED_INTNUMBER_DEC shift and go to state 101
    INTNUMBER_BIN   shift and go to state 111
    SIGNED_INTNUMBER_BIN shift and go to state 112
    INTNUMBER_OCT   shift and go to state 86
    SIGNED_INTNUMBER_OCT shift and go to state 106
    INTNUMBER_HEX   shift and go to state 93
    SIGNED_INTNUMBER_HEX shift and go to state 83
    FLOATNUMBER     shift and go to state 102
    STRING_LITERAL  shift and go to state 107

    stringliteral                  shift and go to state 99
    intnumber                      shift and go to state 81
    expression                     shift and go to state 386
    repeat                         shift and go to state 108
    partselect                     shift and go to state 103
    identifier                     shift and go to state 104
    pointer                        shift and go to state 80
    functioncall                   shift and go to state 94
    scope                          shift and go to state 84
    systemcall                     shift and go to state 109
    const_expression               shift and go to state 110
    concat                         shift and go to state 88
    floatnumber                    shift and go to state 90

state 255

    (123) expression -> OR expression .
    (126) expression -> expression . POWER expression
    (127) expression -> expression . TIMES expression
    (128) expression -> expression . DIVIDE expression
    (129) expression -> expression . MOD expression
    (130) expression -> expression . PLUS expression
    (131) expression -> expression . MINUS expression
    (132) expression -> expression . LSHIFT expression
    (133) expression -> expression . RSHIFT expression
    (134) expression -> expression . LSHIFTA expression
    (135) expression -> expression . RSHIFTA expression
    (136) expression -> expression . LT expression
    (137) expression -> expression . GT expression
    (138) expression -> expression . LE expression
    (139) expression -> expression . GE expression
    (140) expression -> expression . EQ expression
    (141) expression -> expression . NE expression
    (142) expression -> expression . EQL expression
    (143) expression -> expression . NEL expression
    (144) expression -> expression . AND expression
    (145) expression -> expression . XOR expression
    (146) expression -> expression . XNOR expression
    (147) expression -> expression . OR expression
    (148) expression -> expression . LAND expression
    (149) expression -> expression . LOR expression
    (150) expression -> expression . COND expression COLON expression

    POWER           reduce using rule 123 (expression -> OR expression .)
    TIMES           reduce using rule 123 (expression -> OR expression .)
    DIVIDE          reduce using rule 123 (expression -> OR expression .)
    MOD             reduce using rule 123 (expression -> OR expression .)
    PLUS            reduce using rule 123 (expression -> OR expression .)
    MINUS           reduce using rule 123 (expression -> OR expression .)
    LSHIFT          reduce using rule 123 (expression -> OR expression .)
    RSHIFT          reduce using rule 123 (expression -> OR expression .)
    LSHIFTA         reduce using rule 123 (expression -> OR expression .)
    RSHIFTA         reduce using rule 123 (expression -> OR expression .)
    LT              reduce using rule 123 (expression -> OR expression .)
    GT              reduce using rule 123 (expression -> OR expression .)
    LE              reduce using rule 123 (expression -> OR expression .)
    GE              reduce using rule 123 (expression -> OR expression .)
    EQ              reduce using rule 123 (expression -> OR expression .)
    NE              reduce using rule 123 (expression -> OR expression .)
    EQL             reduce using rule 123 (expression -> OR expression .)
    NEL             reduce using rule 123 (expression -> OR expression .)
    AND             reduce using rule 123 (expression -> OR expression .)
    XOR             reduce using rule 123 (expression -> OR expression .)
    XNOR            reduce using rule 123 (expression -> OR expression .)
    OR              reduce using rule 123 (expression -> OR expression .)
    LAND            reduce using rule 123 (expression -> OR expression .)
    LOR             reduce using rule 123 (expression -> OR expression .)
    COND            reduce using rule 123 (expression -> OR expression .)
    LBRACE          reduce using rule 123 (expression -> OR expression .)
    RBRACE          reduce using rule 123 (expression -> OR expression .)
    COMMA           reduce using rule 123 (expression -> OR expression .)
    RPAREN          reduce using rule 123 (expression -> OR expression .)
    COLON           reduce using rule 123 (expression -> OR expression .)
    SEMICOLON       reduce using rule 123 (expression -> OR expression .)
    PLUSCOLON       reduce using rule 123 (expression -> OR expression .)
    MINUSCOLON      reduce using rule 123 (expression -> OR expression .)
    RBRACKET        reduce using rule 123 (expression -> OR expression .)

  ! POWER           [ shift and go to state 246 ]
  ! TIMES           [ shift and go to state 349 ]
  ! DIVIDE          [ shift and go to state 244 ]
  ! MOD             [ shift and go to state 231 ]
  ! PLUS            [ shift and go to state 240 ]
  ! MINUS           [ shift and go to state 229 ]
  ! LSHIFT          [ shift and go to state 243 ]
  ! RSHIFT          [ shift and go to state 226 ]
  ! LSHIFTA         [ shift and go to state 241 ]
  ! RSHIFTA         [ shift and go to state 238 ]
  ! LT              [ shift and go to state 235 ]
  ! GT              [ shift and go to state 228 ]
  ! LE              [ shift and go to state 222 ]
  ! GE              [ shift and go to state 239 ]
  ! EQ              [ shift and go to state 223 ]
  ! NE              [ shift and go to state 225 ]
  ! EQL             [ shift and go to state 245 ]
  ! NEL             [ shift and go to state 242 ]
  ! AND             [ shift and go to state 224 ]
  ! XOR             [ shift and go to state 237 ]
  ! XNOR            [ shift and go to state 232 ]
  ! OR              [ shift and go to state 234 ]
  ! LAND            [ shift and go to state 227 ]
  ! LOR             [ shift and go to state 230 ]
  ! COND            [ shift and go to state 233 ]


state 256

    (44) ioport_head -> sigtypes width portname .

    RPAREN          reduce using rule 44 (ioport_head -> sigtypes width portname .)
    COMMA           reduce using rule 44 (ioport_head -> sigtypes width portname .)


state 257

    (46) width -> LBRACKET expression . COLON expression RBRACKET
    (126) expression -> expression . POWER expression
    (127) expression -> expression . TIMES expression
    (128) expression -> expression . DIVIDE expression
    (129) expression -> expression . MOD expression
    (130) expression -> expression . PLUS expression
    (131) expression -> expression . MINUS expression
    (132) expression -> expression . LSHIFT expression
    (133) expression -> expression . RSHIFT expression
    (134) expression -> expression . LSHIFTA expression
    (135) expression -> expression . RSHIFTA expression
    (136) expression -> expression . LT expression
    (137) expression -> expression . GT expression
    (138) expression -> expression . LE expression
    (139) expression -> expression . GE expression
    (140) expression -> expression . EQ expression
    (141) expression -> expression . NE expression
    (142) expression -> expression . EQL expression
    (143) expression -> expression . NEL expression
    (144) expression -> expression . AND expression
    (145) expression -> expression . XOR expression
    (146) expression -> expression . XNOR expression
    (147) expression -> expression . OR expression
    (148) expression -> expression . LAND expression
    (149) expression -> expression . LOR expression
    (150) expression -> expression . COND expression COLON expression

    COLON           shift and go to state 387
    POWER           shift and go to state 246
    TIMES           shift and go to state 349
    DIVIDE          shift and go to state 244
    MOD             shift and go to state 231
    PLUS            shift and go to state 240
    MINUS           shift and go to state 229
    LSHIFT          shift and go to state 243
    RSHIFT          shift and go to state 226
    LSHIFTA         shift and go to state 241
    RSHIFTA         shift and go to state 238
    LT              shift and go to state 235
    GT              shift and go to state 228
    LE              shift and go to state 222
    GE              shift and go to state 239
    EQ              shift and go to state 223
    NE              shift and go to state 225
    EQL             shift and go to state 245
    NEL             shift and go to state 242
    AND             shift and go to state 224
    XOR             shift and go to state 237
    XNOR            shift and go to state 232
    OR              shift and go to state 234
    LAND            shift and go to state 227
    LOR             shift and go to state 230
    COND            shift and go to state 233


state 258

    (27) ports -> ports COMMA portname .

    RPAREN          reduce using rule 27 (ports -> ports COMMA portname .)
    COMMA           reduce using rule 27 (ports -> ports COMMA portname .)


state 259

    (23) portlist -> LPAREN ports RPAREN SEMICOLON .

    GENERATE        reduce using rule 23 (portlist -> LPAREN ports RPAREN SEMICOLON .)
    INTEGER         reduce using rule 23 (portlist -> LPAREN ports RPAREN SEMICOLON .)
    REAL            reduce using rule 23 (portlist -> LPAREN ports RPAREN SEMICOLON .)
    PARAMETER       reduce using rule 23 (portlist -> LPAREN ports RPAREN SEMICOLON .)
    LOCALPARAM      reduce using rule 23 (portlist -> LPAREN ports RPAREN SEMICOLON .)
    GENVAR          reduce using rule 23 (portlist -> LPAREN ports RPAREN SEMICOLON .)
    ASSIGN          reduce using rule 23 (portlist -> LPAREN ports RPAREN SEMICOLON .)
    ALWAYS          reduce using rule 23 (portlist -> LPAREN ports RPAREN SEMICOLON .)
    INITIAL         reduce using rule 23 (portlist -> LPAREN ports RPAREN SEMICOLON .)
    ID              reduce using rule 23 (portlist -> LPAREN ports RPAREN SEMICOLON .)
    FUNCTION        reduce using rule 23 (portlist -> LPAREN ports RPAREN SEMICOLON .)
    TASK            reduce using rule 23 (portlist -> LPAREN ports RPAREN SEMICOLON .)
    LPAREN          reduce using rule 23 (portlist -> LPAREN ports RPAREN SEMICOLON .)
    INPUT           reduce using rule 23 (portlist -> LPAREN ports RPAREN SEMICOLON .)
    OUTPUT          reduce using rule 23 (portlist -> LPAREN ports RPAREN SEMICOLON .)
    INOUT           reduce using rule 23 (portlist -> LPAREN ports RPAREN SEMICOLON .)
    TRI             reduce using rule 23 (portlist -> LPAREN ports RPAREN SEMICOLON .)
    REG             reduce using rule 23 (portlist -> LPAREN ports RPAREN SEMICOLON .)
    WIRE            reduce using rule 23 (portlist -> LPAREN ports RPAREN SEMICOLON .)
    SIGNED          reduce using rule 23 (portlist -> LPAREN ports RPAREN SEMICOLON .)
    ENDMODULE       reduce using rule 23 (portlist -> LPAREN ports RPAREN SEMICOLON .)


state 260

    (41) ioport -> sigtypes . portname
    (42) ioport -> sigtypes . width portname
    (30) sigtypes -> sigtypes . sigtype
    (29) portname -> . ID
    (46) width -> . LBRACKET expression COLON expression RBRACKET
    (32) sigtype -> . INPUT
    (33) sigtype -> . OUTPUT
    (34) sigtype -> . INOUT
    (35) sigtype -> . TRI
    (36) sigtype -> . REG
    (37) sigtype -> . WIRE
    (38) sigtype -> . SIGNED

    ID              shift and go to state 34
    LBRACKET        shift and go to state 116
    INPUT           shift and go to state 37
    OUTPUT          shift and go to state 24
    INOUT           shift and go to state 25
    TRI             shift and go to state 36
    REG             shift and go to state 35
    WIRE            shift and go to state 26
    SIGNED          shift and go to state 29

    portname                       shift and go to state 388
    width                          shift and go to state 389
    sigtype                        shift and go to state 115

state 261

    (45) ioport -> portname .

    RPAREN          reduce using rule 45 (ioport -> portname .)
    COMMA           reduce using rule 45 (ioport -> portname .)


state 262

    (39) ioports -> ioports COMMA ioport .

    RPAREN          reduce using rule 39 (ioports -> ioports COMMA ioport .)
    COMMA           reduce using rule 39 (ioports -> ioports COMMA ioport .)


state 263

    (24) portlist -> LPAREN ioports RPAREN SEMICOLON .

    GENERATE        reduce using rule 24 (portlist -> LPAREN ioports RPAREN SEMICOLON .)
    INTEGER         reduce using rule 24 (portlist -> LPAREN ioports RPAREN SEMICOLON .)
    REAL            reduce using rule 24 (portlist -> LPAREN ioports RPAREN SEMICOLON .)
    PARAMETER       reduce using rule 24 (portlist -> LPAREN ioports RPAREN SEMICOLON .)
    LOCALPARAM      reduce using rule 24 (portlist -> LPAREN ioports RPAREN SEMICOLON .)
    GENVAR          reduce using rule 24 (portlist -> LPAREN ioports RPAREN SEMICOLON .)
    ASSIGN          reduce using rule 24 (portlist -> LPAREN ioports RPAREN SEMICOLON .)
    ALWAYS          reduce using rule 24 (portlist -> LPAREN ioports RPAREN SEMICOLON .)
    INITIAL         reduce using rule 24 (portlist -> LPAREN ioports RPAREN SEMICOLON .)
    ID              reduce using rule 24 (portlist -> LPAREN ioports RPAREN SEMICOLON .)
    FUNCTION        reduce using rule 24 (portlist -> LPAREN ioports RPAREN SEMICOLON .)
    TASK            reduce using rule 24 (portlist -> LPAREN ioports RPAREN SEMICOLON .)
    LPAREN          reduce using rule 24 (portlist -> LPAREN ioports RPAREN SEMICOLON .)
    INPUT           reduce using rule 24 (portlist -> LPAREN ioports RPAREN SEMICOLON .)
    OUTPUT          reduce using rule 24 (portlist -> LPAREN ioports RPAREN SEMICOLON .)
    INOUT           reduce using rule 24 (portlist -> LPAREN ioports RPAREN SEMICOLON .)
    TRI             reduce using rule 24 (portlist -> LPAREN ioports RPAREN SEMICOLON .)
    REG             reduce using rule 24 (portlist -> LPAREN ioports RPAREN SEMICOLON .)
    WIRE            reduce using rule 24 (portlist -> LPAREN ioports RPAREN SEMICOLON .)
    SIGNED          reduce using rule 24 (portlist -> LPAREN ioports RPAREN SEMICOLON .)
    ENDMODULE       reduce using rule 24 (portlist -> LPAREN ioports RPAREN SEMICOLON .)


state 264

    (298) genvarlist -> genvarlist COMMA . genvar
    (300) genvar -> . ID

    ID              shift and go to state 125

    genvar                         shift and go to state 390

state 265

    (297) genvardecl -> GENVAR genvarlist SEMICOLON .

    END             reduce using rule 297 (genvardecl -> GENVAR genvarlist SEMICOLON .)
    IF              reduce using rule 297 (genvardecl -> GENVAR genvarlist SEMICOLON .)
    FOR             reduce using rule 297 (genvardecl -> GENVAR genvarlist SEMICOLON .)
    INTEGER         reduce using rule 297 (genvardecl -> GENVAR genvarlist SEMICOLON .)
    REAL            reduce using rule 297 (genvardecl -> GENVAR genvarlist SEMICOLON .)
    PARAMETER       reduce using rule 297 (genvardecl -> GENVAR genvarlist SEMICOLON .)
    LOCALPARAM      reduce using rule 297 (genvardecl -> GENVAR genvarlist SEMICOLON .)
    GENVAR          reduce using rule 297 (genvardecl -> GENVAR genvarlist SEMICOLON .)
    ASSIGN          reduce using rule 297 (genvardecl -> GENVAR genvarlist SEMICOLON .)
    ALWAYS          reduce using rule 297 (genvardecl -> GENVAR genvarlist SEMICOLON .)
    INITIAL         reduce using rule 297 (genvardecl -> GENVAR genvarlist SEMICOLON .)
    ID              reduce using rule 297 (genvardecl -> GENVAR genvarlist SEMICOLON .)
    FUNCTION        reduce using rule 297 (genvardecl -> GENVAR genvarlist SEMICOLON .)
    TASK            reduce using rule 297 (genvardecl -> GENVAR genvarlist SEMICOLON .)
    LPAREN          reduce using rule 297 (genvardecl -> GENVAR genvarlist SEMICOLON .)
    INPUT           reduce using rule 297 (genvardecl -> GENVAR genvarlist SEMICOLON .)
    OUTPUT          reduce using rule 297 (genvardecl -> GENVAR genvarlist SEMICOLON .)
    INOUT           reduce using rule 297 (genvardecl -> GENVAR genvarlist SEMICOLON .)
    TRI             reduce using rule 297 (genvardecl -> GENVAR genvarlist SEMICOLON .)
    REG             reduce using rule 297 (genvardecl -> GENVAR genvarlist SEMICOLON .)
    WIRE            reduce using rule 297 (genvardecl -> GENVAR genvarlist SEMICOLON .)
    SIGNED          reduce using rule 297 (genvardecl -> GENVAR genvarlist SEMICOLON .)
    ENDGENERATE     reduce using rule 297 (genvardecl -> GENVAR genvarlist SEMICOLON .)
    ELSE            reduce using rule 297 (genvardecl -> GENVAR genvarlist SEMICOLON .)
    ENDMODULE       reduce using rule 297 (genvardecl -> GENVAR genvarlist SEMICOLON .)
    GENERATE        reduce using rule 297 (genvardecl -> GENVAR genvarlist SEMICOLON .)


state 266

    (326) function -> FUNCTION ID SEMICOLON . function_statement ENDFUNCTION
    (327) function_statement -> . funcvardecls function_calc
    (328) funcvardecls -> . funcvardecls funcvardecl
    (329) funcvardecls -> . funcvardecl
    (330) funcvardecl -> . decl
    (331) funcvardecl -> . integerdecl
    (67) decl -> . sigtypes declnamelist SEMICOLON
    (68) decl -> . sigtypes width declnamelist SEMICOLON
    (77) integerdecl -> . INTEGER integernamelist SEMICOLON
    (78) integerdecl -> . INTEGER SIGNED integernamelist SEMICOLON
    (30) sigtypes -> . sigtypes sigtype
    (31) sigtypes -> . sigtype
    (32) sigtype -> . INPUT
    (33) sigtype -> . OUTPUT
    (34) sigtype -> . INOUT
    (35) sigtype -> . TRI
    (36) sigtype -> . REG
    (37) sigtype -> . WIRE
    (38) sigtype -> . SIGNED

    INTEGER         shift and go to state 69
    INPUT           shift and go to state 37
    OUTPUT          shift and go to state 24
    INOUT           shift and go to state 25
    TRI             shift and go to state 36
    REG             shift and go to state 35
    WIRE            shift and go to state 26
    SIGNED          shift and go to state 29

    funcvardecl                    shift and go to state 392
    sigtypes                       shift and go to state 394
    function_statement             shift and go to state 391
    funcvardecls                   shift and go to state 393
    decl                           shift and go to state 395
    integerdecl                    shift and go to state 396
    sigtype                        shift and go to state 33

state 267

    (325) function -> FUNCTION width ID . SEMICOLON function_statement ENDFUNCTION

    SEMICOLON       shift and go to state 397


state 268

    (273) wait_statement -> WAIT LPAREN . cond RPAREN waitcontent_statement
    (248) cond -> . expression
    (116) expression -> . MINUS expression
    (117) expression -> . PLUS expression
    (118) expression -> . LNOT expression
    (119) expression -> . NOT expression
    (120) expression -> . AND expression
    (121) expression -> . NAND expression
    (122) expression -> . NOR expression
    (123) expression -> . OR expression
    (124) expression -> . XOR expression
    (125) expression -> . XNOR expression
    (126) expression -> . expression POWER expression
    (127) expression -> . expression TIMES expression
    (128) expression -> . expression DIVIDE expression
    (129) expression -> . expression MOD expression
    (130) expression -> . expression PLUS expression
    (131) expression -> . expression MINUS expression
    (132) expression -> . expression LSHIFT expression
    (133) expression -> . expression RSHIFT expression
    (134) expression -> . expression LSHIFTA expression
    (135) expression -> . expression RSHIFTA expression
    (136) expression -> . expression LT expression
    (137) expression -> . expression GT expression
    (138) expression -> . expression LE expression
    (139) expression -> . expression GE expression
    (140) expression -> . expression EQ expression
    (141) expression -> . expression NE expression
    (142) expression -> . expression EQL expression
    (143) expression -> . expression NEL expression
    (144) expression -> . expression AND expression
    (145) expression -> . expression XOR expression
    (146) expression -> . expression XNOR expression
    (147) expression -> . expression OR expression
    (148) expression -> . expression LAND expression
    (149) expression -> . expression LOR expression
    (150) expression -> . expression COND expression COLON expression
    (151) expression -> . LPAREN expression RPAREN
    (152) expression -> . concat
    (153) expression -> . repeat
    (154) expression -> . partselect
    (155) expression -> . pointer
    (156) expression -> . functioncall
    (157) expression -> . systemcall
    (158) expression -> . identifier
    (159) expression -> . const_expression
    (160) concat -> . LBRACE concatlist RBRACE
    (163) repeat -> . LBRACE expression concat RBRACE
    (164) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (165) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (166) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (167) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (168) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (169) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (170) pointer -> . identifier LBRACKET expression RBRACKET
    (171) pointer -> . pointer LBRACKET expression RBRACKET
    (339) functioncall -> . identifier LPAREN func_args RPAREN
    (319) systemcall -> . DOLLER ID
    (320) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (357) identifier -> . ID
    (358) identifier -> . scope ID
    (172) const_expression -> . intnumber
    (173) const_expression -> . floatnumber
    (174) const_expression -> . stringliteral
    (359) scope -> . identifier DOT
    (360) scope -> . pointer DOT
    (176) intnumber -> . INTNUMBER_DEC
    (177) intnumber -> . SIGNED_INTNUMBER_DEC
    (178) intnumber -> . INTNUMBER_BIN
    (179) intnumber -> . SIGNED_INTNUMBER_BIN
    (180) intnumber -> . INTNUMBER_OCT
    (181) intnumber -> . SIGNED_INTNUMBER_OCT
    (182) intnumber -> . INTNUMBER_HEX
    (183) intnumber -> . SIGNED_INTNUMBER_HEX
    (175) floatnumber -> . FLOATNUMBER
    (184) stringliteral -> . STRING_LITERAL

    MINUS           shift and go to state 97
    PLUS            shift and go to state 89
    LNOT            shift and go to state 95
    NOT             shift and go to state 78
    AND             shift and go to state 91
    NAND            shift and go to state 98
    NOR             shift and go to state 76
    OR              shift and go to state 105
    XOR             shift and go to state 82
    XNOR            shift and go to state 87
    LPAREN          shift and go to state 96
    LBRACE          shift and go to state 77
    DOLLER          shift and go to state 100
    ID              shift and go to state 85
    INTNUMBER_DEC   shift and go to state 79
    SIGNED_INTNUMBER_DEC shift and go to state 101
    INTNUMBER_BIN   shift and go to state 111
    SIGNED_INTNUMBER_BIN shift and go to state 112
    INTNUMBER_OCT   shift and go to state 86
    SIGNED_INTNUMBER_OCT shift and go to state 106
    INTNUMBER_HEX   shift and go to state 93
    SIGNED_INTNUMBER_HEX shift and go to state 83
    FLOATNUMBER     shift and go to state 102
    STRING_LITERAL  shift and go to state 107

    stringliteral                  shift and go to state 99
    intnumber                      shift and go to state 81
    expression                     shift and go to state 398
    repeat                         shift and go to state 108
    partselect                     shift and go to state 103
    identifier                     shift and go to state 104
    cond                           shift and go to state 399
    pointer                        shift and go to state 80
    functioncall                   shift and go to state 94
    scope                          shift and go to state 84
    systemcall                     shift and go to state 109
    const_expression               shift and go to state 110
    concat                         shift and go to state 88
    floatnumber                    shift and go to state 90

state 269

    (364) single_statement -> disable SEMICOLON .

    JOIN            reduce using rule 364 (single_statement -> disable SEMICOLON .)
    IF              reduce using rule 364 (single_statement -> disable SEMICOLON .)
    CASE            reduce using rule 364 (single_statement -> disable SEMICOLON .)
    FOR             reduce using rule 364 (single_statement -> disable SEMICOLON .)
    WHILE           reduce using rule 364 (single_statement -> disable SEMICOLON .)
    WAIT            reduce using rule 364 (single_statement -> disable SEMICOLON .)
    FOREVER         reduce using rule 364 (single_statement -> disable SEMICOLON .)
    BEGIN           reduce using rule 364 (single_statement -> disable SEMICOLON .)
    FORK            reduce using rule 364 (single_statement -> disable SEMICOLON .)
    DELAY           reduce using rule 364 (single_statement -> disable SEMICOLON .)
    AT              reduce using rule 364 (single_statement -> disable SEMICOLON .)
    DOLLER          reduce using rule 364 (single_statement -> disable SEMICOLON .)
    DISABLE         reduce using rule 364 (single_statement -> disable SEMICOLON .)
    LBRACE          reduce using rule 364 (single_statement -> disable SEMICOLON .)
    ID              reduce using rule 364 (single_statement -> disable SEMICOLON .)
    SEMICOLON       reduce using rule 364 (single_statement -> disable SEMICOLON .)
    ENDMODULE       reduce using rule 364 (single_statement -> disable SEMICOLON .)
    GENERATE        reduce using rule 364 (single_statement -> disable SEMICOLON .)
    INTEGER         reduce using rule 364 (single_statement -> disable SEMICOLON .)
    REAL            reduce using rule 364 (single_statement -> disable SEMICOLON .)
    PARAMETER       reduce using rule 364 (single_statement -> disable SEMICOLON .)
    LOCALPARAM      reduce using rule 364 (single_statement -> disable SEMICOLON .)
    GENVAR          reduce using rule 364 (single_statement -> disable SEMICOLON .)
    ASSIGN          reduce using rule 364 (single_statement -> disable SEMICOLON .)
    ALWAYS          reduce using rule 364 (single_statement -> disable SEMICOLON .)
    INITIAL         reduce using rule 364 (single_statement -> disable SEMICOLON .)
    FUNCTION        reduce using rule 364 (single_statement -> disable SEMICOLON .)
    TASK            reduce using rule 364 (single_statement -> disable SEMICOLON .)
    LPAREN          reduce using rule 364 (single_statement -> disable SEMICOLON .)
    INPUT           reduce using rule 364 (single_statement -> disable SEMICOLON .)
    OUTPUT          reduce using rule 364 (single_statement -> disable SEMICOLON .)
    INOUT           reduce using rule 364 (single_statement -> disable SEMICOLON .)
    TRI             reduce using rule 364 (single_statement -> disable SEMICOLON .)
    REG             reduce using rule 364 (single_statement -> disable SEMICOLON .)
    WIRE            reduce using rule 364 (single_statement -> disable SEMICOLON .)
    SIGNED          reduce using rule 364 (single_statement -> disable SEMICOLON .)
    ENDGENERATE     reduce using rule 364 (single_statement -> disable SEMICOLON .)
    ELSE            reduce using rule 364 (single_statement -> disable SEMICOLON .)
    END             reduce using rule 364 (single_statement -> disable SEMICOLON .)
    ENDCASE         reduce using rule 364 (single_statement -> disable SEMICOLON .)
    DEFAULT         reduce using rule 364 (single_statement -> disable SEMICOLON .)
    MINUS           reduce using rule 364 (single_statement -> disable SEMICOLON .)
    PLUS            reduce using rule 364 (single_statement -> disable SEMICOLON .)
    LNOT            reduce using rule 364 (single_statement -> disable SEMICOLON .)
    NOT             reduce using rule 364 (single_statement -> disable SEMICOLON .)
    AND             reduce using rule 364 (single_statement -> disable SEMICOLON .)
    NAND            reduce using rule 364 (single_statement -> disable SEMICOLON .)
    NOR             reduce using rule 364 (single_statement -> disable SEMICOLON .)
    OR              reduce using rule 364 (single_statement -> disable SEMICOLON .)
    XOR             reduce using rule 364 (single_statement -> disable SEMICOLON .)
    XNOR            reduce using rule 364 (single_statement -> disable SEMICOLON .)
    INTNUMBER_DEC   reduce using rule 364 (single_statement -> disable SEMICOLON .)
    SIGNED_INTNUMBER_DEC reduce using rule 364 (single_statement -> disable SEMICOLON .)
    INTNUMBER_BIN   reduce using rule 364 (single_statement -> disable SEMICOLON .)
    SIGNED_INTNUMBER_BIN reduce using rule 364 (single_statement -> disable SEMICOLON .)
    INTNUMBER_OCT   reduce using rule 364 (single_statement -> disable SEMICOLON .)
    SIGNED_INTNUMBER_OCT reduce using rule 364 (single_statement -> disable SEMICOLON .)
    INTNUMBER_HEX   reduce using rule 364 (single_statement -> disable SEMICOLON .)
    SIGNED_INTNUMBER_HEX reduce using rule 364 (single_statement -> disable SEMICOLON .)
    FLOATNUMBER     reduce using rule 364 (single_statement -> disable SEMICOLON .)
    STRING_LITERAL  reduce using rule 364 (single_statement -> disable SEMICOLON .)
    ENDFUNCTION     reduce using rule 364 (single_statement -> disable SEMICOLON .)
    ENDTASK         reduce using rule 364 (single_statement -> disable SEMICOLON .)


state 270

    (262) case_statement -> CASE LPAREN . case_comp RPAREN casecontent_statements ENDCASE
    (263) case_comp -> . expression
    (116) expression -> . MINUS expression
    (117) expression -> . PLUS expression
    (118) expression -> . LNOT expression
    (119) expression -> . NOT expression
    (120) expression -> . AND expression
    (121) expression -> . NAND expression
    (122) expression -> . NOR expression
    (123) expression -> . OR expression
    (124) expression -> . XOR expression
    (125) expression -> . XNOR expression
    (126) expression -> . expression POWER expression
    (127) expression -> . expression TIMES expression
    (128) expression -> . expression DIVIDE expression
    (129) expression -> . expression MOD expression
    (130) expression -> . expression PLUS expression
    (131) expression -> . expression MINUS expression
    (132) expression -> . expression LSHIFT expression
    (133) expression -> . expression RSHIFT expression
    (134) expression -> . expression LSHIFTA expression
    (135) expression -> . expression RSHIFTA expression
    (136) expression -> . expression LT expression
    (137) expression -> . expression GT expression
    (138) expression -> . expression LE expression
    (139) expression -> . expression GE expression
    (140) expression -> . expression EQ expression
    (141) expression -> . expression NE expression
    (142) expression -> . expression EQL expression
    (143) expression -> . expression NEL expression
    (144) expression -> . expression AND expression
    (145) expression -> . expression XOR expression
    (146) expression -> . expression XNOR expression
    (147) expression -> . expression OR expression
    (148) expression -> . expression LAND expression
    (149) expression -> . expression LOR expression
    (150) expression -> . expression COND expression COLON expression
    (151) expression -> . LPAREN expression RPAREN
    (152) expression -> . concat
    (153) expression -> . repeat
    (154) expression -> . partselect
    (155) expression -> . pointer
    (156) expression -> . functioncall
    (157) expression -> . systemcall
    (158) expression -> . identifier
    (159) expression -> . const_expression
    (160) concat -> . LBRACE concatlist RBRACE
    (163) repeat -> . LBRACE expression concat RBRACE
    (164) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (165) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (166) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (167) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (168) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (169) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (170) pointer -> . identifier LBRACKET expression RBRACKET
    (171) pointer -> . pointer LBRACKET expression RBRACKET
    (339) functioncall -> . identifier LPAREN func_args RPAREN
    (319) systemcall -> . DOLLER ID
    (320) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (357) identifier -> . ID
    (358) identifier -> . scope ID
    (172) const_expression -> . intnumber
    (173) const_expression -> . floatnumber
    (174) const_expression -> . stringliteral
    (359) scope -> . identifier DOT
    (360) scope -> . pointer DOT
    (176) intnumber -> . INTNUMBER_DEC
    (177) intnumber -> . SIGNED_INTNUMBER_DEC
    (178) intnumber -> . INTNUMBER_BIN
    (179) intnumber -> . SIGNED_INTNUMBER_BIN
    (180) intnumber -> . INTNUMBER_OCT
    (181) intnumber -> . SIGNED_INTNUMBER_OCT
    (182) intnumber -> . INTNUMBER_HEX
    (183) intnumber -> . SIGNED_INTNUMBER_HEX
    (175) floatnumber -> . FLOATNUMBER
    (184) stringliteral -> . STRING_LITERAL

    MINUS           shift and go to state 97
    PLUS            shift and go to state 89
    LNOT            shift and go to state 95
    NOT             shift and go to state 78
    AND             shift and go to state 91
    NAND            shift and go to state 98
    NOR             shift and go to state 76
    OR              shift and go to state 105
    XOR             shift and go to state 82
    XNOR            shift and go to state 87
    LPAREN          shift and go to state 96
    LBRACE          shift and go to state 77
    DOLLER          shift and go to state 100
    ID              shift and go to state 85
    INTNUMBER_DEC   shift and go to state 79
    SIGNED_INTNUMBER_DEC shift and go to state 101
    INTNUMBER_BIN   shift and go to state 111
    SIGNED_INTNUMBER_BIN shift and go to state 112
    INTNUMBER_OCT   shift and go to state 86
    SIGNED_INTNUMBER_OCT shift and go to state 106
    INTNUMBER_HEX   shift and go to state 93
    SIGNED_INTNUMBER_HEX shift and go to state 83
    FLOATNUMBER     shift and go to state 102
    STRING_LITERAL  shift and go to state 107

    stringliteral                  shift and go to state 99
    intnumber                      shift and go to state 81
    expression                     shift and go to state 400
    repeat                         shift and go to state 108
    case_comp                      shift and go to state 401
    partselect                     shift and go to state 103
    identifier                     shift and go to state 104
    pointer                        shift and go to state 80
    functioncall                   shift and go to state 94
    scope                          shift and go to state 84
    systemcall                     shift and go to state 109
    const_expression               shift and go to state 110
    concat                         shift and go to state 88
    floatnumber                    shift and go to state 90

state 271

    (230) block_statements -> block_statement .

    END             reduce using rule 230 (block_statements -> block_statement .)
    IF              reduce using rule 230 (block_statements -> block_statement .)
    CASE            reduce using rule 230 (block_statements -> block_statement .)
    FOR             reduce using rule 230 (block_statements -> block_statement .)
    WHILE           reduce using rule 230 (block_statements -> block_statement .)
    WAIT            reduce using rule 230 (block_statements -> block_statement .)
    FOREVER         reduce using rule 230 (block_statements -> block_statement .)
    BEGIN           reduce using rule 230 (block_statements -> block_statement .)
    FORK            reduce using rule 230 (block_statements -> block_statement .)
    DELAY           reduce using rule 230 (block_statements -> block_statement .)
    AT              reduce using rule 230 (block_statements -> block_statement .)
    DOLLER          reduce using rule 230 (block_statements -> block_statement .)
    DISABLE         reduce using rule 230 (block_statements -> block_statement .)
    LBRACE          reduce using rule 230 (block_statements -> block_statement .)
    ID              reduce using rule 230 (block_statements -> block_statement .)
    SEMICOLON       reduce using rule 230 (block_statements -> block_statement .)
    JOIN            reduce using rule 230 (block_statements -> block_statement .)


state 272

    (242) parallelblock -> FORK block_statements . JOIN
    (229) block_statements -> block_statements . block_statement
    (231) block_statement -> . basic_statement
    (205) basic_statement -> . if_statement
    (206) basic_statement -> . case_statement
    (207) basic_statement -> . for_statement
    (208) basic_statement -> . while_statement
    (209) basic_statement -> . event_statement
    (210) basic_statement -> . wait_statement
    (211) basic_statement -> . forever_statement
    (212) basic_statement -> . block
    (213) basic_statement -> . namedblock
    (214) basic_statement -> . parallelblock
    (215) basic_statement -> . blocking_substitution
    (216) basic_statement -> . nonblocking_substitution
    (217) basic_statement -> . single_statement
    (244) if_statement -> . IF LPAREN cond RPAREN true_statement ELSE else_statement
    (245) if_statement -> . IF LPAREN cond RPAREN true_statement
    (246) if_statement -> . delays IF LPAREN cond RPAREN true_statement ELSE else_statement
    (247) if_statement -> . delays IF LPAREN cond RPAREN true_statement
    (262) case_statement -> . CASE LPAREN case_comp RPAREN casecontent_statements ENDCASE
    (252) for_statement -> . FOR LPAREN forpre forcond forpost RPAREN forcontent_statement
    (260) while_statement -> . WHILE LPAREN cond RPAREN whilecontent_statement
    (272) event_statement -> . senslist SEMICOLON
    (273) wait_statement -> . WAIT LPAREN cond RPAREN waitcontent_statement
    (276) forever_statement -> . FOREVER basic_statement
    (227) block -> . BEGIN block_statements END
    (228) block -> . BEGIN END
    (232) namedblock -> . BEGIN COLON ID namedblock_statements END
    (233) namedblock -> . BEGIN COLON ID END
    (242) parallelblock -> . FORK block_statements JOIN
    (243) parallelblock -> . FORK JOIN
    (219) blocking_substitution -> . delays lvalue EQUALS delays rvalue SEMICOLON
    (221) nonblocking_substitution -> . delays lvalue LE delays rvalue SEMICOLON
    (362) single_statement -> . DELAY expression SEMICOLON
    (363) single_statement -> . systemcall SEMICOLON
    (364) single_statement -> . disable SEMICOLON
    (222) delays -> . DELAY LPAREN expression RPAREN
    (223) delays -> . DELAY identifier
    (224) delays -> . DELAY intnumber
    (225) delays -> . DELAY floatnumber
    (226) delays -> . empty
    (186) senslist -> . AT LPAREN edgesigs RPAREN
    (193) senslist -> . empty
    (194) senslist -> . AT levelsig
    (195) senslist -> . AT LPAREN levelsigs RPAREN
    (203) senslist -> . AT TIMES
    (204) senslist -> . AT LPAREN TIMES RPAREN
    (319) systemcall -> . DOLLER ID
    (320) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (361) disable -> . DISABLE ID
    (365) empty -> .

  ! shift/reduce conflict for IF resolved as shift
    JOIN            shift and go to state 403
    IF              shift and go to state 150
    CASE            shift and go to state 136
    FOR             shift and go to state 144
    WHILE           shift and go to state 146
    WAIT            shift and go to state 131
    FOREVER         shift and go to state 143
    BEGIN           shift and go to state 153
    FORK            shift and go to state 138
    DELAY           shift and go to state 147
    AT              shift and go to state 159
    DOLLER          shift and go to state 100
    DISABLE         shift and go to state 155
    LBRACE          reduce using rule 365 (empty -> .)
    ID              reduce using rule 365 (empty -> .)
    SEMICOLON       reduce using rule 365 (empty -> .)

  ! IF              [ reduce using rule 365 (empty -> .) ]

    parallelblock                  shift and go to state 129
    for_statement                  shift and go to state 130
    empty                          shift and go to state 157
    if_statement                   shift and go to state 132
    while_statement                shift and go to state 148
    blocking_substitution          shift and go to state 137
    systemcall                     shift and go to state 158
    basic_statement                shift and go to state 274
    event_statement                shift and go to state 135
    wait_statement                 shift and go to state 151
    forever_statement              shift and go to state 152
    case_statement                 shift and go to state 139
    disable                        shift and go to state 133
    senslist                       shift and go to state 154
    single_statement               shift and go to state 140
    block                          shift and go to state 156
    delays                         shift and go to state 141
    nonblocking_substitution       shift and go to state 142
    block_statement                shift and go to state 402
    namedblock                     shift and go to state 145

state 273

    (243) parallelblock -> FORK JOIN .

    ENDMODULE       reduce using rule 243 (parallelblock -> FORK JOIN .)
    GENERATE        reduce using rule 243 (parallelblock -> FORK JOIN .)
    INTEGER         reduce using rule 243 (parallelblock -> FORK JOIN .)
    REAL            reduce using rule 243 (parallelblock -> FORK JOIN .)
    PARAMETER       reduce using rule 243 (parallelblock -> FORK JOIN .)
    LOCALPARAM      reduce using rule 243 (parallelblock -> FORK JOIN .)
    GENVAR          reduce using rule 243 (parallelblock -> FORK JOIN .)
    ASSIGN          reduce using rule 243 (parallelblock -> FORK JOIN .)
    ALWAYS          reduce using rule 243 (parallelblock -> FORK JOIN .)
    INITIAL         reduce using rule 243 (parallelblock -> FORK JOIN .)
    ID              reduce using rule 243 (parallelblock -> FORK JOIN .)
    FUNCTION        reduce using rule 243 (parallelblock -> FORK JOIN .)
    TASK            reduce using rule 243 (parallelblock -> FORK JOIN .)
    LPAREN          reduce using rule 243 (parallelblock -> FORK JOIN .)
    INPUT           reduce using rule 243 (parallelblock -> FORK JOIN .)
    OUTPUT          reduce using rule 243 (parallelblock -> FORK JOIN .)
    INOUT           reduce using rule 243 (parallelblock -> FORK JOIN .)
    TRI             reduce using rule 243 (parallelblock -> FORK JOIN .)
    REG             reduce using rule 243 (parallelblock -> FORK JOIN .)
    WIRE            reduce using rule 243 (parallelblock -> FORK JOIN .)
    SIGNED          reduce using rule 243 (parallelblock -> FORK JOIN .)
    ENDGENERATE     reduce using rule 243 (parallelblock -> FORK JOIN .)
    IF              reduce using rule 243 (parallelblock -> FORK JOIN .)
    FOR             reduce using rule 243 (parallelblock -> FORK JOIN .)
    ELSE            reduce using rule 243 (parallelblock -> FORK JOIN .)
    END             reduce using rule 243 (parallelblock -> FORK JOIN .)
    JOIN            reduce using rule 243 (parallelblock -> FORK JOIN .)
    CASE            reduce using rule 243 (parallelblock -> FORK JOIN .)
    WHILE           reduce using rule 243 (parallelblock -> FORK JOIN .)
    WAIT            reduce using rule 243 (parallelblock -> FORK JOIN .)
    FOREVER         reduce using rule 243 (parallelblock -> FORK JOIN .)
    BEGIN           reduce using rule 243 (parallelblock -> FORK JOIN .)
    FORK            reduce using rule 243 (parallelblock -> FORK JOIN .)
    DELAY           reduce using rule 243 (parallelblock -> FORK JOIN .)
    AT              reduce using rule 243 (parallelblock -> FORK JOIN .)
    DOLLER          reduce using rule 243 (parallelblock -> FORK JOIN .)
    DISABLE         reduce using rule 243 (parallelblock -> FORK JOIN .)
    LBRACE          reduce using rule 243 (parallelblock -> FORK JOIN .)
    SEMICOLON       reduce using rule 243 (parallelblock -> FORK JOIN .)
    ENDFUNCTION     reduce using rule 243 (parallelblock -> FORK JOIN .)
    ENDTASK         reduce using rule 243 (parallelblock -> FORK JOIN .)
    ENDCASE         reduce using rule 243 (parallelblock -> FORK JOIN .)
    DEFAULT         reduce using rule 243 (parallelblock -> FORK JOIN .)
    MINUS           reduce using rule 243 (parallelblock -> FORK JOIN .)
    PLUS            reduce using rule 243 (parallelblock -> FORK JOIN .)
    LNOT            reduce using rule 243 (parallelblock -> FORK JOIN .)
    NOT             reduce using rule 243 (parallelblock -> FORK JOIN .)
    AND             reduce using rule 243 (parallelblock -> FORK JOIN .)
    NAND            reduce using rule 243 (parallelblock -> FORK JOIN .)
    NOR             reduce using rule 243 (parallelblock -> FORK JOIN .)
    OR              reduce using rule 243 (parallelblock -> FORK JOIN .)
    XOR             reduce using rule 243 (parallelblock -> FORK JOIN .)
    XNOR            reduce using rule 243 (parallelblock -> FORK JOIN .)
    INTNUMBER_DEC   reduce using rule 243 (parallelblock -> FORK JOIN .)
    SIGNED_INTNUMBER_DEC reduce using rule 243 (parallelblock -> FORK JOIN .)
    INTNUMBER_BIN   reduce using rule 243 (parallelblock -> FORK JOIN .)
    SIGNED_INTNUMBER_BIN reduce using rule 243 (parallelblock -> FORK JOIN .)
    INTNUMBER_OCT   reduce using rule 243 (parallelblock -> FORK JOIN .)
    SIGNED_INTNUMBER_OCT reduce using rule 243 (parallelblock -> FORK JOIN .)
    INTNUMBER_HEX   reduce using rule 243 (parallelblock -> FORK JOIN .)
    SIGNED_INTNUMBER_HEX reduce using rule 243 (parallelblock -> FORK JOIN .)
    FLOATNUMBER     reduce using rule 243 (parallelblock -> FORK JOIN .)
    STRING_LITERAL  reduce using rule 243 (parallelblock -> FORK JOIN .)


state 274

    (231) block_statement -> basic_statement .

    END             reduce using rule 231 (block_statement -> basic_statement .)
    IF              reduce using rule 231 (block_statement -> basic_statement .)
    CASE            reduce using rule 231 (block_statement -> basic_statement .)
    FOR             reduce using rule 231 (block_statement -> basic_statement .)
    WHILE           reduce using rule 231 (block_statement -> basic_statement .)
    WAIT            reduce using rule 231 (block_statement -> basic_statement .)
    FOREVER         reduce using rule 231 (block_statement -> basic_statement .)
    BEGIN           reduce using rule 231 (block_statement -> basic_statement .)
    FORK            reduce using rule 231 (block_statement -> basic_statement .)
    DELAY           reduce using rule 231 (block_statement -> basic_statement .)
    AT              reduce using rule 231 (block_statement -> basic_statement .)
    DOLLER          reduce using rule 231 (block_statement -> basic_statement .)
    DISABLE         reduce using rule 231 (block_statement -> basic_statement .)
    LBRACE          reduce using rule 231 (block_statement -> basic_statement .)
    ID              reduce using rule 231 (block_statement -> basic_statement .)
    SEMICOLON       reduce using rule 231 (block_statement -> basic_statement .)
    JOIN            reduce using rule 231 (block_statement -> basic_statement .)


state 275

    (246) if_statement -> delays IF . LPAREN cond RPAREN true_statement ELSE else_statement
    (247) if_statement -> delays IF . LPAREN cond RPAREN true_statement

    LPAREN          shift and go to state 404


state 276

    (219) blocking_substitution -> delays lvalue . EQUALS delays rvalue SEMICOLON
    (221) nonblocking_substitution -> delays lvalue . LE delays rvalue SEMICOLON

    EQUALS          shift and go to state 406
    LE              shift and go to state 405


state 277

    (276) forever_statement -> FOREVER basic_statement .

    END             reduce using rule 276 (forever_statement -> FOREVER basic_statement .)
    IF              reduce using rule 276 (forever_statement -> FOREVER basic_statement .)
    CASE            reduce using rule 276 (forever_statement -> FOREVER basic_statement .)
    FOR             reduce using rule 276 (forever_statement -> FOREVER basic_statement .)
    WHILE           reduce using rule 276 (forever_statement -> FOREVER basic_statement .)
    WAIT            reduce using rule 276 (forever_statement -> FOREVER basic_statement .)
    FOREVER         reduce using rule 276 (forever_statement -> FOREVER basic_statement .)
    BEGIN           reduce using rule 276 (forever_statement -> FOREVER basic_statement .)
    FORK            reduce using rule 276 (forever_statement -> FOREVER basic_statement .)
    DELAY           reduce using rule 276 (forever_statement -> FOREVER basic_statement .)
    AT              reduce using rule 276 (forever_statement -> FOREVER basic_statement .)
    DOLLER          reduce using rule 276 (forever_statement -> FOREVER basic_statement .)
    DISABLE         reduce using rule 276 (forever_statement -> FOREVER basic_statement .)
    LBRACE          reduce using rule 276 (forever_statement -> FOREVER basic_statement .)
    ID              reduce using rule 276 (forever_statement -> FOREVER basic_statement .)
    SEMICOLON       reduce using rule 276 (forever_statement -> FOREVER basic_statement .)
    ENDMODULE       reduce using rule 276 (forever_statement -> FOREVER basic_statement .)
    GENERATE        reduce using rule 276 (forever_statement -> FOREVER basic_statement .)
    INTEGER         reduce using rule 276 (forever_statement -> FOREVER basic_statement .)
    REAL            reduce using rule 276 (forever_statement -> FOREVER basic_statement .)
    PARAMETER       reduce using rule 276 (forever_statement -> FOREVER basic_statement .)
    LOCALPARAM      reduce using rule 276 (forever_statement -> FOREVER basic_statement .)
    GENVAR          reduce using rule 276 (forever_statement -> FOREVER basic_statement .)
    ASSIGN          reduce using rule 276 (forever_statement -> FOREVER basic_statement .)
    ALWAYS          reduce using rule 276 (forever_statement -> FOREVER basic_statement .)
    INITIAL         reduce using rule 276 (forever_statement -> FOREVER basic_statement .)
    FUNCTION        reduce using rule 276 (forever_statement -> FOREVER basic_statement .)
    TASK            reduce using rule 276 (forever_statement -> FOREVER basic_statement .)
    LPAREN          reduce using rule 276 (forever_statement -> FOREVER basic_statement .)
    INPUT           reduce using rule 276 (forever_statement -> FOREVER basic_statement .)
    OUTPUT          reduce using rule 276 (forever_statement -> FOREVER basic_statement .)
    INOUT           reduce using rule 276 (forever_statement -> FOREVER basic_statement .)
    TRI             reduce using rule 276 (forever_statement -> FOREVER basic_statement .)
    REG             reduce using rule 276 (forever_statement -> FOREVER basic_statement .)
    WIRE            reduce using rule 276 (forever_statement -> FOREVER basic_statement .)
    SIGNED          reduce using rule 276 (forever_statement -> FOREVER basic_statement .)
    ENDGENERATE     reduce using rule 276 (forever_statement -> FOREVER basic_statement .)
    ELSE            reduce using rule 276 (forever_statement -> FOREVER basic_statement .)
    JOIN            reduce using rule 276 (forever_statement -> FOREVER basic_statement .)
    ENDFUNCTION     reduce using rule 276 (forever_statement -> FOREVER basic_statement .)
    ENDTASK         reduce using rule 276 (forever_statement -> FOREVER basic_statement .)
    ENDCASE         reduce using rule 276 (forever_statement -> FOREVER basic_statement .)
    DEFAULT         reduce using rule 276 (forever_statement -> FOREVER basic_statement .)
    MINUS           reduce using rule 276 (forever_statement -> FOREVER basic_statement .)
    PLUS            reduce using rule 276 (forever_statement -> FOREVER basic_statement .)
    LNOT            reduce using rule 276 (forever_statement -> FOREVER basic_statement .)
    NOT             reduce using rule 276 (forever_statement -> FOREVER basic_statement .)
    AND             reduce using rule 276 (forever_statement -> FOREVER basic_statement .)
    NAND            reduce using rule 276 (forever_statement -> FOREVER basic_statement .)
    NOR             reduce using rule 276 (forever_statement -> FOREVER basic_statement .)
    OR              reduce using rule 276 (forever_statement -> FOREVER basic_statement .)
    XOR             reduce using rule 276 (forever_statement -> FOREVER basic_statement .)
    XNOR            reduce using rule 276 (forever_statement -> FOREVER basic_statement .)
    INTNUMBER_DEC   reduce using rule 276 (forever_statement -> FOREVER basic_statement .)
    SIGNED_INTNUMBER_DEC reduce using rule 276 (forever_statement -> FOREVER basic_statement .)
    INTNUMBER_BIN   reduce using rule 276 (forever_statement -> FOREVER basic_statement .)
    SIGNED_INTNUMBER_BIN reduce using rule 276 (forever_statement -> FOREVER basic_statement .)
    INTNUMBER_OCT   reduce using rule 276 (forever_statement -> FOREVER basic_statement .)
    SIGNED_INTNUMBER_OCT reduce using rule 276 (forever_statement -> FOREVER basic_statement .)
    INTNUMBER_HEX   reduce using rule 276 (forever_statement -> FOREVER basic_statement .)
    SIGNED_INTNUMBER_HEX reduce using rule 276 (forever_statement -> FOREVER basic_statement .)
    FLOATNUMBER     reduce using rule 276 (forever_statement -> FOREVER basic_statement .)
    STRING_LITERAL  reduce using rule 276 (forever_statement -> FOREVER basic_statement .)


state 278

    (252) for_statement -> FOR LPAREN . forpre forcond forpost RPAREN forcontent_statement
    (253) forpre -> . blocking_substitution
    (254) forpre -> . SEMICOLON
    (219) blocking_substitution -> . delays lvalue EQUALS delays rvalue SEMICOLON
    (222) delays -> . DELAY LPAREN expression RPAREN
    (223) delays -> . DELAY identifier
    (224) delays -> . DELAY intnumber
    (225) delays -> . DELAY floatnumber
    (226) delays -> . empty
    (365) empty -> .

    SEMICOLON       shift and go to state 408
    DELAY           shift and go to state 170
    LBRACE          reduce using rule 365 (empty -> .)
    ID              reduce using rule 365 (empty -> .)

    blocking_substitution          shift and go to state 407
    empty                          shift and go to state 163
    forpre                         shift and go to state 409
    delays                         shift and go to state 410

state 279

    (260) while_statement -> WHILE LPAREN . cond RPAREN whilecontent_statement
    (248) cond -> . expression
    (116) expression -> . MINUS expression
    (117) expression -> . PLUS expression
    (118) expression -> . LNOT expression
    (119) expression -> . NOT expression
    (120) expression -> . AND expression
    (121) expression -> . NAND expression
    (122) expression -> . NOR expression
    (123) expression -> . OR expression
    (124) expression -> . XOR expression
    (125) expression -> . XNOR expression
    (126) expression -> . expression POWER expression
    (127) expression -> . expression TIMES expression
    (128) expression -> . expression DIVIDE expression
    (129) expression -> . expression MOD expression
    (130) expression -> . expression PLUS expression
    (131) expression -> . expression MINUS expression
    (132) expression -> . expression LSHIFT expression
    (133) expression -> . expression RSHIFT expression
    (134) expression -> . expression LSHIFTA expression
    (135) expression -> . expression RSHIFTA expression
    (136) expression -> . expression LT expression
    (137) expression -> . expression GT expression
    (138) expression -> . expression LE expression
    (139) expression -> . expression GE expression
    (140) expression -> . expression EQ expression
    (141) expression -> . expression NE expression
    (142) expression -> . expression EQL expression
    (143) expression -> . expression NEL expression
    (144) expression -> . expression AND expression
    (145) expression -> . expression XOR expression
    (146) expression -> . expression XNOR expression
    (147) expression -> . expression OR expression
    (148) expression -> . expression LAND expression
    (149) expression -> . expression LOR expression
    (150) expression -> . expression COND expression COLON expression
    (151) expression -> . LPAREN expression RPAREN
    (152) expression -> . concat
    (153) expression -> . repeat
    (154) expression -> . partselect
    (155) expression -> . pointer
    (156) expression -> . functioncall
    (157) expression -> . systemcall
    (158) expression -> . identifier
    (159) expression -> . const_expression
    (160) concat -> . LBRACE concatlist RBRACE
    (163) repeat -> . LBRACE expression concat RBRACE
    (164) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (165) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (166) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (167) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (168) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (169) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (170) pointer -> . identifier LBRACKET expression RBRACKET
    (171) pointer -> . pointer LBRACKET expression RBRACKET
    (339) functioncall -> . identifier LPAREN func_args RPAREN
    (319) systemcall -> . DOLLER ID
    (320) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (357) identifier -> . ID
    (358) identifier -> . scope ID
    (172) const_expression -> . intnumber
    (173) const_expression -> . floatnumber
    (174) const_expression -> . stringliteral
    (359) scope -> . identifier DOT
    (360) scope -> . pointer DOT
    (176) intnumber -> . INTNUMBER_DEC
    (177) intnumber -> . SIGNED_INTNUMBER_DEC
    (178) intnumber -> . INTNUMBER_BIN
    (179) intnumber -> . SIGNED_INTNUMBER_BIN
    (180) intnumber -> . INTNUMBER_OCT
    (181) intnumber -> . SIGNED_INTNUMBER_OCT
    (182) intnumber -> . INTNUMBER_HEX
    (183) intnumber -> . SIGNED_INTNUMBER_HEX
    (175) floatnumber -> . FLOATNUMBER
    (184) stringliteral -> . STRING_LITERAL

    MINUS           shift and go to state 97
    PLUS            shift and go to state 89
    LNOT            shift and go to state 95
    NOT             shift and go to state 78
    AND             shift and go to state 91
    NAND            shift and go to state 98
    NOR             shift and go to state 76
    OR              shift and go to state 105
    XOR             shift and go to state 82
    XNOR            shift and go to state 87
    LPAREN          shift and go to state 96
    LBRACE          shift and go to state 77
    DOLLER          shift and go to state 100
    ID              shift and go to state 85
    INTNUMBER_DEC   shift and go to state 79
    SIGNED_INTNUMBER_DEC shift and go to state 101
    INTNUMBER_BIN   shift and go to state 111
    SIGNED_INTNUMBER_BIN shift and go to state 112
    INTNUMBER_OCT   shift and go to state 86
    SIGNED_INTNUMBER_OCT shift and go to state 106
    INTNUMBER_HEX   shift and go to state 93
    SIGNED_INTNUMBER_HEX shift and go to state 83
    FLOATNUMBER     shift and go to state 102
    STRING_LITERAL  shift and go to state 107

    stringliteral                  shift and go to state 99
    intnumber                      shift and go to state 81
    expression                     shift and go to state 398
    repeat                         shift and go to state 108
    cond                           shift and go to state 411
    identifier                     shift and go to state 104
    partselect                     shift and go to state 103
    pointer                        shift and go to state 80
    functioncall                   shift and go to state 94
    scope                          shift and go to state 84
    systemcall                     shift and go to state 109
    const_expression               shift and go to state 110
    concat                         shift and go to state 88
    floatnumber                    shift and go to state 90

state 280

    (223) delays -> DELAY identifier .
    (158) expression -> identifier .
    (164) partselect -> identifier . LBRACKET expression COLON expression RBRACKET
    (165) partselect -> identifier . LBRACKET expression PLUSCOLON expression RBRACKET
    (166) partselect -> identifier . LBRACKET expression MINUSCOLON expression RBRACKET
    (170) pointer -> identifier . LBRACKET expression RBRACKET
    (339) functioncall -> identifier . LPAREN func_args RPAREN
    (359) scope -> identifier . DOT

    IF              reduce using rule 223 (delays -> DELAY identifier .)
    LBRACE          reduce using rule 223 (delays -> DELAY identifier .)
    ID              reduce using rule 223 (delays -> DELAY identifier .)
    SEMICOLON       reduce using rule 158 (expression -> identifier .)
    POWER           reduce using rule 158 (expression -> identifier .)
    TIMES           reduce using rule 158 (expression -> identifier .)
    DIVIDE          reduce using rule 158 (expression -> identifier .)
    MOD             reduce using rule 158 (expression -> identifier .)
    PLUS            reduce using rule 158 (expression -> identifier .)
    MINUS           reduce using rule 158 (expression -> identifier .)
    LSHIFT          reduce using rule 158 (expression -> identifier .)
    RSHIFT          reduce using rule 158 (expression -> identifier .)
    LSHIFTA         reduce using rule 158 (expression -> identifier .)
    RSHIFTA         reduce using rule 158 (expression -> identifier .)
    LT              reduce using rule 158 (expression -> identifier .)
    GT              reduce using rule 158 (expression -> identifier .)
    LE              reduce using rule 158 (expression -> identifier .)
    GE              reduce using rule 158 (expression -> identifier .)
    EQ              reduce using rule 158 (expression -> identifier .)
    NE              reduce using rule 158 (expression -> identifier .)
    EQL             reduce using rule 158 (expression -> identifier .)
    NEL             reduce using rule 158 (expression -> identifier .)
    AND             reduce using rule 158 (expression -> identifier .)
    XOR             reduce using rule 158 (expression -> identifier .)
    XNOR            reduce using rule 158 (expression -> identifier .)
    OR              reduce using rule 158 (expression -> identifier .)
    LAND            reduce using rule 158 (expression -> identifier .)
    LOR             reduce using rule 158 (expression -> identifier .)
    COND            reduce using rule 158 (expression -> identifier .)
    LBRACKET        shift and go to state 254
    LPAREN          shift and go to state 253
    DOT             shift and go to state 252


state 281

    (224) delays -> DELAY intnumber .
    (172) const_expression -> intnumber .

    IF              reduce using rule 224 (delays -> DELAY intnumber .)
    LBRACE          reduce using rule 224 (delays -> DELAY intnumber .)
    ID              reduce using rule 224 (delays -> DELAY intnumber .)
    SEMICOLON       reduce using rule 172 (const_expression -> intnumber .)
    POWER           reduce using rule 172 (const_expression -> intnumber .)
    TIMES           reduce using rule 172 (const_expression -> intnumber .)
    DIVIDE          reduce using rule 172 (const_expression -> intnumber .)
    MOD             reduce using rule 172 (const_expression -> intnumber .)
    PLUS            reduce using rule 172 (const_expression -> intnumber .)
    MINUS           reduce using rule 172 (const_expression -> intnumber .)
    LSHIFT          reduce using rule 172 (const_expression -> intnumber .)
    RSHIFT          reduce using rule 172 (const_expression -> intnumber .)
    LSHIFTA         reduce using rule 172 (const_expression -> intnumber .)
    RSHIFTA         reduce using rule 172 (const_expression -> intnumber .)
    LT              reduce using rule 172 (const_expression -> intnumber .)
    GT              reduce using rule 172 (const_expression -> intnumber .)
    LE              reduce using rule 172 (const_expression -> intnumber .)
    GE              reduce using rule 172 (const_expression -> intnumber .)
    EQ              reduce using rule 172 (const_expression -> intnumber .)
    NE              reduce using rule 172 (const_expression -> intnumber .)
    EQL             reduce using rule 172 (const_expression -> intnumber .)
    NEL             reduce using rule 172 (const_expression -> intnumber .)
    AND             reduce using rule 172 (const_expression -> intnumber .)
    XOR             reduce using rule 172 (const_expression -> intnumber .)
    XNOR            reduce using rule 172 (const_expression -> intnumber .)
    OR              reduce using rule 172 (const_expression -> intnumber .)
    LAND            reduce using rule 172 (const_expression -> intnumber .)
    LOR             reduce using rule 172 (const_expression -> intnumber .)
    COND            reduce using rule 172 (const_expression -> intnumber .)


state 282

    (225) delays -> DELAY floatnumber .
    (173) const_expression -> floatnumber .

    IF              reduce using rule 225 (delays -> DELAY floatnumber .)
    LBRACE          reduce using rule 225 (delays -> DELAY floatnumber .)
    ID              reduce using rule 225 (delays -> DELAY floatnumber .)
    SEMICOLON       reduce using rule 173 (const_expression -> floatnumber .)
    POWER           reduce using rule 173 (const_expression -> floatnumber .)
    TIMES           reduce using rule 173 (const_expression -> floatnumber .)
    DIVIDE          reduce using rule 173 (const_expression -> floatnumber .)
    MOD             reduce using rule 173 (const_expression -> floatnumber .)
    PLUS            reduce using rule 173 (const_expression -> floatnumber .)
    MINUS           reduce using rule 173 (const_expression -> floatnumber .)
    LSHIFT          reduce using rule 173 (const_expression -> floatnumber .)
    RSHIFT          reduce using rule 173 (const_expression -> floatnumber .)
    LSHIFTA         reduce using rule 173 (const_expression -> floatnumber .)
    RSHIFTA         reduce using rule 173 (const_expression -> floatnumber .)
    LT              reduce using rule 173 (const_expression -> floatnumber .)
    GT              reduce using rule 173 (const_expression -> floatnumber .)
    LE              reduce using rule 173 (const_expression -> floatnumber .)
    GE              reduce using rule 173 (const_expression -> floatnumber .)
    EQ              reduce using rule 173 (const_expression -> floatnumber .)
    NE              reduce using rule 173 (const_expression -> floatnumber .)
    EQL             reduce using rule 173 (const_expression -> floatnumber .)
    NEL             reduce using rule 173 (const_expression -> floatnumber .)
    AND             reduce using rule 173 (const_expression -> floatnumber .)
    XOR             reduce using rule 173 (const_expression -> floatnumber .)
    XNOR            reduce using rule 173 (const_expression -> floatnumber .)
    OR              reduce using rule 173 (const_expression -> floatnumber .)
    LAND            reduce using rule 173 (const_expression -> floatnumber .)
    LOR             reduce using rule 173 (const_expression -> floatnumber .)
    COND            reduce using rule 173 (const_expression -> floatnumber .)


state 283

    (362) single_statement -> DELAY expression . SEMICOLON
    (126) expression -> expression . POWER expression
    (127) expression -> expression . TIMES expression
    (128) expression -> expression . DIVIDE expression
    (129) expression -> expression . MOD expression
    (130) expression -> expression . PLUS expression
    (131) expression -> expression . MINUS expression
    (132) expression -> expression . LSHIFT expression
    (133) expression -> expression . RSHIFT expression
    (134) expression -> expression . LSHIFTA expression
    (135) expression -> expression . RSHIFTA expression
    (136) expression -> expression . LT expression
    (137) expression -> expression . GT expression
    (138) expression -> expression . LE expression
    (139) expression -> expression . GE expression
    (140) expression -> expression . EQ expression
    (141) expression -> expression . NE expression
    (142) expression -> expression . EQL expression
    (143) expression -> expression . NEL expression
    (144) expression -> expression . AND expression
    (145) expression -> expression . XOR expression
    (146) expression -> expression . XNOR expression
    (147) expression -> expression . OR expression
    (148) expression -> expression . LAND expression
    (149) expression -> expression . LOR expression
    (150) expression -> expression . COND expression COLON expression

    SEMICOLON       shift and go to state 412
    POWER           shift and go to state 246
    TIMES           shift and go to state 349
    DIVIDE          shift and go to state 244
    MOD             shift and go to state 231
    PLUS            shift and go to state 240
    MINUS           shift and go to state 229
    LSHIFT          shift and go to state 243
    RSHIFT          shift and go to state 226
    LSHIFTA         shift and go to state 241
    RSHIFTA         shift and go to state 238
    LT              shift and go to state 235
    GT              shift and go to state 228
    LE              shift and go to state 222
    GE              shift and go to state 239
    EQ              shift and go to state 223
    NE              shift and go to state 225
    EQL             shift and go to state 245
    NEL             shift and go to state 242
    AND             shift and go to state 224
    XOR             shift and go to state 237
    XNOR            shift and go to state 232
    OR              shift and go to state 234
    LAND            shift and go to state 227
    LOR             shift and go to state 230
    COND            shift and go to state 233


state 284

    (222) delays -> DELAY LPAREN . expression RPAREN
    (151) expression -> LPAREN . expression RPAREN
    (116) expression -> . MINUS expression
    (117) expression -> . PLUS expression
    (118) expression -> . LNOT expression
    (119) expression -> . NOT expression
    (120) expression -> . AND expression
    (121) expression -> . NAND expression
    (122) expression -> . NOR expression
    (123) expression -> . OR expression
    (124) expression -> . XOR expression
    (125) expression -> . XNOR expression
    (126) expression -> . expression POWER expression
    (127) expression -> . expression TIMES expression
    (128) expression -> . expression DIVIDE expression
    (129) expression -> . expression MOD expression
    (130) expression -> . expression PLUS expression
    (131) expression -> . expression MINUS expression
    (132) expression -> . expression LSHIFT expression
    (133) expression -> . expression RSHIFT expression
    (134) expression -> . expression LSHIFTA expression
    (135) expression -> . expression RSHIFTA expression
    (136) expression -> . expression LT expression
    (137) expression -> . expression GT expression
    (138) expression -> . expression LE expression
    (139) expression -> . expression GE expression
    (140) expression -> . expression EQ expression
    (141) expression -> . expression NE expression
    (142) expression -> . expression EQL expression
    (143) expression -> . expression NEL expression
    (144) expression -> . expression AND expression
    (145) expression -> . expression XOR expression
    (146) expression -> . expression XNOR expression
    (147) expression -> . expression OR expression
    (148) expression -> . expression LAND expression
    (149) expression -> . expression LOR expression
    (150) expression -> . expression COND expression COLON expression
    (151) expression -> . LPAREN expression RPAREN
    (152) expression -> . concat
    (153) expression -> . repeat
    (154) expression -> . partselect
    (155) expression -> . pointer
    (156) expression -> . functioncall
    (157) expression -> . systemcall
    (158) expression -> . identifier
    (159) expression -> . const_expression
    (160) concat -> . LBRACE concatlist RBRACE
    (163) repeat -> . LBRACE expression concat RBRACE
    (164) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (165) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (166) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (167) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (168) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (169) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (170) pointer -> . identifier LBRACKET expression RBRACKET
    (171) pointer -> . pointer LBRACKET expression RBRACKET
    (339) functioncall -> . identifier LPAREN func_args RPAREN
    (319) systemcall -> . DOLLER ID
    (320) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (357) identifier -> . ID
    (358) identifier -> . scope ID
    (172) const_expression -> . intnumber
    (173) const_expression -> . floatnumber
    (174) const_expression -> . stringliteral
    (359) scope -> . identifier DOT
    (360) scope -> . pointer DOT
    (176) intnumber -> . INTNUMBER_DEC
    (177) intnumber -> . SIGNED_INTNUMBER_DEC
    (178) intnumber -> . INTNUMBER_BIN
    (179) intnumber -> . SIGNED_INTNUMBER_BIN
    (180) intnumber -> . INTNUMBER_OCT
    (181) intnumber -> . SIGNED_INTNUMBER_OCT
    (182) intnumber -> . INTNUMBER_HEX
    (183) intnumber -> . SIGNED_INTNUMBER_HEX
    (175) floatnumber -> . FLOATNUMBER
    (184) stringliteral -> . STRING_LITERAL

    MINUS           shift and go to state 97
    PLUS            shift and go to state 89
    LNOT            shift and go to state 95
    NOT             shift and go to state 78
    AND             shift and go to state 91
    NAND            shift and go to state 98
    NOR             shift and go to state 76
    OR              shift and go to state 105
    XOR             shift and go to state 82
    XNOR            shift and go to state 87
    LPAREN          shift and go to state 96
    LBRACE          shift and go to state 77
    DOLLER          shift and go to state 100
    ID              shift and go to state 85
    INTNUMBER_DEC   shift and go to state 79
    SIGNED_INTNUMBER_DEC shift and go to state 101
    INTNUMBER_BIN   shift and go to state 111
    SIGNED_INTNUMBER_BIN shift and go to state 112
    INTNUMBER_OCT   shift and go to state 86
    SIGNED_INTNUMBER_OCT shift and go to state 106
    INTNUMBER_HEX   shift and go to state 93
    SIGNED_INTNUMBER_HEX shift and go to state 83
    FLOATNUMBER     shift and go to state 102
    STRING_LITERAL  shift and go to state 107

    stringliteral                  shift and go to state 99
    intnumber                      shift and go to state 81
    expression                     shift and go to state 413
    repeat                         shift and go to state 108
    partselect                     shift and go to state 103
    identifier                     shift and go to state 104
    pointer                        shift and go to state 80
    functioncall                   shift and go to state 94
    scope                          shift and go to state 84
    systemcall                     shift and go to state 109
    const_expression               shift and go to state 110
    concat                         shift and go to state 88
    floatnumber                    shift and go to state 90

state 285

    (244) if_statement -> IF LPAREN . cond RPAREN true_statement ELSE else_statement
    (245) if_statement -> IF LPAREN . cond RPAREN true_statement
    (248) cond -> . expression
    (116) expression -> . MINUS expression
    (117) expression -> . PLUS expression
    (118) expression -> . LNOT expression
    (119) expression -> . NOT expression
    (120) expression -> . AND expression
    (121) expression -> . NAND expression
    (122) expression -> . NOR expression
    (123) expression -> . OR expression
    (124) expression -> . XOR expression
    (125) expression -> . XNOR expression
    (126) expression -> . expression POWER expression
    (127) expression -> . expression TIMES expression
    (128) expression -> . expression DIVIDE expression
    (129) expression -> . expression MOD expression
    (130) expression -> . expression PLUS expression
    (131) expression -> . expression MINUS expression
    (132) expression -> . expression LSHIFT expression
    (133) expression -> . expression RSHIFT expression
    (134) expression -> . expression LSHIFTA expression
    (135) expression -> . expression RSHIFTA expression
    (136) expression -> . expression LT expression
    (137) expression -> . expression GT expression
    (138) expression -> . expression LE expression
    (139) expression -> . expression GE expression
    (140) expression -> . expression EQ expression
    (141) expression -> . expression NE expression
    (142) expression -> . expression EQL expression
    (143) expression -> . expression NEL expression
    (144) expression -> . expression AND expression
    (145) expression -> . expression XOR expression
    (146) expression -> . expression XNOR expression
    (147) expression -> . expression OR expression
    (148) expression -> . expression LAND expression
    (149) expression -> . expression LOR expression
    (150) expression -> . expression COND expression COLON expression
    (151) expression -> . LPAREN expression RPAREN
    (152) expression -> . concat
    (153) expression -> . repeat
    (154) expression -> . partselect
    (155) expression -> . pointer
    (156) expression -> . functioncall
    (157) expression -> . systemcall
    (158) expression -> . identifier
    (159) expression -> . const_expression
    (160) concat -> . LBRACE concatlist RBRACE
    (163) repeat -> . LBRACE expression concat RBRACE
    (164) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (165) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (166) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (167) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (168) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (169) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (170) pointer -> . identifier LBRACKET expression RBRACKET
    (171) pointer -> . pointer LBRACKET expression RBRACKET
    (339) functioncall -> . identifier LPAREN func_args RPAREN
    (319) systemcall -> . DOLLER ID
    (320) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (357) identifier -> . ID
    (358) identifier -> . scope ID
    (172) const_expression -> . intnumber
    (173) const_expression -> . floatnumber
    (174) const_expression -> . stringliteral
    (359) scope -> . identifier DOT
    (360) scope -> . pointer DOT
    (176) intnumber -> . INTNUMBER_DEC
    (177) intnumber -> . SIGNED_INTNUMBER_DEC
    (178) intnumber -> . INTNUMBER_BIN
    (179) intnumber -> . SIGNED_INTNUMBER_BIN
    (180) intnumber -> . INTNUMBER_OCT
    (181) intnumber -> . SIGNED_INTNUMBER_OCT
    (182) intnumber -> . INTNUMBER_HEX
    (183) intnumber -> . SIGNED_INTNUMBER_HEX
    (175) floatnumber -> . FLOATNUMBER
    (184) stringliteral -> . STRING_LITERAL

    MINUS           shift and go to state 97
    PLUS            shift and go to state 89
    LNOT            shift and go to state 95
    NOT             shift and go to state 78
    AND             shift and go to state 91
    NAND            shift and go to state 98
    NOR             shift and go to state 76
    OR              shift and go to state 105
    XOR             shift and go to state 82
    XNOR            shift and go to state 87
    LPAREN          shift and go to state 96
    LBRACE          shift and go to state 77
    DOLLER          shift and go to state 100
    ID              shift and go to state 85
    INTNUMBER_DEC   shift and go to state 79
    SIGNED_INTNUMBER_DEC shift and go to state 101
    INTNUMBER_BIN   shift and go to state 111
    SIGNED_INTNUMBER_BIN shift and go to state 112
    INTNUMBER_OCT   shift and go to state 86
    SIGNED_INTNUMBER_OCT shift and go to state 106
    INTNUMBER_HEX   shift and go to state 93
    SIGNED_INTNUMBER_HEX shift and go to state 83
    FLOATNUMBER     shift and go to state 102
    STRING_LITERAL  shift and go to state 107

    stringliteral                  shift and go to state 99
    intnumber                      shift and go to state 81
    expression                     shift and go to state 398
    repeat                         shift and go to state 108
    cond                           shift and go to state 414
    identifier                     shift and go to state 104
    partselect                     shift and go to state 103
    pointer                        shift and go to state 80
    functioncall                   shift and go to state 94
    scope                          shift and go to state 84
    systemcall                     shift and go to state 109
    floatnumber                    shift and go to state 90
    const_expression               shift and go to state 110
    concat                         shift and go to state 88

state 286

    (228) block -> BEGIN END .

    ENDMODULE       reduce using rule 228 (block -> BEGIN END .)
    GENERATE        reduce using rule 228 (block -> BEGIN END .)
    INTEGER         reduce using rule 228 (block -> BEGIN END .)
    REAL            reduce using rule 228 (block -> BEGIN END .)
    PARAMETER       reduce using rule 228 (block -> BEGIN END .)
    LOCALPARAM      reduce using rule 228 (block -> BEGIN END .)
    GENVAR          reduce using rule 228 (block -> BEGIN END .)
    ASSIGN          reduce using rule 228 (block -> BEGIN END .)
    ALWAYS          reduce using rule 228 (block -> BEGIN END .)
    INITIAL         reduce using rule 228 (block -> BEGIN END .)
    ID              reduce using rule 228 (block -> BEGIN END .)
    FUNCTION        reduce using rule 228 (block -> BEGIN END .)
    TASK            reduce using rule 228 (block -> BEGIN END .)
    LPAREN          reduce using rule 228 (block -> BEGIN END .)
    INPUT           reduce using rule 228 (block -> BEGIN END .)
    OUTPUT          reduce using rule 228 (block -> BEGIN END .)
    INOUT           reduce using rule 228 (block -> BEGIN END .)
    TRI             reduce using rule 228 (block -> BEGIN END .)
    REG             reduce using rule 228 (block -> BEGIN END .)
    WIRE            reduce using rule 228 (block -> BEGIN END .)
    SIGNED          reduce using rule 228 (block -> BEGIN END .)
    ENDGENERATE     reduce using rule 228 (block -> BEGIN END .)
    IF              reduce using rule 228 (block -> BEGIN END .)
    FOR             reduce using rule 228 (block -> BEGIN END .)
    ELSE            reduce using rule 228 (block -> BEGIN END .)
    END             reduce using rule 228 (block -> BEGIN END .)
    JOIN            reduce using rule 228 (block -> BEGIN END .)
    CASE            reduce using rule 228 (block -> BEGIN END .)
    WHILE           reduce using rule 228 (block -> BEGIN END .)
    WAIT            reduce using rule 228 (block -> BEGIN END .)
    FOREVER         reduce using rule 228 (block -> BEGIN END .)
    BEGIN           reduce using rule 228 (block -> BEGIN END .)
    FORK            reduce using rule 228 (block -> BEGIN END .)
    DELAY           reduce using rule 228 (block -> BEGIN END .)
    AT              reduce using rule 228 (block -> BEGIN END .)
    DOLLER          reduce using rule 228 (block -> BEGIN END .)
    DISABLE         reduce using rule 228 (block -> BEGIN END .)
    LBRACE          reduce using rule 228 (block -> BEGIN END .)
    SEMICOLON       reduce using rule 228 (block -> BEGIN END .)
    ENDFUNCTION     reduce using rule 228 (block -> BEGIN END .)
    ENDTASK         reduce using rule 228 (block -> BEGIN END .)
    ENDCASE         reduce using rule 228 (block -> BEGIN END .)
    DEFAULT         reduce using rule 228 (block -> BEGIN END .)
    MINUS           reduce using rule 228 (block -> BEGIN END .)
    PLUS            reduce using rule 228 (block -> BEGIN END .)
    LNOT            reduce using rule 228 (block -> BEGIN END .)
    NOT             reduce using rule 228 (block -> BEGIN END .)
    AND             reduce using rule 228 (block -> BEGIN END .)
    NAND            reduce using rule 228 (block -> BEGIN END .)
    NOR             reduce using rule 228 (block -> BEGIN END .)
    OR              reduce using rule 228 (block -> BEGIN END .)
    XOR             reduce using rule 228 (block -> BEGIN END .)
    XNOR            reduce using rule 228 (block -> BEGIN END .)
    INTNUMBER_DEC   reduce using rule 228 (block -> BEGIN END .)
    SIGNED_INTNUMBER_DEC reduce using rule 228 (block -> BEGIN END .)
    INTNUMBER_BIN   reduce using rule 228 (block -> BEGIN END .)
    SIGNED_INTNUMBER_BIN reduce using rule 228 (block -> BEGIN END .)
    INTNUMBER_OCT   reduce using rule 228 (block -> BEGIN END .)
    SIGNED_INTNUMBER_OCT reduce using rule 228 (block -> BEGIN END .)
    INTNUMBER_HEX   reduce using rule 228 (block -> BEGIN END .)
    SIGNED_INTNUMBER_HEX reduce using rule 228 (block -> BEGIN END .)
    FLOATNUMBER     reduce using rule 228 (block -> BEGIN END .)
    STRING_LITERAL  reduce using rule 228 (block -> BEGIN END .)


state 287

    (227) block -> BEGIN block_statements . END
    (229) block_statements -> block_statements . block_statement
    (231) block_statement -> . basic_statement
    (205) basic_statement -> . if_statement
    (206) basic_statement -> . case_statement
    (207) basic_statement -> . for_statement
    (208) basic_statement -> . while_statement
    (209) basic_statement -> . event_statement
    (210) basic_statement -> . wait_statement
    (211) basic_statement -> . forever_statement
    (212) basic_statement -> . block
    (213) basic_statement -> . namedblock
    (214) basic_statement -> . parallelblock
    (215) basic_statement -> . blocking_substitution
    (216) basic_statement -> . nonblocking_substitution
    (217) basic_statement -> . single_statement
    (244) if_statement -> . IF LPAREN cond RPAREN true_statement ELSE else_statement
    (245) if_statement -> . IF LPAREN cond RPAREN true_statement
    (246) if_statement -> . delays IF LPAREN cond RPAREN true_statement ELSE else_statement
    (247) if_statement -> . delays IF LPAREN cond RPAREN true_statement
    (262) case_statement -> . CASE LPAREN case_comp RPAREN casecontent_statements ENDCASE
    (252) for_statement -> . FOR LPAREN forpre forcond forpost RPAREN forcontent_statement
    (260) while_statement -> . WHILE LPAREN cond RPAREN whilecontent_statement
    (272) event_statement -> . senslist SEMICOLON
    (273) wait_statement -> . WAIT LPAREN cond RPAREN waitcontent_statement
    (276) forever_statement -> . FOREVER basic_statement
    (227) block -> . BEGIN block_statements END
    (228) block -> . BEGIN END
    (232) namedblock -> . BEGIN COLON ID namedblock_statements END
    (233) namedblock -> . BEGIN COLON ID END
    (242) parallelblock -> . FORK block_statements JOIN
    (243) parallelblock -> . FORK JOIN
    (219) blocking_substitution -> . delays lvalue EQUALS delays rvalue SEMICOLON
    (221) nonblocking_substitution -> . delays lvalue LE delays rvalue SEMICOLON
    (362) single_statement -> . DELAY expression SEMICOLON
    (363) single_statement -> . systemcall SEMICOLON
    (364) single_statement -> . disable SEMICOLON
    (222) delays -> . DELAY LPAREN expression RPAREN
    (223) delays -> . DELAY identifier
    (224) delays -> . DELAY intnumber
    (225) delays -> . DELAY floatnumber
    (226) delays -> . empty
    (186) senslist -> . AT LPAREN edgesigs RPAREN
    (193) senslist -> . empty
    (194) senslist -> . AT levelsig
    (195) senslist -> . AT LPAREN levelsigs RPAREN
    (203) senslist -> . AT TIMES
    (204) senslist -> . AT LPAREN TIMES RPAREN
    (319) systemcall -> . DOLLER ID
    (320) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (361) disable -> . DISABLE ID
    (365) empty -> .

  ! shift/reduce conflict for IF resolved as shift
    END             shift and go to state 415
    IF              shift and go to state 150
    CASE            shift and go to state 136
    FOR             shift and go to state 144
    WHILE           shift and go to state 146
    WAIT            shift and go to state 131
    FOREVER         shift and go to state 143
    BEGIN           shift and go to state 153
    FORK            shift and go to state 138
    DELAY           shift and go to state 147
    AT              shift and go to state 159
    DOLLER          shift and go to state 100
    DISABLE         shift and go to state 155
    LBRACE          reduce using rule 365 (empty -> .)
    ID              reduce using rule 365 (empty -> .)
    SEMICOLON       reduce using rule 365 (empty -> .)

  ! IF              [ reduce using rule 365 (empty -> .) ]

    parallelblock                  shift and go to state 129
    for_statement                  shift and go to state 130
    empty                          shift and go to state 157
    if_statement                   shift and go to state 132
    while_statement                shift and go to state 148
    blocking_substitution          shift and go to state 137
    systemcall                     shift and go to state 158
    basic_statement                shift and go to state 274
    event_statement                shift and go to state 135
    wait_statement                 shift and go to state 151
    forever_statement              shift and go to state 152
    case_statement                 shift and go to state 139
    disable                        shift and go to state 133
    senslist                       shift and go to state 154
    single_statement               shift and go to state 140
    block                          shift and go to state 156
    delays                         shift and go to state 141
    nonblocking_substitution       shift and go to state 142
    block_statement                shift and go to state 402
    namedblock                     shift and go to state 145

state 288

    (232) namedblock -> BEGIN COLON . ID namedblock_statements END
    (233) namedblock -> BEGIN COLON . ID END

    ID              shift and go to state 416


state 289

    (272) event_statement -> senslist SEMICOLON .

    ENDMODULE       reduce using rule 272 (event_statement -> senslist SEMICOLON .)
    GENERATE        reduce using rule 272 (event_statement -> senslist SEMICOLON .)
    INTEGER         reduce using rule 272 (event_statement -> senslist SEMICOLON .)
    REAL            reduce using rule 272 (event_statement -> senslist SEMICOLON .)
    PARAMETER       reduce using rule 272 (event_statement -> senslist SEMICOLON .)
    LOCALPARAM      reduce using rule 272 (event_statement -> senslist SEMICOLON .)
    GENVAR          reduce using rule 272 (event_statement -> senslist SEMICOLON .)
    ASSIGN          reduce using rule 272 (event_statement -> senslist SEMICOLON .)
    ALWAYS          reduce using rule 272 (event_statement -> senslist SEMICOLON .)
    INITIAL         reduce using rule 272 (event_statement -> senslist SEMICOLON .)
    ID              reduce using rule 272 (event_statement -> senslist SEMICOLON .)
    FUNCTION        reduce using rule 272 (event_statement -> senslist SEMICOLON .)
    TASK            reduce using rule 272 (event_statement -> senslist SEMICOLON .)
    LPAREN          reduce using rule 272 (event_statement -> senslist SEMICOLON .)
    INPUT           reduce using rule 272 (event_statement -> senslist SEMICOLON .)
    OUTPUT          reduce using rule 272 (event_statement -> senslist SEMICOLON .)
    INOUT           reduce using rule 272 (event_statement -> senslist SEMICOLON .)
    TRI             reduce using rule 272 (event_statement -> senslist SEMICOLON .)
    REG             reduce using rule 272 (event_statement -> senslist SEMICOLON .)
    WIRE            reduce using rule 272 (event_statement -> senslist SEMICOLON .)
    SIGNED          reduce using rule 272 (event_statement -> senslist SEMICOLON .)
    ENDGENERATE     reduce using rule 272 (event_statement -> senslist SEMICOLON .)
    IF              reduce using rule 272 (event_statement -> senslist SEMICOLON .)
    FOR             reduce using rule 272 (event_statement -> senslist SEMICOLON .)
    ELSE            reduce using rule 272 (event_statement -> senslist SEMICOLON .)
    END             reduce using rule 272 (event_statement -> senslist SEMICOLON .)
    JOIN            reduce using rule 272 (event_statement -> senslist SEMICOLON .)
    CASE            reduce using rule 272 (event_statement -> senslist SEMICOLON .)
    WHILE           reduce using rule 272 (event_statement -> senslist SEMICOLON .)
    WAIT            reduce using rule 272 (event_statement -> senslist SEMICOLON .)
    FOREVER         reduce using rule 272 (event_statement -> senslist SEMICOLON .)
    BEGIN           reduce using rule 272 (event_statement -> senslist SEMICOLON .)
    FORK            reduce using rule 272 (event_statement -> senslist SEMICOLON .)
    DELAY           reduce using rule 272 (event_statement -> senslist SEMICOLON .)
    AT              reduce using rule 272 (event_statement -> senslist SEMICOLON .)
    DOLLER          reduce using rule 272 (event_statement -> senslist SEMICOLON .)
    DISABLE         reduce using rule 272 (event_statement -> senslist SEMICOLON .)
    LBRACE          reduce using rule 272 (event_statement -> senslist SEMICOLON .)
    SEMICOLON       reduce using rule 272 (event_statement -> senslist SEMICOLON .)
    ENDFUNCTION     reduce using rule 272 (event_statement -> senslist SEMICOLON .)
    ENDTASK         reduce using rule 272 (event_statement -> senslist SEMICOLON .)
    ENDCASE         reduce using rule 272 (event_statement -> senslist SEMICOLON .)
    DEFAULT         reduce using rule 272 (event_statement -> senslist SEMICOLON .)
    MINUS           reduce using rule 272 (event_statement -> senslist SEMICOLON .)
    PLUS            reduce using rule 272 (event_statement -> senslist SEMICOLON .)
    LNOT            reduce using rule 272 (event_statement -> senslist SEMICOLON .)
    NOT             reduce using rule 272 (event_statement -> senslist SEMICOLON .)
    AND             reduce using rule 272 (event_statement -> senslist SEMICOLON .)
    NAND            reduce using rule 272 (event_statement -> senslist SEMICOLON .)
    NOR             reduce using rule 272 (event_statement -> senslist SEMICOLON .)
    OR              reduce using rule 272 (event_statement -> senslist SEMICOLON .)
    XOR             reduce using rule 272 (event_statement -> senslist SEMICOLON .)
    XNOR            reduce using rule 272 (event_statement -> senslist SEMICOLON .)
    INTNUMBER_DEC   reduce using rule 272 (event_statement -> senslist SEMICOLON .)
    SIGNED_INTNUMBER_DEC reduce using rule 272 (event_statement -> senslist SEMICOLON .)
    INTNUMBER_BIN   reduce using rule 272 (event_statement -> senslist SEMICOLON .)
    SIGNED_INTNUMBER_BIN reduce using rule 272 (event_statement -> senslist SEMICOLON .)
    INTNUMBER_OCT   reduce using rule 272 (event_statement -> senslist SEMICOLON .)
    SIGNED_INTNUMBER_OCT reduce using rule 272 (event_statement -> senslist SEMICOLON .)
    INTNUMBER_HEX   reduce using rule 272 (event_statement -> senslist SEMICOLON .)
    SIGNED_INTNUMBER_HEX reduce using rule 272 (event_statement -> senslist SEMICOLON .)
    FLOATNUMBER     reduce using rule 272 (event_statement -> senslist SEMICOLON .)
    STRING_LITERAL  reduce using rule 272 (event_statement -> senslist SEMICOLON .)


state 290

    (361) disable -> DISABLE ID .

    SEMICOLON       reduce using rule 361 (disable -> DISABLE ID .)


state 291

    (363) single_statement -> systemcall SEMICOLON .

    JOIN            reduce using rule 363 (single_statement -> systemcall SEMICOLON .)
    IF              reduce using rule 363 (single_statement -> systemcall SEMICOLON .)
    CASE            reduce using rule 363 (single_statement -> systemcall SEMICOLON .)
    FOR             reduce using rule 363 (single_statement -> systemcall SEMICOLON .)
    WHILE           reduce using rule 363 (single_statement -> systemcall SEMICOLON .)
    WAIT            reduce using rule 363 (single_statement -> systemcall SEMICOLON .)
    FOREVER         reduce using rule 363 (single_statement -> systemcall SEMICOLON .)
    BEGIN           reduce using rule 363 (single_statement -> systemcall SEMICOLON .)
    FORK            reduce using rule 363 (single_statement -> systemcall SEMICOLON .)
    DELAY           reduce using rule 363 (single_statement -> systemcall SEMICOLON .)
    AT              reduce using rule 363 (single_statement -> systemcall SEMICOLON .)
    DOLLER          reduce using rule 363 (single_statement -> systemcall SEMICOLON .)
    DISABLE         reduce using rule 363 (single_statement -> systemcall SEMICOLON .)
    LBRACE          reduce using rule 363 (single_statement -> systemcall SEMICOLON .)
    ID              reduce using rule 363 (single_statement -> systemcall SEMICOLON .)
    SEMICOLON       reduce using rule 363 (single_statement -> systemcall SEMICOLON .)
    ENDMODULE       reduce using rule 363 (single_statement -> systemcall SEMICOLON .)
    GENERATE        reduce using rule 363 (single_statement -> systemcall SEMICOLON .)
    INTEGER         reduce using rule 363 (single_statement -> systemcall SEMICOLON .)
    REAL            reduce using rule 363 (single_statement -> systemcall SEMICOLON .)
    PARAMETER       reduce using rule 363 (single_statement -> systemcall SEMICOLON .)
    LOCALPARAM      reduce using rule 363 (single_statement -> systemcall SEMICOLON .)
    GENVAR          reduce using rule 363 (single_statement -> systemcall SEMICOLON .)
    ASSIGN          reduce using rule 363 (single_statement -> systemcall SEMICOLON .)
    ALWAYS          reduce using rule 363 (single_statement -> systemcall SEMICOLON .)
    INITIAL         reduce using rule 363 (single_statement -> systemcall SEMICOLON .)
    FUNCTION        reduce using rule 363 (single_statement -> systemcall SEMICOLON .)
    TASK            reduce using rule 363 (single_statement -> systemcall SEMICOLON .)
    LPAREN          reduce using rule 363 (single_statement -> systemcall SEMICOLON .)
    INPUT           reduce using rule 363 (single_statement -> systemcall SEMICOLON .)
    OUTPUT          reduce using rule 363 (single_statement -> systemcall SEMICOLON .)
    INOUT           reduce using rule 363 (single_statement -> systemcall SEMICOLON .)
    TRI             reduce using rule 363 (single_statement -> systemcall SEMICOLON .)
    REG             reduce using rule 363 (single_statement -> systemcall SEMICOLON .)
    WIRE            reduce using rule 363 (single_statement -> systemcall SEMICOLON .)
    SIGNED          reduce using rule 363 (single_statement -> systemcall SEMICOLON .)
    ENDGENERATE     reduce using rule 363 (single_statement -> systemcall SEMICOLON .)
    ELSE            reduce using rule 363 (single_statement -> systemcall SEMICOLON .)
    END             reduce using rule 363 (single_statement -> systemcall SEMICOLON .)
    ENDCASE         reduce using rule 363 (single_statement -> systemcall SEMICOLON .)
    DEFAULT         reduce using rule 363 (single_statement -> systemcall SEMICOLON .)
    MINUS           reduce using rule 363 (single_statement -> systemcall SEMICOLON .)
    PLUS            reduce using rule 363 (single_statement -> systemcall SEMICOLON .)
    LNOT            reduce using rule 363 (single_statement -> systemcall SEMICOLON .)
    NOT             reduce using rule 363 (single_statement -> systemcall SEMICOLON .)
    AND             reduce using rule 363 (single_statement -> systemcall SEMICOLON .)
    NAND            reduce using rule 363 (single_statement -> systemcall SEMICOLON .)
    NOR             reduce using rule 363 (single_statement -> systemcall SEMICOLON .)
    OR              reduce using rule 363 (single_statement -> systemcall SEMICOLON .)
    XOR             reduce using rule 363 (single_statement -> systemcall SEMICOLON .)
    XNOR            reduce using rule 363 (single_statement -> systemcall SEMICOLON .)
    INTNUMBER_DEC   reduce using rule 363 (single_statement -> systemcall SEMICOLON .)
    SIGNED_INTNUMBER_DEC reduce using rule 363 (single_statement -> systemcall SEMICOLON .)
    INTNUMBER_BIN   reduce using rule 363 (single_statement -> systemcall SEMICOLON .)
    SIGNED_INTNUMBER_BIN reduce using rule 363 (single_statement -> systemcall SEMICOLON .)
    INTNUMBER_OCT   reduce using rule 363 (single_statement -> systemcall SEMICOLON .)
    SIGNED_INTNUMBER_OCT reduce using rule 363 (single_statement -> systemcall SEMICOLON .)
    INTNUMBER_HEX   reduce using rule 363 (single_statement -> systemcall SEMICOLON .)
    SIGNED_INTNUMBER_HEX reduce using rule 363 (single_statement -> systemcall SEMICOLON .)
    FLOATNUMBER     reduce using rule 363 (single_statement -> systemcall SEMICOLON .)
    STRING_LITERAL  reduce using rule 363 (single_statement -> systemcall SEMICOLON .)
    ENDFUNCTION     reduce using rule 363 (single_statement -> systemcall SEMICOLON .)
    ENDTASK         reduce using rule 363 (single_statement -> systemcall SEMICOLON .)


state 292

    (203) senslist -> AT TIMES .

    SEMICOLON       reduce using rule 203 (senslist -> AT TIMES .)
    IF              reduce using rule 203 (senslist -> AT TIMES .)
    CASE            reduce using rule 203 (senslist -> AT TIMES .)
    FOR             reduce using rule 203 (senslist -> AT TIMES .)
    WHILE           reduce using rule 203 (senslist -> AT TIMES .)
    WAIT            reduce using rule 203 (senslist -> AT TIMES .)
    FOREVER         reduce using rule 203 (senslist -> AT TIMES .)
    BEGIN           reduce using rule 203 (senslist -> AT TIMES .)
    FORK            reduce using rule 203 (senslist -> AT TIMES .)
    DELAY           reduce using rule 203 (senslist -> AT TIMES .)
    AT              reduce using rule 203 (senslist -> AT TIMES .)
    DOLLER          reduce using rule 203 (senslist -> AT TIMES .)
    DISABLE         reduce using rule 203 (senslist -> AT TIMES .)
    LBRACE          reduce using rule 203 (senslist -> AT TIMES .)
    ID              reduce using rule 203 (senslist -> AT TIMES .)


state 293

    (196) levelsig -> levelsig_base .

    RPAREN          reduce using rule 196 (levelsig -> levelsig_base .)
    SENS_OR         reduce using rule 196 (levelsig -> levelsig_base .)
    COMMA           reduce using rule 196 (levelsig -> levelsig_base .)
    SEMICOLON       reduce using rule 196 (levelsig -> levelsig_base .)
    IF              reduce using rule 196 (levelsig -> levelsig_base .)
    CASE            reduce using rule 196 (levelsig -> levelsig_base .)
    FOR             reduce using rule 196 (levelsig -> levelsig_base .)
    WHILE           reduce using rule 196 (levelsig -> levelsig_base .)
    WAIT            reduce using rule 196 (levelsig -> levelsig_base .)
    FOREVER         reduce using rule 196 (levelsig -> levelsig_base .)
    BEGIN           reduce using rule 196 (levelsig -> levelsig_base .)
    FORK            reduce using rule 196 (levelsig -> levelsig_base .)
    DELAY           reduce using rule 196 (levelsig -> levelsig_base .)
    AT              reduce using rule 196 (levelsig -> levelsig_base .)
    DOLLER          reduce using rule 196 (levelsig -> levelsig_base .)
    DISABLE         reduce using rule 196 (levelsig -> levelsig_base .)
    LBRACE          reduce using rule 196 (levelsig -> levelsig_base .)
    ID              reduce using rule 196 (levelsig -> levelsig_base .)


state 294

    (199) levelsig_base -> partselect .

    RPAREN          reduce using rule 199 (levelsig_base -> partselect .)
    SENS_OR         reduce using rule 199 (levelsig_base -> partselect .)
    COMMA           reduce using rule 199 (levelsig_base -> partselect .)
    SEMICOLON       reduce using rule 199 (levelsig_base -> partselect .)
    IF              reduce using rule 199 (levelsig_base -> partselect .)
    CASE            reduce using rule 199 (levelsig_base -> partselect .)
    FOR             reduce using rule 199 (levelsig_base -> partselect .)
    WHILE           reduce using rule 199 (levelsig_base -> partselect .)
    WAIT            reduce using rule 199 (levelsig_base -> partselect .)
    FOREVER         reduce using rule 199 (levelsig_base -> partselect .)
    BEGIN           reduce using rule 199 (levelsig_base -> partselect .)
    FORK            reduce using rule 199 (levelsig_base -> partselect .)
    DELAY           reduce using rule 199 (levelsig_base -> partselect .)
    AT              reduce using rule 199 (levelsig_base -> partselect .)
    DOLLER          reduce using rule 199 (levelsig_base -> partselect .)
    DISABLE         reduce using rule 199 (levelsig_base -> partselect .)
    LBRACE          reduce using rule 199 (levelsig_base -> partselect .)
    ID              reduce using rule 199 (levelsig_base -> partselect .)


state 295

    (197) levelsig_base -> identifier .
    (170) pointer -> identifier . LBRACKET expression RBRACKET
    (164) partselect -> identifier . LBRACKET expression COLON expression RBRACKET
    (165) partselect -> identifier . LBRACKET expression PLUSCOLON expression RBRACKET
    (166) partselect -> identifier . LBRACKET expression MINUSCOLON expression RBRACKET
    (359) scope -> identifier . DOT

    RPAREN          reduce using rule 197 (levelsig_base -> identifier .)
    SENS_OR         reduce using rule 197 (levelsig_base -> identifier .)
    COMMA           reduce using rule 197 (levelsig_base -> identifier .)
    SEMICOLON       reduce using rule 197 (levelsig_base -> identifier .)
    IF              reduce using rule 197 (levelsig_base -> identifier .)
    CASE            reduce using rule 197 (levelsig_base -> identifier .)
    FOR             reduce using rule 197 (levelsig_base -> identifier .)
    WHILE           reduce using rule 197 (levelsig_base -> identifier .)
    WAIT            reduce using rule 197 (levelsig_base -> identifier .)
    FOREVER         reduce using rule 197 (levelsig_base -> identifier .)
    BEGIN           reduce using rule 197 (levelsig_base -> identifier .)
    FORK            reduce using rule 197 (levelsig_base -> identifier .)
    DELAY           reduce using rule 197 (levelsig_base -> identifier .)
    AT              reduce using rule 197 (levelsig_base -> identifier .)
    DOLLER          reduce using rule 197 (levelsig_base -> identifier .)
    DISABLE         reduce using rule 197 (levelsig_base -> identifier .)
    LBRACE          reduce using rule 197 (levelsig_base -> identifier .)
    ID              reduce using rule 197 (levelsig_base -> identifier .)
    LBRACKET        shift and go to state 417
    DOT             shift and go to state 252


state 296

    (198) levelsig_base -> pointer .
    (171) pointer -> pointer . LBRACKET expression RBRACKET
    (167) partselect -> pointer . LBRACKET expression COLON expression RBRACKET
    (168) partselect -> pointer . LBRACKET expression PLUSCOLON expression RBRACKET
    (169) partselect -> pointer . LBRACKET expression MINUSCOLON expression RBRACKET
    (360) scope -> pointer . DOT

    RPAREN          reduce using rule 198 (levelsig_base -> pointer .)
    SENS_OR         reduce using rule 198 (levelsig_base -> pointer .)
    COMMA           reduce using rule 198 (levelsig_base -> pointer .)
    SEMICOLON       reduce using rule 198 (levelsig_base -> pointer .)
    IF              reduce using rule 198 (levelsig_base -> pointer .)
    CASE            reduce using rule 198 (levelsig_base -> pointer .)
    FOR             reduce using rule 198 (levelsig_base -> pointer .)
    WHILE           reduce using rule 198 (levelsig_base -> pointer .)
    WAIT            reduce using rule 198 (levelsig_base -> pointer .)
    FOREVER         reduce using rule 198 (levelsig_base -> pointer .)
    BEGIN           reduce using rule 198 (levelsig_base -> pointer .)
    FORK            reduce using rule 198 (levelsig_base -> pointer .)
    DELAY           reduce using rule 198 (levelsig_base -> pointer .)
    AT              reduce using rule 198 (levelsig_base -> pointer .)
    DOLLER          reduce using rule 198 (levelsig_base -> pointer .)
    DISABLE         reduce using rule 198 (levelsig_base -> pointer .)
    LBRACE          reduce using rule 198 (levelsig_base -> pointer .)
    ID              reduce using rule 198 (levelsig_base -> pointer .)
    LBRACKET        shift and go to state 418
    DOT             shift and go to state 215


state 297

    (194) senslist -> AT levelsig .

    SEMICOLON       reduce using rule 194 (senslist -> AT levelsig .)
    IF              reduce using rule 194 (senslist -> AT levelsig .)
    CASE            reduce using rule 194 (senslist -> AT levelsig .)
    FOR             reduce using rule 194 (senslist -> AT levelsig .)
    WHILE           reduce using rule 194 (senslist -> AT levelsig .)
    WAIT            reduce using rule 194 (senslist -> AT levelsig .)
    FOREVER         reduce using rule 194 (senslist -> AT levelsig .)
    BEGIN           reduce using rule 194 (senslist -> AT levelsig .)
    FORK            reduce using rule 194 (senslist -> AT levelsig .)
    DELAY           reduce using rule 194 (senslist -> AT levelsig .)
    AT              reduce using rule 194 (senslist -> AT levelsig .)
    DOLLER          reduce using rule 194 (senslist -> AT levelsig .)
    DISABLE         reduce using rule 194 (senslist -> AT levelsig .)
    LBRACE          reduce using rule 194 (senslist -> AT levelsig .)
    ID              reduce using rule 194 (senslist -> AT levelsig .)


state 298

    (186) senslist -> AT LPAREN . edgesigs RPAREN
    (195) senslist -> AT LPAREN . levelsigs RPAREN
    (204) senslist -> AT LPAREN . TIMES RPAREN
    (191) edgesigs -> . edgesigs SENS_OR edgesig
    (192) edgesigs -> . edgesig
    (200) levelsigs -> . levelsigs SENS_OR levelsig
    (201) levelsigs -> . levelsigs COMMA levelsig
    (202) levelsigs -> . levelsig
    (187) edgesig -> . POSEDGE edgesig_base
    (188) edgesig -> . NEGEDGE edgesig_base
    (196) levelsig -> . levelsig_base
    (197) levelsig_base -> . identifier
    (198) levelsig_base -> . pointer
    (199) levelsig_base -> . partselect
    (357) identifier -> . ID
    (358) identifier -> . scope ID
    (170) pointer -> . identifier LBRACKET expression RBRACKET
    (171) pointer -> . pointer LBRACKET expression RBRACKET
    (164) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (165) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (166) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (167) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (168) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (169) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (359) scope -> . identifier DOT
    (360) scope -> . pointer DOT

    TIMES           shift and go to state 422
    POSEDGE         shift and go to state 425
    NEGEDGE         shift and go to state 419
    ID              shift and go to state 85

    pointer                        shift and go to state 296
    edgesigs                       shift and go to state 423
    scope                          shift and go to state 84
    levelsig                       shift and go to state 424
    identifier                     shift and go to state 295
    levelsig_base                  shift and go to state 293
    edgesig                        shift and go to state 420
    partselect                     shift and go to state 294
    levelsigs                      shift and go to state 421

state 299

    (185) always -> ALWAYS senslist always_statement .

    ENDGENERATE     reduce using rule 185 (always -> ALWAYS senslist always_statement .)
    IF              reduce using rule 185 (always -> ALWAYS senslist always_statement .)
    FOR             reduce using rule 185 (always -> ALWAYS senslist always_statement .)
    INTEGER         reduce using rule 185 (always -> ALWAYS senslist always_statement .)
    REAL            reduce using rule 185 (always -> ALWAYS senslist always_statement .)
    PARAMETER       reduce using rule 185 (always -> ALWAYS senslist always_statement .)
    LOCALPARAM      reduce using rule 185 (always -> ALWAYS senslist always_statement .)
    GENVAR          reduce using rule 185 (always -> ALWAYS senslist always_statement .)
    ASSIGN          reduce using rule 185 (always -> ALWAYS senslist always_statement .)
    ALWAYS          reduce using rule 185 (always -> ALWAYS senslist always_statement .)
    INITIAL         reduce using rule 185 (always -> ALWAYS senslist always_statement .)
    ID              reduce using rule 185 (always -> ALWAYS senslist always_statement .)
    FUNCTION        reduce using rule 185 (always -> ALWAYS senslist always_statement .)
    TASK            reduce using rule 185 (always -> ALWAYS senslist always_statement .)
    LPAREN          reduce using rule 185 (always -> ALWAYS senslist always_statement .)
    INPUT           reduce using rule 185 (always -> ALWAYS senslist always_statement .)
    OUTPUT          reduce using rule 185 (always -> ALWAYS senslist always_statement .)
    INOUT           reduce using rule 185 (always -> ALWAYS senslist always_statement .)
    TRI             reduce using rule 185 (always -> ALWAYS senslist always_statement .)
    REG             reduce using rule 185 (always -> ALWAYS senslist always_statement .)
    WIRE            reduce using rule 185 (always -> ALWAYS senslist always_statement .)
    SIGNED          reduce using rule 185 (always -> ALWAYS senslist always_statement .)
    ELSE            reduce using rule 185 (always -> ALWAYS senslist always_statement .)
    END             reduce using rule 185 (always -> ALWAYS senslist always_statement .)
    ENDMODULE       reduce using rule 185 (always -> ALWAYS senslist always_statement .)
    GENERATE        reduce using rule 185 (always -> ALWAYS senslist always_statement .)


state 300

    (218) always_statement -> basic_statement .

    ENDMODULE       reduce using rule 218 (always_statement -> basic_statement .)
    GENERATE        reduce using rule 218 (always_statement -> basic_statement .)
    INTEGER         reduce using rule 218 (always_statement -> basic_statement .)
    REAL            reduce using rule 218 (always_statement -> basic_statement .)
    PARAMETER       reduce using rule 218 (always_statement -> basic_statement .)
    LOCALPARAM      reduce using rule 218 (always_statement -> basic_statement .)
    GENVAR          reduce using rule 218 (always_statement -> basic_statement .)
    ASSIGN          reduce using rule 218 (always_statement -> basic_statement .)
    ALWAYS          reduce using rule 218 (always_statement -> basic_statement .)
    INITIAL         reduce using rule 218 (always_statement -> basic_statement .)
    ID              reduce using rule 218 (always_statement -> basic_statement .)
    FUNCTION        reduce using rule 218 (always_statement -> basic_statement .)
    TASK            reduce using rule 218 (always_statement -> basic_statement .)
    LPAREN          reduce using rule 218 (always_statement -> basic_statement .)
    INPUT           reduce using rule 218 (always_statement -> basic_statement .)
    OUTPUT          reduce using rule 218 (always_statement -> basic_statement .)
    INOUT           reduce using rule 218 (always_statement -> basic_statement .)
    TRI             reduce using rule 218 (always_statement -> basic_statement .)
    REG             reduce using rule 218 (always_statement -> basic_statement .)
    WIRE            reduce using rule 218 (always_statement -> basic_statement .)
    SIGNED          reduce using rule 218 (always_statement -> basic_statement .)
    ENDGENERATE     reduce using rule 218 (always_statement -> basic_statement .)
    IF              reduce using rule 218 (always_statement -> basic_statement .)
    FOR             reduce using rule 218 (always_statement -> basic_statement .)
    ELSE            reduce using rule 218 (always_statement -> basic_statement .)
    END             reduce using rule 218 (always_statement -> basic_statement .)


state 301

    (106) lconcatlist -> lconcat_one .

    RBRACE          reduce using rule 106 (lconcatlist -> lconcat_one .)
    COMMA           reduce using rule 106 (lconcatlist -> lconcat_one .)


state 302

    (109) lconcat_one -> lpointer .

    RBRACE          reduce using rule 109 (lconcat_one -> lpointer .)
    COMMA           reduce using rule 109 (lconcat_one -> lpointer .)


state 303

    (108) lconcat_one -> lpartselect .

    RBRACE          reduce using rule 108 (lconcat_one -> lpartselect .)
    COMMA           reduce using rule 108 (lconcat_one -> lpartselect .)


state 304

    (107) lconcat_one -> identifier .
    (100) lpartselect -> identifier . LBRACKET expression COLON expression RBRACKET
    (101) lpartselect -> identifier . LBRACKET expression PLUSCOLON expression RBRACKET
    (102) lpartselect -> identifier . LBRACKET expression MINUSCOLON expression RBRACKET
    (359) scope -> identifier . DOT
    (170) pointer -> identifier . LBRACKET expression RBRACKET

    RBRACE          reduce using rule 107 (lconcat_one -> identifier .)
    COMMA           reduce using rule 107 (lconcat_one -> identifier .)
    LBRACKET        shift and go to state 309
    DOT             shift and go to state 252


state 305

    (97) lpartselect -> pointer . LBRACKET expression COLON expression RBRACKET
    (98) lpartselect -> pointer . LBRACKET expression PLUSCOLON expression RBRACKET
    (99) lpartselect -> pointer . LBRACKET expression MINUSCOLON expression RBRACKET
    (103) lpointer -> pointer .
    (360) scope -> pointer . DOT
    (171) pointer -> pointer . LBRACKET expression RBRACKET

    LBRACKET        shift and go to state 310
    RBRACE          reduce using rule 103 (lpointer -> pointer .)
    COMMA           reduce using rule 103 (lpointer -> pointer .)
    DOT             shift and go to state 215


state 306

    (104) lconcat -> LBRACE lconcatlist . RBRACE
    (105) lconcatlist -> lconcatlist . COMMA lconcat_one

    RBRACE          shift and go to state 426
    COMMA           shift and go to state 427


state 307

    (110) lconcat_one -> lconcat .

    RBRACE          reduce using rule 110 (lconcat_one -> lconcat .)
    COMMA           reduce using rule 110 (lconcat_one -> lconcat .)


state 308

    (95) assignment -> ASSIGN lvalue EQUALS . rvalue SEMICOLON
    (115) rvalue -> . expression
    (116) expression -> . MINUS expression
    (117) expression -> . PLUS expression
    (118) expression -> . LNOT expression
    (119) expression -> . NOT expression
    (120) expression -> . AND expression
    (121) expression -> . NAND expression
    (122) expression -> . NOR expression
    (123) expression -> . OR expression
    (124) expression -> . XOR expression
    (125) expression -> . XNOR expression
    (126) expression -> . expression POWER expression
    (127) expression -> . expression TIMES expression
    (128) expression -> . expression DIVIDE expression
    (129) expression -> . expression MOD expression
    (130) expression -> . expression PLUS expression
    (131) expression -> . expression MINUS expression
    (132) expression -> . expression LSHIFT expression
    (133) expression -> . expression RSHIFT expression
    (134) expression -> . expression LSHIFTA expression
    (135) expression -> . expression RSHIFTA expression
    (136) expression -> . expression LT expression
    (137) expression -> . expression GT expression
    (138) expression -> . expression LE expression
    (139) expression -> . expression GE expression
    (140) expression -> . expression EQ expression
    (141) expression -> . expression NE expression
    (142) expression -> . expression EQL expression
    (143) expression -> . expression NEL expression
    (144) expression -> . expression AND expression
    (145) expression -> . expression XOR expression
    (146) expression -> . expression XNOR expression
    (147) expression -> . expression OR expression
    (148) expression -> . expression LAND expression
    (149) expression -> . expression LOR expression
    (150) expression -> . expression COND expression COLON expression
    (151) expression -> . LPAREN expression RPAREN
    (152) expression -> . concat
    (153) expression -> . repeat
    (154) expression -> . partselect
    (155) expression -> . pointer
    (156) expression -> . functioncall
    (157) expression -> . systemcall
    (158) expression -> . identifier
    (159) expression -> . const_expression
    (160) concat -> . LBRACE concatlist RBRACE
    (163) repeat -> . LBRACE expression concat RBRACE
    (164) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (165) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (166) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (167) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (168) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (169) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (170) pointer -> . identifier LBRACKET expression RBRACKET
    (171) pointer -> . pointer LBRACKET expression RBRACKET
    (339) functioncall -> . identifier LPAREN func_args RPAREN
    (319) systemcall -> . DOLLER ID
    (320) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (357) identifier -> . ID
    (358) identifier -> . scope ID
    (172) const_expression -> . intnumber
    (173) const_expression -> . floatnumber
    (174) const_expression -> . stringliteral
    (359) scope -> . identifier DOT
    (360) scope -> . pointer DOT
    (176) intnumber -> . INTNUMBER_DEC
    (177) intnumber -> . SIGNED_INTNUMBER_DEC
    (178) intnumber -> . INTNUMBER_BIN
    (179) intnumber -> . SIGNED_INTNUMBER_BIN
    (180) intnumber -> . INTNUMBER_OCT
    (181) intnumber -> . SIGNED_INTNUMBER_OCT
    (182) intnumber -> . INTNUMBER_HEX
    (183) intnumber -> . SIGNED_INTNUMBER_HEX
    (175) floatnumber -> . FLOATNUMBER
    (184) stringliteral -> . STRING_LITERAL

    MINUS           shift and go to state 97
    PLUS            shift and go to state 89
    LNOT            shift and go to state 95
    NOT             shift and go to state 78
    AND             shift and go to state 91
    NAND            shift and go to state 98
    NOR             shift and go to state 76
    OR              shift and go to state 105
    XOR             shift and go to state 82
    XNOR            shift and go to state 87
    LPAREN          shift and go to state 96
    LBRACE          shift and go to state 77
    DOLLER          shift and go to state 100
    ID              shift and go to state 85
    INTNUMBER_DEC   shift and go to state 79
    SIGNED_INTNUMBER_DEC shift and go to state 101
    INTNUMBER_BIN   shift and go to state 111
    SIGNED_INTNUMBER_BIN shift and go to state 112
    INTNUMBER_OCT   shift and go to state 86
    SIGNED_INTNUMBER_OCT shift and go to state 106
    INTNUMBER_HEX   shift and go to state 93
    SIGNED_INTNUMBER_HEX shift and go to state 83
    FLOATNUMBER     shift and go to state 102
    STRING_LITERAL  shift and go to state 107

    stringliteral                  shift and go to state 99
    intnumber                      shift and go to state 81
    expression                     shift and go to state 428
    repeat                         shift and go to state 108
    rvalue                         shift and go to state 429
    partselect                     shift and go to state 103
    identifier                     shift and go to state 104
    pointer                        shift and go to state 80
    functioncall                   shift and go to state 94
    scope                          shift and go to state 84
    systemcall                     shift and go to state 109
    const_expression               shift and go to state 110
    concat                         shift and go to state 88
    floatnumber                    shift and go to state 90

state 309

    (100) lpartselect -> identifier LBRACKET . expression COLON expression RBRACKET
    (101) lpartselect -> identifier LBRACKET . expression PLUSCOLON expression RBRACKET
    (102) lpartselect -> identifier LBRACKET . expression MINUSCOLON expression RBRACKET
    (170) pointer -> identifier LBRACKET . expression RBRACKET
    (116) expression -> . MINUS expression
    (117) expression -> . PLUS expression
    (118) expression -> . LNOT expression
    (119) expression -> . NOT expression
    (120) expression -> . AND expression
    (121) expression -> . NAND expression
    (122) expression -> . NOR expression
    (123) expression -> . OR expression
    (124) expression -> . XOR expression
    (125) expression -> . XNOR expression
    (126) expression -> . expression POWER expression
    (127) expression -> . expression TIMES expression
    (128) expression -> . expression DIVIDE expression
    (129) expression -> . expression MOD expression
    (130) expression -> . expression PLUS expression
    (131) expression -> . expression MINUS expression
    (132) expression -> . expression LSHIFT expression
    (133) expression -> . expression RSHIFT expression
    (134) expression -> . expression LSHIFTA expression
    (135) expression -> . expression RSHIFTA expression
    (136) expression -> . expression LT expression
    (137) expression -> . expression GT expression
    (138) expression -> . expression LE expression
    (139) expression -> . expression GE expression
    (140) expression -> . expression EQ expression
    (141) expression -> . expression NE expression
    (142) expression -> . expression EQL expression
    (143) expression -> . expression NEL expression
    (144) expression -> . expression AND expression
    (145) expression -> . expression XOR expression
    (146) expression -> . expression XNOR expression
    (147) expression -> . expression OR expression
    (148) expression -> . expression LAND expression
    (149) expression -> . expression LOR expression
    (150) expression -> . expression COND expression COLON expression
    (151) expression -> . LPAREN expression RPAREN
    (152) expression -> . concat
    (153) expression -> . repeat
    (154) expression -> . partselect
    (155) expression -> . pointer
    (156) expression -> . functioncall
    (157) expression -> . systemcall
    (158) expression -> . identifier
    (159) expression -> . const_expression
    (160) concat -> . LBRACE concatlist RBRACE
    (163) repeat -> . LBRACE expression concat RBRACE
    (164) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (165) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (166) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (167) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (168) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (169) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (170) pointer -> . identifier LBRACKET expression RBRACKET
    (171) pointer -> . pointer LBRACKET expression RBRACKET
    (339) functioncall -> . identifier LPAREN func_args RPAREN
    (319) systemcall -> . DOLLER ID
    (320) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (357) identifier -> . ID
    (358) identifier -> . scope ID
    (172) const_expression -> . intnumber
    (173) const_expression -> . floatnumber
    (174) const_expression -> . stringliteral
    (359) scope -> . identifier DOT
    (360) scope -> . pointer DOT
    (176) intnumber -> . INTNUMBER_DEC
    (177) intnumber -> . SIGNED_INTNUMBER_DEC
    (178) intnumber -> . INTNUMBER_BIN
    (179) intnumber -> . SIGNED_INTNUMBER_BIN
    (180) intnumber -> . INTNUMBER_OCT
    (181) intnumber -> . SIGNED_INTNUMBER_OCT
    (182) intnumber -> . INTNUMBER_HEX
    (183) intnumber -> . SIGNED_INTNUMBER_HEX
    (175) floatnumber -> . FLOATNUMBER
    (184) stringliteral -> . STRING_LITERAL

    MINUS           shift and go to state 97
    PLUS            shift and go to state 89
    LNOT            shift and go to state 95
    NOT             shift and go to state 78
    AND             shift and go to state 91
    NAND            shift and go to state 98
    NOR             shift and go to state 76
    OR              shift and go to state 105
    XOR             shift and go to state 82
    XNOR            shift and go to state 87
    LPAREN          shift and go to state 96
    LBRACE          shift and go to state 77
    DOLLER          shift and go to state 100
    ID              shift and go to state 85
    INTNUMBER_DEC   shift and go to state 79
    SIGNED_INTNUMBER_DEC shift and go to state 101
    INTNUMBER_BIN   shift and go to state 111
    SIGNED_INTNUMBER_BIN shift and go to state 112
    INTNUMBER_OCT   shift and go to state 86
    SIGNED_INTNUMBER_OCT shift and go to state 106
    INTNUMBER_HEX   shift and go to state 93
    SIGNED_INTNUMBER_HEX shift and go to state 83
    FLOATNUMBER     shift and go to state 102
    STRING_LITERAL  shift and go to state 107

    stringliteral                  shift and go to state 99
    intnumber                      shift and go to state 81
    expression                     shift and go to state 430
    repeat                         shift and go to state 108
    partselect                     shift and go to state 103
    identifier                     shift and go to state 104
    pointer                        shift and go to state 80
    functioncall                   shift and go to state 94
    scope                          shift and go to state 84
    systemcall                     shift and go to state 109
    const_expression               shift and go to state 110
    concat                         shift and go to state 88
    floatnumber                    shift and go to state 90

state 310

    (97) lpartselect -> pointer LBRACKET . expression COLON expression RBRACKET
    (98) lpartselect -> pointer LBRACKET . expression PLUSCOLON expression RBRACKET
    (99) lpartselect -> pointer LBRACKET . expression MINUSCOLON expression RBRACKET
    (171) pointer -> pointer LBRACKET . expression RBRACKET
    (116) expression -> . MINUS expression
    (117) expression -> . PLUS expression
    (118) expression -> . LNOT expression
    (119) expression -> . NOT expression
    (120) expression -> . AND expression
    (121) expression -> . NAND expression
    (122) expression -> . NOR expression
    (123) expression -> . OR expression
    (124) expression -> . XOR expression
    (125) expression -> . XNOR expression
    (126) expression -> . expression POWER expression
    (127) expression -> . expression TIMES expression
    (128) expression -> . expression DIVIDE expression
    (129) expression -> . expression MOD expression
    (130) expression -> . expression PLUS expression
    (131) expression -> . expression MINUS expression
    (132) expression -> . expression LSHIFT expression
    (133) expression -> . expression RSHIFT expression
    (134) expression -> . expression LSHIFTA expression
    (135) expression -> . expression RSHIFTA expression
    (136) expression -> . expression LT expression
    (137) expression -> . expression GT expression
    (138) expression -> . expression LE expression
    (139) expression -> . expression GE expression
    (140) expression -> . expression EQ expression
    (141) expression -> . expression NE expression
    (142) expression -> . expression EQL expression
    (143) expression -> . expression NEL expression
    (144) expression -> . expression AND expression
    (145) expression -> . expression XOR expression
    (146) expression -> . expression XNOR expression
    (147) expression -> . expression OR expression
    (148) expression -> . expression LAND expression
    (149) expression -> . expression LOR expression
    (150) expression -> . expression COND expression COLON expression
    (151) expression -> . LPAREN expression RPAREN
    (152) expression -> . concat
    (153) expression -> . repeat
    (154) expression -> . partselect
    (155) expression -> . pointer
    (156) expression -> . functioncall
    (157) expression -> . systemcall
    (158) expression -> . identifier
    (159) expression -> . const_expression
    (160) concat -> . LBRACE concatlist RBRACE
    (163) repeat -> . LBRACE expression concat RBRACE
    (164) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (165) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (166) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (167) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (168) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (169) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (170) pointer -> . identifier LBRACKET expression RBRACKET
    (171) pointer -> . pointer LBRACKET expression RBRACKET
    (339) functioncall -> . identifier LPAREN func_args RPAREN
    (319) systemcall -> . DOLLER ID
    (320) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (357) identifier -> . ID
    (358) identifier -> . scope ID
    (172) const_expression -> . intnumber
    (173) const_expression -> . floatnumber
    (174) const_expression -> . stringliteral
    (359) scope -> . identifier DOT
    (360) scope -> . pointer DOT
    (176) intnumber -> . INTNUMBER_DEC
    (177) intnumber -> . SIGNED_INTNUMBER_DEC
    (178) intnumber -> . INTNUMBER_BIN
    (179) intnumber -> . SIGNED_INTNUMBER_BIN
    (180) intnumber -> . INTNUMBER_OCT
    (181) intnumber -> . SIGNED_INTNUMBER_OCT
    (182) intnumber -> . INTNUMBER_HEX
    (183) intnumber -> . SIGNED_INTNUMBER_HEX
    (175) floatnumber -> . FLOATNUMBER
    (184) stringliteral -> . STRING_LITERAL

    MINUS           shift and go to state 97
    PLUS            shift and go to state 89
    LNOT            shift and go to state 95
    NOT             shift and go to state 78
    AND             shift and go to state 91
    NAND            shift and go to state 98
    NOR             shift and go to state 76
    OR              shift and go to state 105
    XOR             shift and go to state 82
    XNOR            shift and go to state 87
    LPAREN          shift and go to state 96
    LBRACE          shift and go to state 77
    DOLLER          shift and go to state 100
    ID              shift and go to state 85
    INTNUMBER_DEC   shift and go to state 79
    SIGNED_INTNUMBER_DEC shift and go to state 101
    INTNUMBER_BIN   shift and go to state 111
    SIGNED_INTNUMBER_BIN shift and go to state 112
    INTNUMBER_OCT   shift and go to state 86
    SIGNED_INTNUMBER_OCT shift and go to state 106
    INTNUMBER_HEX   shift and go to state 93
    SIGNED_INTNUMBER_HEX shift and go to state 83
    FLOATNUMBER     shift and go to state 102
    STRING_LITERAL  shift and go to state 107

    stringliteral                  shift and go to state 99
    intnumber                      shift and go to state 81
    expression                     shift and go to state 431
    repeat                         shift and go to state 108
    partselect                     shift and go to state 103
    identifier                     shift and go to state 104
    pointer                        shift and go to state 80
    functioncall                   shift and go to state 94
    scope                          shift and go to state 84
    systemcall                     shift and go to state 109
    const_expression               shift and go to state 110
    concat                         shift and go to state 88
    floatnumber                    shift and go to state 90

state 311

    (222) delays -> DELAY LPAREN . expression RPAREN
    (116) expression -> . MINUS expression
    (117) expression -> . PLUS expression
    (118) expression -> . LNOT expression
    (119) expression -> . NOT expression
    (120) expression -> . AND expression
    (121) expression -> . NAND expression
    (122) expression -> . NOR expression
    (123) expression -> . OR expression
    (124) expression -> . XOR expression
    (125) expression -> . XNOR expression
    (126) expression -> . expression POWER expression
    (127) expression -> . expression TIMES expression
    (128) expression -> . expression DIVIDE expression
    (129) expression -> . expression MOD expression
    (130) expression -> . expression PLUS expression
    (131) expression -> . expression MINUS expression
    (132) expression -> . expression LSHIFT expression
    (133) expression -> . expression RSHIFT expression
    (134) expression -> . expression LSHIFTA expression
    (135) expression -> . expression RSHIFTA expression
    (136) expression -> . expression LT expression
    (137) expression -> . expression GT expression
    (138) expression -> . expression LE expression
    (139) expression -> . expression GE expression
    (140) expression -> . expression EQ expression
    (141) expression -> . expression NE expression
    (142) expression -> . expression EQL expression
    (143) expression -> . expression NEL expression
    (144) expression -> . expression AND expression
    (145) expression -> . expression XOR expression
    (146) expression -> . expression XNOR expression
    (147) expression -> . expression OR expression
    (148) expression -> . expression LAND expression
    (149) expression -> . expression LOR expression
    (150) expression -> . expression COND expression COLON expression
    (151) expression -> . LPAREN expression RPAREN
    (152) expression -> . concat
    (153) expression -> . repeat
    (154) expression -> . partselect
    (155) expression -> . pointer
    (156) expression -> . functioncall
    (157) expression -> . systemcall
    (158) expression -> . identifier
    (159) expression -> . const_expression
    (160) concat -> . LBRACE concatlist RBRACE
    (163) repeat -> . LBRACE expression concat RBRACE
    (164) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (165) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (166) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (167) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (168) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (169) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (170) pointer -> . identifier LBRACKET expression RBRACKET
    (171) pointer -> . pointer LBRACKET expression RBRACKET
    (339) functioncall -> . identifier LPAREN func_args RPAREN
    (319) systemcall -> . DOLLER ID
    (320) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (357) identifier -> . ID
    (358) identifier -> . scope ID
    (172) const_expression -> . intnumber
    (173) const_expression -> . floatnumber
    (174) const_expression -> . stringliteral
    (359) scope -> . identifier DOT
    (360) scope -> . pointer DOT
    (176) intnumber -> . INTNUMBER_DEC
    (177) intnumber -> . SIGNED_INTNUMBER_DEC
    (178) intnumber -> . INTNUMBER_BIN
    (179) intnumber -> . SIGNED_INTNUMBER_BIN
    (180) intnumber -> . INTNUMBER_OCT
    (181) intnumber -> . SIGNED_INTNUMBER_OCT
    (182) intnumber -> . INTNUMBER_HEX
    (183) intnumber -> . SIGNED_INTNUMBER_HEX
    (175) floatnumber -> . FLOATNUMBER
    (184) stringliteral -> . STRING_LITERAL

    MINUS           shift and go to state 97
    PLUS            shift and go to state 89
    LNOT            shift and go to state 95
    NOT             shift and go to state 78
    AND             shift and go to state 91
    NAND            shift and go to state 98
    NOR             shift and go to state 76
    OR              shift and go to state 105
    XOR             shift and go to state 82
    XNOR            shift and go to state 87
    LPAREN          shift and go to state 96
    LBRACE          shift and go to state 77
    DOLLER          shift and go to state 100
    ID              shift and go to state 85
    INTNUMBER_DEC   shift and go to state 79
    SIGNED_INTNUMBER_DEC shift and go to state 101
    INTNUMBER_BIN   shift and go to state 111
    SIGNED_INTNUMBER_BIN shift and go to state 112
    INTNUMBER_OCT   shift and go to state 86
    SIGNED_INTNUMBER_OCT shift and go to state 106
    INTNUMBER_HEX   shift and go to state 93
    SIGNED_INTNUMBER_HEX shift and go to state 83
    FLOATNUMBER     shift and go to state 102
    STRING_LITERAL  shift and go to state 107

    stringliteral                  shift and go to state 99
    intnumber                      shift and go to state 81
    expression                     shift and go to state 432
    repeat                         shift and go to state 108
    partselect                     shift and go to state 103
    identifier                     shift and go to state 104
    pointer                        shift and go to state 80
    functioncall                   shift and go to state 94
    scope                          shift and go to state 84
    systemcall                     shift and go to state 109
    const_expression               shift and go to state 110
    concat                         shift and go to state 88
    floatnumber                    shift and go to state 90

state 312

    (223) delays -> DELAY identifier .
    (359) scope -> identifier . DOT
    (170) pointer -> identifier . LBRACKET expression RBRACKET

    MINUS           reduce using rule 223 (delays -> DELAY identifier .)
    PLUS            reduce using rule 223 (delays -> DELAY identifier .)
    LNOT            reduce using rule 223 (delays -> DELAY identifier .)
    NOT             reduce using rule 223 (delays -> DELAY identifier .)
    AND             reduce using rule 223 (delays -> DELAY identifier .)
    NAND            reduce using rule 223 (delays -> DELAY identifier .)
    NOR             reduce using rule 223 (delays -> DELAY identifier .)
    OR              reduce using rule 223 (delays -> DELAY identifier .)
    XOR             reduce using rule 223 (delays -> DELAY identifier .)
    XNOR            reduce using rule 223 (delays -> DELAY identifier .)
    LPAREN          reduce using rule 223 (delays -> DELAY identifier .)
    LBRACE          reduce using rule 223 (delays -> DELAY identifier .)
    DOLLER          reduce using rule 223 (delays -> DELAY identifier .)
    ID              reduce using rule 223 (delays -> DELAY identifier .)
    INTNUMBER_DEC   reduce using rule 223 (delays -> DELAY identifier .)
    SIGNED_INTNUMBER_DEC reduce using rule 223 (delays -> DELAY identifier .)
    INTNUMBER_BIN   reduce using rule 223 (delays -> DELAY identifier .)
    SIGNED_INTNUMBER_BIN reduce using rule 223 (delays -> DELAY identifier .)
    INTNUMBER_OCT   reduce using rule 223 (delays -> DELAY identifier .)
    SIGNED_INTNUMBER_OCT reduce using rule 223 (delays -> DELAY identifier .)
    INTNUMBER_HEX   reduce using rule 223 (delays -> DELAY identifier .)
    SIGNED_INTNUMBER_HEX reduce using rule 223 (delays -> DELAY identifier .)
    FLOATNUMBER     reduce using rule 223 (delays -> DELAY identifier .)
    STRING_LITERAL  reduce using rule 223 (delays -> DELAY identifier .)
    IF              reduce using rule 223 (delays -> DELAY identifier .)
    DOT             shift and go to state 252
    LBRACKET        shift and go to state 433


state 313

    (224) delays -> DELAY intnumber .

    MINUS           reduce using rule 224 (delays -> DELAY intnumber .)
    PLUS            reduce using rule 224 (delays -> DELAY intnumber .)
    LNOT            reduce using rule 224 (delays -> DELAY intnumber .)
    NOT             reduce using rule 224 (delays -> DELAY intnumber .)
    AND             reduce using rule 224 (delays -> DELAY intnumber .)
    NAND            reduce using rule 224 (delays -> DELAY intnumber .)
    NOR             reduce using rule 224 (delays -> DELAY intnumber .)
    OR              reduce using rule 224 (delays -> DELAY intnumber .)
    XOR             reduce using rule 224 (delays -> DELAY intnumber .)
    XNOR            reduce using rule 224 (delays -> DELAY intnumber .)
    LPAREN          reduce using rule 224 (delays -> DELAY intnumber .)
    LBRACE          reduce using rule 224 (delays -> DELAY intnumber .)
    DOLLER          reduce using rule 224 (delays -> DELAY intnumber .)
    ID              reduce using rule 224 (delays -> DELAY intnumber .)
    INTNUMBER_DEC   reduce using rule 224 (delays -> DELAY intnumber .)
    SIGNED_INTNUMBER_DEC reduce using rule 224 (delays -> DELAY intnumber .)
    INTNUMBER_BIN   reduce using rule 224 (delays -> DELAY intnumber .)
    SIGNED_INTNUMBER_BIN reduce using rule 224 (delays -> DELAY intnumber .)
    INTNUMBER_OCT   reduce using rule 224 (delays -> DELAY intnumber .)
    SIGNED_INTNUMBER_OCT reduce using rule 224 (delays -> DELAY intnumber .)
    INTNUMBER_HEX   reduce using rule 224 (delays -> DELAY intnumber .)
    SIGNED_INTNUMBER_HEX reduce using rule 224 (delays -> DELAY intnumber .)
    FLOATNUMBER     reduce using rule 224 (delays -> DELAY intnumber .)
    STRING_LITERAL  reduce using rule 224 (delays -> DELAY intnumber .)
    IF              reduce using rule 224 (delays -> DELAY intnumber .)


state 314

    (225) delays -> DELAY floatnumber .

    MINUS           reduce using rule 225 (delays -> DELAY floatnumber .)
    PLUS            reduce using rule 225 (delays -> DELAY floatnumber .)
    LNOT            reduce using rule 225 (delays -> DELAY floatnumber .)
    NOT             reduce using rule 225 (delays -> DELAY floatnumber .)
    AND             reduce using rule 225 (delays -> DELAY floatnumber .)
    NAND            reduce using rule 225 (delays -> DELAY floatnumber .)
    NOR             reduce using rule 225 (delays -> DELAY floatnumber .)
    OR              reduce using rule 225 (delays -> DELAY floatnumber .)
    XOR             reduce using rule 225 (delays -> DELAY floatnumber .)
    XNOR            reduce using rule 225 (delays -> DELAY floatnumber .)
    LPAREN          reduce using rule 225 (delays -> DELAY floatnumber .)
    LBRACE          reduce using rule 225 (delays -> DELAY floatnumber .)
    DOLLER          reduce using rule 225 (delays -> DELAY floatnumber .)
    ID              reduce using rule 225 (delays -> DELAY floatnumber .)
    INTNUMBER_DEC   reduce using rule 225 (delays -> DELAY floatnumber .)
    SIGNED_INTNUMBER_DEC reduce using rule 225 (delays -> DELAY floatnumber .)
    INTNUMBER_BIN   reduce using rule 225 (delays -> DELAY floatnumber .)
    SIGNED_INTNUMBER_BIN reduce using rule 225 (delays -> DELAY floatnumber .)
    INTNUMBER_OCT   reduce using rule 225 (delays -> DELAY floatnumber .)
    SIGNED_INTNUMBER_OCT reduce using rule 225 (delays -> DELAY floatnumber .)
    INTNUMBER_HEX   reduce using rule 225 (delays -> DELAY floatnumber .)
    SIGNED_INTNUMBER_HEX reduce using rule 225 (delays -> DELAY floatnumber .)
    FLOATNUMBER     reduce using rule 225 (delays -> DELAY floatnumber .)
    STRING_LITERAL  reduce using rule 225 (delays -> DELAY floatnumber .)
    IF              reduce using rule 225 (delays -> DELAY floatnumber .)


state 315

    (360) scope -> pointer . DOT
    (171) pointer -> pointer . LBRACKET expression RBRACKET

    DOT             shift and go to state 215
    LBRACKET        shift and go to state 434


state 316

    (96) assignment -> ASSIGN delays lvalue . EQUALS delays rvalue SEMICOLON

    EQUALS          shift and go to state 435


state 317

    (83) realnamelist -> realnamelist COMMA . realname
    (85) realname -> . ID

    ID              shift and go to state 173

    realname                       shift and go to state 436

state 318

    (82) realdecl -> REAL realnamelist SEMICOLON .

    END             reduce using rule 82 (realdecl -> REAL realnamelist SEMICOLON .)
    INTEGER         reduce using rule 82 (realdecl -> REAL realnamelist SEMICOLON .)
    REAL            reduce using rule 82 (realdecl -> REAL realnamelist SEMICOLON .)
    PARAMETER       reduce using rule 82 (realdecl -> REAL realnamelist SEMICOLON .)
    LOCALPARAM      reduce using rule 82 (realdecl -> REAL realnamelist SEMICOLON .)
    IF              reduce using rule 82 (realdecl -> REAL realnamelist SEMICOLON .)
    CASE            reduce using rule 82 (realdecl -> REAL realnamelist SEMICOLON .)
    FOR             reduce using rule 82 (realdecl -> REAL realnamelist SEMICOLON .)
    WHILE           reduce using rule 82 (realdecl -> REAL realnamelist SEMICOLON .)
    WAIT            reduce using rule 82 (realdecl -> REAL realnamelist SEMICOLON .)
    FOREVER         reduce using rule 82 (realdecl -> REAL realnamelist SEMICOLON .)
    BEGIN           reduce using rule 82 (realdecl -> REAL realnamelist SEMICOLON .)
    FORK            reduce using rule 82 (realdecl -> REAL realnamelist SEMICOLON .)
    DELAY           reduce using rule 82 (realdecl -> REAL realnamelist SEMICOLON .)
    AT              reduce using rule 82 (realdecl -> REAL realnamelist SEMICOLON .)
    DOLLER          reduce using rule 82 (realdecl -> REAL realnamelist SEMICOLON .)
    DISABLE         reduce using rule 82 (realdecl -> REAL realnamelist SEMICOLON .)
    INPUT           reduce using rule 82 (realdecl -> REAL realnamelist SEMICOLON .)
    OUTPUT          reduce using rule 82 (realdecl -> REAL realnamelist SEMICOLON .)
    INOUT           reduce using rule 82 (realdecl -> REAL realnamelist SEMICOLON .)
    TRI             reduce using rule 82 (realdecl -> REAL realnamelist SEMICOLON .)
    REG             reduce using rule 82 (realdecl -> REAL realnamelist SEMICOLON .)
    WIRE            reduce using rule 82 (realdecl -> REAL realnamelist SEMICOLON .)
    SIGNED          reduce using rule 82 (realdecl -> REAL realnamelist SEMICOLON .)
    LBRACE          reduce using rule 82 (realdecl -> REAL realnamelist SEMICOLON .)
    ID              reduce using rule 82 (realdecl -> REAL realnamelist SEMICOLON .)
    SEMICOLON       reduce using rule 82 (realdecl -> REAL realnamelist SEMICOLON .)
    GENVAR          reduce using rule 82 (realdecl -> REAL realnamelist SEMICOLON .)
    ASSIGN          reduce using rule 82 (realdecl -> REAL realnamelist SEMICOLON .)
    ALWAYS          reduce using rule 82 (realdecl -> REAL realnamelist SEMICOLON .)
    INITIAL         reduce using rule 82 (realdecl -> REAL realnamelist SEMICOLON .)
    FUNCTION        reduce using rule 82 (realdecl -> REAL realnamelist SEMICOLON .)
    TASK            reduce using rule 82 (realdecl -> REAL realnamelist SEMICOLON .)
    LPAREN          reduce using rule 82 (realdecl -> REAL realnamelist SEMICOLON .)
    ENDGENERATE     reduce using rule 82 (realdecl -> REAL realnamelist SEMICOLON .)
    ELSE            reduce using rule 82 (realdecl -> REAL realnamelist SEMICOLON .)
    ENDMODULE       reduce using rule 82 (realdecl -> REAL realnamelist SEMICOLON .)
    GENERATE        reduce using rule 82 (realdecl -> REAL realnamelist SEMICOLON .)


state 319

    (277) instance -> ID parameterlist ID . LPAREN instance_ports RPAREN SEMICOLON

    LPAREN          shift and go to state 437


state 320

    (278) parameterlist -> DELAY LPAREN . param_args RPAREN
    (279) parameterlist -> DELAY LPAREN . param_args_noname RPAREN
    (283) param_args -> . param_args COMMA param_arg
    (284) param_args -> . param_arg
    (281) param_args_noname -> . param_args_noname COMMA param_arg_noname
    (282) param_args_noname -> . param_arg_noname
    (286) param_arg -> . DOT ID LPAREN expression RPAREN
    (285) param_arg_noname -> . expression
    (116) expression -> . MINUS expression
    (117) expression -> . PLUS expression
    (118) expression -> . LNOT expression
    (119) expression -> . NOT expression
    (120) expression -> . AND expression
    (121) expression -> . NAND expression
    (122) expression -> . NOR expression
    (123) expression -> . OR expression
    (124) expression -> . XOR expression
    (125) expression -> . XNOR expression
    (126) expression -> . expression POWER expression
    (127) expression -> . expression TIMES expression
    (128) expression -> . expression DIVIDE expression
    (129) expression -> . expression MOD expression
    (130) expression -> . expression PLUS expression
    (131) expression -> . expression MINUS expression
    (132) expression -> . expression LSHIFT expression
    (133) expression -> . expression RSHIFT expression
    (134) expression -> . expression LSHIFTA expression
    (135) expression -> . expression RSHIFTA expression
    (136) expression -> . expression LT expression
    (137) expression -> . expression GT expression
    (138) expression -> . expression LE expression
    (139) expression -> . expression GE expression
    (140) expression -> . expression EQ expression
    (141) expression -> . expression NE expression
    (142) expression -> . expression EQL expression
    (143) expression -> . expression NEL expression
    (144) expression -> . expression AND expression
    (145) expression -> . expression XOR expression
    (146) expression -> . expression XNOR expression
    (147) expression -> . expression OR expression
    (148) expression -> . expression LAND expression
    (149) expression -> . expression LOR expression
    (150) expression -> . expression COND expression COLON expression
    (151) expression -> . LPAREN expression RPAREN
    (152) expression -> . concat
    (153) expression -> . repeat
    (154) expression -> . partselect
    (155) expression -> . pointer
    (156) expression -> . functioncall
    (157) expression -> . systemcall
    (158) expression -> . identifier
    (159) expression -> . const_expression
    (160) concat -> . LBRACE concatlist RBRACE
    (163) repeat -> . LBRACE expression concat RBRACE
    (164) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (165) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (166) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (167) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (168) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (169) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (170) pointer -> . identifier LBRACKET expression RBRACKET
    (171) pointer -> . pointer LBRACKET expression RBRACKET
    (339) functioncall -> . identifier LPAREN func_args RPAREN
    (319) systemcall -> . DOLLER ID
    (320) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (357) identifier -> . ID
    (358) identifier -> . scope ID
    (172) const_expression -> . intnumber
    (173) const_expression -> . floatnumber
    (174) const_expression -> . stringliteral
    (359) scope -> . identifier DOT
    (360) scope -> . pointer DOT
    (176) intnumber -> . INTNUMBER_DEC
    (177) intnumber -> . SIGNED_INTNUMBER_DEC
    (178) intnumber -> . INTNUMBER_BIN
    (179) intnumber -> . SIGNED_INTNUMBER_BIN
    (180) intnumber -> . INTNUMBER_OCT
    (181) intnumber -> . SIGNED_INTNUMBER_OCT
    (182) intnumber -> . INTNUMBER_HEX
    (183) intnumber -> . SIGNED_INTNUMBER_HEX
    (175) floatnumber -> . FLOATNUMBER
    (184) stringliteral -> . STRING_LITERAL

    DOT             shift and go to state 439
    MINUS           shift and go to state 97
    PLUS            shift and go to state 89
    LNOT            shift and go to state 95
    NOT             shift and go to state 78
    AND             shift and go to state 91
    NAND            shift and go to state 98
    NOR             shift and go to state 76
    OR              shift and go to state 105
    XOR             shift and go to state 82
    XNOR            shift and go to state 87
    LPAREN          shift and go to state 96
    LBRACE          shift and go to state 77
    DOLLER          shift and go to state 100
    ID              shift and go to state 85
    INTNUMBER_DEC   shift and go to state 79
    SIGNED_INTNUMBER_DEC shift and go to state 101
    INTNUMBER_BIN   shift and go to state 111
    SIGNED_INTNUMBER_BIN shift and go to state 112
    INTNUMBER_OCT   shift and go to state 86
    SIGNED_INTNUMBER_OCT shift and go to state 106
    INTNUMBER_HEX   shift and go to state 93
    SIGNED_INTNUMBER_HEX shift and go to state 83
    FLOATNUMBER     shift and go to state 102
    STRING_LITERAL  shift and go to state 107

    stringliteral                  shift and go to state 99
    intnumber                      shift and go to state 81
    param_arg_noname               shift and go to state 440
    expression                     shift and go to state 441
    repeat                         shift and go to state 108
    partselect                     shift and go to state 103
    identifier                     shift and go to state 104
    pointer                        shift and go to state 80
    functioncall                   shift and go to state 94
    scope                          shift and go to state 84
    systemcall                     shift and go to state 109
    param_args_noname              shift and go to state 438
    param_args                     shift and go to state 442
    const_expression               shift and go to state 110
    param_arg                      shift and go to state 443
    concat                         shift and go to state 88
    floatnumber                    shift and go to state 90

state 321

    (90) localparamdecl -> LOCALPARAM width param_substitution_list . SEMICOLON
    (92) param_substitution_list -> param_substitution_list . COMMA param_substitution

    SEMICOLON       shift and go to state 444
    COMMA           shift and go to state 324


state 322

    (91) localparamdecl -> LOCALPARAM INTEGER param_substitution_list . SEMICOLON
    (92) param_substitution_list -> param_substitution_list . COMMA param_substitution

    SEMICOLON       shift and go to state 445
    COMMA           shift and go to state 324


state 323

    (94) param_substitution -> ID EQUALS . rvalue
    (115) rvalue -> . expression
    (116) expression -> . MINUS expression
    (117) expression -> . PLUS expression
    (118) expression -> . LNOT expression
    (119) expression -> . NOT expression
    (120) expression -> . AND expression
    (121) expression -> . NAND expression
    (122) expression -> . NOR expression
    (123) expression -> . OR expression
    (124) expression -> . XOR expression
    (125) expression -> . XNOR expression
    (126) expression -> . expression POWER expression
    (127) expression -> . expression TIMES expression
    (128) expression -> . expression DIVIDE expression
    (129) expression -> . expression MOD expression
    (130) expression -> . expression PLUS expression
    (131) expression -> . expression MINUS expression
    (132) expression -> . expression LSHIFT expression
    (133) expression -> . expression RSHIFT expression
    (134) expression -> . expression LSHIFTA expression
    (135) expression -> . expression RSHIFTA expression
    (136) expression -> . expression LT expression
    (137) expression -> . expression GT expression
    (138) expression -> . expression LE expression
    (139) expression -> . expression GE expression
    (140) expression -> . expression EQ expression
    (141) expression -> . expression NE expression
    (142) expression -> . expression EQL expression
    (143) expression -> . expression NEL expression
    (144) expression -> . expression AND expression
    (145) expression -> . expression XOR expression
    (146) expression -> . expression XNOR expression
    (147) expression -> . expression OR expression
    (148) expression -> . expression LAND expression
    (149) expression -> . expression LOR expression
    (150) expression -> . expression COND expression COLON expression
    (151) expression -> . LPAREN expression RPAREN
    (152) expression -> . concat
    (153) expression -> . repeat
    (154) expression -> . partselect
    (155) expression -> . pointer
    (156) expression -> . functioncall
    (157) expression -> . systemcall
    (158) expression -> . identifier
    (159) expression -> . const_expression
    (160) concat -> . LBRACE concatlist RBRACE
    (163) repeat -> . LBRACE expression concat RBRACE
    (164) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (165) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (166) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (167) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (168) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (169) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (170) pointer -> . identifier LBRACKET expression RBRACKET
    (171) pointer -> . pointer LBRACKET expression RBRACKET
    (339) functioncall -> . identifier LPAREN func_args RPAREN
    (319) systemcall -> . DOLLER ID
    (320) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (357) identifier -> . ID
    (358) identifier -> . scope ID
    (172) const_expression -> . intnumber
    (173) const_expression -> . floatnumber
    (174) const_expression -> . stringliteral
    (359) scope -> . identifier DOT
    (360) scope -> . pointer DOT
    (176) intnumber -> . INTNUMBER_DEC
    (177) intnumber -> . SIGNED_INTNUMBER_DEC
    (178) intnumber -> . INTNUMBER_BIN
    (179) intnumber -> . SIGNED_INTNUMBER_BIN
    (180) intnumber -> . INTNUMBER_OCT
    (181) intnumber -> . SIGNED_INTNUMBER_OCT
    (182) intnumber -> . INTNUMBER_HEX
    (183) intnumber -> . SIGNED_INTNUMBER_HEX
    (175) floatnumber -> . FLOATNUMBER
    (184) stringliteral -> . STRING_LITERAL

    MINUS           shift and go to state 97
    PLUS            shift and go to state 89
    LNOT            shift and go to state 95
    NOT             shift and go to state 78
    AND             shift and go to state 91
    NAND            shift and go to state 98
    NOR             shift and go to state 76
    OR              shift and go to state 105
    XOR             shift and go to state 82
    XNOR            shift and go to state 87
    LPAREN          shift and go to state 96
    LBRACE          shift and go to state 77
    DOLLER          shift and go to state 100
    ID              shift and go to state 85
    INTNUMBER_DEC   shift and go to state 79
    SIGNED_INTNUMBER_DEC shift and go to state 101
    INTNUMBER_BIN   shift and go to state 111
    SIGNED_INTNUMBER_BIN shift and go to state 112
    INTNUMBER_OCT   shift and go to state 86
    SIGNED_INTNUMBER_OCT shift and go to state 106
    INTNUMBER_HEX   shift and go to state 93
    SIGNED_INTNUMBER_HEX shift and go to state 83
    FLOATNUMBER     shift and go to state 102
    STRING_LITERAL  shift and go to state 107

    stringliteral                  shift and go to state 99
    intnumber                      shift and go to state 81
    expression                     shift and go to state 428
    repeat                         shift and go to state 108
    rvalue                         shift and go to state 446
    partselect                     shift and go to state 103
    identifier                     shift and go to state 104
    pointer                        shift and go to state 80
    functioncall                   shift and go to state 94
    scope                          shift and go to state 84
    systemcall                     shift and go to state 109
    const_expression               shift and go to state 110
    concat                         shift and go to state 88
    floatnumber                    shift and go to state 90

state 324

    (92) param_substitution_list -> param_substitution_list COMMA . param_substitution
    (94) param_substitution -> . ID EQUALS rvalue

    ID              shift and go to state 181

    param_substitution             shift and go to state 447

state 325

    (89) localparamdecl -> LOCALPARAM param_substitution_list SEMICOLON .

    ENDGENERATE     reduce using rule 89 (localparamdecl -> LOCALPARAM param_substitution_list SEMICOLON .)
    IF              reduce using rule 89 (localparamdecl -> LOCALPARAM param_substitution_list SEMICOLON .)
    FOR             reduce using rule 89 (localparamdecl -> LOCALPARAM param_substitution_list SEMICOLON .)
    INTEGER         reduce using rule 89 (localparamdecl -> LOCALPARAM param_substitution_list SEMICOLON .)
    REAL            reduce using rule 89 (localparamdecl -> LOCALPARAM param_substitution_list SEMICOLON .)
    PARAMETER       reduce using rule 89 (localparamdecl -> LOCALPARAM param_substitution_list SEMICOLON .)
    LOCALPARAM      reduce using rule 89 (localparamdecl -> LOCALPARAM param_substitution_list SEMICOLON .)
    GENVAR          reduce using rule 89 (localparamdecl -> LOCALPARAM param_substitution_list SEMICOLON .)
    ASSIGN          reduce using rule 89 (localparamdecl -> LOCALPARAM param_substitution_list SEMICOLON .)
    ALWAYS          reduce using rule 89 (localparamdecl -> LOCALPARAM param_substitution_list SEMICOLON .)
    INITIAL         reduce using rule 89 (localparamdecl -> LOCALPARAM param_substitution_list SEMICOLON .)
    ID              reduce using rule 89 (localparamdecl -> LOCALPARAM param_substitution_list SEMICOLON .)
    FUNCTION        reduce using rule 89 (localparamdecl -> LOCALPARAM param_substitution_list SEMICOLON .)
    TASK            reduce using rule 89 (localparamdecl -> LOCALPARAM param_substitution_list SEMICOLON .)
    LPAREN          reduce using rule 89 (localparamdecl -> LOCALPARAM param_substitution_list SEMICOLON .)
    INPUT           reduce using rule 89 (localparamdecl -> LOCALPARAM param_substitution_list SEMICOLON .)
    OUTPUT          reduce using rule 89 (localparamdecl -> LOCALPARAM param_substitution_list SEMICOLON .)
    INOUT           reduce using rule 89 (localparamdecl -> LOCALPARAM param_substitution_list SEMICOLON .)
    TRI             reduce using rule 89 (localparamdecl -> LOCALPARAM param_substitution_list SEMICOLON .)
    REG             reduce using rule 89 (localparamdecl -> LOCALPARAM param_substitution_list SEMICOLON .)
    WIRE            reduce using rule 89 (localparamdecl -> LOCALPARAM param_substitution_list SEMICOLON .)
    SIGNED          reduce using rule 89 (localparamdecl -> LOCALPARAM param_substitution_list SEMICOLON .)
    ELSE            reduce using rule 89 (localparamdecl -> LOCALPARAM param_substitution_list SEMICOLON .)
    END             reduce using rule 89 (localparamdecl -> LOCALPARAM param_substitution_list SEMICOLON .)
    CASE            reduce using rule 89 (localparamdecl -> LOCALPARAM param_substitution_list SEMICOLON .)
    WHILE           reduce using rule 89 (localparamdecl -> LOCALPARAM param_substitution_list SEMICOLON .)
    WAIT            reduce using rule 89 (localparamdecl -> LOCALPARAM param_substitution_list SEMICOLON .)
    FOREVER         reduce using rule 89 (localparamdecl -> LOCALPARAM param_substitution_list SEMICOLON .)
    BEGIN           reduce using rule 89 (localparamdecl -> LOCALPARAM param_substitution_list SEMICOLON .)
    FORK            reduce using rule 89 (localparamdecl -> LOCALPARAM param_substitution_list SEMICOLON .)
    DELAY           reduce using rule 89 (localparamdecl -> LOCALPARAM param_substitution_list SEMICOLON .)
    AT              reduce using rule 89 (localparamdecl -> LOCALPARAM param_substitution_list SEMICOLON .)
    DOLLER          reduce using rule 89 (localparamdecl -> LOCALPARAM param_substitution_list SEMICOLON .)
    DISABLE         reduce using rule 89 (localparamdecl -> LOCALPARAM param_substitution_list SEMICOLON .)
    LBRACE          reduce using rule 89 (localparamdecl -> LOCALPARAM param_substitution_list SEMICOLON .)
    SEMICOLON       reduce using rule 89 (localparamdecl -> LOCALPARAM param_substitution_list SEMICOLON .)
    ENDMODULE       reduce using rule 89 (localparamdecl -> LOCALPARAM param_substitution_list SEMICOLON .)
    GENERATE        reduce using rule 89 (localparamdecl -> LOCALPARAM param_substitution_list SEMICOLON .)


state 326

    (316) generate_for -> FOR LPAREN . forpre forcond forpost RPAREN generate_forcontent
    (253) forpre -> . blocking_substitution
    (254) forpre -> . SEMICOLON
    (219) blocking_substitution -> . delays lvalue EQUALS delays rvalue SEMICOLON
    (222) delays -> . DELAY LPAREN expression RPAREN
    (223) delays -> . DELAY identifier
    (224) delays -> . DELAY intnumber
    (225) delays -> . DELAY floatnumber
    (226) delays -> . empty
    (365) empty -> .

    SEMICOLON       shift and go to state 408
    DELAY           shift and go to state 170
    LBRACE          reduce using rule 365 (empty -> .)
    ID              reduce using rule 365 (empty -> .)

    blocking_substitution          shift and go to state 407
    empty                          shift and go to state 163
    forpre                         shift and go to state 448
    delays                         shift and go to state 410

state 327

    (310) generate_if -> IF LPAREN . cond RPAREN gif_true_item ELSE gif_false_item
    (311) generate_if -> IF LPAREN . cond RPAREN gif_true_item
    (248) cond -> . expression
    (116) expression -> . MINUS expression
    (117) expression -> . PLUS expression
    (118) expression -> . LNOT expression
    (119) expression -> . NOT expression
    (120) expression -> . AND expression
    (121) expression -> . NAND expression
    (122) expression -> . NOR expression
    (123) expression -> . OR expression
    (124) expression -> . XOR expression
    (125) expression -> . XNOR expression
    (126) expression -> . expression POWER expression
    (127) expression -> . expression TIMES expression
    (128) expression -> . expression DIVIDE expression
    (129) expression -> . expression MOD expression
    (130) expression -> . expression PLUS expression
    (131) expression -> . expression MINUS expression
    (132) expression -> . expression LSHIFT expression
    (133) expression -> . expression RSHIFT expression
    (134) expression -> . expression LSHIFTA expression
    (135) expression -> . expression RSHIFTA expression
    (136) expression -> . expression LT expression
    (137) expression -> . expression GT expression
    (138) expression -> . expression LE expression
    (139) expression -> . expression GE expression
    (140) expression -> . expression EQ expression
    (141) expression -> . expression NE expression
    (142) expression -> . expression EQL expression
    (143) expression -> . expression NEL expression
    (144) expression -> . expression AND expression
    (145) expression -> . expression XOR expression
    (146) expression -> . expression XNOR expression
    (147) expression -> . expression OR expression
    (148) expression -> . expression LAND expression
    (149) expression -> . expression LOR expression
    (150) expression -> . expression COND expression COLON expression
    (151) expression -> . LPAREN expression RPAREN
    (152) expression -> . concat
    (153) expression -> . repeat
    (154) expression -> . partselect
    (155) expression -> . pointer
    (156) expression -> . functioncall
    (157) expression -> . systemcall
    (158) expression -> . identifier
    (159) expression -> . const_expression
    (160) concat -> . LBRACE concatlist RBRACE
    (163) repeat -> . LBRACE expression concat RBRACE
    (164) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (165) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (166) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (167) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (168) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (169) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (170) pointer -> . identifier LBRACKET expression RBRACKET
    (171) pointer -> . pointer LBRACKET expression RBRACKET
    (339) functioncall -> . identifier LPAREN func_args RPAREN
    (319) systemcall -> . DOLLER ID
    (320) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (357) identifier -> . ID
    (358) identifier -> . scope ID
    (172) const_expression -> . intnumber
    (173) const_expression -> . floatnumber
    (174) const_expression -> . stringliteral
    (359) scope -> . identifier DOT
    (360) scope -> . pointer DOT
    (176) intnumber -> . INTNUMBER_DEC
    (177) intnumber -> . SIGNED_INTNUMBER_DEC
    (178) intnumber -> . INTNUMBER_BIN
    (179) intnumber -> . SIGNED_INTNUMBER_BIN
    (180) intnumber -> . INTNUMBER_OCT
    (181) intnumber -> . SIGNED_INTNUMBER_OCT
    (182) intnumber -> . INTNUMBER_HEX
    (183) intnumber -> . SIGNED_INTNUMBER_HEX
    (175) floatnumber -> . FLOATNUMBER
    (184) stringliteral -> . STRING_LITERAL

    MINUS           shift and go to state 97
    PLUS            shift and go to state 89
    LNOT            shift and go to state 95
    NOT             shift and go to state 78
    AND             shift and go to state 91
    NAND            shift and go to state 98
    NOR             shift and go to state 76
    OR              shift and go to state 105
    XOR             shift and go to state 82
    XNOR            shift and go to state 87
    LPAREN          shift and go to state 96
    LBRACE          shift and go to state 77
    DOLLER          shift and go to state 100
    ID              shift and go to state 85
    INTNUMBER_DEC   shift and go to state 79
    SIGNED_INTNUMBER_DEC shift and go to state 101
    INTNUMBER_BIN   shift and go to state 111
    SIGNED_INTNUMBER_BIN shift and go to state 112
    INTNUMBER_OCT   shift and go to state 86
    SIGNED_INTNUMBER_OCT shift and go to state 106
    INTNUMBER_HEX   shift and go to state 93
    SIGNED_INTNUMBER_HEX shift and go to state 83
    FLOATNUMBER     shift and go to state 102
    STRING_LITERAL  shift and go to state 107

    stringliteral                  shift and go to state 99
    intnumber                      shift and go to state 81
    expression                     shift and go to state 398
    repeat                         shift and go to state 108
    partselect                     shift and go to state 103
    identifier                     shift and go to state 104
    cond                           shift and go to state 449
    pointer                        shift and go to state 80
    functioncall                   shift and go to state 94
    scope                          shift and go to state 84
    systemcall                     shift and go to state 109
    const_expression               shift and go to state 110
    concat                         shift and go to state 88
    floatnumber                    shift and go to state 90

state 328

    (303) generate_items -> generate_items generate_item .

    END             reduce using rule 303 (generate_items -> generate_items generate_item .)
    IF              reduce using rule 303 (generate_items -> generate_items generate_item .)
    FOR             reduce using rule 303 (generate_items -> generate_items generate_item .)
    INTEGER         reduce using rule 303 (generate_items -> generate_items generate_item .)
    REAL            reduce using rule 303 (generate_items -> generate_items generate_item .)
    PARAMETER       reduce using rule 303 (generate_items -> generate_items generate_item .)
    LOCALPARAM      reduce using rule 303 (generate_items -> generate_items generate_item .)
    GENVAR          reduce using rule 303 (generate_items -> generate_items generate_item .)
    ASSIGN          reduce using rule 303 (generate_items -> generate_items generate_item .)
    ALWAYS          reduce using rule 303 (generate_items -> generate_items generate_item .)
    INITIAL         reduce using rule 303 (generate_items -> generate_items generate_item .)
    ID              reduce using rule 303 (generate_items -> generate_items generate_item .)
    FUNCTION        reduce using rule 303 (generate_items -> generate_items generate_item .)
    TASK            reduce using rule 303 (generate_items -> generate_items generate_item .)
    LPAREN          reduce using rule 303 (generate_items -> generate_items generate_item .)
    INPUT           reduce using rule 303 (generate_items -> generate_items generate_item .)
    OUTPUT          reduce using rule 303 (generate_items -> generate_items generate_item .)
    INOUT           reduce using rule 303 (generate_items -> generate_items generate_item .)
    TRI             reduce using rule 303 (generate_items -> generate_items generate_item .)
    REG             reduce using rule 303 (generate_items -> generate_items generate_item .)
    WIRE            reduce using rule 303 (generate_items -> generate_items generate_item .)
    SIGNED          reduce using rule 303 (generate_items -> generate_items generate_item .)
    ENDGENERATE     reduce using rule 303 (generate_items -> generate_items generate_item .)


state 329

    (301) generate -> GENERATE generate_items ENDGENERATE .

    ENDMODULE       reduce using rule 301 (generate -> GENERATE generate_items ENDGENERATE .)
    GENERATE        reduce using rule 301 (generate -> GENERATE generate_items ENDGENERATE .)
    INTEGER         reduce using rule 301 (generate -> GENERATE generate_items ENDGENERATE .)
    REAL            reduce using rule 301 (generate -> GENERATE generate_items ENDGENERATE .)
    PARAMETER       reduce using rule 301 (generate -> GENERATE generate_items ENDGENERATE .)
    LOCALPARAM      reduce using rule 301 (generate -> GENERATE generate_items ENDGENERATE .)
    GENVAR          reduce using rule 301 (generate -> GENERATE generate_items ENDGENERATE .)
    ASSIGN          reduce using rule 301 (generate -> GENERATE generate_items ENDGENERATE .)
    ALWAYS          reduce using rule 301 (generate -> GENERATE generate_items ENDGENERATE .)
    INITIAL         reduce using rule 301 (generate -> GENERATE generate_items ENDGENERATE .)
    ID              reduce using rule 301 (generate -> GENERATE generate_items ENDGENERATE .)
    FUNCTION        reduce using rule 301 (generate -> GENERATE generate_items ENDGENERATE .)
    TASK            reduce using rule 301 (generate -> GENERATE generate_items ENDGENERATE .)
    LPAREN          reduce using rule 301 (generate -> GENERATE generate_items ENDGENERATE .)
    INPUT           reduce using rule 301 (generate -> GENERATE generate_items ENDGENERATE .)
    OUTPUT          reduce using rule 301 (generate -> GENERATE generate_items ENDGENERATE .)
    INOUT           reduce using rule 301 (generate -> GENERATE generate_items ENDGENERATE .)
    TRI             reduce using rule 301 (generate -> GENERATE generate_items ENDGENERATE .)
    REG             reduce using rule 301 (generate -> GENERATE generate_items ENDGENERATE .)
    WIRE            reduce using rule 301 (generate -> GENERATE generate_items ENDGENERATE .)
    SIGNED          reduce using rule 301 (generate -> GENERATE generate_items ENDGENERATE .)


state 330

    (69) declnamelist -> declnamelist COMMA . declname
    (71) declname -> . ID
    (72) declname -> . ID length

    ID              shift and go to state 451

    declname                       shift and go to state 450

state 331

    (67) decl -> sigtypes declnamelist SEMICOLON .

    END             reduce using rule 67 (decl -> sigtypes declnamelist SEMICOLON .)
    IF              reduce using rule 67 (decl -> sigtypes declnamelist SEMICOLON .)
    FOR             reduce using rule 67 (decl -> sigtypes declnamelist SEMICOLON .)
    INTEGER         reduce using rule 67 (decl -> sigtypes declnamelist SEMICOLON .)
    REAL            reduce using rule 67 (decl -> sigtypes declnamelist SEMICOLON .)
    PARAMETER       reduce using rule 67 (decl -> sigtypes declnamelist SEMICOLON .)
    LOCALPARAM      reduce using rule 67 (decl -> sigtypes declnamelist SEMICOLON .)
    GENVAR          reduce using rule 67 (decl -> sigtypes declnamelist SEMICOLON .)
    ASSIGN          reduce using rule 67 (decl -> sigtypes declnamelist SEMICOLON .)
    ALWAYS          reduce using rule 67 (decl -> sigtypes declnamelist SEMICOLON .)
    INITIAL         reduce using rule 67 (decl -> sigtypes declnamelist SEMICOLON .)
    ID              reduce using rule 67 (decl -> sigtypes declnamelist SEMICOLON .)
    FUNCTION        reduce using rule 67 (decl -> sigtypes declnamelist SEMICOLON .)
    TASK            reduce using rule 67 (decl -> sigtypes declnamelist SEMICOLON .)
    LPAREN          reduce using rule 67 (decl -> sigtypes declnamelist SEMICOLON .)
    INPUT           reduce using rule 67 (decl -> sigtypes declnamelist SEMICOLON .)
    OUTPUT          reduce using rule 67 (decl -> sigtypes declnamelist SEMICOLON .)
    INOUT           reduce using rule 67 (decl -> sigtypes declnamelist SEMICOLON .)
    TRI             reduce using rule 67 (decl -> sigtypes declnamelist SEMICOLON .)
    REG             reduce using rule 67 (decl -> sigtypes declnamelist SEMICOLON .)
    WIRE            reduce using rule 67 (decl -> sigtypes declnamelist SEMICOLON .)
    SIGNED          reduce using rule 67 (decl -> sigtypes declnamelist SEMICOLON .)
    ELSE            reduce using rule 67 (decl -> sigtypes declnamelist SEMICOLON .)
    ENDGENERATE     reduce using rule 67 (decl -> sigtypes declnamelist SEMICOLON .)
    CASE            reduce using rule 67 (decl -> sigtypes declnamelist SEMICOLON .)
    WHILE           reduce using rule 67 (decl -> sigtypes declnamelist SEMICOLON .)
    WAIT            reduce using rule 67 (decl -> sigtypes declnamelist SEMICOLON .)
    FOREVER         reduce using rule 67 (decl -> sigtypes declnamelist SEMICOLON .)
    BEGIN           reduce using rule 67 (decl -> sigtypes declnamelist SEMICOLON .)
    FORK            reduce using rule 67 (decl -> sigtypes declnamelist SEMICOLON .)
    DELAY           reduce using rule 67 (decl -> sigtypes declnamelist SEMICOLON .)
    AT              reduce using rule 67 (decl -> sigtypes declnamelist SEMICOLON .)
    DOLLER          reduce using rule 67 (decl -> sigtypes declnamelist SEMICOLON .)
    DISABLE         reduce using rule 67 (decl -> sigtypes declnamelist SEMICOLON .)
    LBRACE          reduce using rule 67 (decl -> sigtypes declnamelist SEMICOLON .)
    SEMICOLON       reduce using rule 67 (decl -> sigtypes declnamelist SEMICOLON .)
    ENDMODULE       reduce using rule 67 (decl -> sigtypes declnamelist SEMICOLON .)
    GENERATE        reduce using rule 67 (decl -> sigtypes declnamelist SEMICOLON .)


state 332

    (73) declassign -> sigtypes declassign_element SEMICOLON .

    ELSE            reduce using rule 73 (declassign -> sigtypes declassign_element SEMICOLON .)
    ENDGENERATE     reduce using rule 73 (declassign -> sigtypes declassign_element SEMICOLON .)
    IF              reduce using rule 73 (declassign -> sigtypes declassign_element SEMICOLON .)
    FOR             reduce using rule 73 (declassign -> sigtypes declassign_element SEMICOLON .)
    INTEGER         reduce using rule 73 (declassign -> sigtypes declassign_element SEMICOLON .)
    REAL            reduce using rule 73 (declassign -> sigtypes declassign_element SEMICOLON .)
    PARAMETER       reduce using rule 73 (declassign -> sigtypes declassign_element SEMICOLON .)
    LOCALPARAM      reduce using rule 73 (declassign -> sigtypes declassign_element SEMICOLON .)
    GENVAR          reduce using rule 73 (declassign -> sigtypes declassign_element SEMICOLON .)
    ASSIGN          reduce using rule 73 (declassign -> sigtypes declassign_element SEMICOLON .)
    ALWAYS          reduce using rule 73 (declassign -> sigtypes declassign_element SEMICOLON .)
    INITIAL         reduce using rule 73 (declassign -> sigtypes declassign_element SEMICOLON .)
    ID              reduce using rule 73 (declassign -> sigtypes declassign_element SEMICOLON .)
    FUNCTION        reduce using rule 73 (declassign -> sigtypes declassign_element SEMICOLON .)
    TASK            reduce using rule 73 (declassign -> sigtypes declassign_element SEMICOLON .)
    LPAREN          reduce using rule 73 (declassign -> sigtypes declassign_element SEMICOLON .)
    INPUT           reduce using rule 73 (declassign -> sigtypes declassign_element SEMICOLON .)
    OUTPUT          reduce using rule 73 (declassign -> sigtypes declassign_element SEMICOLON .)
    INOUT           reduce using rule 73 (declassign -> sigtypes declassign_element SEMICOLON .)
    TRI             reduce using rule 73 (declassign -> sigtypes declassign_element SEMICOLON .)
    REG             reduce using rule 73 (declassign -> sigtypes declassign_element SEMICOLON .)
    WIRE            reduce using rule 73 (declassign -> sigtypes declassign_element SEMICOLON .)
    SIGNED          reduce using rule 73 (declassign -> sigtypes declassign_element SEMICOLON .)
    END             reduce using rule 73 (declassign -> sigtypes declassign_element SEMICOLON .)
    ENDMODULE       reduce using rule 73 (declassign -> sigtypes declassign_element SEMICOLON .)
    GENERATE        reduce using rule 73 (declassign -> sigtypes declassign_element SEMICOLON .)


state 333

    (76) declassign_element -> delays ID . EQUALS delays rvalue

    EQUALS          shift and go to state 452


state 334

    (74) declassign -> sigtypes width declassign_element . SEMICOLON

    SEMICOLON       shift and go to state 453


state 335

    (68) decl -> sigtypes width declnamelist . SEMICOLON
    (69) declnamelist -> declnamelist . COMMA declname

    SEMICOLON       shift and go to state 454
    COMMA           shift and go to state 330


state 336

    (47) length -> LBRACKET . expression COLON expression RBRACKET
    (116) expression -> . MINUS expression
    (117) expression -> . PLUS expression
    (118) expression -> . LNOT expression
    (119) expression -> . NOT expression
    (120) expression -> . AND expression
    (121) expression -> . NAND expression
    (122) expression -> . NOR expression
    (123) expression -> . OR expression
    (124) expression -> . XOR expression
    (125) expression -> . XNOR expression
    (126) expression -> . expression POWER expression
    (127) expression -> . expression TIMES expression
    (128) expression -> . expression DIVIDE expression
    (129) expression -> . expression MOD expression
    (130) expression -> . expression PLUS expression
    (131) expression -> . expression MINUS expression
    (132) expression -> . expression LSHIFT expression
    (133) expression -> . expression RSHIFT expression
    (134) expression -> . expression LSHIFTA expression
    (135) expression -> . expression RSHIFTA expression
    (136) expression -> . expression LT expression
    (137) expression -> . expression GT expression
    (138) expression -> . expression LE expression
    (139) expression -> . expression GE expression
    (140) expression -> . expression EQ expression
    (141) expression -> . expression NE expression
    (142) expression -> . expression EQL expression
    (143) expression -> . expression NEL expression
    (144) expression -> . expression AND expression
    (145) expression -> . expression XOR expression
    (146) expression -> . expression XNOR expression
    (147) expression -> . expression OR expression
    (148) expression -> . expression LAND expression
    (149) expression -> . expression LOR expression
    (150) expression -> . expression COND expression COLON expression
    (151) expression -> . LPAREN expression RPAREN
    (152) expression -> . concat
    (153) expression -> . repeat
    (154) expression -> . partselect
    (155) expression -> . pointer
    (156) expression -> . functioncall
    (157) expression -> . systemcall
    (158) expression -> . identifier
    (159) expression -> . const_expression
    (160) concat -> . LBRACE concatlist RBRACE
    (163) repeat -> . LBRACE expression concat RBRACE
    (164) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (165) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (166) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (167) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (168) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (169) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (170) pointer -> . identifier LBRACKET expression RBRACKET
    (171) pointer -> . pointer LBRACKET expression RBRACKET
    (339) functioncall -> . identifier LPAREN func_args RPAREN
    (319) systemcall -> . DOLLER ID
    (320) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (357) identifier -> . ID
    (358) identifier -> . scope ID
    (172) const_expression -> . intnumber
    (173) const_expression -> . floatnumber
    (174) const_expression -> . stringliteral
    (359) scope -> . identifier DOT
    (360) scope -> . pointer DOT
    (176) intnumber -> . INTNUMBER_DEC
    (177) intnumber -> . SIGNED_INTNUMBER_DEC
    (178) intnumber -> . INTNUMBER_BIN
    (179) intnumber -> . SIGNED_INTNUMBER_BIN
    (180) intnumber -> . INTNUMBER_OCT
    (181) intnumber -> . SIGNED_INTNUMBER_OCT
    (182) intnumber -> . INTNUMBER_HEX
    (183) intnumber -> . SIGNED_INTNUMBER_HEX
    (175) floatnumber -> . FLOATNUMBER
    (184) stringliteral -> . STRING_LITERAL

    MINUS           shift and go to state 97
    PLUS            shift and go to state 89
    LNOT            shift and go to state 95
    NOT             shift and go to state 78
    AND             shift and go to state 91
    NAND            shift and go to state 98
    NOR             shift and go to state 76
    OR              shift and go to state 105
    XOR             shift and go to state 82
    XNOR            shift and go to state 87
    LPAREN          shift and go to state 96
    LBRACE          shift and go to state 77
    DOLLER          shift and go to state 100
    ID              shift and go to state 85
    INTNUMBER_DEC   shift and go to state 79
    SIGNED_INTNUMBER_DEC shift and go to state 101
    INTNUMBER_BIN   shift and go to state 111
    SIGNED_INTNUMBER_BIN shift and go to state 112
    INTNUMBER_OCT   shift and go to state 86
    SIGNED_INTNUMBER_OCT shift and go to state 106
    INTNUMBER_HEX   shift and go to state 93
    SIGNED_INTNUMBER_HEX shift and go to state 83
    FLOATNUMBER     shift and go to state 102
    STRING_LITERAL  shift and go to state 107

    stringliteral                  shift and go to state 99
    intnumber                      shift and go to state 81
    expression                     shift and go to state 455
    repeat                         shift and go to state 108
    partselect                     shift and go to state 103
    identifier                     shift and go to state 104
    pointer                        shift and go to state 80
    functioncall                   shift and go to state 94
    scope                          shift and go to state 84
    systemcall                     shift and go to state 109
    const_expression               shift and go to state 110
    concat                         shift and go to state 88
    floatnumber                    shift and go to state 90

state 337

    (75) declassign_element -> ID EQUALS . rvalue
    (115) rvalue -> . expression
    (116) expression -> . MINUS expression
    (117) expression -> . PLUS expression
    (118) expression -> . LNOT expression
    (119) expression -> . NOT expression
    (120) expression -> . AND expression
    (121) expression -> . NAND expression
    (122) expression -> . NOR expression
    (123) expression -> . OR expression
    (124) expression -> . XOR expression
    (125) expression -> . XNOR expression
    (126) expression -> . expression POWER expression
    (127) expression -> . expression TIMES expression
    (128) expression -> . expression DIVIDE expression
    (129) expression -> . expression MOD expression
    (130) expression -> . expression PLUS expression
    (131) expression -> . expression MINUS expression
    (132) expression -> . expression LSHIFT expression
    (133) expression -> . expression RSHIFT expression
    (134) expression -> . expression LSHIFTA expression
    (135) expression -> . expression RSHIFTA expression
    (136) expression -> . expression LT expression
    (137) expression -> . expression GT expression
    (138) expression -> . expression LE expression
    (139) expression -> . expression GE expression
    (140) expression -> . expression EQ expression
    (141) expression -> . expression NE expression
    (142) expression -> . expression EQL expression
    (143) expression -> . expression NEL expression
    (144) expression -> . expression AND expression
    (145) expression -> . expression XOR expression
    (146) expression -> . expression XNOR expression
    (147) expression -> . expression OR expression
    (148) expression -> . expression LAND expression
    (149) expression -> . expression LOR expression
    (150) expression -> . expression COND expression COLON expression
    (151) expression -> . LPAREN expression RPAREN
    (152) expression -> . concat
    (153) expression -> . repeat
    (154) expression -> . partselect
    (155) expression -> . pointer
    (156) expression -> . functioncall
    (157) expression -> . systemcall
    (158) expression -> . identifier
    (159) expression -> . const_expression
    (160) concat -> . LBRACE concatlist RBRACE
    (163) repeat -> . LBRACE expression concat RBRACE
    (164) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (165) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (166) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (167) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (168) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (169) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (170) pointer -> . identifier LBRACKET expression RBRACKET
    (171) pointer -> . pointer LBRACKET expression RBRACKET
    (339) functioncall -> . identifier LPAREN func_args RPAREN
    (319) systemcall -> . DOLLER ID
    (320) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (357) identifier -> . ID
    (358) identifier -> . scope ID
    (172) const_expression -> . intnumber
    (173) const_expression -> . floatnumber
    (174) const_expression -> . stringliteral
    (359) scope -> . identifier DOT
    (360) scope -> . pointer DOT
    (176) intnumber -> . INTNUMBER_DEC
    (177) intnumber -> . SIGNED_INTNUMBER_DEC
    (178) intnumber -> . INTNUMBER_BIN
    (179) intnumber -> . SIGNED_INTNUMBER_BIN
    (180) intnumber -> . INTNUMBER_OCT
    (181) intnumber -> . SIGNED_INTNUMBER_OCT
    (182) intnumber -> . INTNUMBER_HEX
    (183) intnumber -> . SIGNED_INTNUMBER_HEX
    (175) floatnumber -> . FLOATNUMBER
    (184) stringliteral -> . STRING_LITERAL

    MINUS           shift and go to state 97
    PLUS            shift and go to state 89
    LNOT            shift and go to state 95
    NOT             shift and go to state 78
    AND             shift and go to state 91
    NAND            shift and go to state 98
    NOR             shift and go to state 76
    OR              shift and go to state 105
    XOR             shift and go to state 82
    XNOR            shift and go to state 87
    LPAREN          shift and go to state 96
    LBRACE          shift and go to state 77
    DOLLER          shift and go to state 100
    ID              shift and go to state 85
    INTNUMBER_DEC   shift and go to state 79
    SIGNED_INTNUMBER_DEC shift and go to state 101
    INTNUMBER_BIN   shift and go to state 111
    SIGNED_INTNUMBER_BIN shift and go to state 112
    INTNUMBER_OCT   shift and go to state 86
    SIGNED_INTNUMBER_OCT shift and go to state 106
    INTNUMBER_HEX   shift and go to state 93
    SIGNED_INTNUMBER_HEX shift and go to state 83
    FLOATNUMBER     shift and go to state 102
    STRING_LITERAL  shift and go to state 107

    stringliteral                  shift and go to state 99
    intnumber                      shift and go to state 81
    expression                     shift and go to state 428
    repeat                         shift and go to state 108
    rvalue                         shift and go to state 456
    partselect                     shift and go to state 103
    identifier                     shift and go to state 104
    pointer                        shift and go to state 80
    functioncall                   shift and go to state 94
    scope                          shift and go to state 84
    systemcall                     shift and go to state 109
    const_expression               shift and go to state 110
    concat                         shift and go to state 88
    floatnumber                    shift and go to state 90

state 338

    (72) declname -> ID length .

    SEMICOLON       reduce using rule 72 (declname -> ID length .)
    COMMA           reduce using rule 72 (declname -> ID length .)


state 339

    (86) parameterdecl -> PARAMETER param_substitution_list SEMICOLON .

    END             reduce using rule 86 (parameterdecl -> PARAMETER param_substitution_list SEMICOLON .)
    IF              reduce using rule 86 (parameterdecl -> PARAMETER param_substitution_list SEMICOLON .)
    FOR             reduce using rule 86 (parameterdecl -> PARAMETER param_substitution_list SEMICOLON .)
    INTEGER         reduce using rule 86 (parameterdecl -> PARAMETER param_substitution_list SEMICOLON .)
    REAL            reduce using rule 86 (parameterdecl -> PARAMETER param_substitution_list SEMICOLON .)
    PARAMETER       reduce using rule 86 (parameterdecl -> PARAMETER param_substitution_list SEMICOLON .)
    LOCALPARAM      reduce using rule 86 (parameterdecl -> PARAMETER param_substitution_list SEMICOLON .)
    GENVAR          reduce using rule 86 (parameterdecl -> PARAMETER param_substitution_list SEMICOLON .)
    ASSIGN          reduce using rule 86 (parameterdecl -> PARAMETER param_substitution_list SEMICOLON .)
    ALWAYS          reduce using rule 86 (parameterdecl -> PARAMETER param_substitution_list SEMICOLON .)
    INITIAL         reduce using rule 86 (parameterdecl -> PARAMETER param_substitution_list SEMICOLON .)
    ID              reduce using rule 86 (parameterdecl -> PARAMETER param_substitution_list SEMICOLON .)
    FUNCTION        reduce using rule 86 (parameterdecl -> PARAMETER param_substitution_list SEMICOLON .)
    TASK            reduce using rule 86 (parameterdecl -> PARAMETER param_substitution_list SEMICOLON .)
    LPAREN          reduce using rule 86 (parameterdecl -> PARAMETER param_substitution_list SEMICOLON .)
    INPUT           reduce using rule 86 (parameterdecl -> PARAMETER param_substitution_list SEMICOLON .)
    OUTPUT          reduce using rule 86 (parameterdecl -> PARAMETER param_substitution_list SEMICOLON .)
    INOUT           reduce using rule 86 (parameterdecl -> PARAMETER param_substitution_list SEMICOLON .)
    TRI             reduce using rule 86 (parameterdecl -> PARAMETER param_substitution_list SEMICOLON .)
    REG             reduce using rule 86 (parameterdecl -> PARAMETER param_substitution_list SEMICOLON .)
    WIRE            reduce using rule 86 (parameterdecl -> PARAMETER param_substitution_list SEMICOLON .)
    SIGNED          reduce using rule 86 (parameterdecl -> PARAMETER param_substitution_list SEMICOLON .)
    ENDMODULE       reduce using rule 86 (parameterdecl -> PARAMETER param_substitution_list SEMICOLON .)
    GENERATE        reduce using rule 86 (parameterdecl -> PARAMETER param_substitution_list SEMICOLON .)
    ELSE            reduce using rule 86 (parameterdecl -> PARAMETER param_substitution_list SEMICOLON .)
    ENDGENERATE     reduce using rule 86 (parameterdecl -> PARAMETER param_substitution_list SEMICOLON .)
    CASE            reduce using rule 86 (parameterdecl -> PARAMETER param_substitution_list SEMICOLON .)
    WHILE           reduce using rule 86 (parameterdecl -> PARAMETER param_substitution_list SEMICOLON .)
    WAIT            reduce using rule 86 (parameterdecl -> PARAMETER param_substitution_list SEMICOLON .)
    FOREVER         reduce using rule 86 (parameterdecl -> PARAMETER param_substitution_list SEMICOLON .)
    BEGIN           reduce using rule 86 (parameterdecl -> PARAMETER param_substitution_list SEMICOLON .)
    FORK            reduce using rule 86 (parameterdecl -> PARAMETER param_substitution_list SEMICOLON .)
    DELAY           reduce using rule 86 (parameterdecl -> PARAMETER param_substitution_list SEMICOLON .)
    AT              reduce using rule 86 (parameterdecl -> PARAMETER param_substitution_list SEMICOLON .)
    DOLLER          reduce using rule 86 (parameterdecl -> PARAMETER param_substitution_list SEMICOLON .)
    DISABLE         reduce using rule 86 (parameterdecl -> PARAMETER param_substitution_list SEMICOLON .)
    LBRACE          reduce using rule 86 (parameterdecl -> PARAMETER param_substitution_list SEMICOLON .)
    SEMICOLON       reduce using rule 86 (parameterdecl -> PARAMETER param_substitution_list SEMICOLON .)


state 340

    (87) parameterdecl -> PARAMETER width param_substitution_list . SEMICOLON
    (92) param_substitution_list -> param_substitution_list . COMMA param_substitution

    SEMICOLON       shift and go to state 457
    COMMA           shift and go to state 324


state 341

    (88) parameterdecl -> PARAMETER INTEGER param_substitution_list . SEMICOLON
    (92) param_substitution_list -> param_substitution_list . COMMA param_substitution

    SEMICOLON       shift and go to state 458
    COMMA           shift and go to state 324


state 342

    (343) task -> TASK ID SEMICOLON . task_statement ENDTASK
    (344) task_statement -> . taskvardecls task_calc
    (345) taskvardecls -> . taskvardecls taskvardecl
    (346) taskvardecls -> . taskvardecl
    (347) taskvardecls -> . empty
    (348) taskvardecl -> . decl
    (349) taskvardecl -> . integerdecl
    (365) empty -> .
    (67) decl -> . sigtypes declnamelist SEMICOLON
    (68) decl -> . sigtypes width declnamelist SEMICOLON
    (77) integerdecl -> . INTEGER integernamelist SEMICOLON
    (78) integerdecl -> . INTEGER SIGNED integernamelist SEMICOLON
    (30) sigtypes -> . sigtypes sigtype
    (31) sigtypes -> . sigtype
    (32) sigtype -> . INPUT
    (33) sigtype -> . OUTPUT
    (34) sigtype -> . INOUT
    (35) sigtype -> . TRI
    (36) sigtype -> . REG
    (37) sigtype -> . WIRE
    (38) sigtype -> . SIGNED

  ! shift/reduce conflict for INTEGER resolved as shift
  ! shift/reduce conflict for INPUT resolved as shift
  ! shift/reduce conflict for OUTPUT resolved as shift
  ! shift/reduce conflict for INOUT resolved as shift
  ! shift/reduce conflict for TRI resolved as shift
  ! shift/reduce conflict for REG resolved as shift
  ! shift/reduce conflict for WIRE resolved as shift
  ! shift/reduce conflict for SIGNED resolved as shift
    IF              reduce using rule 365 (empty -> .)
    FOR             reduce using rule 365 (empty -> .)
    WHILE           reduce using rule 365 (empty -> .)
    CASE            reduce using rule 365 (empty -> .)
    BEGIN           reduce using rule 365 (empty -> .)
    DELAY           reduce using rule 365 (empty -> .)
    LBRACE          reduce using rule 365 (empty -> .)
    ID              reduce using rule 365 (empty -> .)
    INTEGER         shift and go to state 69
    INPUT           shift and go to state 37
    OUTPUT          shift and go to state 24
    INOUT           shift and go to state 25
    TRI             shift and go to state 36
    REG             shift and go to state 35
    WIRE            shift and go to state 26
    SIGNED          shift and go to state 29

  ! INTEGER         [ reduce using rule 365 (empty -> .) ]
  ! INPUT           [ reduce using rule 365 (empty -> .) ]
  ! OUTPUT          [ reduce using rule 365 (empty -> .) ]
  ! INOUT           [ reduce using rule 365 (empty -> .) ]
  ! TRI             [ reduce using rule 365 (empty -> .) ]
  ! REG             [ reduce using rule 365 (empty -> .) ]
  ! WIRE            [ reduce using rule 365 (empty -> .) ]
  ! SIGNED          [ reduce using rule 365 (empty -> .) ]

    sigtypes                       shift and go to state 394
    task_statement                 shift and go to state 462
    decl                           shift and go to state 463
    integerdecl                    shift and go to state 464
    empty                          shift and go to state 459
    sigtype                        shift and go to state 33
    taskvardecls                   shift and go to state 460
    taskvardecl                    shift and go to state 461

state 343

    (78) integerdecl -> INTEGER SIGNED integernamelist . SEMICOLON
    (79) integernamelist -> integernamelist . COMMA integername

    SEMICOLON       shift and go to state 465
    COMMA           shift and go to state 345


state 344

    (77) integerdecl -> INTEGER integernamelist SEMICOLON .

    IF              reduce using rule 77 (integerdecl -> INTEGER integernamelist SEMICOLON .)
    FOR             reduce using rule 77 (integerdecl -> INTEGER integernamelist SEMICOLON .)
    WHILE           reduce using rule 77 (integerdecl -> INTEGER integernamelist SEMICOLON .)
    CASE            reduce using rule 77 (integerdecl -> INTEGER integernamelist SEMICOLON .)
    BEGIN           reduce using rule 77 (integerdecl -> INTEGER integernamelist SEMICOLON .)
    INTEGER         reduce using rule 77 (integerdecl -> INTEGER integernamelist SEMICOLON .)
    DELAY           reduce using rule 77 (integerdecl -> INTEGER integernamelist SEMICOLON .)
    INPUT           reduce using rule 77 (integerdecl -> INTEGER integernamelist SEMICOLON .)
    OUTPUT          reduce using rule 77 (integerdecl -> INTEGER integernamelist SEMICOLON .)
    INOUT           reduce using rule 77 (integerdecl -> INTEGER integernamelist SEMICOLON .)
    TRI             reduce using rule 77 (integerdecl -> INTEGER integernamelist SEMICOLON .)
    REG             reduce using rule 77 (integerdecl -> INTEGER integernamelist SEMICOLON .)
    WIRE            reduce using rule 77 (integerdecl -> INTEGER integernamelist SEMICOLON .)
    SIGNED          reduce using rule 77 (integerdecl -> INTEGER integernamelist SEMICOLON .)
    LBRACE          reduce using rule 77 (integerdecl -> INTEGER integernamelist SEMICOLON .)
    ID              reduce using rule 77 (integerdecl -> INTEGER integernamelist SEMICOLON .)
    END             reduce using rule 77 (integerdecl -> INTEGER integernamelist SEMICOLON .)
    REAL            reduce using rule 77 (integerdecl -> INTEGER integernamelist SEMICOLON .)
    PARAMETER       reduce using rule 77 (integerdecl -> INTEGER integernamelist SEMICOLON .)
    LOCALPARAM      reduce using rule 77 (integerdecl -> INTEGER integernamelist SEMICOLON .)
    GENVAR          reduce using rule 77 (integerdecl -> INTEGER integernamelist SEMICOLON .)
    ASSIGN          reduce using rule 77 (integerdecl -> INTEGER integernamelist SEMICOLON .)
    ALWAYS          reduce using rule 77 (integerdecl -> INTEGER integernamelist SEMICOLON .)
    INITIAL         reduce using rule 77 (integerdecl -> INTEGER integernamelist SEMICOLON .)
    FUNCTION        reduce using rule 77 (integerdecl -> INTEGER integernamelist SEMICOLON .)
    TASK            reduce using rule 77 (integerdecl -> INTEGER integernamelist SEMICOLON .)
    LPAREN          reduce using rule 77 (integerdecl -> INTEGER integernamelist SEMICOLON .)
    ENDMODULE       reduce using rule 77 (integerdecl -> INTEGER integernamelist SEMICOLON .)
    GENERATE        reduce using rule 77 (integerdecl -> INTEGER integernamelist SEMICOLON .)
    ENDGENERATE     reduce using rule 77 (integerdecl -> INTEGER integernamelist SEMICOLON .)
    ELSE            reduce using rule 77 (integerdecl -> INTEGER integernamelist SEMICOLON .)
    WAIT            reduce using rule 77 (integerdecl -> INTEGER integernamelist SEMICOLON .)
    FOREVER         reduce using rule 77 (integerdecl -> INTEGER integernamelist SEMICOLON .)
    FORK            reduce using rule 77 (integerdecl -> INTEGER integernamelist SEMICOLON .)
    AT              reduce using rule 77 (integerdecl -> INTEGER integernamelist SEMICOLON .)
    DOLLER          reduce using rule 77 (integerdecl -> INTEGER integernamelist SEMICOLON .)
    DISABLE         reduce using rule 77 (integerdecl -> INTEGER integernamelist SEMICOLON .)
    SEMICOLON       reduce using rule 77 (integerdecl -> INTEGER integernamelist SEMICOLON .)


state 345

    (79) integernamelist -> integernamelist COMMA . integername
    (81) integername -> . ID

    ID              shift and go to state 203

    integername                    shift and go to state 466

state 346

    (21) param_end -> PARAMETER width param_substitution_list .
    (18) param -> PARAMETER width param_substitution_list . COMMA
    (92) param_substitution_list -> param_substitution_list . COMMA param_substitution

    RPAREN          reduce using rule 21 (param_end -> PARAMETER width param_substitution_list .)
    COMMA           shift and go to state 467


state 347

    (17) param -> PARAMETER param_substitution_list COMMA .
    (92) param_substitution_list -> param_substitution_list COMMA . param_substitution
    (94) param_substitution -> . ID EQUALS rvalue

    PARAMETER       reduce using rule 17 (param -> PARAMETER param_substitution_list COMMA .)
    ID              shift and go to state 181

    param_substitution             shift and go to state 447

state 348

    (22) param_end -> PARAMETER INTEGER param_substitution_list .
    (19) param -> PARAMETER INTEGER param_substitution_list . COMMA
    (92) param_substitution_list -> param_substitution_list . COMMA param_substitution

    RPAREN          reduce using rule 22 (param_end -> PARAMETER INTEGER param_substitution_list .)
    COMMA           shift and go to state 468


state 349

    (127) expression -> expression TIMES . expression
    (116) expression -> . MINUS expression
    (117) expression -> . PLUS expression
    (118) expression -> . LNOT expression
    (119) expression -> . NOT expression
    (120) expression -> . AND expression
    (121) expression -> . NAND expression
    (122) expression -> . NOR expression
    (123) expression -> . OR expression
    (124) expression -> . XOR expression
    (125) expression -> . XNOR expression
    (126) expression -> . expression POWER expression
    (127) expression -> . expression TIMES expression
    (128) expression -> . expression DIVIDE expression
    (129) expression -> . expression MOD expression
    (130) expression -> . expression PLUS expression
    (131) expression -> . expression MINUS expression
    (132) expression -> . expression LSHIFT expression
    (133) expression -> . expression RSHIFT expression
    (134) expression -> . expression LSHIFTA expression
    (135) expression -> . expression RSHIFTA expression
    (136) expression -> . expression LT expression
    (137) expression -> . expression GT expression
    (138) expression -> . expression LE expression
    (139) expression -> . expression GE expression
    (140) expression -> . expression EQ expression
    (141) expression -> . expression NE expression
    (142) expression -> . expression EQL expression
    (143) expression -> . expression NEL expression
    (144) expression -> . expression AND expression
    (145) expression -> . expression XOR expression
    (146) expression -> . expression XNOR expression
    (147) expression -> . expression OR expression
    (148) expression -> . expression LAND expression
    (149) expression -> . expression LOR expression
    (150) expression -> . expression COND expression COLON expression
    (151) expression -> . LPAREN expression RPAREN
    (152) expression -> . concat
    (153) expression -> . repeat
    (154) expression -> . partselect
    (155) expression -> . pointer
    (156) expression -> . functioncall
    (157) expression -> . systemcall
    (158) expression -> . identifier
    (159) expression -> . const_expression
    (160) concat -> . LBRACE concatlist RBRACE
    (163) repeat -> . LBRACE expression concat RBRACE
    (164) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (165) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (166) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (167) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (168) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (169) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (170) pointer -> . identifier LBRACKET expression RBRACKET
    (171) pointer -> . pointer LBRACKET expression RBRACKET
    (339) functioncall -> . identifier LPAREN func_args RPAREN
    (319) systemcall -> . DOLLER ID
    (320) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (357) identifier -> . ID
    (358) identifier -> . scope ID
    (172) const_expression -> . intnumber
    (173) const_expression -> . floatnumber
    (174) const_expression -> . stringliteral
    (359) scope -> . identifier DOT
    (360) scope -> . pointer DOT
    (176) intnumber -> . INTNUMBER_DEC
    (177) intnumber -> . SIGNED_INTNUMBER_DEC
    (178) intnumber -> . INTNUMBER_BIN
    (179) intnumber -> . SIGNED_INTNUMBER_BIN
    (180) intnumber -> . INTNUMBER_OCT
    (181) intnumber -> . SIGNED_INTNUMBER_OCT
    (182) intnumber -> . INTNUMBER_HEX
    (183) intnumber -> . SIGNED_INTNUMBER_HEX
    (175) floatnumber -> . FLOATNUMBER
    (184) stringliteral -> . STRING_LITERAL

    MINUS           shift and go to state 97
    PLUS            shift and go to state 89
    LNOT            shift and go to state 95
    NOT             shift and go to state 78
    AND             shift and go to state 91
    NAND            shift and go to state 98
    NOR             shift and go to state 76
    OR              shift and go to state 105
    XOR             shift and go to state 82
    XNOR            shift and go to state 87
    LPAREN          shift and go to state 96
    LBRACE          shift and go to state 77
    DOLLER          shift and go to state 100
    ID              shift and go to state 85
    INTNUMBER_DEC   shift and go to state 79
    SIGNED_INTNUMBER_DEC shift and go to state 101
    INTNUMBER_BIN   shift and go to state 111
    SIGNED_INTNUMBER_BIN shift and go to state 112
    INTNUMBER_OCT   shift and go to state 86
    SIGNED_INTNUMBER_OCT shift and go to state 106
    INTNUMBER_HEX   shift and go to state 93
    SIGNED_INTNUMBER_HEX shift and go to state 83
    FLOATNUMBER     shift and go to state 102
    STRING_LITERAL  shift and go to state 107

    stringliteral                  shift and go to state 99
    intnumber                      shift and go to state 81
    expression                     shift and go to state 370
    repeat                         shift and go to state 108
    partselect                     shift and go to state 103
    identifier                     shift and go to state 104
    pointer                        shift and go to state 80
    functioncall                   shift and go to state 94
    scope                          shift and go to state 84
    systemcall                     shift and go to state 109
    const_expression               shift and go to state 110
    concat                         shift and go to state 88
    floatnumber                    shift and go to state 90

state 350

    (160) concat -> LBRACE . concatlist RBRACE
    (161) concatlist -> . concatlist COMMA expression
    (162) concatlist -> . expression
    (116) expression -> . MINUS expression
    (117) expression -> . PLUS expression
    (118) expression -> . LNOT expression
    (119) expression -> . NOT expression
    (120) expression -> . AND expression
    (121) expression -> . NAND expression
    (122) expression -> . NOR expression
    (123) expression -> . OR expression
    (124) expression -> . XOR expression
    (125) expression -> . XNOR expression
    (126) expression -> . expression POWER expression
    (127) expression -> . expression TIMES expression
    (128) expression -> . expression DIVIDE expression
    (129) expression -> . expression MOD expression
    (130) expression -> . expression PLUS expression
    (131) expression -> . expression MINUS expression
    (132) expression -> . expression LSHIFT expression
    (133) expression -> . expression RSHIFT expression
    (134) expression -> . expression LSHIFTA expression
    (135) expression -> . expression RSHIFTA expression
    (136) expression -> . expression LT expression
    (137) expression -> . expression GT expression
    (138) expression -> . expression LE expression
    (139) expression -> . expression GE expression
    (140) expression -> . expression EQ expression
    (141) expression -> . expression NE expression
    (142) expression -> . expression EQL expression
    (143) expression -> . expression NEL expression
    (144) expression -> . expression AND expression
    (145) expression -> . expression XOR expression
    (146) expression -> . expression XNOR expression
    (147) expression -> . expression OR expression
    (148) expression -> . expression LAND expression
    (149) expression -> . expression LOR expression
    (150) expression -> . expression COND expression COLON expression
    (151) expression -> . LPAREN expression RPAREN
    (152) expression -> . concat
    (153) expression -> . repeat
    (154) expression -> . partselect
    (155) expression -> . pointer
    (156) expression -> . functioncall
    (157) expression -> . systemcall
    (158) expression -> . identifier
    (159) expression -> . const_expression
    (160) concat -> . LBRACE concatlist RBRACE
    (163) repeat -> . LBRACE expression concat RBRACE
    (164) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (165) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (166) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (167) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (168) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (169) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (170) pointer -> . identifier LBRACKET expression RBRACKET
    (171) pointer -> . pointer LBRACKET expression RBRACKET
    (339) functioncall -> . identifier LPAREN func_args RPAREN
    (319) systemcall -> . DOLLER ID
    (320) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (357) identifier -> . ID
    (358) identifier -> . scope ID
    (172) const_expression -> . intnumber
    (173) const_expression -> . floatnumber
    (174) const_expression -> . stringliteral
    (359) scope -> . identifier DOT
    (360) scope -> . pointer DOT
    (176) intnumber -> . INTNUMBER_DEC
    (177) intnumber -> . SIGNED_INTNUMBER_DEC
    (178) intnumber -> . INTNUMBER_BIN
    (179) intnumber -> . SIGNED_INTNUMBER_BIN
    (180) intnumber -> . INTNUMBER_OCT
    (181) intnumber -> . SIGNED_INTNUMBER_OCT
    (182) intnumber -> . INTNUMBER_HEX
    (183) intnumber -> . SIGNED_INTNUMBER_HEX
    (175) floatnumber -> . FLOATNUMBER
    (184) stringliteral -> . STRING_LITERAL

    MINUS           shift and go to state 97
    PLUS            shift and go to state 89
    LNOT            shift and go to state 95
    NOT             shift and go to state 78
    AND             shift and go to state 91
    NAND            shift and go to state 98
    NOR             shift and go to state 76
    OR              shift and go to state 105
    XOR             shift and go to state 82
    XNOR            shift and go to state 87
    LPAREN          shift and go to state 96
    LBRACE          shift and go to state 77
    DOLLER          shift and go to state 100
    ID              shift and go to state 85
    INTNUMBER_DEC   shift and go to state 79
    SIGNED_INTNUMBER_DEC shift and go to state 101
    INTNUMBER_BIN   shift and go to state 111
    SIGNED_INTNUMBER_BIN shift and go to state 112
    INTNUMBER_OCT   shift and go to state 86
    SIGNED_INTNUMBER_OCT shift and go to state 106
    INTNUMBER_HEX   shift and go to state 93
    SIGNED_INTNUMBER_HEX shift and go to state 83
    FLOATNUMBER     shift and go to state 102
    STRING_LITERAL  shift and go to state 107

    stringliteral                  shift and go to state 99
    intnumber                      shift and go to state 81
    expression                     shift and go to state 469
    repeat                         shift and go to state 108
    concatlist                     shift and go to state 213
    partselect                     shift and go to state 103
    identifier                     shift and go to state 104
    pointer                        shift and go to state 80
    functioncall                   shift and go to state 94
    scope                          shift and go to state 84
    systemcall                     shift and go to state 109
    const_expression               shift and go to state 110
    concat                         shift and go to state 88
    floatnumber                    shift and go to state 90

state 351

    (163) repeat -> LBRACE expression concat . RBRACE

    RBRACE          shift and go to state 470


state 352

    (160) concat -> LBRACE concatlist RBRACE .

    POWER           reduce using rule 160 (concat -> LBRACE concatlist RBRACE .)
    TIMES           reduce using rule 160 (concat -> LBRACE concatlist RBRACE .)
    DIVIDE          reduce using rule 160 (concat -> LBRACE concatlist RBRACE .)
    MOD             reduce using rule 160 (concat -> LBRACE concatlist RBRACE .)
    PLUS            reduce using rule 160 (concat -> LBRACE concatlist RBRACE .)
    MINUS           reduce using rule 160 (concat -> LBRACE concatlist RBRACE .)
    LSHIFT          reduce using rule 160 (concat -> LBRACE concatlist RBRACE .)
    RSHIFT          reduce using rule 160 (concat -> LBRACE concatlist RBRACE .)
    LSHIFTA         reduce using rule 160 (concat -> LBRACE concatlist RBRACE .)
    RSHIFTA         reduce using rule 160 (concat -> LBRACE concatlist RBRACE .)
    LT              reduce using rule 160 (concat -> LBRACE concatlist RBRACE .)
    GT              reduce using rule 160 (concat -> LBRACE concatlist RBRACE .)
    LE              reduce using rule 160 (concat -> LBRACE concatlist RBRACE .)
    GE              reduce using rule 160 (concat -> LBRACE concatlist RBRACE .)
    EQ              reduce using rule 160 (concat -> LBRACE concatlist RBRACE .)
    NE              reduce using rule 160 (concat -> LBRACE concatlist RBRACE .)
    EQL             reduce using rule 160 (concat -> LBRACE concatlist RBRACE .)
    NEL             reduce using rule 160 (concat -> LBRACE concatlist RBRACE .)
    AND             reduce using rule 160 (concat -> LBRACE concatlist RBRACE .)
    XOR             reduce using rule 160 (concat -> LBRACE concatlist RBRACE .)
    XNOR            reduce using rule 160 (concat -> LBRACE concatlist RBRACE .)
    OR              reduce using rule 160 (concat -> LBRACE concatlist RBRACE .)
    LAND            reduce using rule 160 (concat -> LBRACE concatlist RBRACE .)
    LOR             reduce using rule 160 (concat -> LBRACE concatlist RBRACE .)
    COND            reduce using rule 160 (concat -> LBRACE concatlist RBRACE .)
    RPAREN          reduce using rule 160 (concat -> LBRACE concatlist RBRACE .)
    LBRACE          reduce using rule 160 (concat -> LBRACE concatlist RBRACE .)
    RBRACE          reduce using rule 160 (concat -> LBRACE concatlist RBRACE .)
    COMMA           reduce using rule 160 (concat -> LBRACE concatlist RBRACE .)
    COLON           reduce using rule 160 (concat -> LBRACE concatlist RBRACE .)
    SEMICOLON       reduce using rule 160 (concat -> LBRACE concatlist RBRACE .)
    PLUSCOLON       reduce using rule 160 (concat -> LBRACE concatlist RBRACE .)
    MINUSCOLON      reduce using rule 160 (concat -> LBRACE concatlist RBRACE .)
    RBRACKET        reduce using rule 160 (concat -> LBRACE concatlist RBRACE .)


state 353

    (161) concatlist -> concatlist COMMA . expression
    (116) expression -> . MINUS expression
    (117) expression -> . PLUS expression
    (118) expression -> . LNOT expression
    (119) expression -> . NOT expression
    (120) expression -> . AND expression
    (121) expression -> . NAND expression
    (122) expression -> . NOR expression
    (123) expression -> . OR expression
    (124) expression -> . XOR expression
    (125) expression -> . XNOR expression
    (126) expression -> . expression POWER expression
    (127) expression -> . expression TIMES expression
    (128) expression -> . expression DIVIDE expression
    (129) expression -> . expression MOD expression
    (130) expression -> . expression PLUS expression
    (131) expression -> . expression MINUS expression
    (132) expression -> . expression LSHIFT expression
    (133) expression -> . expression RSHIFT expression
    (134) expression -> . expression LSHIFTA expression
    (135) expression -> . expression RSHIFTA expression
    (136) expression -> . expression LT expression
    (137) expression -> . expression GT expression
    (138) expression -> . expression LE expression
    (139) expression -> . expression GE expression
    (140) expression -> . expression EQ expression
    (141) expression -> . expression NE expression
    (142) expression -> . expression EQL expression
    (143) expression -> . expression NEL expression
    (144) expression -> . expression AND expression
    (145) expression -> . expression XOR expression
    (146) expression -> . expression XNOR expression
    (147) expression -> . expression OR expression
    (148) expression -> . expression LAND expression
    (149) expression -> . expression LOR expression
    (150) expression -> . expression COND expression COLON expression
    (151) expression -> . LPAREN expression RPAREN
    (152) expression -> . concat
    (153) expression -> . repeat
    (154) expression -> . partselect
    (155) expression -> . pointer
    (156) expression -> . functioncall
    (157) expression -> . systemcall
    (158) expression -> . identifier
    (159) expression -> . const_expression
    (160) concat -> . LBRACE concatlist RBRACE
    (163) repeat -> . LBRACE expression concat RBRACE
    (164) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (165) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (166) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (167) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (168) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (169) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (170) pointer -> . identifier LBRACKET expression RBRACKET
    (171) pointer -> . pointer LBRACKET expression RBRACKET
    (339) functioncall -> . identifier LPAREN func_args RPAREN
    (319) systemcall -> . DOLLER ID
    (320) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (357) identifier -> . ID
    (358) identifier -> . scope ID
    (172) const_expression -> . intnumber
    (173) const_expression -> . floatnumber
    (174) const_expression -> . stringliteral
    (359) scope -> . identifier DOT
    (360) scope -> . pointer DOT
    (176) intnumber -> . INTNUMBER_DEC
    (177) intnumber -> . SIGNED_INTNUMBER_DEC
    (178) intnumber -> . INTNUMBER_BIN
    (179) intnumber -> . SIGNED_INTNUMBER_BIN
    (180) intnumber -> . INTNUMBER_OCT
    (181) intnumber -> . SIGNED_INTNUMBER_OCT
    (182) intnumber -> . INTNUMBER_HEX
    (183) intnumber -> . SIGNED_INTNUMBER_HEX
    (175) floatnumber -> . FLOATNUMBER
    (184) stringliteral -> . STRING_LITERAL

    MINUS           shift and go to state 97
    PLUS            shift and go to state 89
    LNOT            shift and go to state 95
    NOT             shift and go to state 78
    AND             shift and go to state 91
    NAND            shift and go to state 98
    NOR             shift and go to state 76
    OR              shift and go to state 105
    XOR             shift and go to state 82
    XNOR            shift and go to state 87
    LPAREN          shift and go to state 96
    LBRACE          shift and go to state 77
    DOLLER          shift and go to state 100
    ID              shift and go to state 85
    INTNUMBER_DEC   shift and go to state 79
    SIGNED_INTNUMBER_DEC shift and go to state 101
    INTNUMBER_BIN   shift and go to state 111
    SIGNED_INTNUMBER_BIN shift and go to state 112
    INTNUMBER_OCT   shift and go to state 86
    SIGNED_INTNUMBER_OCT shift and go to state 106
    INTNUMBER_HEX   shift and go to state 93
    SIGNED_INTNUMBER_HEX shift and go to state 83
    FLOATNUMBER     shift and go to state 102
    STRING_LITERAL  shift and go to state 107

    stringliteral                  shift and go to state 99
    intnumber                      shift and go to state 81
    expression                     shift and go to state 471
    repeat                         shift and go to state 108
    partselect                     shift and go to state 103
    identifier                     shift and go to state 104
    pointer                        shift and go to state 80
    functioncall                   shift and go to state 94
    scope                          shift and go to state 84
    systemcall                     shift and go to state 109
    const_expression               shift and go to state 110
    concat                         shift and go to state 88
    floatnumber                    shift and go to state 90

state 354

    (167) partselect -> pointer LBRACKET expression . COLON expression RBRACKET
    (168) partselect -> pointer LBRACKET expression . PLUSCOLON expression RBRACKET
    (169) partselect -> pointer LBRACKET expression . MINUSCOLON expression RBRACKET
    (171) pointer -> pointer LBRACKET expression . RBRACKET
    (126) expression -> expression . POWER expression
    (127) expression -> expression . TIMES expression
    (128) expression -> expression . DIVIDE expression
    (129) expression -> expression . MOD expression
    (130) expression -> expression . PLUS expression
    (131) expression -> expression . MINUS expression
    (132) expression -> expression . LSHIFT expression
    (133) expression -> expression . RSHIFT expression
    (134) expression -> expression . LSHIFTA expression
    (135) expression -> expression . RSHIFTA expression
    (136) expression -> expression . LT expression
    (137) expression -> expression . GT expression
    (138) expression -> expression . LE expression
    (139) expression -> expression . GE expression
    (140) expression -> expression . EQ expression
    (141) expression -> expression . NE expression
    (142) expression -> expression . EQL expression
    (143) expression -> expression . NEL expression
    (144) expression -> expression . AND expression
    (145) expression -> expression . XOR expression
    (146) expression -> expression . XNOR expression
    (147) expression -> expression . OR expression
    (148) expression -> expression . LAND expression
    (149) expression -> expression . LOR expression
    (150) expression -> expression . COND expression COLON expression

    COLON           shift and go to state 472
    PLUSCOLON       shift and go to state 473
    MINUSCOLON      shift and go to state 475
    RBRACKET        shift and go to state 474
    POWER           shift and go to state 246
    TIMES           shift and go to state 349
    DIVIDE          shift and go to state 244
    MOD             shift and go to state 231
    PLUS            shift and go to state 240
    MINUS           shift and go to state 229
    LSHIFT          shift and go to state 243
    RSHIFT          shift and go to state 226
    LSHIFTA         shift and go to state 241
    RSHIFTA         shift and go to state 238
    LT              shift and go to state 235
    GT              shift and go to state 228
    LE              shift and go to state 222
    GE              shift and go to state 239
    EQ              shift and go to state 223
    NE              shift and go to state 225
    EQL             shift and go to state 245
    NEL             shift and go to state 242
    AND             shift and go to state 224
    XOR             shift and go to state 237
    XNOR            shift and go to state 232
    OR              shift and go to state 234
    LAND            shift and go to state 227
    LOR             shift and go to state 230
    COND            shift and go to state 233


state 355

    (138) expression -> expression LE expression .
    (126) expression -> expression . POWER expression
    (127) expression -> expression . TIMES expression
    (128) expression -> expression . DIVIDE expression
    (129) expression -> expression . MOD expression
    (130) expression -> expression . PLUS expression
    (131) expression -> expression . MINUS expression
    (132) expression -> expression . LSHIFT expression
    (133) expression -> expression . RSHIFT expression
    (134) expression -> expression . LSHIFTA expression
    (135) expression -> expression . RSHIFTA expression
    (136) expression -> expression . LT expression
    (137) expression -> expression . GT expression
    (138) expression -> expression . LE expression
    (139) expression -> expression . GE expression
    (140) expression -> expression . EQ expression
    (141) expression -> expression . NE expression
    (142) expression -> expression . EQL expression
    (143) expression -> expression . NEL expression
    (144) expression -> expression . AND expression
    (145) expression -> expression . XOR expression
    (146) expression -> expression . XNOR expression
    (147) expression -> expression . OR expression
    (148) expression -> expression . LAND expression
    (149) expression -> expression . LOR expression
    (150) expression -> expression . COND expression COLON expression

    LT              reduce using rule 138 (expression -> expression LE expression .)
    GT              reduce using rule 138 (expression -> expression LE expression .)
    LE              reduce using rule 138 (expression -> expression LE expression .)
    GE              reduce using rule 138 (expression -> expression LE expression .)
    EQ              reduce using rule 138 (expression -> expression LE expression .)
    NE              reduce using rule 138 (expression -> expression LE expression .)
    EQL             reduce using rule 138 (expression -> expression LE expression .)
    NEL             reduce using rule 138 (expression -> expression LE expression .)
    AND             reduce using rule 138 (expression -> expression LE expression .)
    XOR             reduce using rule 138 (expression -> expression LE expression .)
    XNOR            reduce using rule 138 (expression -> expression LE expression .)
    OR              reduce using rule 138 (expression -> expression LE expression .)
    LAND            reduce using rule 138 (expression -> expression LE expression .)
    LOR             reduce using rule 138 (expression -> expression LE expression .)
    COND            reduce using rule 138 (expression -> expression LE expression .)
    LBRACE          reduce using rule 138 (expression -> expression LE expression .)
    RBRACE          reduce using rule 138 (expression -> expression LE expression .)
    COMMA           reduce using rule 138 (expression -> expression LE expression .)
    RPAREN          reduce using rule 138 (expression -> expression LE expression .)
    COLON           reduce using rule 138 (expression -> expression LE expression .)
    SEMICOLON       reduce using rule 138 (expression -> expression LE expression .)
    PLUSCOLON       reduce using rule 138 (expression -> expression LE expression .)
    MINUSCOLON      reduce using rule 138 (expression -> expression LE expression .)
    RBRACKET        reduce using rule 138 (expression -> expression LE expression .)
    POWER           shift and go to state 246
    TIMES           shift and go to state 349
    DIVIDE          shift and go to state 244
    MOD             shift and go to state 231
    PLUS            shift and go to state 240
    MINUS           shift and go to state 229
    LSHIFT          shift and go to state 243
    RSHIFT          shift and go to state 226
    LSHIFTA         shift and go to state 241
    RSHIFTA         shift and go to state 238

  ! POWER           [ reduce using rule 138 (expression -> expression LE expression .) ]
  ! TIMES           [ reduce using rule 138 (expression -> expression LE expression .) ]
  ! DIVIDE          [ reduce using rule 138 (expression -> expression LE expression .) ]
  ! MOD             [ reduce using rule 138 (expression -> expression LE expression .) ]
  ! PLUS            [ reduce using rule 138 (expression -> expression LE expression .) ]
  ! MINUS           [ reduce using rule 138 (expression -> expression LE expression .) ]
  ! LSHIFT          [ reduce using rule 138 (expression -> expression LE expression .) ]
  ! RSHIFT          [ reduce using rule 138 (expression -> expression LE expression .) ]
  ! LSHIFTA         [ reduce using rule 138 (expression -> expression LE expression .) ]
  ! RSHIFTA         [ reduce using rule 138 (expression -> expression LE expression .) ]
  ! LT              [ shift and go to state 235 ]
  ! GT              [ shift and go to state 228 ]
  ! LE              [ shift and go to state 222 ]
  ! GE              [ shift and go to state 239 ]
  ! EQ              [ shift and go to state 223 ]
  ! NE              [ shift and go to state 225 ]
  ! EQL             [ shift and go to state 245 ]
  ! NEL             [ shift and go to state 242 ]
  ! AND             [ shift and go to state 224 ]
  ! XOR             [ shift and go to state 237 ]
  ! XNOR            [ shift and go to state 232 ]
  ! OR              [ shift and go to state 234 ]
  ! LAND            [ shift and go to state 227 ]
  ! LOR             [ shift and go to state 230 ]
  ! COND            [ shift and go to state 233 ]


state 356

    (140) expression -> expression EQ expression .
    (126) expression -> expression . POWER expression
    (127) expression -> expression . TIMES expression
    (128) expression -> expression . DIVIDE expression
    (129) expression -> expression . MOD expression
    (130) expression -> expression . PLUS expression
    (131) expression -> expression . MINUS expression
    (132) expression -> expression . LSHIFT expression
    (133) expression -> expression . RSHIFT expression
    (134) expression -> expression . LSHIFTA expression
    (135) expression -> expression . RSHIFTA expression
    (136) expression -> expression . LT expression
    (137) expression -> expression . GT expression
    (138) expression -> expression . LE expression
    (139) expression -> expression . GE expression
    (140) expression -> expression . EQ expression
    (141) expression -> expression . NE expression
    (142) expression -> expression . EQL expression
    (143) expression -> expression . NEL expression
    (144) expression -> expression . AND expression
    (145) expression -> expression . XOR expression
    (146) expression -> expression . XNOR expression
    (147) expression -> expression . OR expression
    (148) expression -> expression . LAND expression
    (149) expression -> expression . LOR expression
    (150) expression -> expression . COND expression COLON expression

    EQ              reduce using rule 140 (expression -> expression EQ expression .)
    NE              reduce using rule 140 (expression -> expression EQ expression .)
    EQL             reduce using rule 140 (expression -> expression EQ expression .)
    NEL             reduce using rule 140 (expression -> expression EQ expression .)
    AND             reduce using rule 140 (expression -> expression EQ expression .)
    XOR             reduce using rule 140 (expression -> expression EQ expression .)
    XNOR            reduce using rule 140 (expression -> expression EQ expression .)
    OR              reduce using rule 140 (expression -> expression EQ expression .)
    LAND            reduce using rule 140 (expression -> expression EQ expression .)
    LOR             reduce using rule 140 (expression -> expression EQ expression .)
    COND            reduce using rule 140 (expression -> expression EQ expression .)
    LBRACE          reduce using rule 140 (expression -> expression EQ expression .)
    RBRACE          reduce using rule 140 (expression -> expression EQ expression .)
    COMMA           reduce using rule 140 (expression -> expression EQ expression .)
    RPAREN          reduce using rule 140 (expression -> expression EQ expression .)
    COLON           reduce using rule 140 (expression -> expression EQ expression .)
    SEMICOLON       reduce using rule 140 (expression -> expression EQ expression .)
    PLUSCOLON       reduce using rule 140 (expression -> expression EQ expression .)
    MINUSCOLON      reduce using rule 140 (expression -> expression EQ expression .)
    RBRACKET        reduce using rule 140 (expression -> expression EQ expression .)
    POWER           shift and go to state 246
    TIMES           shift and go to state 349
    DIVIDE          shift and go to state 244
    MOD             shift and go to state 231
    PLUS            shift and go to state 240
    MINUS           shift and go to state 229
    LSHIFT          shift and go to state 243
    RSHIFT          shift and go to state 226
    LSHIFTA         shift and go to state 241
    RSHIFTA         shift and go to state 238
    LT              shift and go to state 235
    GT              shift and go to state 228
    LE              shift and go to state 222
    GE              shift and go to state 239

  ! POWER           [ reduce using rule 140 (expression -> expression EQ expression .) ]
  ! TIMES           [ reduce using rule 140 (expression -> expression EQ expression .) ]
  ! DIVIDE          [ reduce using rule 140 (expression -> expression EQ expression .) ]
  ! MOD             [ reduce using rule 140 (expression -> expression EQ expression .) ]
  ! PLUS            [ reduce using rule 140 (expression -> expression EQ expression .) ]
  ! MINUS           [ reduce using rule 140 (expression -> expression EQ expression .) ]
  ! LSHIFT          [ reduce using rule 140 (expression -> expression EQ expression .) ]
  ! RSHIFT          [ reduce using rule 140 (expression -> expression EQ expression .) ]
  ! LSHIFTA         [ reduce using rule 140 (expression -> expression EQ expression .) ]
  ! RSHIFTA         [ reduce using rule 140 (expression -> expression EQ expression .) ]
  ! LT              [ reduce using rule 140 (expression -> expression EQ expression .) ]
  ! GT              [ reduce using rule 140 (expression -> expression EQ expression .) ]
  ! LE              [ reduce using rule 140 (expression -> expression EQ expression .) ]
  ! GE              [ reduce using rule 140 (expression -> expression EQ expression .) ]
  ! EQ              [ shift and go to state 223 ]
  ! NE              [ shift and go to state 225 ]
  ! EQL             [ shift and go to state 245 ]
  ! NEL             [ shift and go to state 242 ]
  ! AND             [ shift and go to state 224 ]
  ! XOR             [ shift and go to state 237 ]
  ! XNOR            [ shift and go to state 232 ]
  ! OR              [ shift and go to state 234 ]
  ! LAND            [ shift and go to state 227 ]
  ! LOR             [ shift and go to state 230 ]
  ! COND            [ shift and go to state 233 ]


state 357

    (144) expression -> expression AND expression .
    (126) expression -> expression . POWER expression
    (127) expression -> expression . TIMES expression
    (128) expression -> expression . DIVIDE expression
    (129) expression -> expression . MOD expression
    (130) expression -> expression . PLUS expression
    (131) expression -> expression . MINUS expression
    (132) expression -> expression . LSHIFT expression
    (133) expression -> expression . RSHIFT expression
    (134) expression -> expression . LSHIFTA expression
    (135) expression -> expression . RSHIFTA expression
    (136) expression -> expression . LT expression
    (137) expression -> expression . GT expression
    (138) expression -> expression . LE expression
    (139) expression -> expression . GE expression
    (140) expression -> expression . EQ expression
    (141) expression -> expression . NE expression
    (142) expression -> expression . EQL expression
    (143) expression -> expression . NEL expression
    (144) expression -> expression . AND expression
    (145) expression -> expression . XOR expression
    (146) expression -> expression . XNOR expression
    (147) expression -> expression . OR expression
    (148) expression -> expression . LAND expression
    (149) expression -> expression . LOR expression
    (150) expression -> expression . COND expression COLON expression

    AND             reduce using rule 144 (expression -> expression AND expression .)
    XOR             reduce using rule 144 (expression -> expression AND expression .)
    XNOR            reduce using rule 144 (expression -> expression AND expression .)
    OR              reduce using rule 144 (expression -> expression AND expression .)
    LAND            reduce using rule 144 (expression -> expression AND expression .)
    LOR             reduce using rule 144 (expression -> expression AND expression .)
    COND            reduce using rule 144 (expression -> expression AND expression .)
    LBRACE          reduce using rule 144 (expression -> expression AND expression .)
    RBRACE          reduce using rule 144 (expression -> expression AND expression .)
    COMMA           reduce using rule 144 (expression -> expression AND expression .)
    RPAREN          reduce using rule 144 (expression -> expression AND expression .)
    COLON           reduce using rule 144 (expression -> expression AND expression .)
    SEMICOLON       reduce using rule 144 (expression -> expression AND expression .)
    PLUSCOLON       reduce using rule 144 (expression -> expression AND expression .)
    MINUSCOLON      reduce using rule 144 (expression -> expression AND expression .)
    RBRACKET        reduce using rule 144 (expression -> expression AND expression .)
    POWER           shift and go to state 246
    TIMES           shift and go to state 349
    DIVIDE          shift and go to state 244
    MOD             shift and go to state 231
    PLUS            shift and go to state 240
    MINUS           shift and go to state 229
    LSHIFT          shift and go to state 243
    RSHIFT          shift and go to state 226
    LSHIFTA         shift and go to state 241
    RSHIFTA         shift and go to state 238
    LT              shift and go to state 235
    GT              shift and go to state 228
    LE              shift and go to state 222
    GE              shift and go to state 239
    EQ              shift and go to state 223
    NE              shift and go to state 225
    EQL             shift and go to state 245
    NEL             shift and go to state 242

  ! POWER           [ reduce using rule 144 (expression -> expression AND expression .) ]
  ! TIMES           [ reduce using rule 144 (expression -> expression AND expression .) ]
  ! DIVIDE          [ reduce using rule 144 (expression -> expression AND expression .) ]
  ! MOD             [ reduce using rule 144 (expression -> expression AND expression .) ]
  ! PLUS            [ reduce using rule 144 (expression -> expression AND expression .) ]
  ! MINUS           [ reduce using rule 144 (expression -> expression AND expression .) ]
  ! LSHIFT          [ reduce using rule 144 (expression -> expression AND expression .) ]
  ! RSHIFT          [ reduce using rule 144 (expression -> expression AND expression .) ]
  ! LSHIFTA         [ reduce using rule 144 (expression -> expression AND expression .) ]
  ! RSHIFTA         [ reduce using rule 144 (expression -> expression AND expression .) ]
  ! LT              [ reduce using rule 144 (expression -> expression AND expression .) ]
  ! GT              [ reduce using rule 144 (expression -> expression AND expression .) ]
  ! LE              [ reduce using rule 144 (expression -> expression AND expression .) ]
  ! GE              [ reduce using rule 144 (expression -> expression AND expression .) ]
  ! EQ              [ reduce using rule 144 (expression -> expression AND expression .) ]
  ! NE              [ reduce using rule 144 (expression -> expression AND expression .) ]
  ! EQL             [ reduce using rule 144 (expression -> expression AND expression .) ]
  ! NEL             [ reduce using rule 144 (expression -> expression AND expression .) ]
  ! AND             [ shift and go to state 224 ]
  ! XOR             [ shift and go to state 237 ]
  ! XNOR            [ shift and go to state 232 ]
  ! OR              [ shift and go to state 234 ]
  ! LAND            [ shift and go to state 227 ]
  ! LOR             [ shift and go to state 230 ]
  ! COND            [ shift and go to state 233 ]


state 358

    (141) expression -> expression NE expression .
    (126) expression -> expression . POWER expression
    (127) expression -> expression . TIMES expression
    (128) expression -> expression . DIVIDE expression
    (129) expression -> expression . MOD expression
    (130) expression -> expression . PLUS expression
    (131) expression -> expression . MINUS expression
    (132) expression -> expression . LSHIFT expression
    (133) expression -> expression . RSHIFT expression
    (134) expression -> expression . LSHIFTA expression
    (135) expression -> expression . RSHIFTA expression
    (136) expression -> expression . LT expression
    (137) expression -> expression . GT expression
    (138) expression -> expression . LE expression
    (139) expression -> expression . GE expression
    (140) expression -> expression . EQ expression
    (141) expression -> expression . NE expression
    (142) expression -> expression . EQL expression
    (143) expression -> expression . NEL expression
    (144) expression -> expression . AND expression
    (145) expression -> expression . XOR expression
    (146) expression -> expression . XNOR expression
    (147) expression -> expression . OR expression
    (148) expression -> expression . LAND expression
    (149) expression -> expression . LOR expression
    (150) expression -> expression . COND expression COLON expression

    EQ              reduce using rule 141 (expression -> expression NE expression .)
    NE              reduce using rule 141 (expression -> expression NE expression .)
    EQL             reduce using rule 141 (expression -> expression NE expression .)
    NEL             reduce using rule 141 (expression -> expression NE expression .)
    AND             reduce using rule 141 (expression -> expression NE expression .)
    XOR             reduce using rule 141 (expression -> expression NE expression .)
    XNOR            reduce using rule 141 (expression -> expression NE expression .)
    OR              reduce using rule 141 (expression -> expression NE expression .)
    LAND            reduce using rule 141 (expression -> expression NE expression .)
    LOR             reduce using rule 141 (expression -> expression NE expression .)
    COND            reduce using rule 141 (expression -> expression NE expression .)
    LBRACE          reduce using rule 141 (expression -> expression NE expression .)
    RBRACE          reduce using rule 141 (expression -> expression NE expression .)
    COMMA           reduce using rule 141 (expression -> expression NE expression .)
    RPAREN          reduce using rule 141 (expression -> expression NE expression .)
    COLON           reduce using rule 141 (expression -> expression NE expression .)
    SEMICOLON       reduce using rule 141 (expression -> expression NE expression .)
    PLUSCOLON       reduce using rule 141 (expression -> expression NE expression .)
    MINUSCOLON      reduce using rule 141 (expression -> expression NE expression .)
    RBRACKET        reduce using rule 141 (expression -> expression NE expression .)
    POWER           shift and go to state 246
    TIMES           shift and go to state 349
    DIVIDE          shift and go to state 244
    MOD             shift and go to state 231
    PLUS            shift and go to state 240
    MINUS           shift and go to state 229
    LSHIFT          shift and go to state 243
    RSHIFT          shift and go to state 226
    LSHIFTA         shift and go to state 241
    RSHIFTA         shift and go to state 238
    LT              shift and go to state 235
    GT              shift and go to state 228
    LE              shift and go to state 222
    GE              shift and go to state 239

  ! POWER           [ reduce using rule 141 (expression -> expression NE expression .) ]
  ! TIMES           [ reduce using rule 141 (expression -> expression NE expression .) ]
  ! DIVIDE          [ reduce using rule 141 (expression -> expression NE expression .) ]
  ! MOD             [ reduce using rule 141 (expression -> expression NE expression .) ]
  ! PLUS            [ reduce using rule 141 (expression -> expression NE expression .) ]
  ! MINUS           [ reduce using rule 141 (expression -> expression NE expression .) ]
  ! LSHIFT          [ reduce using rule 141 (expression -> expression NE expression .) ]
  ! RSHIFT          [ reduce using rule 141 (expression -> expression NE expression .) ]
  ! LSHIFTA         [ reduce using rule 141 (expression -> expression NE expression .) ]
  ! RSHIFTA         [ reduce using rule 141 (expression -> expression NE expression .) ]
  ! LT              [ reduce using rule 141 (expression -> expression NE expression .) ]
  ! GT              [ reduce using rule 141 (expression -> expression NE expression .) ]
  ! LE              [ reduce using rule 141 (expression -> expression NE expression .) ]
  ! GE              [ reduce using rule 141 (expression -> expression NE expression .) ]
  ! EQ              [ shift and go to state 223 ]
  ! NE              [ shift and go to state 225 ]
  ! EQL             [ shift and go to state 245 ]
  ! NEL             [ shift and go to state 242 ]
  ! AND             [ shift and go to state 224 ]
  ! XOR             [ shift and go to state 237 ]
  ! XNOR            [ shift and go to state 232 ]
  ! OR              [ shift and go to state 234 ]
  ! LAND            [ shift and go to state 227 ]
  ! LOR             [ shift and go to state 230 ]
  ! COND            [ shift and go to state 233 ]


state 359

    (133) expression -> expression RSHIFT expression .
    (126) expression -> expression . POWER expression
    (127) expression -> expression . TIMES expression
    (128) expression -> expression . DIVIDE expression
    (129) expression -> expression . MOD expression
    (130) expression -> expression . PLUS expression
    (131) expression -> expression . MINUS expression
    (132) expression -> expression . LSHIFT expression
    (133) expression -> expression . RSHIFT expression
    (134) expression -> expression . LSHIFTA expression
    (135) expression -> expression . RSHIFTA expression
    (136) expression -> expression . LT expression
    (137) expression -> expression . GT expression
    (138) expression -> expression . LE expression
    (139) expression -> expression . GE expression
    (140) expression -> expression . EQ expression
    (141) expression -> expression . NE expression
    (142) expression -> expression . EQL expression
    (143) expression -> expression . NEL expression
    (144) expression -> expression . AND expression
    (145) expression -> expression . XOR expression
    (146) expression -> expression . XNOR expression
    (147) expression -> expression . OR expression
    (148) expression -> expression . LAND expression
    (149) expression -> expression . LOR expression
    (150) expression -> expression . COND expression COLON expression

    LSHIFT          reduce using rule 133 (expression -> expression RSHIFT expression .)
    RSHIFT          reduce using rule 133 (expression -> expression RSHIFT expression .)
    LSHIFTA         reduce using rule 133 (expression -> expression RSHIFT expression .)
    RSHIFTA         reduce using rule 133 (expression -> expression RSHIFT expression .)
    LT              reduce using rule 133 (expression -> expression RSHIFT expression .)
    GT              reduce using rule 133 (expression -> expression RSHIFT expression .)
    LE              reduce using rule 133 (expression -> expression RSHIFT expression .)
    GE              reduce using rule 133 (expression -> expression RSHIFT expression .)
    EQ              reduce using rule 133 (expression -> expression RSHIFT expression .)
    NE              reduce using rule 133 (expression -> expression RSHIFT expression .)
    EQL             reduce using rule 133 (expression -> expression RSHIFT expression .)
    NEL             reduce using rule 133 (expression -> expression RSHIFT expression .)
    AND             reduce using rule 133 (expression -> expression RSHIFT expression .)
    XOR             reduce using rule 133 (expression -> expression RSHIFT expression .)
    XNOR            reduce using rule 133 (expression -> expression RSHIFT expression .)
    OR              reduce using rule 133 (expression -> expression RSHIFT expression .)
    LAND            reduce using rule 133 (expression -> expression RSHIFT expression .)
    LOR             reduce using rule 133 (expression -> expression RSHIFT expression .)
    COND            reduce using rule 133 (expression -> expression RSHIFT expression .)
    LBRACE          reduce using rule 133 (expression -> expression RSHIFT expression .)
    RBRACE          reduce using rule 133 (expression -> expression RSHIFT expression .)
    COMMA           reduce using rule 133 (expression -> expression RSHIFT expression .)
    RPAREN          reduce using rule 133 (expression -> expression RSHIFT expression .)
    COLON           reduce using rule 133 (expression -> expression RSHIFT expression .)
    SEMICOLON       reduce using rule 133 (expression -> expression RSHIFT expression .)
    PLUSCOLON       reduce using rule 133 (expression -> expression RSHIFT expression .)
    MINUSCOLON      reduce using rule 133 (expression -> expression RSHIFT expression .)
    RBRACKET        reduce using rule 133 (expression -> expression RSHIFT expression .)
    POWER           shift and go to state 246
    TIMES           shift and go to state 349
    DIVIDE          shift and go to state 244
    MOD             shift and go to state 231
    PLUS            shift and go to state 240
    MINUS           shift and go to state 229

  ! POWER           [ reduce using rule 133 (expression -> expression RSHIFT expression .) ]
  ! TIMES           [ reduce using rule 133 (expression -> expression RSHIFT expression .) ]
  ! DIVIDE          [ reduce using rule 133 (expression -> expression RSHIFT expression .) ]
  ! MOD             [ reduce using rule 133 (expression -> expression RSHIFT expression .) ]
  ! PLUS            [ reduce using rule 133 (expression -> expression RSHIFT expression .) ]
  ! MINUS           [ reduce using rule 133 (expression -> expression RSHIFT expression .) ]
  ! LSHIFT          [ shift and go to state 243 ]
  ! RSHIFT          [ shift and go to state 226 ]
  ! LSHIFTA         [ shift and go to state 241 ]
  ! RSHIFTA         [ shift and go to state 238 ]
  ! LT              [ shift and go to state 235 ]
  ! GT              [ shift and go to state 228 ]
  ! LE              [ shift and go to state 222 ]
  ! GE              [ shift and go to state 239 ]
  ! EQ              [ shift and go to state 223 ]
  ! NE              [ shift and go to state 225 ]
  ! EQL             [ shift and go to state 245 ]
  ! NEL             [ shift and go to state 242 ]
  ! AND             [ shift and go to state 224 ]
  ! XOR             [ shift and go to state 237 ]
  ! XNOR            [ shift and go to state 232 ]
  ! OR              [ shift and go to state 234 ]
  ! LAND            [ shift and go to state 227 ]
  ! LOR             [ shift and go to state 230 ]
  ! COND            [ shift and go to state 233 ]


state 360

    (148) expression -> expression LAND expression .
    (126) expression -> expression . POWER expression
    (127) expression -> expression . TIMES expression
    (128) expression -> expression . DIVIDE expression
    (129) expression -> expression . MOD expression
    (130) expression -> expression . PLUS expression
    (131) expression -> expression . MINUS expression
    (132) expression -> expression . LSHIFT expression
    (133) expression -> expression . RSHIFT expression
    (134) expression -> expression . LSHIFTA expression
    (135) expression -> expression . RSHIFTA expression
    (136) expression -> expression . LT expression
    (137) expression -> expression . GT expression
    (138) expression -> expression . LE expression
    (139) expression -> expression . GE expression
    (140) expression -> expression . EQ expression
    (141) expression -> expression . NE expression
    (142) expression -> expression . EQL expression
    (143) expression -> expression . NEL expression
    (144) expression -> expression . AND expression
    (145) expression -> expression . XOR expression
    (146) expression -> expression . XNOR expression
    (147) expression -> expression . OR expression
    (148) expression -> expression . LAND expression
    (149) expression -> expression . LOR expression
    (150) expression -> expression . COND expression COLON expression

    LAND            reduce using rule 148 (expression -> expression LAND expression .)
    LOR             reduce using rule 148 (expression -> expression LAND expression .)
    COND            reduce using rule 148 (expression -> expression LAND expression .)
    LBRACE          reduce using rule 148 (expression -> expression LAND expression .)
    RBRACE          reduce using rule 148 (expression -> expression LAND expression .)
    COMMA           reduce using rule 148 (expression -> expression LAND expression .)
    RPAREN          reduce using rule 148 (expression -> expression LAND expression .)
    COLON           reduce using rule 148 (expression -> expression LAND expression .)
    SEMICOLON       reduce using rule 148 (expression -> expression LAND expression .)
    PLUSCOLON       reduce using rule 148 (expression -> expression LAND expression .)
    MINUSCOLON      reduce using rule 148 (expression -> expression LAND expression .)
    RBRACKET        reduce using rule 148 (expression -> expression LAND expression .)
    POWER           shift and go to state 246
    TIMES           shift and go to state 349
    DIVIDE          shift and go to state 244
    MOD             shift and go to state 231
    PLUS            shift and go to state 240
    MINUS           shift and go to state 229
    LSHIFT          shift and go to state 243
    RSHIFT          shift and go to state 226
    LSHIFTA         shift and go to state 241
    RSHIFTA         shift and go to state 238
    LT              shift and go to state 235
    GT              shift and go to state 228
    LE              shift and go to state 222
    GE              shift and go to state 239
    EQ              shift and go to state 223
    NE              shift and go to state 225
    EQL             shift and go to state 245
    NEL             shift and go to state 242
    AND             shift and go to state 224
    XOR             shift and go to state 237
    XNOR            shift and go to state 232
    OR              shift and go to state 234

  ! POWER           [ reduce using rule 148 (expression -> expression LAND expression .) ]
  ! TIMES           [ reduce using rule 148 (expression -> expression LAND expression .) ]
  ! DIVIDE          [ reduce using rule 148 (expression -> expression LAND expression .) ]
  ! MOD             [ reduce using rule 148 (expression -> expression LAND expression .) ]
  ! PLUS            [ reduce using rule 148 (expression -> expression LAND expression .) ]
  ! MINUS           [ reduce using rule 148 (expression -> expression LAND expression .) ]
  ! LSHIFT          [ reduce using rule 148 (expression -> expression LAND expression .) ]
  ! RSHIFT          [ reduce using rule 148 (expression -> expression LAND expression .) ]
  ! LSHIFTA         [ reduce using rule 148 (expression -> expression LAND expression .) ]
  ! RSHIFTA         [ reduce using rule 148 (expression -> expression LAND expression .) ]
  ! LT              [ reduce using rule 148 (expression -> expression LAND expression .) ]
  ! GT              [ reduce using rule 148 (expression -> expression LAND expression .) ]
  ! LE              [ reduce using rule 148 (expression -> expression LAND expression .) ]
  ! GE              [ reduce using rule 148 (expression -> expression LAND expression .) ]
  ! EQ              [ reduce using rule 148 (expression -> expression LAND expression .) ]
  ! NE              [ reduce using rule 148 (expression -> expression LAND expression .) ]
  ! EQL             [ reduce using rule 148 (expression -> expression LAND expression .) ]
  ! NEL             [ reduce using rule 148 (expression -> expression LAND expression .) ]
  ! AND             [ reduce using rule 148 (expression -> expression LAND expression .) ]
  ! XOR             [ reduce using rule 148 (expression -> expression LAND expression .) ]
  ! XNOR            [ reduce using rule 148 (expression -> expression LAND expression .) ]
  ! OR              [ reduce using rule 148 (expression -> expression LAND expression .) ]
  ! LAND            [ shift and go to state 227 ]
  ! LOR             [ shift and go to state 230 ]
  ! COND            [ shift and go to state 233 ]


state 361

    (137) expression -> expression GT expression .
    (126) expression -> expression . POWER expression
    (127) expression -> expression . TIMES expression
    (128) expression -> expression . DIVIDE expression
    (129) expression -> expression . MOD expression
    (130) expression -> expression . PLUS expression
    (131) expression -> expression . MINUS expression
    (132) expression -> expression . LSHIFT expression
    (133) expression -> expression . RSHIFT expression
    (134) expression -> expression . LSHIFTA expression
    (135) expression -> expression . RSHIFTA expression
    (136) expression -> expression . LT expression
    (137) expression -> expression . GT expression
    (138) expression -> expression . LE expression
    (139) expression -> expression . GE expression
    (140) expression -> expression . EQ expression
    (141) expression -> expression . NE expression
    (142) expression -> expression . EQL expression
    (143) expression -> expression . NEL expression
    (144) expression -> expression . AND expression
    (145) expression -> expression . XOR expression
    (146) expression -> expression . XNOR expression
    (147) expression -> expression . OR expression
    (148) expression -> expression . LAND expression
    (149) expression -> expression . LOR expression
    (150) expression -> expression . COND expression COLON expression

    LT              reduce using rule 137 (expression -> expression GT expression .)
    GT              reduce using rule 137 (expression -> expression GT expression .)
    LE              reduce using rule 137 (expression -> expression GT expression .)
    GE              reduce using rule 137 (expression -> expression GT expression .)
    EQ              reduce using rule 137 (expression -> expression GT expression .)
    NE              reduce using rule 137 (expression -> expression GT expression .)
    EQL             reduce using rule 137 (expression -> expression GT expression .)
    NEL             reduce using rule 137 (expression -> expression GT expression .)
    AND             reduce using rule 137 (expression -> expression GT expression .)
    XOR             reduce using rule 137 (expression -> expression GT expression .)
    XNOR            reduce using rule 137 (expression -> expression GT expression .)
    OR              reduce using rule 137 (expression -> expression GT expression .)
    LAND            reduce using rule 137 (expression -> expression GT expression .)
    LOR             reduce using rule 137 (expression -> expression GT expression .)
    COND            reduce using rule 137 (expression -> expression GT expression .)
    LBRACE          reduce using rule 137 (expression -> expression GT expression .)
    RBRACE          reduce using rule 137 (expression -> expression GT expression .)
    COMMA           reduce using rule 137 (expression -> expression GT expression .)
    RPAREN          reduce using rule 137 (expression -> expression GT expression .)
    COLON           reduce using rule 137 (expression -> expression GT expression .)
    SEMICOLON       reduce using rule 137 (expression -> expression GT expression .)
    PLUSCOLON       reduce using rule 137 (expression -> expression GT expression .)
    MINUSCOLON      reduce using rule 137 (expression -> expression GT expression .)
    RBRACKET        reduce using rule 137 (expression -> expression GT expression .)
    POWER           shift and go to state 246
    TIMES           shift and go to state 349
    DIVIDE          shift and go to state 244
    MOD             shift and go to state 231
    PLUS            shift and go to state 240
    MINUS           shift and go to state 229
    LSHIFT          shift and go to state 243
    RSHIFT          shift and go to state 226
    LSHIFTA         shift and go to state 241
    RSHIFTA         shift and go to state 238

  ! POWER           [ reduce using rule 137 (expression -> expression GT expression .) ]
  ! TIMES           [ reduce using rule 137 (expression -> expression GT expression .) ]
  ! DIVIDE          [ reduce using rule 137 (expression -> expression GT expression .) ]
  ! MOD             [ reduce using rule 137 (expression -> expression GT expression .) ]
  ! PLUS            [ reduce using rule 137 (expression -> expression GT expression .) ]
  ! MINUS           [ reduce using rule 137 (expression -> expression GT expression .) ]
  ! LSHIFT          [ reduce using rule 137 (expression -> expression GT expression .) ]
  ! RSHIFT          [ reduce using rule 137 (expression -> expression GT expression .) ]
  ! LSHIFTA         [ reduce using rule 137 (expression -> expression GT expression .) ]
  ! RSHIFTA         [ reduce using rule 137 (expression -> expression GT expression .) ]
  ! LT              [ shift and go to state 235 ]
  ! GT              [ shift and go to state 228 ]
  ! LE              [ shift and go to state 222 ]
  ! GE              [ shift and go to state 239 ]
  ! EQ              [ shift and go to state 223 ]
  ! NE              [ shift and go to state 225 ]
  ! EQL             [ shift and go to state 245 ]
  ! NEL             [ shift and go to state 242 ]
  ! AND             [ shift and go to state 224 ]
  ! XOR             [ shift and go to state 237 ]
  ! XNOR            [ shift and go to state 232 ]
  ! OR              [ shift and go to state 234 ]
  ! LAND            [ shift and go to state 227 ]
  ! LOR             [ shift and go to state 230 ]
  ! COND            [ shift and go to state 233 ]


state 362

    (131) expression -> expression MINUS expression .
    (126) expression -> expression . POWER expression
    (127) expression -> expression . TIMES expression
    (128) expression -> expression . DIVIDE expression
    (129) expression -> expression . MOD expression
    (130) expression -> expression . PLUS expression
    (131) expression -> expression . MINUS expression
    (132) expression -> expression . LSHIFT expression
    (133) expression -> expression . RSHIFT expression
    (134) expression -> expression . LSHIFTA expression
    (135) expression -> expression . RSHIFTA expression
    (136) expression -> expression . LT expression
    (137) expression -> expression . GT expression
    (138) expression -> expression . LE expression
    (139) expression -> expression . GE expression
    (140) expression -> expression . EQ expression
    (141) expression -> expression . NE expression
    (142) expression -> expression . EQL expression
    (143) expression -> expression . NEL expression
    (144) expression -> expression . AND expression
    (145) expression -> expression . XOR expression
    (146) expression -> expression . XNOR expression
    (147) expression -> expression . OR expression
    (148) expression -> expression . LAND expression
    (149) expression -> expression . LOR expression
    (150) expression -> expression . COND expression COLON expression

    PLUS            reduce using rule 131 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 131 (expression -> expression MINUS expression .)
    LSHIFT          reduce using rule 131 (expression -> expression MINUS expression .)
    RSHIFT          reduce using rule 131 (expression -> expression MINUS expression .)
    LSHIFTA         reduce using rule 131 (expression -> expression MINUS expression .)
    RSHIFTA         reduce using rule 131 (expression -> expression MINUS expression .)
    LT              reduce using rule 131 (expression -> expression MINUS expression .)
    GT              reduce using rule 131 (expression -> expression MINUS expression .)
    LE              reduce using rule 131 (expression -> expression MINUS expression .)
    GE              reduce using rule 131 (expression -> expression MINUS expression .)
    EQ              reduce using rule 131 (expression -> expression MINUS expression .)
    NE              reduce using rule 131 (expression -> expression MINUS expression .)
    EQL             reduce using rule 131 (expression -> expression MINUS expression .)
    NEL             reduce using rule 131 (expression -> expression MINUS expression .)
    AND             reduce using rule 131 (expression -> expression MINUS expression .)
    XOR             reduce using rule 131 (expression -> expression MINUS expression .)
    XNOR            reduce using rule 131 (expression -> expression MINUS expression .)
    OR              reduce using rule 131 (expression -> expression MINUS expression .)
    LAND            reduce using rule 131 (expression -> expression MINUS expression .)
    LOR             reduce using rule 131 (expression -> expression MINUS expression .)
    COND            reduce using rule 131 (expression -> expression MINUS expression .)
    LBRACE          reduce using rule 131 (expression -> expression MINUS expression .)
    RBRACE          reduce using rule 131 (expression -> expression MINUS expression .)
    COMMA           reduce using rule 131 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 131 (expression -> expression MINUS expression .)
    COLON           reduce using rule 131 (expression -> expression MINUS expression .)
    SEMICOLON       reduce using rule 131 (expression -> expression MINUS expression .)
    PLUSCOLON       reduce using rule 131 (expression -> expression MINUS expression .)
    MINUSCOLON      reduce using rule 131 (expression -> expression MINUS expression .)
    RBRACKET        reduce using rule 131 (expression -> expression MINUS expression .)
    POWER           shift and go to state 246
    TIMES           shift and go to state 349
    DIVIDE          shift and go to state 244
    MOD             shift and go to state 231

  ! POWER           [ reduce using rule 131 (expression -> expression MINUS expression .) ]
  ! TIMES           [ reduce using rule 131 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 131 (expression -> expression MINUS expression .) ]
  ! MOD             [ reduce using rule 131 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 240 ]
  ! MINUS           [ shift and go to state 229 ]
  ! LSHIFT          [ shift and go to state 243 ]
  ! RSHIFT          [ shift and go to state 226 ]
  ! LSHIFTA         [ shift and go to state 241 ]
  ! RSHIFTA         [ shift and go to state 238 ]
  ! LT              [ shift and go to state 235 ]
  ! GT              [ shift and go to state 228 ]
  ! LE              [ shift and go to state 222 ]
  ! GE              [ shift and go to state 239 ]
  ! EQ              [ shift and go to state 223 ]
  ! NE              [ shift and go to state 225 ]
  ! EQL             [ shift and go to state 245 ]
  ! NEL             [ shift and go to state 242 ]
  ! AND             [ shift and go to state 224 ]
  ! XOR             [ shift and go to state 237 ]
  ! XNOR            [ shift and go to state 232 ]
  ! OR              [ shift and go to state 234 ]
  ! LAND            [ shift and go to state 227 ]
  ! LOR             [ shift and go to state 230 ]
  ! COND            [ shift and go to state 233 ]


state 363

    (149) expression -> expression LOR expression .
    (126) expression -> expression . POWER expression
    (127) expression -> expression . TIMES expression
    (128) expression -> expression . DIVIDE expression
    (129) expression -> expression . MOD expression
    (130) expression -> expression . PLUS expression
    (131) expression -> expression . MINUS expression
    (132) expression -> expression . LSHIFT expression
    (133) expression -> expression . RSHIFT expression
    (134) expression -> expression . LSHIFTA expression
    (135) expression -> expression . RSHIFTA expression
    (136) expression -> expression . LT expression
    (137) expression -> expression . GT expression
    (138) expression -> expression . LE expression
    (139) expression -> expression . GE expression
    (140) expression -> expression . EQ expression
    (141) expression -> expression . NE expression
    (142) expression -> expression . EQL expression
    (143) expression -> expression . NEL expression
    (144) expression -> expression . AND expression
    (145) expression -> expression . XOR expression
    (146) expression -> expression . XNOR expression
    (147) expression -> expression . OR expression
    (148) expression -> expression . LAND expression
    (149) expression -> expression . LOR expression
    (150) expression -> expression . COND expression COLON expression

    LOR             reduce using rule 149 (expression -> expression LOR expression .)
    COND            reduce using rule 149 (expression -> expression LOR expression .)
    LBRACE          reduce using rule 149 (expression -> expression LOR expression .)
    RBRACE          reduce using rule 149 (expression -> expression LOR expression .)
    COMMA           reduce using rule 149 (expression -> expression LOR expression .)
    RPAREN          reduce using rule 149 (expression -> expression LOR expression .)
    COLON           reduce using rule 149 (expression -> expression LOR expression .)
    SEMICOLON       reduce using rule 149 (expression -> expression LOR expression .)
    PLUSCOLON       reduce using rule 149 (expression -> expression LOR expression .)
    MINUSCOLON      reduce using rule 149 (expression -> expression LOR expression .)
    RBRACKET        reduce using rule 149 (expression -> expression LOR expression .)
    POWER           shift and go to state 246
    TIMES           shift and go to state 349
    DIVIDE          shift and go to state 244
    MOD             shift and go to state 231
    PLUS            shift and go to state 240
    MINUS           shift and go to state 229
    LSHIFT          shift and go to state 243
    RSHIFT          shift and go to state 226
    LSHIFTA         shift and go to state 241
    RSHIFTA         shift and go to state 238
    LT              shift and go to state 235
    GT              shift and go to state 228
    LE              shift and go to state 222
    GE              shift and go to state 239
    EQ              shift and go to state 223
    NE              shift and go to state 225
    EQL             shift and go to state 245
    NEL             shift and go to state 242
    AND             shift and go to state 224
    XOR             shift and go to state 237
    XNOR            shift and go to state 232
    OR              shift and go to state 234
    LAND            shift and go to state 227

  ! POWER           [ reduce using rule 149 (expression -> expression LOR expression .) ]
  ! TIMES           [ reduce using rule 149 (expression -> expression LOR expression .) ]
  ! DIVIDE          [ reduce using rule 149 (expression -> expression LOR expression .) ]
  ! MOD             [ reduce using rule 149 (expression -> expression LOR expression .) ]
  ! PLUS            [ reduce using rule 149 (expression -> expression LOR expression .) ]
  ! MINUS           [ reduce using rule 149 (expression -> expression LOR expression .) ]
  ! LSHIFT          [ reduce using rule 149 (expression -> expression LOR expression .) ]
  ! RSHIFT          [ reduce using rule 149 (expression -> expression LOR expression .) ]
  ! LSHIFTA         [ reduce using rule 149 (expression -> expression LOR expression .) ]
  ! RSHIFTA         [ reduce using rule 149 (expression -> expression LOR expression .) ]
  ! LT              [ reduce using rule 149 (expression -> expression LOR expression .) ]
  ! GT              [ reduce using rule 149 (expression -> expression LOR expression .) ]
  ! LE              [ reduce using rule 149 (expression -> expression LOR expression .) ]
  ! GE              [ reduce using rule 149 (expression -> expression LOR expression .) ]
  ! EQ              [ reduce using rule 149 (expression -> expression LOR expression .) ]
  ! NE              [ reduce using rule 149 (expression -> expression LOR expression .) ]
  ! EQL             [ reduce using rule 149 (expression -> expression LOR expression .) ]
  ! NEL             [ reduce using rule 149 (expression -> expression LOR expression .) ]
  ! AND             [ reduce using rule 149 (expression -> expression LOR expression .) ]
  ! XOR             [ reduce using rule 149 (expression -> expression LOR expression .) ]
  ! XNOR            [ reduce using rule 149 (expression -> expression LOR expression .) ]
  ! OR              [ reduce using rule 149 (expression -> expression LOR expression .) ]
  ! LAND            [ reduce using rule 149 (expression -> expression LOR expression .) ]
  ! LOR             [ shift and go to state 230 ]
  ! COND            [ shift and go to state 233 ]


state 364

    (129) expression -> expression MOD expression .
    (126) expression -> expression . POWER expression
    (127) expression -> expression . TIMES expression
    (128) expression -> expression . DIVIDE expression
    (129) expression -> expression . MOD expression
    (130) expression -> expression . PLUS expression
    (131) expression -> expression . MINUS expression
    (132) expression -> expression . LSHIFT expression
    (133) expression -> expression . RSHIFT expression
    (134) expression -> expression . LSHIFTA expression
    (135) expression -> expression . RSHIFTA expression
    (136) expression -> expression . LT expression
    (137) expression -> expression . GT expression
    (138) expression -> expression . LE expression
    (139) expression -> expression . GE expression
    (140) expression -> expression . EQ expression
    (141) expression -> expression . NE expression
    (142) expression -> expression . EQL expression
    (143) expression -> expression . NEL expression
    (144) expression -> expression . AND expression
    (145) expression -> expression . XOR expression
    (146) expression -> expression . XNOR expression
    (147) expression -> expression . OR expression
    (148) expression -> expression . LAND expression
    (149) expression -> expression . LOR expression
    (150) expression -> expression . COND expression COLON expression

    TIMES           reduce using rule 129 (expression -> expression MOD expression .)
    DIVIDE          reduce using rule 129 (expression -> expression MOD expression .)
    MOD             reduce using rule 129 (expression -> expression MOD expression .)
    PLUS            reduce using rule 129 (expression -> expression MOD expression .)
    MINUS           reduce using rule 129 (expression -> expression MOD expression .)
    LSHIFT          reduce using rule 129 (expression -> expression MOD expression .)
    RSHIFT          reduce using rule 129 (expression -> expression MOD expression .)
    LSHIFTA         reduce using rule 129 (expression -> expression MOD expression .)
    RSHIFTA         reduce using rule 129 (expression -> expression MOD expression .)
    LT              reduce using rule 129 (expression -> expression MOD expression .)
    GT              reduce using rule 129 (expression -> expression MOD expression .)
    LE              reduce using rule 129 (expression -> expression MOD expression .)
    GE              reduce using rule 129 (expression -> expression MOD expression .)
    EQ              reduce using rule 129 (expression -> expression MOD expression .)
    NE              reduce using rule 129 (expression -> expression MOD expression .)
    EQL             reduce using rule 129 (expression -> expression MOD expression .)
    NEL             reduce using rule 129 (expression -> expression MOD expression .)
    AND             reduce using rule 129 (expression -> expression MOD expression .)
    XOR             reduce using rule 129 (expression -> expression MOD expression .)
    XNOR            reduce using rule 129 (expression -> expression MOD expression .)
    OR              reduce using rule 129 (expression -> expression MOD expression .)
    LAND            reduce using rule 129 (expression -> expression MOD expression .)
    LOR             reduce using rule 129 (expression -> expression MOD expression .)
    COND            reduce using rule 129 (expression -> expression MOD expression .)
    LBRACE          reduce using rule 129 (expression -> expression MOD expression .)
    RBRACE          reduce using rule 129 (expression -> expression MOD expression .)
    COMMA           reduce using rule 129 (expression -> expression MOD expression .)
    RPAREN          reduce using rule 129 (expression -> expression MOD expression .)
    COLON           reduce using rule 129 (expression -> expression MOD expression .)
    SEMICOLON       reduce using rule 129 (expression -> expression MOD expression .)
    PLUSCOLON       reduce using rule 129 (expression -> expression MOD expression .)
    MINUSCOLON      reduce using rule 129 (expression -> expression MOD expression .)
    RBRACKET        reduce using rule 129 (expression -> expression MOD expression .)
    POWER           shift and go to state 246

  ! POWER           [ reduce using rule 129 (expression -> expression MOD expression .) ]
  ! TIMES           [ shift and go to state 349 ]
  ! DIVIDE          [ shift and go to state 244 ]
  ! MOD             [ shift and go to state 231 ]
  ! PLUS            [ shift and go to state 240 ]
  ! MINUS           [ shift and go to state 229 ]
  ! LSHIFT          [ shift and go to state 243 ]
  ! RSHIFT          [ shift and go to state 226 ]
  ! LSHIFTA         [ shift and go to state 241 ]
  ! RSHIFTA         [ shift and go to state 238 ]
  ! LT              [ shift and go to state 235 ]
  ! GT              [ shift and go to state 228 ]
  ! LE              [ shift and go to state 222 ]
  ! GE              [ shift and go to state 239 ]
  ! EQ              [ shift and go to state 223 ]
  ! NE              [ shift and go to state 225 ]
  ! EQL             [ shift and go to state 245 ]
  ! NEL             [ shift and go to state 242 ]
  ! AND             [ shift and go to state 224 ]
  ! XOR             [ shift and go to state 237 ]
  ! XNOR            [ shift and go to state 232 ]
  ! OR              [ shift and go to state 234 ]
  ! LAND            [ shift and go to state 227 ]
  ! LOR             [ shift and go to state 230 ]
  ! COND            [ shift and go to state 233 ]


state 365

    (146) expression -> expression XNOR expression .
    (126) expression -> expression . POWER expression
    (127) expression -> expression . TIMES expression
    (128) expression -> expression . DIVIDE expression
    (129) expression -> expression . MOD expression
    (130) expression -> expression . PLUS expression
    (131) expression -> expression . MINUS expression
    (132) expression -> expression . LSHIFT expression
    (133) expression -> expression . RSHIFT expression
    (134) expression -> expression . LSHIFTA expression
    (135) expression -> expression . RSHIFTA expression
    (136) expression -> expression . LT expression
    (137) expression -> expression . GT expression
    (138) expression -> expression . LE expression
    (139) expression -> expression . GE expression
    (140) expression -> expression . EQ expression
    (141) expression -> expression . NE expression
    (142) expression -> expression . EQL expression
    (143) expression -> expression . NEL expression
    (144) expression -> expression . AND expression
    (145) expression -> expression . XOR expression
    (146) expression -> expression . XNOR expression
    (147) expression -> expression . OR expression
    (148) expression -> expression . LAND expression
    (149) expression -> expression . LOR expression
    (150) expression -> expression . COND expression COLON expression

    AND             reduce using rule 146 (expression -> expression XNOR expression .)
    XOR             reduce using rule 146 (expression -> expression XNOR expression .)
    XNOR            reduce using rule 146 (expression -> expression XNOR expression .)
    OR              reduce using rule 146 (expression -> expression XNOR expression .)
    LAND            reduce using rule 146 (expression -> expression XNOR expression .)
    LOR             reduce using rule 146 (expression -> expression XNOR expression .)
    COND            reduce using rule 146 (expression -> expression XNOR expression .)
    LBRACE          reduce using rule 146 (expression -> expression XNOR expression .)
    RBRACE          reduce using rule 146 (expression -> expression XNOR expression .)
    COMMA           reduce using rule 146 (expression -> expression XNOR expression .)
    RPAREN          reduce using rule 146 (expression -> expression XNOR expression .)
    COLON           reduce using rule 146 (expression -> expression XNOR expression .)
    SEMICOLON       reduce using rule 146 (expression -> expression XNOR expression .)
    PLUSCOLON       reduce using rule 146 (expression -> expression XNOR expression .)
    MINUSCOLON      reduce using rule 146 (expression -> expression XNOR expression .)
    RBRACKET        reduce using rule 146 (expression -> expression XNOR expression .)
    POWER           shift and go to state 246
    TIMES           shift and go to state 349
    DIVIDE          shift and go to state 244
    MOD             shift and go to state 231
    PLUS            shift and go to state 240
    MINUS           shift and go to state 229
    LSHIFT          shift and go to state 243
    RSHIFT          shift and go to state 226
    LSHIFTA         shift and go to state 241
    RSHIFTA         shift and go to state 238
    LT              shift and go to state 235
    GT              shift and go to state 228
    LE              shift and go to state 222
    GE              shift and go to state 239
    EQ              shift and go to state 223
    NE              shift and go to state 225
    EQL             shift and go to state 245
    NEL             shift and go to state 242

  ! POWER           [ reduce using rule 146 (expression -> expression XNOR expression .) ]
  ! TIMES           [ reduce using rule 146 (expression -> expression XNOR expression .) ]
  ! DIVIDE          [ reduce using rule 146 (expression -> expression XNOR expression .) ]
  ! MOD             [ reduce using rule 146 (expression -> expression XNOR expression .) ]
  ! PLUS            [ reduce using rule 146 (expression -> expression XNOR expression .) ]
  ! MINUS           [ reduce using rule 146 (expression -> expression XNOR expression .) ]
  ! LSHIFT          [ reduce using rule 146 (expression -> expression XNOR expression .) ]
  ! RSHIFT          [ reduce using rule 146 (expression -> expression XNOR expression .) ]
  ! LSHIFTA         [ reduce using rule 146 (expression -> expression XNOR expression .) ]
  ! RSHIFTA         [ reduce using rule 146 (expression -> expression XNOR expression .) ]
  ! LT              [ reduce using rule 146 (expression -> expression XNOR expression .) ]
  ! GT              [ reduce using rule 146 (expression -> expression XNOR expression .) ]
  ! LE              [ reduce using rule 146 (expression -> expression XNOR expression .) ]
  ! GE              [ reduce using rule 146 (expression -> expression XNOR expression .) ]
  ! EQ              [ reduce using rule 146 (expression -> expression XNOR expression .) ]
  ! NE              [ reduce using rule 146 (expression -> expression XNOR expression .) ]
  ! EQL             [ reduce using rule 146 (expression -> expression XNOR expression .) ]
  ! NEL             [ reduce using rule 146 (expression -> expression XNOR expression .) ]
  ! AND             [ shift and go to state 224 ]
  ! XOR             [ shift and go to state 237 ]
  ! XNOR            [ shift and go to state 232 ]
  ! OR              [ shift and go to state 234 ]
  ! LAND            [ shift and go to state 227 ]
  ! LOR             [ shift and go to state 230 ]
  ! COND            [ shift and go to state 233 ]


state 366

    (150) expression -> expression COND expression . COLON expression
    (126) expression -> expression . POWER expression
    (127) expression -> expression . TIMES expression
    (128) expression -> expression . DIVIDE expression
    (129) expression -> expression . MOD expression
    (130) expression -> expression . PLUS expression
    (131) expression -> expression . MINUS expression
    (132) expression -> expression . LSHIFT expression
    (133) expression -> expression . RSHIFT expression
    (134) expression -> expression . LSHIFTA expression
    (135) expression -> expression . RSHIFTA expression
    (136) expression -> expression . LT expression
    (137) expression -> expression . GT expression
    (138) expression -> expression . LE expression
    (139) expression -> expression . GE expression
    (140) expression -> expression . EQ expression
    (141) expression -> expression . NE expression
    (142) expression -> expression . EQL expression
    (143) expression -> expression . NEL expression
    (144) expression -> expression . AND expression
    (145) expression -> expression . XOR expression
    (146) expression -> expression . XNOR expression
    (147) expression -> expression . OR expression
    (148) expression -> expression . LAND expression
    (149) expression -> expression . LOR expression
    (150) expression -> expression . COND expression COLON expression

    COLON           shift and go to state 476
    POWER           shift and go to state 246
    TIMES           shift and go to state 349
    DIVIDE          shift and go to state 244
    MOD             shift and go to state 231
    PLUS            shift and go to state 240
    MINUS           shift and go to state 229
    LSHIFT          shift and go to state 243
    RSHIFT          shift and go to state 226
    LSHIFTA         shift and go to state 241
    RSHIFTA         shift and go to state 238
    LT              shift and go to state 235
    GT              shift and go to state 228
    LE              shift and go to state 222
    GE              shift and go to state 239
    EQ              shift and go to state 223
    NE              shift and go to state 225
    EQL             shift and go to state 245
    NEL             shift and go to state 242
    AND             shift and go to state 224
    XOR             shift and go to state 237
    XNOR            shift and go to state 232
    OR              shift and go to state 234
    LAND            shift and go to state 227
    LOR             shift and go to state 230
    COND            shift and go to state 233


state 367

    (147) expression -> expression OR expression .
    (126) expression -> expression . POWER expression
    (127) expression -> expression . TIMES expression
    (128) expression -> expression . DIVIDE expression
    (129) expression -> expression . MOD expression
    (130) expression -> expression . PLUS expression
    (131) expression -> expression . MINUS expression
    (132) expression -> expression . LSHIFT expression
    (133) expression -> expression . RSHIFT expression
    (134) expression -> expression . LSHIFTA expression
    (135) expression -> expression . RSHIFTA expression
    (136) expression -> expression . LT expression
    (137) expression -> expression . GT expression
    (138) expression -> expression . LE expression
    (139) expression -> expression . GE expression
    (140) expression -> expression . EQ expression
    (141) expression -> expression . NE expression
    (142) expression -> expression . EQL expression
    (143) expression -> expression . NEL expression
    (144) expression -> expression . AND expression
    (145) expression -> expression . XOR expression
    (146) expression -> expression . XNOR expression
    (147) expression -> expression . OR expression
    (148) expression -> expression . LAND expression
    (149) expression -> expression . LOR expression
    (150) expression -> expression . COND expression COLON expression

    OR              reduce using rule 147 (expression -> expression OR expression .)
    LAND            reduce using rule 147 (expression -> expression OR expression .)
    LOR             reduce using rule 147 (expression -> expression OR expression .)
    COND            reduce using rule 147 (expression -> expression OR expression .)
    LBRACE          reduce using rule 147 (expression -> expression OR expression .)
    RBRACE          reduce using rule 147 (expression -> expression OR expression .)
    COMMA           reduce using rule 147 (expression -> expression OR expression .)
    RPAREN          reduce using rule 147 (expression -> expression OR expression .)
    COLON           reduce using rule 147 (expression -> expression OR expression .)
    SEMICOLON       reduce using rule 147 (expression -> expression OR expression .)
    PLUSCOLON       reduce using rule 147 (expression -> expression OR expression .)
    MINUSCOLON      reduce using rule 147 (expression -> expression OR expression .)
    RBRACKET        reduce using rule 147 (expression -> expression OR expression .)
    POWER           shift and go to state 246
    TIMES           shift and go to state 349
    DIVIDE          shift and go to state 244
    MOD             shift and go to state 231
    PLUS            shift and go to state 240
    MINUS           shift and go to state 229
    LSHIFT          shift and go to state 243
    RSHIFT          shift and go to state 226
    LSHIFTA         shift and go to state 241
    RSHIFTA         shift and go to state 238
    LT              shift and go to state 235
    GT              shift and go to state 228
    LE              shift and go to state 222
    GE              shift and go to state 239
    EQ              shift and go to state 223
    NE              shift and go to state 225
    EQL             shift and go to state 245
    NEL             shift and go to state 242
    AND             shift and go to state 224
    XOR             shift and go to state 237
    XNOR            shift and go to state 232

  ! POWER           [ reduce using rule 147 (expression -> expression OR expression .) ]
  ! TIMES           [ reduce using rule 147 (expression -> expression OR expression .) ]
  ! DIVIDE          [ reduce using rule 147 (expression -> expression OR expression .) ]
  ! MOD             [ reduce using rule 147 (expression -> expression OR expression .) ]
  ! PLUS            [ reduce using rule 147 (expression -> expression OR expression .) ]
  ! MINUS           [ reduce using rule 147 (expression -> expression OR expression .) ]
  ! LSHIFT          [ reduce using rule 147 (expression -> expression OR expression .) ]
  ! RSHIFT          [ reduce using rule 147 (expression -> expression OR expression .) ]
  ! LSHIFTA         [ reduce using rule 147 (expression -> expression OR expression .) ]
  ! RSHIFTA         [ reduce using rule 147 (expression -> expression OR expression .) ]
  ! LT              [ reduce using rule 147 (expression -> expression OR expression .) ]
  ! GT              [ reduce using rule 147 (expression -> expression OR expression .) ]
  ! LE              [ reduce using rule 147 (expression -> expression OR expression .) ]
  ! GE              [ reduce using rule 147 (expression -> expression OR expression .) ]
  ! EQ              [ reduce using rule 147 (expression -> expression OR expression .) ]
  ! NE              [ reduce using rule 147 (expression -> expression OR expression .) ]
  ! EQL             [ reduce using rule 147 (expression -> expression OR expression .) ]
  ! NEL             [ reduce using rule 147 (expression -> expression OR expression .) ]
  ! AND             [ reduce using rule 147 (expression -> expression OR expression .) ]
  ! XOR             [ reduce using rule 147 (expression -> expression OR expression .) ]
  ! XNOR            [ reduce using rule 147 (expression -> expression OR expression .) ]
  ! OR              [ shift and go to state 234 ]
  ! LAND            [ shift and go to state 227 ]
  ! LOR             [ shift and go to state 230 ]
  ! COND            [ shift and go to state 233 ]


state 368

    (136) expression -> expression LT expression .
    (126) expression -> expression . POWER expression
    (127) expression -> expression . TIMES expression
    (128) expression -> expression . DIVIDE expression
    (129) expression -> expression . MOD expression
    (130) expression -> expression . PLUS expression
    (131) expression -> expression . MINUS expression
    (132) expression -> expression . LSHIFT expression
    (133) expression -> expression . RSHIFT expression
    (134) expression -> expression . LSHIFTA expression
    (135) expression -> expression . RSHIFTA expression
    (136) expression -> expression . LT expression
    (137) expression -> expression . GT expression
    (138) expression -> expression . LE expression
    (139) expression -> expression . GE expression
    (140) expression -> expression . EQ expression
    (141) expression -> expression . NE expression
    (142) expression -> expression . EQL expression
    (143) expression -> expression . NEL expression
    (144) expression -> expression . AND expression
    (145) expression -> expression . XOR expression
    (146) expression -> expression . XNOR expression
    (147) expression -> expression . OR expression
    (148) expression -> expression . LAND expression
    (149) expression -> expression . LOR expression
    (150) expression -> expression . COND expression COLON expression

    LT              reduce using rule 136 (expression -> expression LT expression .)
    GT              reduce using rule 136 (expression -> expression LT expression .)
    LE              reduce using rule 136 (expression -> expression LT expression .)
    GE              reduce using rule 136 (expression -> expression LT expression .)
    EQ              reduce using rule 136 (expression -> expression LT expression .)
    NE              reduce using rule 136 (expression -> expression LT expression .)
    EQL             reduce using rule 136 (expression -> expression LT expression .)
    NEL             reduce using rule 136 (expression -> expression LT expression .)
    AND             reduce using rule 136 (expression -> expression LT expression .)
    XOR             reduce using rule 136 (expression -> expression LT expression .)
    XNOR            reduce using rule 136 (expression -> expression LT expression .)
    OR              reduce using rule 136 (expression -> expression LT expression .)
    LAND            reduce using rule 136 (expression -> expression LT expression .)
    LOR             reduce using rule 136 (expression -> expression LT expression .)
    COND            reduce using rule 136 (expression -> expression LT expression .)
    LBRACE          reduce using rule 136 (expression -> expression LT expression .)
    RBRACE          reduce using rule 136 (expression -> expression LT expression .)
    COMMA           reduce using rule 136 (expression -> expression LT expression .)
    RPAREN          reduce using rule 136 (expression -> expression LT expression .)
    COLON           reduce using rule 136 (expression -> expression LT expression .)
    SEMICOLON       reduce using rule 136 (expression -> expression LT expression .)
    PLUSCOLON       reduce using rule 136 (expression -> expression LT expression .)
    MINUSCOLON      reduce using rule 136 (expression -> expression LT expression .)
    RBRACKET        reduce using rule 136 (expression -> expression LT expression .)
    POWER           shift and go to state 246
    TIMES           shift and go to state 349
    DIVIDE          shift and go to state 244
    MOD             shift and go to state 231
    PLUS            shift and go to state 240
    MINUS           shift and go to state 229
    LSHIFT          shift and go to state 243
    RSHIFT          shift and go to state 226
    LSHIFTA         shift and go to state 241
    RSHIFTA         shift and go to state 238

  ! POWER           [ reduce using rule 136 (expression -> expression LT expression .) ]
  ! TIMES           [ reduce using rule 136 (expression -> expression LT expression .) ]
  ! DIVIDE          [ reduce using rule 136 (expression -> expression LT expression .) ]
  ! MOD             [ reduce using rule 136 (expression -> expression LT expression .) ]
  ! PLUS            [ reduce using rule 136 (expression -> expression LT expression .) ]
  ! MINUS           [ reduce using rule 136 (expression -> expression LT expression .) ]
  ! LSHIFT          [ reduce using rule 136 (expression -> expression LT expression .) ]
  ! RSHIFT          [ reduce using rule 136 (expression -> expression LT expression .) ]
  ! LSHIFTA         [ reduce using rule 136 (expression -> expression LT expression .) ]
  ! RSHIFTA         [ reduce using rule 136 (expression -> expression LT expression .) ]
  ! LT              [ shift and go to state 235 ]
  ! GT              [ shift and go to state 228 ]
  ! LE              [ shift and go to state 222 ]
  ! GE              [ shift and go to state 239 ]
  ! EQ              [ shift and go to state 223 ]
  ! NE              [ shift and go to state 225 ]
  ! EQL             [ shift and go to state 245 ]
  ! NEL             [ shift and go to state 242 ]
  ! AND             [ shift and go to state 224 ]
  ! XOR             [ shift and go to state 237 ]
  ! XNOR            [ shift and go to state 232 ]
  ! OR              [ shift and go to state 234 ]
  ! LAND            [ shift and go to state 227 ]
  ! LOR             [ shift and go to state 230 ]
  ! COND            [ shift and go to state 233 ]


state 369

    (7) pragma -> LPAREN TIMES ID EQUALS expression TIMES RPAREN .

    END             reduce using rule 7 (pragma -> LPAREN TIMES ID EQUALS expression TIMES RPAREN .)
    IF              reduce using rule 7 (pragma -> LPAREN TIMES ID EQUALS expression TIMES RPAREN .)
    FOR             reduce using rule 7 (pragma -> LPAREN TIMES ID EQUALS expression TIMES RPAREN .)
    INTEGER         reduce using rule 7 (pragma -> LPAREN TIMES ID EQUALS expression TIMES RPAREN .)
    REAL            reduce using rule 7 (pragma -> LPAREN TIMES ID EQUALS expression TIMES RPAREN .)
    PARAMETER       reduce using rule 7 (pragma -> LPAREN TIMES ID EQUALS expression TIMES RPAREN .)
    LOCALPARAM      reduce using rule 7 (pragma -> LPAREN TIMES ID EQUALS expression TIMES RPAREN .)
    GENVAR          reduce using rule 7 (pragma -> LPAREN TIMES ID EQUALS expression TIMES RPAREN .)
    ASSIGN          reduce using rule 7 (pragma -> LPAREN TIMES ID EQUALS expression TIMES RPAREN .)
    ALWAYS          reduce using rule 7 (pragma -> LPAREN TIMES ID EQUALS expression TIMES RPAREN .)
    INITIAL         reduce using rule 7 (pragma -> LPAREN TIMES ID EQUALS expression TIMES RPAREN .)
    ID              reduce using rule 7 (pragma -> LPAREN TIMES ID EQUALS expression TIMES RPAREN .)
    FUNCTION        reduce using rule 7 (pragma -> LPAREN TIMES ID EQUALS expression TIMES RPAREN .)
    TASK            reduce using rule 7 (pragma -> LPAREN TIMES ID EQUALS expression TIMES RPAREN .)
    LPAREN          reduce using rule 7 (pragma -> LPAREN TIMES ID EQUALS expression TIMES RPAREN .)
    INPUT           reduce using rule 7 (pragma -> LPAREN TIMES ID EQUALS expression TIMES RPAREN .)
    OUTPUT          reduce using rule 7 (pragma -> LPAREN TIMES ID EQUALS expression TIMES RPAREN .)
    INOUT           reduce using rule 7 (pragma -> LPAREN TIMES ID EQUALS expression TIMES RPAREN .)
    TRI             reduce using rule 7 (pragma -> LPAREN TIMES ID EQUALS expression TIMES RPAREN .)
    REG             reduce using rule 7 (pragma -> LPAREN TIMES ID EQUALS expression TIMES RPAREN .)
    WIRE            reduce using rule 7 (pragma -> LPAREN TIMES ID EQUALS expression TIMES RPAREN .)
    SIGNED          reduce using rule 7 (pragma -> LPAREN TIMES ID EQUALS expression TIMES RPAREN .)
    ENDGENERATE     reduce using rule 7 (pragma -> LPAREN TIMES ID EQUALS expression TIMES RPAREN .)
    ELSE            reduce using rule 7 (pragma -> LPAREN TIMES ID EQUALS expression TIMES RPAREN .)
    MODULE          reduce using rule 7 (pragma -> LPAREN TIMES ID EQUALS expression TIMES RPAREN .)
    $end            reduce using rule 7 (pragma -> LPAREN TIMES ID EQUALS expression TIMES RPAREN .)
    ENDMODULE       reduce using rule 7 (pragma -> LPAREN TIMES ID EQUALS expression TIMES RPAREN .)
    GENERATE        reduce using rule 7 (pragma -> LPAREN TIMES ID EQUALS expression TIMES RPAREN .)


state 370

    (127) expression -> expression TIMES expression .
    (126) expression -> expression . POWER expression
    (127) expression -> expression . TIMES expression
    (128) expression -> expression . DIVIDE expression
    (129) expression -> expression . MOD expression
    (130) expression -> expression . PLUS expression
    (131) expression -> expression . MINUS expression
    (132) expression -> expression . LSHIFT expression
    (133) expression -> expression . RSHIFT expression
    (134) expression -> expression . LSHIFTA expression
    (135) expression -> expression . RSHIFTA expression
    (136) expression -> expression . LT expression
    (137) expression -> expression . GT expression
    (138) expression -> expression . LE expression
    (139) expression -> expression . GE expression
    (140) expression -> expression . EQ expression
    (141) expression -> expression . NE expression
    (142) expression -> expression . EQL expression
    (143) expression -> expression . NEL expression
    (144) expression -> expression . AND expression
    (145) expression -> expression . XOR expression
    (146) expression -> expression . XNOR expression
    (147) expression -> expression . OR expression
    (148) expression -> expression . LAND expression
    (149) expression -> expression . LOR expression
    (150) expression -> expression . COND expression COLON expression

    TIMES           reduce using rule 127 (expression -> expression TIMES expression .)
    DIVIDE          reduce using rule 127 (expression -> expression TIMES expression .)
    MOD             reduce using rule 127 (expression -> expression TIMES expression .)
    PLUS            reduce using rule 127 (expression -> expression TIMES expression .)
    MINUS           reduce using rule 127 (expression -> expression TIMES expression .)
    LSHIFT          reduce using rule 127 (expression -> expression TIMES expression .)
    RSHIFT          reduce using rule 127 (expression -> expression TIMES expression .)
    LSHIFTA         reduce using rule 127 (expression -> expression TIMES expression .)
    RSHIFTA         reduce using rule 127 (expression -> expression TIMES expression .)
    LT              reduce using rule 127 (expression -> expression TIMES expression .)
    GT              reduce using rule 127 (expression -> expression TIMES expression .)
    LE              reduce using rule 127 (expression -> expression TIMES expression .)
    GE              reduce using rule 127 (expression -> expression TIMES expression .)
    EQ              reduce using rule 127 (expression -> expression TIMES expression .)
    NE              reduce using rule 127 (expression -> expression TIMES expression .)
    EQL             reduce using rule 127 (expression -> expression TIMES expression .)
    NEL             reduce using rule 127 (expression -> expression TIMES expression .)
    AND             reduce using rule 127 (expression -> expression TIMES expression .)
    XOR             reduce using rule 127 (expression -> expression TIMES expression .)
    XNOR            reduce using rule 127 (expression -> expression TIMES expression .)
    OR              reduce using rule 127 (expression -> expression TIMES expression .)
    LAND            reduce using rule 127 (expression -> expression TIMES expression .)
    LOR             reduce using rule 127 (expression -> expression TIMES expression .)
    COND            reduce using rule 127 (expression -> expression TIMES expression .)
    LBRACE          reduce using rule 127 (expression -> expression TIMES expression .)
    RBRACE          reduce using rule 127 (expression -> expression TIMES expression .)
    COMMA           reduce using rule 127 (expression -> expression TIMES expression .)
    RPAREN          reduce using rule 127 (expression -> expression TIMES expression .)
    COLON           reduce using rule 127 (expression -> expression TIMES expression .)
    SEMICOLON       reduce using rule 127 (expression -> expression TIMES expression .)
    PLUSCOLON       reduce using rule 127 (expression -> expression TIMES expression .)
    MINUSCOLON      reduce using rule 127 (expression -> expression TIMES expression .)
    RBRACKET        reduce using rule 127 (expression -> expression TIMES expression .)
    POWER           shift and go to state 246

  ! POWER           [ reduce using rule 127 (expression -> expression TIMES expression .) ]
  ! TIMES           [ shift and go to state 349 ]
  ! DIVIDE          [ shift and go to state 244 ]
  ! MOD             [ shift and go to state 231 ]
  ! PLUS            [ shift and go to state 240 ]
  ! MINUS           [ shift and go to state 229 ]
  ! LSHIFT          [ shift and go to state 243 ]
  ! RSHIFT          [ shift and go to state 226 ]
  ! LSHIFTA         [ shift and go to state 241 ]
  ! RSHIFTA         [ shift and go to state 238 ]
  ! LT              [ shift and go to state 235 ]
  ! GT              [ shift and go to state 228 ]
  ! LE              [ shift and go to state 222 ]
  ! GE              [ shift and go to state 239 ]
  ! EQ              [ shift and go to state 223 ]
  ! NE              [ shift and go to state 225 ]
  ! EQL             [ shift and go to state 245 ]
  ! NEL             [ shift and go to state 242 ]
  ! AND             [ shift and go to state 224 ]
  ! XOR             [ shift and go to state 237 ]
  ! XNOR            [ shift and go to state 232 ]
  ! OR              [ shift and go to state 234 ]
  ! LAND            [ shift and go to state 227 ]
  ! LOR             [ shift and go to state 230 ]
  ! COND            [ shift and go to state 233 ]


state 371

    (145) expression -> expression XOR expression .
    (126) expression -> expression . POWER expression
    (127) expression -> expression . TIMES expression
    (128) expression -> expression . DIVIDE expression
    (129) expression -> expression . MOD expression
    (130) expression -> expression . PLUS expression
    (131) expression -> expression . MINUS expression
    (132) expression -> expression . LSHIFT expression
    (133) expression -> expression . RSHIFT expression
    (134) expression -> expression . LSHIFTA expression
    (135) expression -> expression . RSHIFTA expression
    (136) expression -> expression . LT expression
    (137) expression -> expression . GT expression
    (138) expression -> expression . LE expression
    (139) expression -> expression . GE expression
    (140) expression -> expression . EQ expression
    (141) expression -> expression . NE expression
    (142) expression -> expression . EQL expression
    (143) expression -> expression . NEL expression
    (144) expression -> expression . AND expression
    (145) expression -> expression . XOR expression
    (146) expression -> expression . XNOR expression
    (147) expression -> expression . OR expression
    (148) expression -> expression . LAND expression
    (149) expression -> expression . LOR expression
    (150) expression -> expression . COND expression COLON expression

    AND             reduce using rule 145 (expression -> expression XOR expression .)
    XOR             reduce using rule 145 (expression -> expression XOR expression .)
    XNOR            reduce using rule 145 (expression -> expression XOR expression .)
    OR              reduce using rule 145 (expression -> expression XOR expression .)
    LAND            reduce using rule 145 (expression -> expression XOR expression .)
    LOR             reduce using rule 145 (expression -> expression XOR expression .)
    COND            reduce using rule 145 (expression -> expression XOR expression .)
    LBRACE          reduce using rule 145 (expression -> expression XOR expression .)
    RBRACE          reduce using rule 145 (expression -> expression XOR expression .)
    COMMA           reduce using rule 145 (expression -> expression XOR expression .)
    RPAREN          reduce using rule 145 (expression -> expression XOR expression .)
    COLON           reduce using rule 145 (expression -> expression XOR expression .)
    SEMICOLON       reduce using rule 145 (expression -> expression XOR expression .)
    PLUSCOLON       reduce using rule 145 (expression -> expression XOR expression .)
    MINUSCOLON      reduce using rule 145 (expression -> expression XOR expression .)
    RBRACKET        reduce using rule 145 (expression -> expression XOR expression .)
    POWER           shift and go to state 246
    TIMES           shift and go to state 349
    DIVIDE          shift and go to state 244
    MOD             shift and go to state 231
    PLUS            shift and go to state 240
    MINUS           shift and go to state 229
    LSHIFT          shift and go to state 243
    RSHIFT          shift and go to state 226
    LSHIFTA         shift and go to state 241
    RSHIFTA         shift and go to state 238
    LT              shift and go to state 235
    GT              shift and go to state 228
    LE              shift and go to state 222
    GE              shift and go to state 239
    EQ              shift and go to state 223
    NE              shift and go to state 225
    EQL             shift and go to state 245
    NEL             shift and go to state 242

  ! POWER           [ reduce using rule 145 (expression -> expression XOR expression .) ]
  ! TIMES           [ reduce using rule 145 (expression -> expression XOR expression .) ]
  ! DIVIDE          [ reduce using rule 145 (expression -> expression XOR expression .) ]
  ! MOD             [ reduce using rule 145 (expression -> expression XOR expression .) ]
  ! PLUS            [ reduce using rule 145 (expression -> expression XOR expression .) ]
  ! MINUS           [ reduce using rule 145 (expression -> expression XOR expression .) ]
  ! LSHIFT          [ reduce using rule 145 (expression -> expression XOR expression .) ]
  ! RSHIFT          [ reduce using rule 145 (expression -> expression XOR expression .) ]
  ! LSHIFTA         [ reduce using rule 145 (expression -> expression XOR expression .) ]
  ! RSHIFTA         [ reduce using rule 145 (expression -> expression XOR expression .) ]
  ! LT              [ reduce using rule 145 (expression -> expression XOR expression .) ]
  ! GT              [ reduce using rule 145 (expression -> expression XOR expression .) ]
  ! LE              [ reduce using rule 145 (expression -> expression XOR expression .) ]
  ! GE              [ reduce using rule 145 (expression -> expression XOR expression .) ]
  ! EQ              [ reduce using rule 145 (expression -> expression XOR expression .) ]
  ! NE              [ reduce using rule 145 (expression -> expression XOR expression .) ]
  ! EQL             [ reduce using rule 145 (expression -> expression XOR expression .) ]
  ! NEL             [ reduce using rule 145 (expression -> expression XOR expression .) ]
  ! AND             [ shift and go to state 224 ]
  ! XOR             [ shift and go to state 237 ]
  ! XNOR            [ shift and go to state 232 ]
  ! OR              [ shift and go to state 234 ]
  ! LAND            [ shift and go to state 227 ]
  ! LOR             [ shift and go to state 230 ]
  ! COND            [ shift and go to state 233 ]


state 372

    (135) expression -> expression RSHIFTA expression .
    (126) expression -> expression . POWER expression
    (127) expression -> expression . TIMES expression
    (128) expression -> expression . DIVIDE expression
    (129) expression -> expression . MOD expression
    (130) expression -> expression . PLUS expression
    (131) expression -> expression . MINUS expression
    (132) expression -> expression . LSHIFT expression
    (133) expression -> expression . RSHIFT expression
    (134) expression -> expression . LSHIFTA expression
    (135) expression -> expression . RSHIFTA expression
    (136) expression -> expression . LT expression
    (137) expression -> expression . GT expression
    (138) expression -> expression . LE expression
    (139) expression -> expression . GE expression
    (140) expression -> expression . EQ expression
    (141) expression -> expression . NE expression
    (142) expression -> expression . EQL expression
    (143) expression -> expression . NEL expression
    (144) expression -> expression . AND expression
    (145) expression -> expression . XOR expression
    (146) expression -> expression . XNOR expression
    (147) expression -> expression . OR expression
    (148) expression -> expression . LAND expression
    (149) expression -> expression . LOR expression
    (150) expression -> expression . COND expression COLON expression

    LSHIFT          reduce using rule 135 (expression -> expression RSHIFTA expression .)
    RSHIFT          reduce using rule 135 (expression -> expression RSHIFTA expression .)
    LSHIFTA         reduce using rule 135 (expression -> expression RSHIFTA expression .)
    RSHIFTA         reduce using rule 135 (expression -> expression RSHIFTA expression .)
    LT              reduce using rule 135 (expression -> expression RSHIFTA expression .)
    GT              reduce using rule 135 (expression -> expression RSHIFTA expression .)
    LE              reduce using rule 135 (expression -> expression RSHIFTA expression .)
    GE              reduce using rule 135 (expression -> expression RSHIFTA expression .)
    EQ              reduce using rule 135 (expression -> expression RSHIFTA expression .)
    NE              reduce using rule 135 (expression -> expression RSHIFTA expression .)
    EQL             reduce using rule 135 (expression -> expression RSHIFTA expression .)
    NEL             reduce using rule 135 (expression -> expression RSHIFTA expression .)
    AND             reduce using rule 135 (expression -> expression RSHIFTA expression .)
    XOR             reduce using rule 135 (expression -> expression RSHIFTA expression .)
    XNOR            reduce using rule 135 (expression -> expression RSHIFTA expression .)
    OR              reduce using rule 135 (expression -> expression RSHIFTA expression .)
    LAND            reduce using rule 135 (expression -> expression RSHIFTA expression .)
    LOR             reduce using rule 135 (expression -> expression RSHIFTA expression .)
    COND            reduce using rule 135 (expression -> expression RSHIFTA expression .)
    LBRACE          reduce using rule 135 (expression -> expression RSHIFTA expression .)
    RBRACE          reduce using rule 135 (expression -> expression RSHIFTA expression .)
    COMMA           reduce using rule 135 (expression -> expression RSHIFTA expression .)
    RPAREN          reduce using rule 135 (expression -> expression RSHIFTA expression .)
    COLON           reduce using rule 135 (expression -> expression RSHIFTA expression .)
    SEMICOLON       reduce using rule 135 (expression -> expression RSHIFTA expression .)
    PLUSCOLON       reduce using rule 135 (expression -> expression RSHIFTA expression .)
    MINUSCOLON      reduce using rule 135 (expression -> expression RSHIFTA expression .)
    RBRACKET        reduce using rule 135 (expression -> expression RSHIFTA expression .)
    POWER           shift and go to state 246
    TIMES           shift and go to state 349
    DIVIDE          shift and go to state 244
    MOD             shift and go to state 231
    PLUS            shift and go to state 240
    MINUS           shift and go to state 229

  ! POWER           [ reduce using rule 135 (expression -> expression RSHIFTA expression .) ]
  ! TIMES           [ reduce using rule 135 (expression -> expression RSHIFTA expression .) ]
  ! DIVIDE          [ reduce using rule 135 (expression -> expression RSHIFTA expression .) ]
  ! MOD             [ reduce using rule 135 (expression -> expression RSHIFTA expression .) ]
  ! PLUS            [ reduce using rule 135 (expression -> expression RSHIFTA expression .) ]
  ! MINUS           [ reduce using rule 135 (expression -> expression RSHIFTA expression .) ]
  ! LSHIFT          [ shift and go to state 243 ]
  ! RSHIFT          [ shift and go to state 226 ]
  ! LSHIFTA         [ shift and go to state 241 ]
  ! RSHIFTA         [ shift and go to state 238 ]
  ! LT              [ shift and go to state 235 ]
  ! GT              [ shift and go to state 228 ]
  ! LE              [ shift and go to state 222 ]
  ! GE              [ shift and go to state 239 ]
  ! EQ              [ shift and go to state 223 ]
  ! NE              [ shift and go to state 225 ]
  ! EQL             [ shift and go to state 245 ]
  ! NEL             [ shift and go to state 242 ]
  ! AND             [ shift and go to state 224 ]
  ! XOR             [ shift and go to state 237 ]
  ! XNOR            [ shift and go to state 232 ]
  ! OR              [ shift and go to state 234 ]
  ! LAND            [ shift and go to state 227 ]
  ! LOR             [ shift and go to state 230 ]
  ! COND            [ shift and go to state 233 ]


state 373

    (139) expression -> expression GE expression .
    (126) expression -> expression . POWER expression
    (127) expression -> expression . TIMES expression
    (128) expression -> expression . DIVIDE expression
    (129) expression -> expression . MOD expression
    (130) expression -> expression . PLUS expression
    (131) expression -> expression . MINUS expression
    (132) expression -> expression . LSHIFT expression
    (133) expression -> expression . RSHIFT expression
    (134) expression -> expression . LSHIFTA expression
    (135) expression -> expression . RSHIFTA expression
    (136) expression -> expression . LT expression
    (137) expression -> expression . GT expression
    (138) expression -> expression . LE expression
    (139) expression -> expression . GE expression
    (140) expression -> expression . EQ expression
    (141) expression -> expression . NE expression
    (142) expression -> expression . EQL expression
    (143) expression -> expression . NEL expression
    (144) expression -> expression . AND expression
    (145) expression -> expression . XOR expression
    (146) expression -> expression . XNOR expression
    (147) expression -> expression . OR expression
    (148) expression -> expression . LAND expression
    (149) expression -> expression . LOR expression
    (150) expression -> expression . COND expression COLON expression

    LT              reduce using rule 139 (expression -> expression GE expression .)
    GT              reduce using rule 139 (expression -> expression GE expression .)
    LE              reduce using rule 139 (expression -> expression GE expression .)
    GE              reduce using rule 139 (expression -> expression GE expression .)
    EQ              reduce using rule 139 (expression -> expression GE expression .)
    NE              reduce using rule 139 (expression -> expression GE expression .)
    EQL             reduce using rule 139 (expression -> expression GE expression .)
    NEL             reduce using rule 139 (expression -> expression GE expression .)
    AND             reduce using rule 139 (expression -> expression GE expression .)
    XOR             reduce using rule 139 (expression -> expression GE expression .)
    XNOR            reduce using rule 139 (expression -> expression GE expression .)
    OR              reduce using rule 139 (expression -> expression GE expression .)
    LAND            reduce using rule 139 (expression -> expression GE expression .)
    LOR             reduce using rule 139 (expression -> expression GE expression .)
    COND            reduce using rule 139 (expression -> expression GE expression .)
    LBRACE          reduce using rule 139 (expression -> expression GE expression .)
    RBRACE          reduce using rule 139 (expression -> expression GE expression .)
    COMMA           reduce using rule 139 (expression -> expression GE expression .)
    RPAREN          reduce using rule 139 (expression -> expression GE expression .)
    COLON           reduce using rule 139 (expression -> expression GE expression .)
    SEMICOLON       reduce using rule 139 (expression -> expression GE expression .)
    PLUSCOLON       reduce using rule 139 (expression -> expression GE expression .)
    MINUSCOLON      reduce using rule 139 (expression -> expression GE expression .)
    RBRACKET        reduce using rule 139 (expression -> expression GE expression .)
    POWER           shift and go to state 246
    TIMES           shift and go to state 349
    DIVIDE          shift and go to state 244
    MOD             shift and go to state 231
    PLUS            shift and go to state 240
    MINUS           shift and go to state 229
    LSHIFT          shift and go to state 243
    RSHIFT          shift and go to state 226
    LSHIFTA         shift and go to state 241
    RSHIFTA         shift and go to state 238

  ! POWER           [ reduce using rule 139 (expression -> expression GE expression .) ]
  ! TIMES           [ reduce using rule 139 (expression -> expression GE expression .) ]
  ! DIVIDE          [ reduce using rule 139 (expression -> expression GE expression .) ]
  ! MOD             [ reduce using rule 139 (expression -> expression GE expression .) ]
  ! PLUS            [ reduce using rule 139 (expression -> expression GE expression .) ]
  ! MINUS           [ reduce using rule 139 (expression -> expression GE expression .) ]
  ! LSHIFT          [ reduce using rule 139 (expression -> expression GE expression .) ]
  ! RSHIFT          [ reduce using rule 139 (expression -> expression GE expression .) ]
  ! LSHIFTA         [ reduce using rule 139 (expression -> expression GE expression .) ]
  ! RSHIFTA         [ reduce using rule 139 (expression -> expression GE expression .) ]
  ! LT              [ shift and go to state 235 ]
  ! GT              [ shift and go to state 228 ]
  ! LE              [ shift and go to state 222 ]
  ! GE              [ shift and go to state 239 ]
  ! EQ              [ shift and go to state 223 ]
  ! NE              [ shift and go to state 225 ]
  ! EQL             [ shift and go to state 245 ]
  ! NEL             [ shift and go to state 242 ]
  ! AND             [ shift and go to state 224 ]
  ! XOR             [ shift and go to state 237 ]
  ! XNOR            [ shift and go to state 232 ]
  ! OR              [ shift and go to state 234 ]
  ! LAND            [ shift and go to state 227 ]
  ! LOR             [ shift and go to state 230 ]
  ! COND            [ shift and go to state 233 ]


state 374

    (130) expression -> expression PLUS expression .
    (126) expression -> expression . POWER expression
    (127) expression -> expression . TIMES expression
    (128) expression -> expression . DIVIDE expression
    (129) expression -> expression . MOD expression
    (130) expression -> expression . PLUS expression
    (131) expression -> expression . MINUS expression
    (132) expression -> expression . LSHIFT expression
    (133) expression -> expression . RSHIFT expression
    (134) expression -> expression . LSHIFTA expression
    (135) expression -> expression . RSHIFTA expression
    (136) expression -> expression . LT expression
    (137) expression -> expression . GT expression
    (138) expression -> expression . LE expression
    (139) expression -> expression . GE expression
    (140) expression -> expression . EQ expression
    (141) expression -> expression . NE expression
    (142) expression -> expression . EQL expression
    (143) expression -> expression . NEL expression
    (144) expression -> expression . AND expression
    (145) expression -> expression . XOR expression
    (146) expression -> expression . XNOR expression
    (147) expression -> expression . OR expression
    (148) expression -> expression . LAND expression
    (149) expression -> expression . LOR expression
    (150) expression -> expression . COND expression COLON expression

    PLUS            reduce using rule 130 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 130 (expression -> expression PLUS expression .)
    LSHIFT          reduce using rule 130 (expression -> expression PLUS expression .)
    RSHIFT          reduce using rule 130 (expression -> expression PLUS expression .)
    LSHIFTA         reduce using rule 130 (expression -> expression PLUS expression .)
    RSHIFTA         reduce using rule 130 (expression -> expression PLUS expression .)
    LT              reduce using rule 130 (expression -> expression PLUS expression .)
    GT              reduce using rule 130 (expression -> expression PLUS expression .)
    LE              reduce using rule 130 (expression -> expression PLUS expression .)
    GE              reduce using rule 130 (expression -> expression PLUS expression .)
    EQ              reduce using rule 130 (expression -> expression PLUS expression .)
    NE              reduce using rule 130 (expression -> expression PLUS expression .)
    EQL             reduce using rule 130 (expression -> expression PLUS expression .)
    NEL             reduce using rule 130 (expression -> expression PLUS expression .)
    AND             reduce using rule 130 (expression -> expression PLUS expression .)
    XOR             reduce using rule 130 (expression -> expression PLUS expression .)
    XNOR            reduce using rule 130 (expression -> expression PLUS expression .)
    OR              reduce using rule 130 (expression -> expression PLUS expression .)
    LAND            reduce using rule 130 (expression -> expression PLUS expression .)
    LOR             reduce using rule 130 (expression -> expression PLUS expression .)
    COND            reduce using rule 130 (expression -> expression PLUS expression .)
    LBRACE          reduce using rule 130 (expression -> expression PLUS expression .)
    RBRACE          reduce using rule 130 (expression -> expression PLUS expression .)
    COMMA           reduce using rule 130 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 130 (expression -> expression PLUS expression .)
    COLON           reduce using rule 130 (expression -> expression PLUS expression .)
    SEMICOLON       reduce using rule 130 (expression -> expression PLUS expression .)
    PLUSCOLON       reduce using rule 130 (expression -> expression PLUS expression .)
    MINUSCOLON      reduce using rule 130 (expression -> expression PLUS expression .)
    RBRACKET        reduce using rule 130 (expression -> expression PLUS expression .)
    POWER           shift and go to state 246
    TIMES           shift and go to state 349
    DIVIDE          shift and go to state 244
    MOD             shift and go to state 231

  ! POWER           [ reduce using rule 130 (expression -> expression PLUS expression .) ]
  ! TIMES           [ reduce using rule 130 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 130 (expression -> expression PLUS expression .) ]
  ! MOD             [ reduce using rule 130 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 240 ]
  ! MINUS           [ shift and go to state 229 ]
  ! LSHIFT          [ shift and go to state 243 ]
  ! RSHIFT          [ shift and go to state 226 ]
  ! LSHIFTA         [ shift and go to state 241 ]
  ! RSHIFTA         [ shift and go to state 238 ]
  ! LT              [ shift and go to state 235 ]
  ! GT              [ shift and go to state 228 ]
  ! LE              [ shift and go to state 222 ]
  ! GE              [ shift and go to state 239 ]
  ! EQ              [ shift and go to state 223 ]
  ! NE              [ shift and go to state 225 ]
  ! EQL             [ shift and go to state 245 ]
  ! NEL             [ shift and go to state 242 ]
  ! AND             [ shift and go to state 224 ]
  ! XOR             [ shift and go to state 237 ]
  ! XNOR            [ shift and go to state 232 ]
  ! OR              [ shift and go to state 234 ]
  ! LAND            [ shift and go to state 227 ]
  ! LOR             [ shift and go to state 230 ]
  ! COND            [ shift and go to state 233 ]


state 375

    (134) expression -> expression LSHIFTA expression .
    (126) expression -> expression . POWER expression
    (127) expression -> expression . TIMES expression
    (128) expression -> expression . DIVIDE expression
    (129) expression -> expression . MOD expression
    (130) expression -> expression . PLUS expression
    (131) expression -> expression . MINUS expression
    (132) expression -> expression . LSHIFT expression
    (133) expression -> expression . RSHIFT expression
    (134) expression -> expression . LSHIFTA expression
    (135) expression -> expression . RSHIFTA expression
    (136) expression -> expression . LT expression
    (137) expression -> expression . GT expression
    (138) expression -> expression . LE expression
    (139) expression -> expression . GE expression
    (140) expression -> expression . EQ expression
    (141) expression -> expression . NE expression
    (142) expression -> expression . EQL expression
    (143) expression -> expression . NEL expression
    (144) expression -> expression . AND expression
    (145) expression -> expression . XOR expression
    (146) expression -> expression . XNOR expression
    (147) expression -> expression . OR expression
    (148) expression -> expression . LAND expression
    (149) expression -> expression . LOR expression
    (150) expression -> expression . COND expression COLON expression

    LSHIFT          reduce using rule 134 (expression -> expression LSHIFTA expression .)
    RSHIFT          reduce using rule 134 (expression -> expression LSHIFTA expression .)
    LSHIFTA         reduce using rule 134 (expression -> expression LSHIFTA expression .)
    RSHIFTA         reduce using rule 134 (expression -> expression LSHIFTA expression .)
    LT              reduce using rule 134 (expression -> expression LSHIFTA expression .)
    GT              reduce using rule 134 (expression -> expression LSHIFTA expression .)
    LE              reduce using rule 134 (expression -> expression LSHIFTA expression .)
    GE              reduce using rule 134 (expression -> expression LSHIFTA expression .)
    EQ              reduce using rule 134 (expression -> expression LSHIFTA expression .)
    NE              reduce using rule 134 (expression -> expression LSHIFTA expression .)
    EQL             reduce using rule 134 (expression -> expression LSHIFTA expression .)
    NEL             reduce using rule 134 (expression -> expression LSHIFTA expression .)
    AND             reduce using rule 134 (expression -> expression LSHIFTA expression .)
    XOR             reduce using rule 134 (expression -> expression LSHIFTA expression .)
    XNOR            reduce using rule 134 (expression -> expression LSHIFTA expression .)
    OR              reduce using rule 134 (expression -> expression LSHIFTA expression .)
    LAND            reduce using rule 134 (expression -> expression LSHIFTA expression .)
    LOR             reduce using rule 134 (expression -> expression LSHIFTA expression .)
    COND            reduce using rule 134 (expression -> expression LSHIFTA expression .)
    LBRACE          reduce using rule 134 (expression -> expression LSHIFTA expression .)
    RBRACE          reduce using rule 134 (expression -> expression LSHIFTA expression .)
    COMMA           reduce using rule 134 (expression -> expression LSHIFTA expression .)
    RPAREN          reduce using rule 134 (expression -> expression LSHIFTA expression .)
    COLON           reduce using rule 134 (expression -> expression LSHIFTA expression .)
    SEMICOLON       reduce using rule 134 (expression -> expression LSHIFTA expression .)
    PLUSCOLON       reduce using rule 134 (expression -> expression LSHIFTA expression .)
    MINUSCOLON      reduce using rule 134 (expression -> expression LSHIFTA expression .)
    RBRACKET        reduce using rule 134 (expression -> expression LSHIFTA expression .)
    POWER           shift and go to state 246
    TIMES           shift and go to state 349
    DIVIDE          shift and go to state 244
    MOD             shift and go to state 231
    PLUS            shift and go to state 240
    MINUS           shift and go to state 229

  ! POWER           [ reduce using rule 134 (expression -> expression LSHIFTA expression .) ]
  ! TIMES           [ reduce using rule 134 (expression -> expression LSHIFTA expression .) ]
  ! DIVIDE          [ reduce using rule 134 (expression -> expression LSHIFTA expression .) ]
  ! MOD             [ reduce using rule 134 (expression -> expression LSHIFTA expression .) ]
  ! PLUS            [ reduce using rule 134 (expression -> expression LSHIFTA expression .) ]
  ! MINUS           [ reduce using rule 134 (expression -> expression LSHIFTA expression .) ]
  ! LSHIFT          [ shift and go to state 243 ]
  ! RSHIFT          [ shift and go to state 226 ]
  ! LSHIFTA         [ shift and go to state 241 ]
  ! RSHIFTA         [ shift and go to state 238 ]
  ! LT              [ shift and go to state 235 ]
  ! GT              [ shift and go to state 228 ]
  ! LE              [ shift and go to state 222 ]
  ! GE              [ shift and go to state 239 ]
  ! EQ              [ shift and go to state 223 ]
  ! NE              [ shift and go to state 225 ]
  ! EQL             [ shift and go to state 245 ]
  ! NEL             [ shift and go to state 242 ]
  ! AND             [ shift and go to state 224 ]
  ! XOR             [ shift and go to state 237 ]
  ! XNOR            [ shift and go to state 232 ]
  ! OR              [ shift and go to state 234 ]
  ! LAND            [ shift and go to state 227 ]
  ! LOR             [ shift and go to state 230 ]
  ! COND            [ shift and go to state 233 ]


state 376

    (143) expression -> expression NEL expression .
    (126) expression -> expression . POWER expression
    (127) expression -> expression . TIMES expression
    (128) expression -> expression . DIVIDE expression
    (129) expression -> expression . MOD expression
    (130) expression -> expression . PLUS expression
    (131) expression -> expression . MINUS expression
    (132) expression -> expression . LSHIFT expression
    (133) expression -> expression . RSHIFT expression
    (134) expression -> expression . LSHIFTA expression
    (135) expression -> expression . RSHIFTA expression
    (136) expression -> expression . LT expression
    (137) expression -> expression . GT expression
    (138) expression -> expression . LE expression
    (139) expression -> expression . GE expression
    (140) expression -> expression . EQ expression
    (141) expression -> expression . NE expression
    (142) expression -> expression . EQL expression
    (143) expression -> expression . NEL expression
    (144) expression -> expression . AND expression
    (145) expression -> expression . XOR expression
    (146) expression -> expression . XNOR expression
    (147) expression -> expression . OR expression
    (148) expression -> expression . LAND expression
    (149) expression -> expression . LOR expression
    (150) expression -> expression . COND expression COLON expression

    EQ              reduce using rule 143 (expression -> expression NEL expression .)
    NE              reduce using rule 143 (expression -> expression NEL expression .)
    EQL             reduce using rule 143 (expression -> expression NEL expression .)
    NEL             reduce using rule 143 (expression -> expression NEL expression .)
    AND             reduce using rule 143 (expression -> expression NEL expression .)
    XOR             reduce using rule 143 (expression -> expression NEL expression .)
    XNOR            reduce using rule 143 (expression -> expression NEL expression .)
    OR              reduce using rule 143 (expression -> expression NEL expression .)
    LAND            reduce using rule 143 (expression -> expression NEL expression .)
    LOR             reduce using rule 143 (expression -> expression NEL expression .)
    COND            reduce using rule 143 (expression -> expression NEL expression .)
    LBRACE          reduce using rule 143 (expression -> expression NEL expression .)
    RBRACE          reduce using rule 143 (expression -> expression NEL expression .)
    COMMA           reduce using rule 143 (expression -> expression NEL expression .)
    RPAREN          reduce using rule 143 (expression -> expression NEL expression .)
    COLON           reduce using rule 143 (expression -> expression NEL expression .)
    SEMICOLON       reduce using rule 143 (expression -> expression NEL expression .)
    PLUSCOLON       reduce using rule 143 (expression -> expression NEL expression .)
    MINUSCOLON      reduce using rule 143 (expression -> expression NEL expression .)
    RBRACKET        reduce using rule 143 (expression -> expression NEL expression .)
    POWER           shift and go to state 246
    TIMES           shift and go to state 349
    DIVIDE          shift and go to state 244
    MOD             shift and go to state 231
    PLUS            shift and go to state 240
    MINUS           shift and go to state 229
    LSHIFT          shift and go to state 243
    RSHIFT          shift and go to state 226
    LSHIFTA         shift and go to state 241
    RSHIFTA         shift and go to state 238
    LT              shift and go to state 235
    GT              shift and go to state 228
    LE              shift and go to state 222
    GE              shift and go to state 239

  ! POWER           [ reduce using rule 143 (expression -> expression NEL expression .) ]
  ! TIMES           [ reduce using rule 143 (expression -> expression NEL expression .) ]
  ! DIVIDE          [ reduce using rule 143 (expression -> expression NEL expression .) ]
  ! MOD             [ reduce using rule 143 (expression -> expression NEL expression .) ]
  ! PLUS            [ reduce using rule 143 (expression -> expression NEL expression .) ]
  ! MINUS           [ reduce using rule 143 (expression -> expression NEL expression .) ]
  ! LSHIFT          [ reduce using rule 143 (expression -> expression NEL expression .) ]
  ! RSHIFT          [ reduce using rule 143 (expression -> expression NEL expression .) ]
  ! LSHIFTA         [ reduce using rule 143 (expression -> expression NEL expression .) ]
  ! RSHIFTA         [ reduce using rule 143 (expression -> expression NEL expression .) ]
  ! LT              [ reduce using rule 143 (expression -> expression NEL expression .) ]
  ! GT              [ reduce using rule 143 (expression -> expression NEL expression .) ]
  ! LE              [ reduce using rule 143 (expression -> expression NEL expression .) ]
  ! GE              [ reduce using rule 143 (expression -> expression NEL expression .) ]
  ! EQ              [ shift and go to state 223 ]
  ! NE              [ shift and go to state 225 ]
  ! EQL             [ shift and go to state 245 ]
  ! NEL             [ shift and go to state 242 ]
  ! AND             [ shift and go to state 224 ]
  ! XOR             [ shift and go to state 237 ]
  ! XNOR            [ shift and go to state 232 ]
  ! OR              [ shift and go to state 234 ]
  ! LAND            [ shift and go to state 227 ]
  ! LOR             [ shift and go to state 230 ]
  ! COND            [ shift and go to state 233 ]


state 377

    (132) expression -> expression LSHIFT expression .
    (126) expression -> expression . POWER expression
    (127) expression -> expression . TIMES expression
    (128) expression -> expression . DIVIDE expression
    (129) expression -> expression . MOD expression
    (130) expression -> expression . PLUS expression
    (131) expression -> expression . MINUS expression
    (132) expression -> expression . LSHIFT expression
    (133) expression -> expression . RSHIFT expression
    (134) expression -> expression . LSHIFTA expression
    (135) expression -> expression . RSHIFTA expression
    (136) expression -> expression . LT expression
    (137) expression -> expression . GT expression
    (138) expression -> expression . LE expression
    (139) expression -> expression . GE expression
    (140) expression -> expression . EQ expression
    (141) expression -> expression . NE expression
    (142) expression -> expression . EQL expression
    (143) expression -> expression . NEL expression
    (144) expression -> expression . AND expression
    (145) expression -> expression . XOR expression
    (146) expression -> expression . XNOR expression
    (147) expression -> expression . OR expression
    (148) expression -> expression . LAND expression
    (149) expression -> expression . LOR expression
    (150) expression -> expression . COND expression COLON expression

    LSHIFT          reduce using rule 132 (expression -> expression LSHIFT expression .)
    RSHIFT          reduce using rule 132 (expression -> expression LSHIFT expression .)
    LSHIFTA         reduce using rule 132 (expression -> expression LSHIFT expression .)
    RSHIFTA         reduce using rule 132 (expression -> expression LSHIFT expression .)
    LT              reduce using rule 132 (expression -> expression LSHIFT expression .)
    GT              reduce using rule 132 (expression -> expression LSHIFT expression .)
    LE              reduce using rule 132 (expression -> expression LSHIFT expression .)
    GE              reduce using rule 132 (expression -> expression LSHIFT expression .)
    EQ              reduce using rule 132 (expression -> expression LSHIFT expression .)
    NE              reduce using rule 132 (expression -> expression LSHIFT expression .)
    EQL             reduce using rule 132 (expression -> expression LSHIFT expression .)
    NEL             reduce using rule 132 (expression -> expression LSHIFT expression .)
    AND             reduce using rule 132 (expression -> expression LSHIFT expression .)
    XOR             reduce using rule 132 (expression -> expression LSHIFT expression .)
    XNOR            reduce using rule 132 (expression -> expression LSHIFT expression .)
    OR              reduce using rule 132 (expression -> expression LSHIFT expression .)
    LAND            reduce using rule 132 (expression -> expression LSHIFT expression .)
    LOR             reduce using rule 132 (expression -> expression LSHIFT expression .)
    COND            reduce using rule 132 (expression -> expression LSHIFT expression .)
    LBRACE          reduce using rule 132 (expression -> expression LSHIFT expression .)
    RBRACE          reduce using rule 132 (expression -> expression LSHIFT expression .)
    COMMA           reduce using rule 132 (expression -> expression LSHIFT expression .)
    RPAREN          reduce using rule 132 (expression -> expression LSHIFT expression .)
    COLON           reduce using rule 132 (expression -> expression LSHIFT expression .)
    SEMICOLON       reduce using rule 132 (expression -> expression LSHIFT expression .)
    PLUSCOLON       reduce using rule 132 (expression -> expression LSHIFT expression .)
    MINUSCOLON      reduce using rule 132 (expression -> expression LSHIFT expression .)
    RBRACKET        reduce using rule 132 (expression -> expression LSHIFT expression .)
    POWER           shift and go to state 246
    TIMES           shift and go to state 349
    DIVIDE          shift and go to state 244
    MOD             shift and go to state 231
    PLUS            shift and go to state 240
    MINUS           shift and go to state 229

  ! POWER           [ reduce using rule 132 (expression -> expression LSHIFT expression .) ]
  ! TIMES           [ reduce using rule 132 (expression -> expression LSHIFT expression .) ]
  ! DIVIDE          [ reduce using rule 132 (expression -> expression LSHIFT expression .) ]
  ! MOD             [ reduce using rule 132 (expression -> expression LSHIFT expression .) ]
  ! PLUS            [ reduce using rule 132 (expression -> expression LSHIFT expression .) ]
  ! MINUS           [ reduce using rule 132 (expression -> expression LSHIFT expression .) ]
  ! LSHIFT          [ shift and go to state 243 ]
  ! RSHIFT          [ shift and go to state 226 ]
  ! LSHIFTA         [ shift and go to state 241 ]
  ! RSHIFTA         [ shift and go to state 238 ]
  ! LT              [ shift and go to state 235 ]
  ! GT              [ shift and go to state 228 ]
  ! LE              [ shift and go to state 222 ]
  ! GE              [ shift and go to state 239 ]
  ! EQ              [ shift and go to state 223 ]
  ! NE              [ shift and go to state 225 ]
  ! EQL             [ shift and go to state 245 ]
  ! NEL             [ shift and go to state 242 ]
  ! AND             [ shift and go to state 224 ]
  ! XOR             [ shift and go to state 237 ]
  ! XNOR            [ shift and go to state 232 ]
  ! OR              [ shift and go to state 234 ]
  ! LAND            [ shift and go to state 227 ]
  ! LOR             [ shift and go to state 230 ]
  ! COND            [ shift and go to state 233 ]


state 378

    (128) expression -> expression DIVIDE expression .
    (126) expression -> expression . POWER expression
    (127) expression -> expression . TIMES expression
    (128) expression -> expression . DIVIDE expression
    (129) expression -> expression . MOD expression
    (130) expression -> expression . PLUS expression
    (131) expression -> expression . MINUS expression
    (132) expression -> expression . LSHIFT expression
    (133) expression -> expression . RSHIFT expression
    (134) expression -> expression . LSHIFTA expression
    (135) expression -> expression . RSHIFTA expression
    (136) expression -> expression . LT expression
    (137) expression -> expression . GT expression
    (138) expression -> expression . LE expression
    (139) expression -> expression . GE expression
    (140) expression -> expression . EQ expression
    (141) expression -> expression . NE expression
    (142) expression -> expression . EQL expression
    (143) expression -> expression . NEL expression
    (144) expression -> expression . AND expression
    (145) expression -> expression . XOR expression
    (146) expression -> expression . XNOR expression
    (147) expression -> expression . OR expression
    (148) expression -> expression . LAND expression
    (149) expression -> expression . LOR expression
    (150) expression -> expression . COND expression COLON expression

    TIMES           reduce using rule 128 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 128 (expression -> expression DIVIDE expression .)
    MOD             reduce using rule 128 (expression -> expression DIVIDE expression .)
    PLUS            reduce using rule 128 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 128 (expression -> expression DIVIDE expression .)
    LSHIFT          reduce using rule 128 (expression -> expression DIVIDE expression .)
    RSHIFT          reduce using rule 128 (expression -> expression DIVIDE expression .)
    LSHIFTA         reduce using rule 128 (expression -> expression DIVIDE expression .)
    RSHIFTA         reduce using rule 128 (expression -> expression DIVIDE expression .)
    LT              reduce using rule 128 (expression -> expression DIVIDE expression .)
    GT              reduce using rule 128 (expression -> expression DIVIDE expression .)
    LE              reduce using rule 128 (expression -> expression DIVIDE expression .)
    GE              reduce using rule 128 (expression -> expression DIVIDE expression .)
    EQ              reduce using rule 128 (expression -> expression DIVIDE expression .)
    NE              reduce using rule 128 (expression -> expression DIVIDE expression .)
    EQL             reduce using rule 128 (expression -> expression DIVIDE expression .)
    NEL             reduce using rule 128 (expression -> expression DIVIDE expression .)
    AND             reduce using rule 128 (expression -> expression DIVIDE expression .)
    XOR             reduce using rule 128 (expression -> expression DIVIDE expression .)
    XNOR            reduce using rule 128 (expression -> expression DIVIDE expression .)
    OR              reduce using rule 128 (expression -> expression DIVIDE expression .)
    LAND            reduce using rule 128 (expression -> expression DIVIDE expression .)
    LOR             reduce using rule 128 (expression -> expression DIVIDE expression .)
    COND            reduce using rule 128 (expression -> expression DIVIDE expression .)
    LBRACE          reduce using rule 128 (expression -> expression DIVIDE expression .)
    RBRACE          reduce using rule 128 (expression -> expression DIVIDE expression .)
    COMMA           reduce using rule 128 (expression -> expression DIVIDE expression .)
    RPAREN          reduce using rule 128 (expression -> expression DIVIDE expression .)
    COLON           reduce using rule 128 (expression -> expression DIVIDE expression .)
    SEMICOLON       reduce using rule 128 (expression -> expression DIVIDE expression .)
    PLUSCOLON       reduce using rule 128 (expression -> expression DIVIDE expression .)
    MINUSCOLON      reduce using rule 128 (expression -> expression DIVIDE expression .)
    RBRACKET        reduce using rule 128 (expression -> expression DIVIDE expression .)
    POWER           shift and go to state 246

  ! POWER           [ reduce using rule 128 (expression -> expression DIVIDE expression .) ]
  ! TIMES           [ shift and go to state 349 ]
  ! DIVIDE          [ shift and go to state 244 ]
  ! MOD             [ shift and go to state 231 ]
  ! PLUS            [ shift and go to state 240 ]
  ! MINUS           [ shift and go to state 229 ]
  ! LSHIFT          [ shift and go to state 243 ]
  ! RSHIFT          [ shift and go to state 226 ]
  ! LSHIFTA         [ shift and go to state 241 ]
  ! RSHIFTA         [ shift and go to state 238 ]
  ! LT              [ shift and go to state 235 ]
  ! GT              [ shift and go to state 228 ]
  ! LE              [ shift and go to state 222 ]
  ! GE              [ shift and go to state 239 ]
  ! EQ              [ shift and go to state 223 ]
  ! NE              [ shift and go to state 225 ]
  ! EQL             [ shift and go to state 245 ]
  ! NEL             [ shift and go to state 242 ]
  ! AND             [ shift and go to state 224 ]
  ! XOR             [ shift and go to state 237 ]
  ! XNOR            [ shift and go to state 232 ]
  ! OR              [ shift and go to state 234 ]
  ! LAND            [ shift and go to state 227 ]
  ! LOR             [ shift and go to state 230 ]
  ! COND            [ shift and go to state 233 ]


state 379

    (142) expression -> expression EQL expression .
    (126) expression -> expression . POWER expression
    (127) expression -> expression . TIMES expression
    (128) expression -> expression . DIVIDE expression
    (129) expression -> expression . MOD expression
    (130) expression -> expression . PLUS expression
    (131) expression -> expression . MINUS expression
    (132) expression -> expression . LSHIFT expression
    (133) expression -> expression . RSHIFT expression
    (134) expression -> expression . LSHIFTA expression
    (135) expression -> expression . RSHIFTA expression
    (136) expression -> expression . LT expression
    (137) expression -> expression . GT expression
    (138) expression -> expression . LE expression
    (139) expression -> expression . GE expression
    (140) expression -> expression . EQ expression
    (141) expression -> expression . NE expression
    (142) expression -> expression . EQL expression
    (143) expression -> expression . NEL expression
    (144) expression -> expression . AND expression
    (145) expression -> expression . XOR expression
    (146) expression -> expression . XNOR expression
    (147) expression -> expression . OR expression
    (148) expression -> expression . LAND expression
    (149) expression -> expression . LOR expression
    (150) expression -> expression . COND expression COLON expression

    EQ              reduce using rule 142 (expression -> expression EQL expression .)
    NE              reduce using rule 142 (expression -> expression EQL expression .)
    EQL             reduce using rule 142 (expression -> expression EQL expression .)
    NEL             reduce using rule 142 (expression -> expression EQL expression .)
    AND             reduce using rule 142 (expression -> expression EQL expression .)
    XOR             reduce using rule 142 (expression -> expression EQL expression .)
    XNOR            reduce using rule 142 (expression -> expression EQL expression .)
    OR              reduce using rule 142 (expression -> expression EQL expression .)
    LAND            reduce using rule 142 (expression -> expression EQL expression .)
    LOR             reduce using rule 142 (expression -> expression EQL expression .)
    COND            reduce using rule 142 (expression -> expression EQL expression .)
    LBRACE          reduce using rule 142 (expression -> expression EQL expression .)
    RBRACE          reduce using rule 142 (expression -> expression EQL expression .)
    COMMA           reduce using rule 142 (expression -> expression EQL expression .)
    RPAREN          reduce using rule 142 (expression -> expression EQL expression .)
    COLON           reduce using rule 142 (expression -> expression EQL expression .)
    SEMICOLON       reduce using rule 142 (expression -> expression EQL expression .)
    PLUSCOLON       reduce using rule 142 (expression -> expression EQL expression .)
    MINUSCOLON      reduce using rule 142 (expression -> expression EQL expression .)
    RBRACKET        reduce using rule 142 (expression -> expression EQL expression .)
    POWER           shift and go to state 246
    TIMES           shift and go to state 349
    DIVIDE          shift and go to state 244
    MOD             shift and go to state 231
    PLUS            shift and go to state 240
    MINUS           shift and go to state 229
    LSHIFT          shift and go to state 243
    RSHIFT          shift and go to state 226
    LSHIFTA         shift and go to state 241
    RSHIFTA         shift and go to state 238
    LT              shift and go to state 235
    GT              shift and go to state 228
    LE              shift and go to state 222
    GE              shift and go to state 239

  ! POWER           [ reduce using rule 142 (expression -> expression EQL expression .) ]
  ! TIMES           [ reduce using rule 142 (expression -> expression EQL expression .) ]
  ! DIVIDE          [ reduce using rule 142 (expression -> expression EQL expression .) ]
  ! MOD             [ reduce using rule 142 (expression -> expression EQL expression .) ]
  ! PLUS            [ reduce using rule 142 (expression -> expression EQL expression .) ]
  ! MINUS           [ reduce using rule 142 (expression -> expression EQL expression .) ]
  ! LSHIFT          [ reduce using rule 142 (expression -> expression EQL expression .) ]
  ! RSHIFT          [ reduce using rule 142 (expression -> expression EQL expression .) ]
  ! LSHIFTA         [ reduce using rule 142 (expression -> expression EQL expression .) ]
  ! RSHIFTA         [ reduce using rule 142 (expression -> expression EQL expression .) ]
  ! LT              [ reduce using rule 142 (expression -> expression EQL expression .) ]
  ! GT              [ reduce using rule 142 (expression -> expression EQL expression .) ]
  ! LE              [ reduce using rule 142 (expression -> expression EQL expression .) ]
  ! GE              [ reduce using rule 142 (expression -> expression EQL expression .) ]
  ! EQ              [ shift and go to state 223 ]
  ! NE              [ shift and go to state 225 ]
  ! EQL             [ shift and go to state 245 ]
  ! NEL             [ shift and go to state 242 ]
  ! AND             [ shift and go to state 224 ]
  ! XOR             [ shift and go to state 237 ]
  ! XNOR            [ shift and go to state 232 ]
  ! OR              [ shift and go to state 234 ]
  ! LAND            [ shift and go to state 227 ]
  ! LOR             [ shift and go to state 230 ]
  ! COND            [ shift and go to state 233 ]


state 380

    (126) expression -> expression POWER expression .
    (126) expression -> expression . POWER expression
    (127) expression -> expression . TIMES expression
    (128) expression -> expression . DIVIDE expression
    (129) expression -> expression . MOD expression
    (130) expression -> expression . PLUS expression
    (131) expression -> expression . MINUS expression
    (132) expression -> expression . LSHIFT expression
    (133) expression -> expression . RSHIFT expression
    (134) expression -> expression . LSHIFTA expression
    (135) expression -> expression . RSHIFTA expression
    (136) expression -> expression . LT expression
    (137) expression -> expression . GT expression
    (138) expression -> expression . LE expression
    (139) expression -> expression . GE expression
    (140) expression -> expression . EQ expression
    (141) expression -> expression . NE expression
    (142) expression -> expression . EQL expression
    (143) expression -> expression . NEL expression
    (144) expression -> expression . AND expression
    (145) expression -> expression . XOR expression
    (146) expression -> expression . XNOR expression
    (147) expression -> expression . OR expression
    (148) expression -> expression . LAND expression
    (149) expression -> expression . LOR expression
    (150) expression -> expression . COND expression COLON expression

    POWER           reduce using rule 126 (expression -> expression POWER expression .)
    TIMES           reduce using rule 126 (expression -> expression POWER expression .)
    DIVIDE          reduce using rule 126 (expression -> expression POWER expression .)
    MOD             reduce using rule 126 (expression -> expression POWER expression .)
    PLUS            reduce using rule 126 (expression -> expression POWER expression .)
    MINUS           reduce using rule 126 (expression -> expression POWER expression .)
    LSHIFT          reduce using rule 126 (expression -> expression POWER expression .)
    RSHIFT          reduce using rule 126 (expression -> expression POWER expression .)
    LSHIFTA         reduce using rule 126 (expression -> expression POWER expression .)
    RSHIFTA         reduce using rule 126 (expression -> expression POWER expression .)
    LT              reduce using rule 126 (expression -> expression POWER expression .)
    GT              reduce using rule 126 (expression -> expression POWER expression .)
    LE              reduce using rule 126 (expression -> expression POWER expression .)
    GE              reduce using rule 126 (expression -> expression POWER expression .)
    EQ              reduce using rule 126 (expression -> expression POWER expression .)
    NE              reduce using rule 126 (expression -> expression POWER expression .)
    EQL             reduce using rule 126 (expression -> expression POWER expression .)
    NEL             reduce using rule 126 (expression -> expression POWER expression .)
    AND             reduce using rule 126 (expression -> expression POWER expression .)
    XOR             reduce using rule 126 (expression -> expression POWER expression .)
    XNOR            reduce using rule 126 (expression -> expression POWER expression .)
    OR              reduce using rule 126 (expression -> expression POWER expression .)
    LAND            reduce using rule 126 (expression -> expression POWER expression .)
    LOR             reduce using rule 126 (expression -> expression POWER expression .)
    COND            reduce using rule 126 (expression -> expression POWER expression .)
    LBRACE          reduce using rule 126 (expression -> expression POWER expression .)
    RBRACE          reduce using rule 126 (expression -> expression POWER expression .)
    COMMA           reduce using rule 126 (expression -> expression POWER expression .)
    RPAREN          reduce using rule 126 (expression -> expression POWER expression .)
    COLON           reduce using rule 126 (expression -> expression POWER expression .)
    SEMICOLON       reduce using rule 126 (expression -> expression POWER expression .)
    PLUSCOLON       reduce using rule 126 (expression -> expression POWER expression .)
    MINUSCOLON      reduce using rule 126 (expression -> expression POWER expression .)
    RBRACKET        reduce using rule 126 (expression -> expression POWER expression .)

  ! POWER           [ shift and go to state 246 ]
  ! TIMES           [ shift and go to state 349 ]
  ! DIVIDE          [ shift and go to state 244 ]
  ! MOD             [ shift and go to state 231 ]
  ! PLUS            [ shift and go to state 240 ]
  ! MINUS           [ shift and go to state 229 ]
  ! LSHIFT          [ shift and go to state 243 ]
  ! RSHIFT          [ shift and go to state 226 ]
  ! LSHIFTA         [ shift and go to state 241 ]
  ! RSHIFTA         [ shift and go to state 238 ]
  ! LT              [ shift and go to state 235 ]
  ! GT              [ shift and go to state 228 ]
  ! LE              [ shift and go to state 222 ]
  ! GE              [ shift and go to state 239 ]
  ! EQ              [ shift and go to state 223 ]
  ! NE              [ shift and go to state 225 ]
  ! EQL             [ shift and go to state 245 ]
  ! NEL             [ shift and go to state 242 ]
  ! AND             [ shift and go to state 224 ]
  ! XOR             [ shift and go to state 237 ]
  ! XNOR            [ shift and go to state 232 ]
  ! OR              [ shift and go to state 234 ]
  ! LAND            [ shift and go to state 227 ]
  ! LOR             [ shift and go to state 230 ]
  ! COND            [ shift and go to state 233 ]


state 381

    (151) expression -> LPAREN expression RPAREN .

    POWER           reduce using rule 151 (expression -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 151 (expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 151 (expression -> LPAREN expression RPAREN .)
    MOD             reduce using rule 151 (expression -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 151 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 151 (expression -> LPAREN expression RPAREN .)
    LSHIFT          reduce using rule 151 (expression -> LPAREN expression RPAREN .)
    RSHIFT          reduce using rule 151 (expression -> LPAREN expression RPAREN .)
    LSHIFTA         reduce using rule 151 (expression -> LPAREN expression RPAREN .)
    RSHIFTA         reduce using rule 151 (expression -> LPAREN expression RPAREN .)
    LT              reduce using rule 151 (expression -> LPAREN expression RPAREN .)
    GT              reduce using rule 151 (expression -> LPAREN expression RPAREN .)
    LE              reduce using rule 151 (expression -> LPAREN expression RPAREN .)
    GE              reduce using rule 151 (expression -> LPAREN expression RPAREN .)
    EQ              reduce using rule 151 (expression -> LPAREN expression RPAREN .)
    NE              reduce using rule 151 (expression -> LPAREN expression RPAREN .)
    EQL             reduce using rule 151 (expression -> LPAREN expression RPAREN .)
    NEL             reduce using rule 151 (expression -> LPAREN expression RPAREN .)
    AND             reduce using rule 151 (expression -> LPAREN expression RPAREN .)
    XOR             reduce using rule 151 (expression -> LPAREN expression RPAREN .)
    XNOR            reduce using rule 151 (expression -> LPAREN expression RPAREN .)
    OR              reduce using rule 151 (expression -> LPAREN expression RPAREN .)
    LAND            reduce using rule 151 (expression -> LPAREN expression RPAREN .)
    LOR             reduce using rule 151 (expression -> LPAREN expression RPAREN .)
    COND            reduce using rule 151 (expression -> LPAREN expression RPAREN .)
    LBRACE          reduce using rule 151 (expression -> LPAREN expression RPAREN .)
    RBRACE          reduce using rule 151 (expression -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 151 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 151 (expression -> LPAREN expression RPAREN .)
    COLON           reduce using rule 151 (expression -> LPAREN expression RPAREN .)
    SEMICOLON       reduce using rule 151 (expression -> LPAREN expression RPAREN .)
    PLUSCOLON       reduce using rule 151 (expression -> LPAREN expression RPAREN .)
    MINUSCOLON      reduce using rule 151 (expression -> LPAREN expression RPAREN .)
    RBRACKET        reduce using rule 151 (expression -> LPAREN expression RPAREN .)


state 382

    (320) systemcall -> DOLLER ID LPAREN . sysargs RPAREN
    (321) sysargs -> . sysargs COMMA sysarg
    (322) sysargs -> . sysarg
    (323) sysargs -> . empty
    (324) sysarg -> . expression
    (365) empty -> .
    (116) expression -> . MINUS expression
    (117) expression -> . PLUS expression
    (118) expression -> . LNOT expression
    (119) expression -> . NOT expression
    (120) expression -> . AND expression
    (121) expression -> . NAND expression
    (122) expression -> . NOR expression
    (123) expression -> . OR expression
    (124) expression -> . XOR expression
    (125) expression -> . XNOR expression
    (126) expression -> . expression POWER expression
    (127) expression -> . expression TIMES expression
    (128) expression -> . expression DIVIDE expression
    (129) expression -> . expression MOD expression
    (130) expression -> . expression PLUS expression
    (131) expression -> . expression MINUS expression
    (132) expression -> . expression LSHIFT expression
    (133) expression -> . expression RSHIFT expression
    (134) expression -> . expression LSHIFTA expression
    (135) expression -> . expression RSHIFTA expression
    (136) expression -> . expression LT expression
    (137) expression -> . expression GT expression
    (138) expression -> . expression LE expression
    (139) expression -> . expression GE expression
    (140) expression -> . expression EQ expression
    (141) expression -> . expression NE expression
    (142) expression -> . expression EQL expression
    (143) expression -> . expression NEL expression
    (144) expression -> . expression AND expression
    (145) expression -> . expression XOR expression
    (146) expression -> . expression XNOR expression
    (147) expression -> . expression OR expression
    (148) expression -> . expression LAND expression
    (149) expression -> . expression LOR expression
    (150) expression -> . expression COND expression COLON expression
    (151) expression -> . LPAREN expression RPAREN
    (152) expression -> . concat
    (153) expression -> . repeat
    (154) expression -> . partselect
    (155) expression -> . pointer
    (156) expression -> . functioncall
    (157) expression -> . systemcall
    (158) expression -> . identifier
    (159) expression -> . const_expression
    (160) concat -> . LBRACE concatlist RBRACE
    (163) repeat -> . LBRACE expression concat RBRACE
    (164) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (165) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (166) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (167) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (168) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (169) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (170) pointer -> . identifier LBRACKET expression RBRACKET
    (171) pointer -> . pointer LBRACKET expression RBRACKET
    (339) functioncall -> . identifier LPAREN func_args RPAREN
    (319) systemcall -> . DOLLER ID
    (320) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (357) identifier -> . ID
    (358) identifier -> . scope ID
    (172) const_expression -> . intnumber
    (173) const_expression -> . floatnumber
    (174) const_expression -> . stringliteral
    (359) scope -> . identifier DOT
    (360) scope -> . pointer DOT
    (176) intnumber -> . INTNUMBER_DEC
    (177) intnumber -> . SIGNED_INTNUMBER_DEC
    (178) intnumber -> . INTNUMBER_BIN
    (179) intnumber -> . SIGNED_INTNUMBER_BIN
    (180) intnumber -> . INTNUMBER_OCT
    (181) intnumber -> . SIGNED_INTNUMBER_OCT
    (182) intnumber -> . INTNUMBER_HEX
    (183) intnumber -> . SIGNED_INTNUMBER_HEX
    (175) floatnumber -> . FLOATNUMBER
    (184) stringliteral -> . STRING_LITERAL

    RPAREN          reduce using rule 365 (empty -> .)
    COMMA           reduce using rule 365 (empty -> .)
    MINUS           shift and go to state 97
    PLUS            shift and go to state 89
    LNOT            shift and go to state 95
    NOT             shift and go to state 78
    AND             shift and go to state 91
    NAND            shift and go to state 98
    NOR             shift and go to state 76
    OR              shift and go to state 105
    XOR             shift and go to state 82
    XNOR            shift and go to state 87
    LPAREN          shift and go to state 96
    LBRACE          shift and go to state 77
    DOLLER          shift and go to state 100
    ID              shift and go to state 85
    INTNUMBER_DEC   shift and go to state 79
    SIGNED_INTNUMBER_DEC shift and go to state 101
    INTNUMBER_BIN   shift and go to state 111
    SIGNED_INTNUMBER_BIN shift and go to state 112
    INTNUMBER_OCT   shift and go to state 86
    SIGNED_INTNUMBER_OCT shift and go to state 106
    INTNUMBER_HEX   shift and go to state 93
    SIGNED_INTNUMBER_HEX shift and go to state 83
    FLOATNUMBER     shift and go to state 102
    STRING_LITERAL  shift and go to state 107

    stringliteral                  shift and go to state 99
    intnumber                      shift and go to state 81
    expression                     shift and go to state 480
    repeat                         shift and go to state 108
    empty                          shift and go to state 478
    partselect                     shift and go to state 103
    identifier                     shift and go to state 104
    pointer                        shift and go to state 80
    functioncall                   shift and go to state 94
    scope                          shift and go to state 84
    systemcall                     shift and go to state 109
    sysarg                         shift and go to state 477
    sysargs                        shift and go to state 479
    const_expression               shift and go to state 110
    concat                         shift and go to state 88
    floatnumber                    shift and go to state 90

state 383

    (342) func_args -> empty .

    RPAREN          reduce using rule 342 (func_args -> empty .)
    COMMA           reduce using rule 342 (func_args -> empty .)


state 384

    (339) functioncall -> identifier LPAREN func_args . RPAREN
    (340) func_args -> func_args . COMMA expression

    RPAREN          shift and go to state 482
    COMMA           shift and go to state 481


state 385

    (341) func_args -> expression .
    (126) expression -> expression . POWER expression
    (127) expression -> expression . TIMES expression
    (128) expression -> expression . DIVIDE expression
    (129) expression -> expression . MOD expression
    (130) expression -> expression . PLUS expression
    (131) expression -> expression . MINUS expression
    (132) expression -> expression . LSHIFT expression
    (133) expression -> expression . RSHIFT expression
    (134) expression -> expression . LSHIFTA expression
    (135) expression -> expression . RSHIFTA expression
    (136) expression -> expression . LT expression
    (137) expression -> expression . GT expression
    (138) expression -> expression . LE expression
    (139) expression -> expression . GE expression
    (140) expression -> expression . EQ expression
    (141) expression -> expression . NE expression
    (142) expression -> expression . EQL expression
    (143) expression -> expression . NEL expression
    (144) expression -> expression . AND expression
    (145) expression -> expression . XOR expression
    (146) expression -> expression . XNOR expression
    (147) expression -> expression . OR expression
    (148) expression -> expression . LAND expression
    (149) expression -> expression . LOR expression
    (150) expression -> expression . COND expression COLON expression

    RPAREN          reduce using rule 341 (func_args -> expression .)
    COMMA           reduce using rule 341 (func_args -> expression .)
    POWER           shift and go to state 246
    TIMES           shift and go to state 349
    DIVIDE          shift and go to state 244
    MOD             shift and go to state 231
    PLUS            shift and go to state 240
    MINUS           shift and go to state 229
    LSHIFT          shift and go to state 243
    RSHIFT          shift and go to state 226
    LSHIFTA         shift and go to state 241
    RSHIFTA         shift and go to state 238
    LT              shift and go to state 235
    GT              shift and go to state 228
    LE              shift and go to state 222
    GE              shift and go to state 239
    EQ              shift and go to state 223
    NE              shift and go to state 225
    EQL             shift and go to state 245
    NEL             shift and go to state 242
    AND             shift and go to state 224
    XOR             shift and go to state 237
    XNOR            shift and go to state 232
    OR              shift and go to state 234
    LAND            shift and go to state 227
    LOR             shift and go to state 230
    COND            shift and go to state 233


state 386

    (164) partselect -> identifier LBRACKET expression . COLON expression RBRACKET
    (165) partselect -> identifier LBRACKET expression . PLUSCOLON expression RBRACKET
    (166) partselect -> identifier LBRACKET expression . MINUSCOLON expression RBRACKET
    (170) pointer -> identifier LBRACKET expression . RBRACKET
    (126) expression -> expression . POWER expression
    (127) expression -> expression . TIMES expression
    (128) expression -> expression . DIVIDE expression
    (129) expression -> expression . MOD expression
    (130) expression -> expression . PLUS expression
    (131) expression -> expression . MINUS expression
    (132) expression -> expression . LSHIFT expression
    (133) expression -> expression . RSHIFT expression
    (134) expression -> expression . LSHIFTA expression
    (135) expression -> expression . RSHIFTA expression
    (136) expression -> expression . LT expression
    (137) expression -> expression . GT expression
    (138) expression -> expression . LE expression
    (139) expression -> expression . GE expression
    (140) expression -> expression . EQ expression
    (141) expression -> expression . NE expression
    (142) expression -> expression . EQL expression
    (143) expression -> expression . NEL expression
    (144) expression -> expression . AND expression
    (145) expression -> expression . XOR expression
    (146) expression -> expression . XNOR expression
    (147) expression -> expression . OR expression
    (148) expression -> expression . LAND expression
    (149) expression -> expression . LOR expression
    (150) expression -> expression . COND expression COLON expression

    COLON           shift and go to state 483
    PLUSCOLON       shift and go to state 484
    MINUSCOLON      shift and go to state 486
    RBRACKET        shift and go to state 485
    POWER           shift and go to state 246
    TIMES           shift and go to state 349
    DIVIDE          shift and go to state 244
    MOD             shift and go to state 231
    PLUS            shift and go to state 240
    MINUS           shift and go to state 229
    LSHIFT          shift and go to state 243
    RSHIFT          shift and go to state 226
    LSHIFTA         shift and go to state 241
    RSHIFTA         shift and go to state 238
    LT              shift and go to state 235
    GT              shift and go to state 228
    LE              shift and go to state 222
    GE              shift and go to state 239
    EQ              shift and go to state 223
    NE              shift and go to state 225
    EQL             shift and go to state 245
    NEL             shift and go to state 242
    AND             shift and go to state 224
    XOR             shift and go to state 237
    XNOR            shift and go to state 232
    OR              shift and go to state 234
    LAND            shift and go to state 227
    LOR             shift and go to state 230
    COND            shift and go to state 233


state 387

    (46) width -> LBRACKET expression COLON . expression RBRACKET
    (116) expression -> . MINUS expression
    (117) expression -> . PLUS expression
    (118) expression -> . LNOT expression
    (119) expression -> . NOT expression
    (120) expression -> . AND expression
    (121) expression -> . NAND expression
    (122) expression -> . NOR expression
    (123) expression -> . OR expression
    (124) expression -> . XOR expression
    (125) expression -> . XNOR expression
    (126) expression -> . expression POWER expression
    (127) expression -> . expression TIMES expression
    (128) expression -> . expression DIVIDE expression
    (129) expression -> . expression MOD expression
    (130) expression -> . expression PLUS expression
    (131) expression -> . expression MINUS expression
    (132) expression -> . expression LSHIFT expression
    (133) expression -> . expression RSHIFT expression
    (134) expression -> . expression LSHIFTA expression
    (135) expression -> . expression RSHIFTA expression
    (136) expression -> . expression LT expression
    (137) expression -> . expression GT expression
    (138) expression -> . expression LE expression
    (139) expression -> . expression GE expression
    (140) expression -> . expression EQ expression
    (141) expression -> . expression NE expression
    (142) expression -> . expression EQL expression
    (143) expression -> . expression NEL expression
    (144) expression -> . expression AND expression
    (145) expression -> . expression XOR expression
    (146) expression -> . expression XNOR expression
    (147) expression -> . expression OR expression
    (148) expression -> . expression LAND expression
    (149) expression -> . expression LOR expression
    (150) expression -> . expression COND expression COLON expression
    (151) expression -> . LPAREN expression RPAREN
    (152) expression -> . concat
    (153) expression -> . repeat
    (154) expression -> . partselect
    (155) expression -> . pointer
    (156) expression -> . functioncall
    (157) expression -> . systemcall
    (158) expression -> . identifier
    (159) expression -> . const_expression
    (160) concat -> . LBRACE concatlist RBRACE
    (163) repeat -> . LBRACE expression concat RBRACE
    (164) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (165) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (166) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (167) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (168) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (169) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (170) pointer -> . identifier LBRACKET expression RBRACKET
    (171) pointer -> . pointer LBRACKET expression RBRACKET
    (339) functioncall -> . identifier LPAREN func_args RPAREN
    (319) systemcall -> . DOLLER ID
    (320) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (357) identifier -> . ID
    (358) identifier -> . scope ID
    (172) const_expression -> . intnumber
    (173) const_expression -> . floatnumber
    (174) const_expression -> . stringliteral
    (359) scope -> . identifier DOT
    (360) scope -> . pointer DOT
    (176) intnumber -> . INTNUMBER_DEC
    (177) intnumber -> . SIGNED_INTNUMBER_DEC
    (178) intnumber -> . INTNUMBER_BIN
    (179) intnumber -> . SIGNED_INTNUMBER_BIN
    (180) intnumber -> . INTNUMBER_OCT
    (181) intnumber -> . SIGNED_INTNUMBER_OCT
    (182) intnumber -> . INTNUMBER_HEX
    (183) intnumber -> . SIGNED_INTNUMBER_HEX
    (175) floatnumber -> . FLOATNUMBER
    (184) stringliteral -> . STRING_LITERAL

    MINUS           shift and go to state 97
    PLUS            shift and go to state 89
    LNOT            shift and go to state 95
    NOT             shift and go to state 78
    AND             shift and go to state 91
    NAND            shift and go to state 98
    NOR             shift and go to state 76
    OR              shift and go to state 105
    XOR             shift and go to state 82
    XNOR            shift and go to state 87
    LPAREN          shift and go to state 96
    LBRACE          shift and go to state 77
    DOLLER          shift and go to state 100
    ID              shift and go to state 85
    INTNUMBER_DEC   shift and go to state 79
    SIGNED_INTNUMBER_DEC shift and go to state 101
    INTNUMBER_BIN   shift and go to state 111
    SIGNED_INTNUMBER_BIN shift and go to state 112
    INTNUMBER_OCT   shift and go to state 86
    SIGNED_INTNUMBER_OCT shift and go to state 106
    INTNUMBER_HEX   shift and go to state 93
    SIGNED_INTNUMBER_HEX shift and go to state 83
    FLOATNUMBER     shift and go to state 102
    STRING_LITERAL  shift and go to state 107

    stringliteral                  shift and go to state 99
    intnumber                      shift and go to state 81
    expression                     shift and go to state 487
    repeat                         shift and go to state 108
    partselect                     shift and go to state 103
    identifier                     shift and go to state 104
    pointer                        shift and go to state 80
    functioncall                   shift and go to state 94
    scope                          shift and go to state 84
    systemcall                     shift and go to state 109
    const_expression               shift and go to state 110
    concat                         shift and go to state 88
    floatnumber                    shift and go to state 90

state 388

    (41) ioport -> sigtypes portname .

    RPAREN          reduce using rule 41 (ioport -> sigtypes portname .)
    COMMA           reduce using rule 41 (ioport -> sigtypes portname .)


state 389

    (42) ioport -> sigtypes width . portname
    (29) portname -> . ID

    ID              shift and go to state 34

    portname                       shift and go to state 488

state 390

    (298) genvarlist -> genvarlist COMMA genvar .

    SEMICOLON       reduce using rule 298 (genvarlist -> genvarlist COMMA genvar .)
    COMMA           reduce using rule 298 (genvarlist -> genvarlist COMMA genvar .)


state 391

    (326) function -> FUNCTION ID SEMICOLON function_statement . ENDFUNCTION

    ENDFUNCTION     shift and go to state 489


state 392

    (329) funcvardecls -> funcvardecl .

    IF              reduce using rule 329 (funcvardecls -> funcvardecl .)
    FOR             reduce using rule 329 (funcvardecls -> funcvardecl .)
    WHILE           reduce using rule 329 (funcvardecls -> funcvardecl .)
    CASE            reduce using rule 329 (funcvardecls -> funcvardecl .)
    BEGIN           reduce using rule 329 (funcvardecls -> funcvardecl .)
    INTEGER         reduce using rule 329 (funcvardecls -> funcvardecl .)
    DELAY           reduce using rule 329 (funcvardecls -> funcvardecl .)
    INPUT           reduce using rule 329 (funcvardecls -> funcvardecl .)
    OUTPUT          reduce using rule 329 (funcvardecls -> funcvardecl .)
    INOUT           reduce using rule 329 (funcvardecls -> funcvardecl .)
    TRI             reduce using rule 329 (funcvardecls -> funcvardecl .)
    REG             reduce using rule 329 (funcvardecls -> funcvardecl .)
    WIRE            reduce using rule 329 (funcvardecls -> funcvardecl .)
    SIGNED          reduce using rule 329 (funcvardecls -> funcvardecl .)
    LBRACE          reduce using rule 329 (funcvardecls -> funcvardecl .)
    ID              reduce using rule 329 (funcvardecls -> funcvardecl .)


state 393

    (327) function_statement -> funcvardecls . function_calc
    (328) funcvardecls -> funcvardecls . funcvardecl
    (332) function_calc -> . blocking_substitution
    (333) function_calc -> . if_statement
    (334) function_calc -> . for_statement
    (335) function_calc -> . while_statement
    (336) function_calc -> . case_statement
    (337) function_calc -> . block
    (338) function_calc -> . namedblock
    (330) funcvardecl -> . decl
    (331) funcvardecl -> . integerdecl
    (219) blocking_substitution -> . delays lvalue EQUALS delays rvalue SEMICOLON
    (244) if_statement -> . IF LPAREN cond RPAREN true_statement ELSE else_statement
    (245) if_statement -> . IF LPAREN cond RPAREN true_statement
    (246) if_statement -> . delays IF LPAREN cond RPAREN true_statement ELSE else_statement
    (247) if_statement -> . delays IF LPAREN cond RPAREN true_statement
    (252) for_statement -> . FOR LPAREN forpre forcond forpost RPAREN forcontent_statement
    (260) while_statement -> . WHILE LPAREN cond RPAREN whilecontent_statement
    (262) case_statement -> . CASE LPAREN case_comp RPAREN casecontent_statements ENDCASE
    (227) block -> . BEGIN block_statements END
    (228) block -> . BEGIN END
    (232) namedblock -> . BEGIN COLON ID namedblock_statements END
    (233) namedblock -> . BEGIN COLON ID END
    (67) decl -> . sigtypes declnamelist SEMICOLON
    (68) decl -> . sigtypes width declnamelist SEMICOLON
    (77) integerdecl -> . INTEGER integernamelist SEMICOLON
    (78) integerdecl -> . INTEGER SIGNED integernamelist SEMICOLON
    (222) delays -> . DELAY LPAREN expression RPAREN
    (223) delays -> . DELAY identifier
    (224) delays -> . DELAY intnumber
    (225) delays -> . DELAY floatnumber
    (226) delays -> . empty
    (30) sigtypes -> . sigtypes sigtype
    (31) sigtypes -> . sigtype
    (365) empty -> .
    (32) sigtype -> . INPUT
    (33) sigtype -> . OUTPUT
    (34) sigtype -> . INOUT
    (35) sigtype -> . TRI
    (36) sigtype -> . REG
    (37) sigtype -> . WIRE
    (38) sigtype -> . SIGNED

  ! shift/reduce conflict for IF resolved as shift
    IF              shift and go to state 150
    FOR             shift and go to state 144
    WHILE           shift and go to state 146
    CASE            shift and go to state 136
    BEGIN           shift and go to state 153
    INTEGER         shift and go to state 69
    DELAY           shift and go to state 170
    LBRACE          reduce using rule 365 (empty -> .)
    ID              reduce using rule 365 (empty -> .)
    INPUT           shift and go to state 37
    OUTPUT          shift and go to state 24
    INOUT           shift and go to state 25
    TRI             shift and go to state 36
    REG             shift and go to state 35
    WIRE            shift and go to state 26
    SIGNED          shift and go to state 29

  ! IF              [ reduce using rule 365 (empty -> .) ]

    for_statement                  shift and go to state 490
    function_calc                  shift and go to state 491
    empty                          shift and go to state 163
    if_statement                   shift and go to state 492
    funcvardecl                    shift and go to state 498
    while_statement                shift and go to state 497
    sigtypes                       shift and go to state 394
    blocking_substitution          shift and go to state 493
    decl                           shift and go to state 395
    integerdecl                    shift and go to state 396
    case_statement                 shift and go to state 494
    namedblock                     shift and go to state 496
    block                          shift and go to state 499
    delays                         shift and go to state 495
    sigtype                        shift and go to state 33

state 394

    (67) decl -> sigtypes . declnamelist SEMICOLON
    (68) decl -> sigtypes . width declnamelist SEMICOLON
    (30) sigtypes -> sigtypes . sigtype
    (69) declnamelist -> . declnamelist COMMA declname
    (70) declnamelist -> . declname
    (46) width -> . LBRACKET expression COLON expression RBRACKET
    (32) sigtype -> . INPUT
    (33) sigtype -> . OUTPUT
    (34) sigtype -> . INOUT
    (35) sigtype -> . TRI
    (36) sigtype -> . REG
    (37) sigtype -> . WIRE
    (38) sigtype -> . SIGNED
    (71) declname -> . ID
    (72) declname -> . ID length

    LBRACKET        shift and go to state 116
    INPUT           shift and go to state 37
    OUTPUT          shift and go to state 24
    INOUT           shift and go to state 25
    TRI             shift and go to state 36
    REG             shift and go to state 35
    WIRE            shift and go to state 26
    SIGNED          shift and go to state 29
    ID              shift and go to state 451

    declname                       shift and go to state 195
    declnamelist                   shift and go to state 191
    width                          shift and go to state 500
    sigtype                        shift and go to state 115

state 395

    (330) funcvardecl -> decl .

    IF              reduce using rule 330 (funcvardecl -> decl .)
    FOR             reduce using rule 330 (funcvardecl -> decl .)
    WHILE           reduce using rule 330 (funcvardecl -> decl .)
    CASE            reduce using rule 330 (funcvardecl -> decl .)
    BEGIN           reduce using rule 330 (funcvardecl -> decl .)
    INTEGER         reduce using rule 330 (funcvardecl -> decl .)
    DELAY           reduce using rule 330 (funcvardecl -> decl .)
    INPUT           reduce using rule 330 (funcvardecl -> decl .)
    OUTPUT          reduce using rule 330 (funcvardecl -> decl .)
    INOUT           reduce using rule 330 (funcvardecl -> decl .)
    TRI             reduce using rule 330 (funcvardecl -> decl .)
    REG             reduce using rule 330 (funcvardecl -> decl .)
    WIRE            reduce using rule 330 (funcvardecl -> decl .)
    SIGNED          reduce using rule 330 (funcvardecl -> decl .)
    LBRACE          reduce using rule 330 (funcvardecl -> decl .)
    ID              reduce using rule 330 (funcvardecl -> decl .)


state 396

    (331) funcvardecl -> integerdecl .

    IF              reduce using rule 331 (funcvardecl -> integerdecl .)
    FOR             reduce using rule 331 (funcvardecl -> integerdecl .)
    WHILE           reduce using rule 331 (funcvardecl -> integerdecl .)
    CASE            reduce using rule 331 (funcvardecl -> integerdecl .)
    BEGIN           reduce using rule 331 (funcvardecl -> integerdecl .)
    INTEGER         reduce using rule 331 (funcvardecl -> integerdecl .)
    DELAY           reduce using rule 331 (funcvardecl -> integerdecl .)
    INPUT           reduce using rule 331 (funcvardecl -> integerdecl .)
    OUTPUT          reduce using rule 331 (funcvardecl -> integerdecl .)
    INOUT           reduce using rule 331 (funcvardecl -> integerdecl .)
    TRI             reduce using rule 331 (funcvardecl -> integerdecl .)
    REG             reduce using rule 331 (funcvardecl -> integerdecl .)
    WIRE            reduce using rule 331 (funcvardecl -> integerdecl .)
    SIGNED          reduce using rule 331 (funcvardecl -> integerdecl .)
    LBRACE          reduce using rule 331 (funcvardecl -> integerdecl .)
    ID              reduce using rule 331 (funcvardecl -> integerdecl .)


state 397

    (325) function -> FUNCTION width ID SEMICOLON . function_statement ENDFUNCTION
    (327) function_statement -> . funcvardecls function_calc
    (328) funcvardecls -> . funcvardecls funcvardecl
    (329) funcvardecls -> . funcvardecl
    (330) funcvardecl -> . decl
    (331) funcvardecl -> . integerdecl
    (67) decl -> . sigtypes declnamelist SEMICOLON
    (68) decl -> . sigtypes width declnamelist SEMICOLON
    (77) integerdecl -> . INTEGER integernamelist SEMICOLON
    (78) integerdecl -> . INTEGER SIGNED integernamelist SEMICOLON
    (30) sigtypes -> . sigtypes sigtype
    (31) sigtypes -> . sigtype
    (32) sigtype -> . INPUT
    (33) sigtype -> . OUTPUT
    (34) sigtype -> . INOUT
    (35) sigtype -> . TRI
    (36) sigtype -> . REG
    (37) sigtype -> . WIRE
    (38) sigtype -> . SIGNED

    INTEGER         shift and go to state 69
    INPUT           shift and go to state 37
    OUTPUT          shift and go to state 24
    INOUT           shift and go to state 25
    TRI             shift and go to state 36
    REG             shift and go to state 35
    WIRE            shift and go to state 26
    SIGNED          shift and go to state 29

    funcvardecl                    shift and go to state 392
    sigtypes                       shift and go to state 394
    function_statement             shift and go to state 501
    funcvardecls                   shift and go to state 393
    decl                           shift and go to state 395
    integerdecl                    shift and go to state 396
    sigtype                        shift and go to state 33

state 398

    (248) cond -> expression .
    (126) expression -> expression . POWER expression
    (127) expression -> expression . TIMES expression
    (128) expression -> expression . DIVIDE expression
    (129) expression -> expression . MOD expression
    (130) expression -> expression . PLUS expression
    (131) expression -> expression . MINUS expression
    (132) expression -> expression . LSHIFT expression
    (133) expression -> expression . RSHIFT expression
    (134) expression -> expression . LSHIFTA expression
    (135) expression -> expression . RSHIFTA expression
    (136) expression -> expression . LT expression
    (137) expression -> expression . GT expression
    (138) expression -> expression . LE expression
    (139) expression -> expression . GE expression
    (140) expression -> expression . EQ expression
    (141) expression -> expression . NE expression
    (142) expression -> expression . EQL expression
    (143) expression -> expression . NEL expression
    (144) expression -> expression . AND expression
    (145) expression -> expression . XOR expression
    (146) expression -> expression . XNOR expression
    (147) expression -> expression . OR expression
    (148) expression -> expression . LAND expression
    (149) expression -> expression . LOR expression
    (150) expression -> expression . COND expression COLON expression

    SEMICOLON       reduce using rule 248 (cond -> expression .)
    RPAREN          reduce using rule 248 (cond -> expression .)
    POWER           shift and go to state 246
    TIMES           shift and go to state 349
    DIVIDE          shift and go to state 244
    MOD             shift and go to state 231
    PLUS            shift and go to state 240
    MINUS           shift and go to state 229
    LSHIFT          shift and go to state 243
    RSHIFT          shift and go to state 226
    LSHIFTA         shift and go to state 241
    RSHIFTA         shift and go to state 238
    LT              shift and go to state 235
    GT              shift and go to state 228
    LE              shift and go to state 222
    GE              shift and go to state 239
    EQ              shift and go to state 223
    NE              shift and go to state 225
    EQL             shift and go to state 245
    NEL             shift and go to state 242
    AND             shift and go to state 224
    XOR             shift and go to state 237
    XNOR            shift and go to state 232
    OR              shift and go to state 234
    LAND            shift and go to state 227
    LOR             shift and go to state 230
    COND            shift and go to state 233


state 399

    (273) wait_statement -> WAIT LPAREN cond . RPAREN waitcontent_statement

    RPAREN          shift and go to state 502


state 400

    (263) case_comp -> expression .
    (126) expression -> expression . POWER expression
    (127) expression -> expression . TIMES expression
    (128) expression -> expression . DIVIDE expression
    (129) expression -> expression . MOD expression
    (130) expression -> expression . PLUS expression
    (131) expression -> expression . MINUS expression
    (132) expression -> expression . LSHIFT expression
    (133) expression -> expression . RSHIFT expression
    (134) expression -> expression . LSHIFTA expression
    (135) expression -> expression . RSHIFTA expression
    (136) expression -> expression . LT expression
    (137) expression -> expression . GT expression
    (138) expression -> expression . LE expression
    (139) expression -> expression . GE expression
    (140) expression -> expression . EQ expression
    (141) expression -> expression . NE expression
    (142) expression -> expression . EQL expression
    (143) expression -> expression . NEL expression
    (144) expression -> expression . AND expression
    (145) expression -> expression . XOR expression
    (146) expression -> expression . XNOR expression
    (147) expression -> expression . OR expression
    (148) expression -> expression . LAND expression
    (149) expression -> expression . LOR expression
    (150) expression -> expression . COND expression COLON expression

    RPAREN          reduce using rule 263 (case_comp -> expression .)
    POWER           shift and go to state 246
    TIMES           shift and go to state 349
    DIVIDE          shift and go to state 244
    MOD             shift and go to state 231
    PLUS            shift and go to state 240
    MINUS           shift and go to state 229
    LSHIFT          shift and go to state 243
    RSHIFT          shift and go to state 226
    LSHIFTA         shift and go to state 241
    RSHIFTA         shift and go to state 238
    LT              shift and go to state 235
    GT              shift and go to state 228
    LE              shift and go to state 222
    GE              shift and go to state 239
    EQ              shift and go to state 223
    NE              shift and go to state 225
    EQL             shift and go to state 245
    NEL             shift and go to state 242
    AND             shift and go to state 224
    XOR             shift and go to state 237
    XNOR            shift and go to state 232
    OR              shift and go to state 234
    LAND            shift and go to state 227
    LOR             shift and go to state 230
    COND            shift and go to state 233


state 401

    (262) case_statement -> CASE LPAREN case_comp . RPAREN casecontent_statements ENDCASE

    RPAREN          shift and go to state 503


state 402

    (229) block_statements -> block_statements block_statement .

    END             reduce using rule 229 (block_statements -> block_statements block_statement .)
    IF              reduce using rule 229 (block_statements -> block_statements block_statement .)
    CASE            reduce using rule 229 (block_statements -> block_statements block_statement .)
    FOR             reduce using rule 229 (block_statements -> block_statements block_statement .)
    WHILE           reduce using rule 229 (block_statements -> block_statements block_statement .)
    WAIT            reduce using rule 229 (block_statements -> block_statements block_statement .)
    FOREVER         reduce using rule 229 (block_statements -> block_statements block_statement .)
    BEGIN           reduce using rule 229 (block_statements -> block_statements block_statement .)
    FORK            reduce using rule 229 (block_statements -> block_statements block_statement .)
    DELAY           reduce using rule 229 (block_statements -> block_statements block_statement .)
    AT              reduce using rule 229 (block_statements -> block_statements block_statement .)
    DOLLER          reduce using rule 229 (block_statements -> block_statements block_statement .)
    DISABLE         reduce using rule 229 (block_statements -> block_statements block_statement .)
    LBRACE          reduce using rule 229 (block_statements -> block_statements block_statement .)
    ID              reduce using rule 229 (block_statements -> block_statements block_statement .)
    SEMICOLON       reduce using rule 229 (block_statements -> block_statements block_statement .)
    JOIN            reduce using rule 229 (block_statements -> block_statements block_statement .)


state 403

    (242) parallelblock -> FORK block_statements JOIN .

    ENDMODULE       reduce using rule 242 (parallelblock -> FORK block_statements JOIN .)
    GENERATE        reduce using rule 242 (parallelblock -> FORK block_statements JOIN .)
    INTEGER         reduce using rule 242 (parallelblock -> FORK block_statements JOIN .)
    REAL            reduce using rule 242 (parallelblock -> FORK block_statements JOIN .)
    PARAMETER       reduce using rule 242 (parallelblock -> FORK block_statements JOIN .)
    LOCALPARAM      reduce using rule 242 (parallelblock -> FORK block_statements JOIN .)
    GENVAR          reduce using rule 242 (parallelblock -> FORK block_statements JOIN .)
    ASSIGN          reduce using rule 242 (parallelblock -> FORK block_statements JOIN .)
    ALWAYS          reduce using rule 242 (parallelblock -> FORK block_statements JOIN .)
    INITIAL         reduce using rule 242 (parallelblock -> FORK block_statements JOIN .)
    ID              reduce using rule 242 (parallelblock -> FORK block_statements JOIN .)
    FUNCTION        reduce using rule 242 (parallelblock -> FORK block_statements JOIN .)
    TASK            reduce using rule 242 (parallelblock -> FORK block_statements JOIN .)
    LPAREN          reduce using rule 242 (parallelblock -> FORK block_statements JOIN .)
    INPUT           reduce using rule 242 (parallelblock -> FORK block_statements JOIN .)
    OUTPUT          reduce using rule 242 (parallelblock -> FORK block_statements JOIN .)
    INOUT           reduce using rule 242 (parallelblock -> FORK block_statements JOIN .)
    TRI             reduce using rule 242 (parallelblock -> FORK block_statements JOIN .)
    REG             reduce using rule 242 (parallelblock -> FORK block_statements JOIN .)
    WIRE            reduce using rule 242 (parallelblock -> FORK block_statements JOIN .)
    SIGNED          reduce using rule 242 (parallelblock -> FORK block_statements JOIN .)
    ENDGENERATE     reduce using rule 242 (parallelblock -> FORK block_statements JOIN .)
    IF              reduce using rule 242 (parallelblock -> FORK block_statements JOIN .)
    FOR             reduce using rule 242 (parallelblock -> FORK block_statements JOIN .)
    ELSE            reduce using rule 242 (parallelblock -> FORK block_statements JOIN .)
    END             reduce using rule 242 (parallelblock -> FORK block_statements JOIN .)
    JOIN            reduce using rule 242 (parallelblock -> FORK block_statements JOIN .)
    CASE            reduce using rule 242 (parallelblock -> FORK block_statements JOIN .)
    WHILE           reduce using rule 242 (parallelblock -> FORK block_statements JOIN .)
    WAIT            reduce using rule 242 (parallelblock -> FORK block_statements JOIN .)
    FOREVER         reduce using rule 242 (parallelblock -> FORK block_statements JOIN .)
    BEGIN           reduce using rule 242 (parallelblock -> FORK block_statements JOIN .)
    FORK            reduce using rule 242 (parallelblock -> FORK block_statements JOIN .)
    DELAY           reduce using rule 242 (parallelblock -> FORK block_statements JOIN .)
    AT              reduce using rule 242 (parallelblock -> FORK block_statements JOIN .)
    DOLLER          reduce using rule 242 (parallelblock -> FORK block_statements JOIN .)
    DISABLE         reduce using rule 242 (parallelblock -> FORK block_statements JOIN .)
    LBRACE          reduce using rule 242 (parallelblock -> FORK block_statements JOIN .)
    SEMICOLON       reduce using rule 242 (parallelblock -> FORK block_statements JOIN .)
    ENDFUNCTION     reduce using rule 242 (parallelblock -> FORK block_statements JOIN .)
    ENDTASK         reduce using rule 242 (parallelblock -> FORK block_statements JOIN .)
    ENDCASE         reduce using rule 242 (parallelblock -> FORK block_statements JOIN .)
    DEFAULT         reduce using rule 242 (parallelblock -> FORK block_statements JOIN .)
    MINUS           reduce using rule 242 (parallelblock -> FORK block_statements JOIN .)
    PLUS            reduce using rule 242 (parallelblock -> FORK block_statements JOIN .)
    LNOT            reduce using rule 242 (parallelblock -> FORK block_statements JOIN .)
    NOT             reduce using rule 242 (parallelblock -> FORK block_statements JOIN .)
    AND             reduce using rule 242 (parallelblock -> FORK block_statements JOIN .)
    NAND            reduce using rule 242 (parallelblock -> FORK block_statements JOIN .)
    NOR             reduce using rule 242 (parallelblock -> FORK block_statements JOIN .)
    OR              reduce using rule 242 (parallelblock -> FORK block_statements JOIN .)
    XOR             reduce using rule 242 (parallelblock -> FORK block_statements JOIN .)
    XNOR            reduce using rule 242 (parallelblock -> FORK block_statements JOIN .)
    INTNUMBER_DEC   reduce using rule 242 (parallelblock -> FORK block_statements JOIN .)
    SIGNED_INTNUMBER_DEC reduce using rule 242 (parallelblock -> FORK block_statements JOIN .)
    INTNUMBER_BIN   reduce using rule 242 (parallelblock -> FORK block_statements JOIN .)
    SIGNED_INTNUMBER_BIN reduce using rule 242 (parallelblock -> FORK block_statements JOIN .)
    INTNUMBER_OCT   reduce using rule 242 (parallelblock -> FORK block_statements JOIN .)
    SIGNED_INTNUMBER_OCT reduce using rule 242 (parallelblock -> FORK block_statements JOIN .)
    INTNUMBER_HEX   reduce using rule 242 (parallelblock -> FORK block_statements JOIN .)
    SIGNED_INTNUMBER_HEX reduce using rule 242 (parallelblock -> FORK block_statements JOIN .)
    FLOATNUMBER     reduce using rule 242 (parallelblock -> FORK block_statements JOIN .)
    STRING_LITERAL  reduce using rule 242 (parallelblock -> FORK block_statements JOIN .)


state 404

    (246) if_statement -> delays IF LPAREN . cond RPAREN true_statement ELSE else_statement
    (247) if_statement -> delays IF LPAREN . cond RPAREN true_statement
    (248) cond -> . expression
    (116) expression -> . MINUS expression
    (117) expression -> . PLUS expression
    (118) expression -> . LNOT expression
    (119) expression -> . NOT expression
    (120) expression -> . AND expression
    (121) expression -> . NAND expression
    (122) expression -> . NOR expression
    (123) expression -> . OR expression
    (124) expression -> . XOR expression
    (125) expression -> . XNOR expression
    (126) expression -> . expression POWER expression
    (127) expression -> . expression TIMES expression
    (128) expression -> . expression DIVIDE expression
    (129) expression -> . expression MOD expression
    (130) expression -> . expression PLUS expression
    (131) expression -> . expression MINUS expression
    (132) expression -> . expression LSHIFT expression
    (133) expression -> . expression RSHIFT expression
    (134) expression -> . expression LSHIFTA expression
    (135) expression -> . expression RSHIFTA expression
    (136) expression -> . expression LT expression
    (137) expression -> . expression GT expression
    (138) expression -> . expression LE expression
    (139) expression -> . expression GE expression
    (140) expression -> . expression EQ expression
    (141) expression -> . expression NE expression
    (142) expression -> . expression EQL expression
    (143) expression -> . expression NEL expression
    (144) expression -> . expression AND expression
    (145) expression -> . expression XOR expression
    (146) expression -> . expression XNOR expression
    (147) expression -> . expression OR expression
    (148) expression -> . expression LAND expression
    (149) expression -> . expression LOR expression
    (150) expression -> . expression COND expression COLON expression
    (151) expression -> . LPAREN expression RPAREN
    (152) expression -> . concat
    (153) expression -> . repeat
    (154) expression -> . partselect
    (155) expression -> . pointer
    (156) expression -> . functioncall
    (157) expression -> . systemcall
    (158) expression -> . identifier
    (159) expression -> . const_expression
    (160) concat -> . LBRACE concatlist RBRACE
    (163) repeat -> . LBRACE expression concat RBRACE
    (164) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (165) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (166) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (167) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (168) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (169) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (170) pointer -> . identifier LBRACKET expression RBRACKET
    (171) pointer -> . pointer LBRACKET expression RBRACKET
    (339) functioncall -> . identifier LPAREN func_args RPAREN
    (319) systemcall -> . DOLLER ID
    (320) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (357) identifier -> . ID
    (358) identifier -> . scope ID
    (172) const_expression -> . intnumber
    (173) const_expression -> . floatnumber
    (174) const_expression -> . stringliteral
    (359) scope -> . identifier DOT
    (360) scope -> . pointer DOT
    (176) intnumber -> . INTNUMBER_DEC
    (177) intnumber -> . SIGNED_INTNUMBER_DEC
    (178) intnumber -> . INTNUMBER_BIN
    (179) intnumber -> . SIGNED_INTNUMBER_BIN
    (180) intnumber -> . INTNUMBER_OCT
    (181) intnumber -> . SIGNED_INTNUMBER_OCT
    (182) intnumber -> . INTNUMBER_HEX
    (183) intnumber -> . SIGNED_INTNUMBER_HEX
    (175) floatnumber -> . FLOATNUMBER
    (184) stringliteral -> . STRING_LITERAL

    MINUS           shift and go to state 97
    PLUS            shift and go to state 89
    LNOT            shift and go to state 95
    NOT             shift and go to state 78
    AND             shift and go to state 91
    NAND            shift and go to state 98
    NOR             shift and go to state 76
    OR              shift and go to state 105
    XOR             shift and go to state 82
    XNOR            shift and go to state 87
    LPAREN          shift and go to state 96
    LBRACE          shift and go to state 77
    DOLLER          shift and go to state 100
    ID              shift and go to state 85
    INTNUMBER_DEC   shift and go to state 79
    SIGNED_INTNUMBER_DEC shift and go to state 101
    INTNUMBER_BIN   shift and go to state 111
    SIGNED_INTNUMBER_BIN shift and go to state 112
    INTNUMBER_OCT   shift and go to state 86
    SIGNED_INTNUMBER_OCT shift and go to state 106
    INTNUMBER_HEX   shift and go to state 93
    SIGNED_INTNUMBER_HEX shift and go to state 83
    FLOATNUMBER     shift and go to state 102
    STRING_LITERAL  shift and go to state 107

    floatnumber                    shift and go to state 90
    stringliteral                  shift and go to state 99
    intnumber                      shift and go to state 81
    expression                     shift and go to state 398
    repeat                         shift and go to state 108
    cond                           shift and go to state 504
    identifier                     shift and go to state 104
    partselect                     shift and go to state 103
    pointer                        shift and go to state 80
    functioncall                   shift and go to state 94
    scope                          shift and go to state 84
    systemcall                     shift and go to state 109
    const_expression               shift and go to state 110
    concat                         shift and go to state 88

state 405

    (221) nonblocking_substitution -> delays lvalue LE . delays rvalue SEMICOLON
    (222) delays -> . DELAY LPAREN expression RPAREN
    (223) delays -> . DELAY identifier
    (224) delays -> . DELAY intnumber
    (225) delays -> . DELAY floatnumber
    (226) delays -> . empty
    (365) empty -> .

    DELAY           shift and go to state 170
    MINUS           reduce using rule 365 (empty -> .)
    PLUS            reduce using rule 365 (empty -> .)
    LNOT            reduce using rule 365 (empty -> .)
    NOT             reduce using rule 365 (empty -> .)
    AND             reduce using rule 365 (empty -> .)
    NAND            reduce using rule 365 (empty -> .)
    NOR             reduce using rule 365 (empty -> .)
    OR              reduce using rule 365 (empty -> .)
    XOR             reduce using rule 365 (empty -> .)
    XNOR            reduce using rule 365 (empty -> .)
    LPAREN          reduce using rule 365 (empty -> .)
    LBRACE          reduce using rule 365 (empty -> .)
    DOLLER          reduce using rule 365 (empty -> .)
    ID              reduce using rule 365 (empty -> .)
    INTNUMBER_DEC   reduce using rule 365 (empty -> .)
    SIGNED_INTNUMBER_DEC reduce using rule 365 (empty -> .)
    INTNUMBER_BIN   reduce using rule 365 (empty -> .)
    SIGNED_INTNUMBER_BIN reduce using rule 365 (empty -> .)
    INTNUMBER_OCT   reduce using rule 365 (empty -> .)
    SIGNED_INTNUMBER_OCT reduce using rule 365 (empty -> .)
    INTNUMBER_HEX   reduce using rule 365 (empty -> .)
    SIGNED_INTNUMBER_HEX reduce using rule 365 (empty -> .)
    FLOATNUMBER     reduce using rule 365 (empty -> .)
    STRING_LITERAL  reduce using rule 365 (empty -> .)

    delays                         shift and go to state 505
    empty                          shift and go to state 163

state 406

    (219) blocking_substitution -> delays lvalue EQUALS . delays rvalue SEMICOLON
    (222) delays -> . DELAY LPAREN expression RPAREN
    (223) delays -> . DELAY identifier
    (224) delays -> . DELAY intnumber
    (225) delays -> . DELAY floatnumber
    (226) delays -> . empty
    (365) empty -> .

    DELAY           shift and go to state 170
    MINUS           reduce using rule 365 (empty -> .)
    PLUS            reduce using rule 365 (empty -> .)
    LNOT            reduce using rule 365 (empty -> .)
    NOT             reduce using rule 365 (empty -> .)
    AND             reduce using rule 365 (empty -> .)
    NAND            reduce using rule 365 (empty -> .)
    NOR             reduce using rule 365 (empty -> .)
    OR              reduce using rule 365 (empty -> .)
    XOR             reduce using rule 365 (empty -> .)
    XNOR            reduce using rule 365 (empty -> .)
    LPAREN          reduce using rule 365 (empty -> .)
    LBRACE          reduce using rule 365 (empty -> .)
    DOLLER          reduce using rule 365 (empty -> .)
    ID              reduce using rule 365 (empty -> .)
    INTNUMBER_DEC   reduce using rule 365 (empty -> .)
    SIGNED_INTNUMBER_DEC reduce using rule 365 (empty -> .)
    INTNUMBER_BIN   reduce using rule 365 (empty -> .)
    SIGNED_INTNUMBER_BIN reduce using rule 365 (empty -> .)
    INTNUMBER_OCT   reduce using rule 365 (empty -> .)
    SIGNED_INTNUMBER_OCT reduce using rule 365 (empty -> .)
    INTNUMBER_HEX   reduce using rule 365 (empty -> .)
    SIGNED_INTNUMBER_HEX reduce using rule 365 (empty -> .)
    FLOATNUMBER     reduce using rule 365 (empty -> .)
    STRING_LITERAL  reduce using rule 365 (empty -> .)

    delays                         shift and go to state 506
    empty                          shift and go to state 163

state 407

    (253) forpre -> blocking_substitution .

    SEMICOLON       reduce using rule 253 (forpre -> blocking_substitution .)
    MINUS           reduce using rule 253 (forpre -> blocking_substitution .)
    PLUS            reduce using rule 253 (forpre -> blocking_substitution .)
    LNOT            reduce using rule 253 (forpre -> blocking_substitution .)
    NOT             reduce using rule 253 (forpre -> blocking_substitution .)
    AND             reduce using rule 253 (forpre -> blocking_substitution .)
    NAND            reduce using rule 253 (forpre -> blocking_substitution .)
    NOR             reduce using rule 253 (forpre -> blocking_substitution .)
    OR              reduce using rule 253 (forpre -> blocking_substitution .)
    XOR             reduce using rule 253 (forpre -> blocking_substitution .)
    XNOR            reduce using rule 253 (forpre -> blocking_substitution .)
    LPAREN          reduce using rule 253 (forpre -> blocking_substitution .)
    LBRACE          reduce using rule 253 (forpre -> blocking_substitution .)
    DOLLER          reduce using rule 253 (forpre -> blocking_substitution .)
    ID              reduce using rule 253 (forpre -> blocking_substitution .)
    INTNUMBER_DEC   reduce using rule 253 (forpre -> blocking_substitution .)
    SIGNED_INTNUMBER_DEC reduce using rule 253 (forpre -> blocking_substitution .)
    INTNUMBER_BIN   reduce using rule 253 (forpre -> blocking_substitution .)
    SIGNED_INTNUMBER_BIN reduce using rule 253 (forpre -> blocking_substitution .)
    INTNUMBER_OCT   reduce using rule 253 (forpre -> blocking_substitution .)
    SIGNED_INTNUMBER_OCT reduce using rule 253 (forpre -> blocking_substitution .)
    INTNUMBER_HEX   reduce using rule 253 (forpre -> blocking_substitution .)
    SIGNED_INTNUMBER_HEX reduce using rule 253 (forpre -> blocking_substitution .)
    FLOATNUMBER     reduce using rule 253 (forpre -> blocking_substitution .)
    STRING_LITERAL  reduce using rule 253 (forpre -> blocking_substitution .)


state 408

    (254) forpre -> SEMICOLON .

    SEMICOLON       reduce using rule 254 (forpre -> SEMICOLON .)
    MINUS           reduce using rule 254 (forpre -> SEMICOLON .)
    PLUS            reduce using rule 254 (forpre -> SEMICOLON .)
    LNOT            reduce using rule 254 (forpre -> SEMICOLON .)
    NOT             reduce using rule 254 (forpre -> SEMICOLON .)
    AND             reduce using rule 254 (forpre -> SEMICOLON .)
    NAND            reduce using rule 254 (forpre -> SEMICOLON .)
    NOR             reduce using rule 254 (forpre -> SEMICOLON .)
    OR              reduce using rule 254 (forpre -> SEMICOLON .)
    XOR             reduce using rule 254 (forpre -> SEMICOLON .)
    XNOR            reduce using rule 254 (forpre -> SEMICOLON .)
    LPAREN          reduce using rule 254 (forpre -> SEMICOLON .)
    LBRACE          reduce using rule 254 (forpre -> SEMICOLON .)
    DOLLER          reduce using rule 254 (forpre -> SEMICOLON .)
    ID              reduce using rule 254 (forpre -> SEMICOLON .)
    INTNUMBER_DEC   reduce using rule 254 (forpre -> SEMICOLON .)
    SIGNED_INTNUMBER_DEC reduce using rule 254 (forpre -> SEMICOLON .)
    INTNUMBER_BIN   reduce using rule 254 (forpre -> SEMICOLON .)
    SIGNED_INTNUMBER_BIN reduce using rule 254 (forpre -> SEMICOLON .)
    INTNUMBER_OCT   reduce using rule 254 (forpre -> SEMICOLON .)
    SIGNED_INTNUMBER_OCT reduce using rule 254 (forpre -> SEMICOLON .)
    INTNUMBER_HEX   reduce using rule 254 (forpre -> SEMICOLON .)
    SIGNED_INTNUMBER_HEX reduce using rule 254 (forpre -> SEMICOLON .)
    FLOATNUMBER     reduce using rule 254 (forpre -> SEMICOLON .)
    STRING_LITERAL  reduce using rule 254 (forpre -> SEMICOLON .)


state 409

    (252) for_statement -> FOR LPAREN forpre . forcond forpost RPAREN forcontent_statement
    (255) forcond -> . cond SEMICOLON
    (256) forcond -> . SEMICOLON
    (248) cond -> . expression
    (116) expression -> . MINUS expression
    (117) expression -> . PLUS expression
    (118) expression -> . LNOT expression
    (119) expression -> . NOT expression
    (120) expression -> . AND expression
    (121) expression -> . NAND expression
    (122) expression -> . NOR expression
    (123) expression -> . OR expression
    (124) expression -> . XOR expression
    (125) expression -> . XNOR expression
    (126) expression -> . expression POWER expression
    (127) expression -> . expression TIMES expression
    (128) expression -> . expression DIVIDE expression
    (129) expression -> . expression MOD expression
    (130) expression -> . expression PLUS expression
    (131) expression -> . expression MINUS expression
    (132) expression -> . expression LSHIFT expression
    (133) expression -> . expression RSHIFT expression
    (134) expression -> . expression LSHIFTA expression
    (135) expression -> . expression RSHIFTA expression
    (136) expression -> . expression LT expression
    (137) expression -> . expression GT expression
    (138) expression -> . expression LE expression
    (139) expression -> . expression GE expression
    (140) expression -> . expression EQ expression
    (141) expression -> . expression NE expression
    (142) expression -> . expression EQL expression
    (143) expression -> . expression NEL expression
    (144) expression -> . expression AND expression
    (145) expression -> . expression XOR expression
    (146) expression -> . expression XNOR expression
    (147) expression -> . expression OR expression
    (148) expression -> . expression LAND expression
    (149) expression -> . expression LOR expression
    (150) expression -> . expression COND expression COLON expression
    (151) expression -> . LPAREN expression RPAREN
    (152) expression -> . concat
    (153) expression -> . repeat
    (154) expression -> . partselect
    (155) expression -> . pointer
    (156) expression -> . functioncall
    (157) expression -> . systemcall
    (158) expression -> . identifier
    (159) expression -> . const_expression
    (160) concat -> . LBRACE concatlist RBRACE
    (163) repeat -> . LBRACE expression concat RBRACE
    (164) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (165) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (166) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (167) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (168) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (169) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (170) pointer -> . identifier LBRACKET expression RBRACKET
    (171) pointer -> . pointer LBRACKET expression RBRACKET
    (339) functioncall -> . identifier LPAREN func_args RPAREN
    (319) systemcall -> . DOLLER ID
    (320) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (357) identifier -> . ID
    (358) identifier -> . scope ID
    (172) const_expression -> . intnumber
    (173) const_expression -> . floatnumber
    (174) const_expression -> . stringliteral
    (359) scope -> . identifier DOT
    (360) scope -> . pointer DOT
    (176) intnumber -> . INTNUMBER_DEC
    (177) intnumber -> . SIGNED_INTNUMBER_DEC
    (178) intnumber -> . INTNUMBER_BIN
    (179) intnumber -> . SIGNED_INTNUMBER_BIN
    (180) intnumber -> . INTNUMBER_OCT
    (181) intnumber -> . SIGNED_INTNUMBER_OCT
    (182) intnumber -> . INTNUMBER_HEX
    (183) intnumber -> . SIGNED_INTNUMBER_HEX
    (175) floatnumber -> . FLOATNUMBER
    (184) stringliteral -> . STRING_LITERAL

    SEMICOLON       shift and go to state 508
    MINUS           shift and go to state 97
    PLUS            shift and go to state 89
    LNOT            shift and go to state 95
    NOT             shift and go to state 78
    AND             shift and go to state 91
    NAND            shift and go to state 98
    NOR             shift and go to state 76
    OR              shift and go to state 105
    XOR             shift and go to state 82
    XNOR            shift and go to state 87
    LPAREN          shift and go to state 96
    LBRACE          shift and go to state 77
    DOLLER          shift and go to state 100
    ID              shift and go to state 85
    INTNUMBER_DEC   shift and go to state 79
    SIGNED_INTNUMBER_DEC shift and go to state 101
    INTNUMBER_BIN   shift and go to state 111
    SIGNED_INTNUMBER_BIN shift and go to state 112
    INTNUMBER_OCT   shift and go to state 86
    SIGNED_INTNUMBER_OCT shift and go to state 106
    INTNUMBER_HEX   shift and go to state 93
    SIGNED_INTNUMBER_HEX shift and go to state 83
    FLOATNUMBER     shift and go to state 102
    STRING_LITERAL  shift and go to state 107

    stringliteral                  shift and go to state 99
    functioncall                   shift and go to state 94
    intnumber                      shift and go to state 81
    expression                     shift and go to state 398
    repeat                         shift and go to state 108
    partselect                     shift and go to state 103
    forcond                        shift and go to state 507
    cond                           shift and go to state 509
    pointer                        shift and go to state 80
    scope                          shift and go to state 84
    systemcall                     shift and go to state 109
    identifier                     shift and go to state 104
    const_expression               shift and go to state 110
    concat                         shift and go to state 88
    floatnumber                    shift and go to state 90

state 410

    (219) blocking_substitution -> delays . lvalue EQUALS delays rvalue SEMICOLON
    (111) lvalue -> . lpartselect
    (112) lvalue -> . lpointer
    (113) lvalue -> . lconcat
    (114) lvalue -> . identifier
    (97) lpartselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (98) lpartselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (99) lpartselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (100) lpartselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (101) lpartselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (102) lpartselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (103) lpointer -> . pointer
    (104) lconcat -> . LBRACE lconcatlist RBRACE
    (357) identifier -> . ID
    (358) identifier -> . scope ID
    (170) pointer -> . identifier LBRACKET expression RBRACKET
    (171) pointer -> . pointer LBRACKET expression RBRACKET
    (359) scope -> . identifier DOT
    (360) scope -> . pointer DOT

    LBRACE          shift and go to state 162
    ID              shift and go to state 85

    pointer                        shift and go to state 169
    scope                          shift and go to state 84
    lpointer                       shift and go to state 165
    lpartselect                    shift and go to state 166
    lvalue                         shift and go to state 510
    identifier                     shift and go to state 168
    lconcat                        shift and go to state 164

state 411

    (260) while_statement -> WHILE LPAREN cond . RPAREN whilecontent_statement

    RPAREN          shift and go to state 511


state 412

    (362) single_statement -> DELAY expression SEMICOLON .

    JOIN            reduce using rule 362 (single_statement -> DELAY expression SEMICOLON .)
    IF              reduce using rule 362 (single_statement -> DELAY expression SEMICOLON .)
    CASE            reduce using rule 362 (single_statement -> DELAY expression SEMICOLON .)
    FOR             reduce using rule 362 (single_statement -> DELAY expression SEMICOLON .)
    WHILE           reduce using rule 362 (single_statement -> DELAY expression SEMICOLON .)
    WAIT            reduce using rule 362 (single_statement -> DELAY expression SEMICOLON .)
    FOREVER         reduce using rule 362 (single_statement -> DELAY expression SEMICOLON .)
    BEGIN           reduce using rule 362 (single_statement -> DELAY expression SEMICOLON .)
    FORK            reduce using rule 362 (single_statement -> DELAY expression SEMICOLON .)
    DELAY           reduce using rule 362 (single_statement -> DELAY expression SEMICOLON .)
    AT              reduce using rule 362 (single_statement -> DELAY expression SEMICOLON .)
    DOLLER          reduce using rule 362 (single_statement -> DELAY expression SEMICOLON .)
    DISABLE         reduce using rule 362 (single_statement -> DELAY expression SEMICOLON .)
    LBRACE          reduce using rule 362 (single_statement -> DELAY expression SEMICOLON .)
    ID              reduce using rule 362 (single_statement -> DELAY expression SEMICOLON .)
    SEMICOLON       reduce using rule 362 (single_statement -> DELAY expression SEMICOLON .)
    ENDMODULE       reduce using rule 362 (single_statement -> DELAY expression SEMICOLON .)
    GENERATE        reduce using rule 362 (single_statement -> DELAY expression SEMICOLON .)
    INTEGER         reduce using rule 362 (single_statement -> DELAY expression SEMICOLON .)
    REAL            reduce using rule 362 (single_statement -> DELAY expression SEMICOLON .)
    PARAMETER       reduce using rule 362 (single_statement -> DELAY expression SEMICOLON .)
    LOCALPARAM      reduce using rule 362 (single_statement -> DELAY expression SEMICOLON .)
    GENVAR          reduce using rule 362 (single_statement -> DELAY expression SEMICOLON .)
    ASSIGN          reduce using rule 362 (single_statement -> DELAY expression SEMICOLON .)
    ALWAYS          reduce using rule 362 (single_statement -> DELAY expression SEMICOLON .)
    INITIAL         reduce using rule 362 (single_statement -> DELAY expression SEMICOLON .)
    FUNCTION        reduce using rule 362 (single_statement -> DELAY expression SEMICOLON .)
    TASK            reduce using rule 362 (single_statement -> DELAY expression SEMICOLON .)
    LPAREN          reduce using rule 362 (single_statement -> DELAY expression SEMICOLON .)
    INPUT           reduce using rule 362 (single_statement -> DELAY expression SEMICOLON .)
    OUTPUT          reduce using rule 362 (single_statement -> DELAY expression SEMICOLON .)
    INOUT           reduce using rule 362 (single_statement -> DELAY expression SEMICOLON .)
    TRI             reduce using rule 362 (single_statement -> DELAY expression SEMICOLON .)
    REG             reduce using rule 362 (single_statement -> DELAY expression SEMICOLON .)
    WIRE            reduce using rule 362 (single_statement -> DELAY expression SEMICOLON .)
    SIGNED          reduce using rule 362 (single_statement -> DELAY expression SEMICOLON .)
    ENDGENERATE     reduce using rule 362 (single_statement -> DELAY expression SEMICOLON .)
    ELSE            reduce using rule 362 (single_statement -> DELAY expression SEMICOLON .)
    END             reduce using rule 362 (single_statement -> DELAY expression SEMICOLON .)
    ENDCASE         reduce using rule 362 (single_statement -> DELAY expression SEMICOLON .)
    DEFAULT         reduce using rule 362 (single_statement -> DELAY expression SEMICOLON .)
    MINUS           reduce using rule 362 (single_statement -> DELAY expression SEMICOLON .)
    PLUS            reduce using rule 362 (single_statement -> DELAY expression SEMICOLON .)
    LNOT            reduce using rule 362 (single_statement -> DELAY expression SEMICOLON .)
    NOT             reduce using rule 362 (single_statement -> DELAY expression SEMICOLON .)
    AND             reduce using rule 362 (single_statement -> DELAY expression SEMICOLON .)
    NAND            reduce using rule 362 (single_statement -> DELAY expression SEMICOLON .)
    NOR             reduce using rule 362 (single_statement -> DELAY expression SEMICOLON .)
    OR              reduce using rule 362 (single_statement -> DELAY expression SEMICOLON .)
    XOR             reduce using rule 362 (single_statement -> DELAY expression SEMICOLON .)
    XNOR            reduce using rule 362 (single_statement -> DELAY expression SEMICOLON .)
    INTNUMBER_DEC   reduce using rule 362 (single_statement -> DELAY expression SEMICOLON .)
    SIGNED_INTNUMBER_DEC reduce using rule 362 (single_statement -> DELAY expression SEMICOLON .)
    INTNUMBER_BIN   reduce using rule 362 (single_statement -> DELAY expression SEMICOLON .)
    SIGNED_INTNUMBER_BIN reduce using rule 362 (single_statement -> DELAY expression SEMICOLON .)
    INTNUMBER_OCT   reduce using rule 362 (single_statement -> DELAY expression SEMICOLON .)
    SIGNED_INTNUMBER_OCT reduce using rule 362 (single_statement -> DELAY expression SEMICOLON .)
    INTNUMBER_HEX   reduce using rule 362 (single_statement -> DELAY expression SEMICOLON .)
    SIGNED_INTNUMBER_HEX reduce using rule 362 (single_statement -> DELAY expression SEMICOLON .)
    FLOATNUMBER     reduce using rule 362 (single_statement -> DELAY expression SEMICOLON .)
    STRING_LITERAL  reduce using rule 362 (single_statement -> DELAY expression SEMICOLON .)
    ENDFUNCTION     reduce using rule 362 (single_statement -> DELAY expression SEMICOLON .)
    ENDTASK         reduce using rule 362 (single_statement -> DELAY expression SEMICOLON .)


state 413

    (222) delays -> DELAY LPAREN expression . RPAREN
    (151) expression -> LPAREN expression . RPAREN
    (126) expression -> expression . POWER expression
    (127) expression -> expression . TIMES expression
    (128) expression -> expression . DIVIDE expression
    (129) expression -> expression . MOD expression
    (130) expression -> expression . PLUS expression
    (131) expression -> expression . MINUS expression
    (132) expression -> expression . LSHIFT expression
    (133) expression -> expression . RSHIFT expression
    (134) expression -> expression . LSHIFTA expression
    (135) expression -> expression . RSHIFTA expression
    (136) expression -> expression . LT expression
    (137) expression -> expression . GT expression
    (138) expression -> expression . LE expression
    (139) expression -> expression . GE expression
    (140) expression -> expression . EQ expression
    (141) expression -> expression . NE expression
    (142) expression -> expression . EQL expression
    (143) expression -> expression . NEL expression
    (144) expression -> expression . AND expression
    (145) expression -> expression . XOR expression
    (146) expression -> expression . XNOR expression
    (147) expression -> expression . OR expression
    (148) expression -> expression . LAND expression
    (149) expression -> expression . LOR expression
    (150) expression -> expression . COND expression COLON expression

    RPAREN          shift and go to state 512
    POWER           shift and go to state 246
    TIMES           shift and go to state 349
    DIVIDE          shift and go to state 244
    MOD             shift and go to state 231
    PLUS            shift and go to state 240
    MINUS           shift and go to state 229
    LSHIFT          shift and go to state 243
    RSHIFT          shift and go to state 226
    LSHIFTA         shift and go to state 241
    RSHIFTA         shift and go to state 238
    LT              shift and go to state 235
    GT              shift and go to state 228
    LE              shift and go to state 222
    GE              shift and go to state 239
    EQ              shift and go to state 223
    NE              shift and go to state 225
    EQL             shift and go to state 245
    NEL             shift and go to state 242
    AND             shift and go to state 224
    XOR             shift and go to state 237
    XNOR            shift and go to state 232
    OR              shift and go to state 234
    LAND            shift and go to state 227
    LOR             shift and go to state 230
    COND            shift and go to state 233


state 414

    (244) if_statement -> IF LPAREN cond . RPAREN true_statement ELSE else_statement
    (245) if_statement -> IF LPAREN cond . RPAREN true_statement

    RPAREN          shift and go to state 513


state 415

    (227) block -> BEGIN block_statements END .

    ENDMODULE       reduce using rule 227 (block -> BEGIN block_statements END .)
    GENERATE        reduce using rule 227 (block -> BEGIN block_statements END .)
    INTEGER         reduce using rule 227 (block -> BEGIN block_statements END .)
    REAL            reduce using rule 227 (block -> BEGIN block_statements END .)
    PARAMETER       reduce using rule 227 (block -> BEGIN block_statements END .)
    LOCALPARAM      reduce using rule 227 (block -> BEGIN block_statements END .)
    GENVAR          reduce using rule 227 (block -> BEGIN block_statements END .)
    ASSIGN          reduce using rule 227 (block -> BEGIN block_statements END .)
    ALWAYS          reduce using rule 227 (block -> BEGIN block_statements END .)
    INITIAL         reduce using rule 227 (block -> BEGIN block_statements END .)
    ID              reduce using rule 227 (block -> BEGIN block_statements END .)
    FUNCTION        reduce using rule 227 (block -> BEGIN block_statements END .)
    TASK            reduce using rule 227 (block -> BEGIN block_statements END .)
    LPAREN          reduce using rule 227 (block -> BEGIN block_statements END .)
    INPUT           reduce using rule 227 (block -> BEGIN block_statements END .)
    OUTPUT          reduce using rule 227 (block -> BEGIN block_statements END .)
    INOUT           reduce using rule 227 (block -> BEGIN block_statements END .)
    TRI             reduce using rule 227 (block -> BEGIN block_statements END .)
    REG             reduce using rule 227 (block -> BEGIN block_statements END .)
    WIRE            reduce using rule 227 (block -> BEGIN block_statements END .)
    SIGNED          reduce using rule 227 (block -> BEGIN block_statements END .)
    ENDGENERATE     reduce using rule 227 (block -> BEGIN block_statements END .)
    IF              reduce using rule 227 (block -> BEGIN block_statements END .)
    FOR             reduce using rule 227 (block -> BEGIN block_statements END .)
    ELSE            reduce using rule 227 (block -> BEGIN block_statements END .)
    END             reduce using rule 227 (block -> BEGIN block_statements END .)
    JOIN            reduce using rule 227 (block -> BEGIN block_statements END .)
    CASE            reduce using rule 227 (block -> BEGIN block_statements END .)
    WHILE           reduce using rule 227 (block -> BEGIN block_statements END .)
    WAIT            reduce using rule 227 (block -> BEGIN block_statements END .)
    FOREVER         reduce using rule 227 (block -> BEGIN block_statements END .)
    BEGIN           reduce using rule 227 (block -> BEGIN block_statements END .)
    FORK            reduce using rule 227 (block -> BEGIN block_statements END .)
    DELAY           reduce using rule 227 (block -> BEGIN block_statements END .)
    AT              reduce using rule 227 (block -> BEGIN block_statements END .)
    DOLLER          reduce using rule 227 (block -> BEGIN block_statements END .)
    DISABLE         reduce using rule 227 (block -> BEGIN block_statements END .)
    LBRACE          reduce using rule 227 (block -> BEGIN block_statements END .)
    SEMICOLON       reduce using rule 227 (block -> BEGIN block_statements END .)
    ENDFUNCTION     reduce using rule 227 (block -> BEGIN block_statements END .)
    ENDTASK         reduce using rule 227 (block -> BEGIN block_statements END .)
    ENDCASE         reduce using rule 227 (block -> BEGIN block_statements END .)
    DEFAULT         reduce using rule 227 (block -> BEGIN block_statements END .)
    MINUS           reduce using rule 227 (block -> BEGIN block_statements END .)
    PLUS            reduce using rule 227 (block -> BEGIN block_statements END .)
    LNOT            reduce using rule 227 (block -> BEGIN block_statements END .)
    NOT             reduce using rule 227 (block -> BEGIN block_statements END .)
    AND             reduce using rule 227 (block -> BEGIN block_statements END .)
    NAND            reduce using rule 227 (block -> BEGIN block_statements END .)
    NOR             reduce using rule 227 (block -> BEGIN block_statements END .)
    OR              reduce using rule 227 (block -> BEGIN block_statements END .)
    XOR             reduce using rule 227 (block -> BEGIN block_statements END .)
    XNOR            reduce using rule 227 (block -> BEGIN block_statements END .)
    INTNUMBER_DEC   reduce using rule 227 (block -> BEGIN block_statements END .)
    SIGNED_INTNUMBER_DEC reduce using rule 227 (block -> BEGIN block_statements END .)
    INTNUMBER_BIN   reduce using rule 227 (block -> BEGIN block_statements END .)
    SIGNED_INTNUMBER_BIN reduce using rule 227 (block -> BEGIN block_statements END .)
    INTNUMBER_OCT   reduce using rule 227 (block -> BEGIN block_statements END .)
    SIGNED_INTNUMBER_OCT reduce using rule 227 (block -> BEGIN block_statements END .)
    INTNUMBER_HEX   reduce using rule 227 (block -> BEGIN block_statements END .)
    SIGNED_INTNUMBER_HEX reduce using rule 227 (block -> BEGIN block_statements END .)
    FLOATNUMBER     reduce using rule 227 (block -> BEGIN block_statements END .)
    STRING_LITERAL  reduce using rule 227 (block -> BEGIN block_statements END .)


state 416

    (232) namedblock -> BEGIN COLON ID . namedblock_statements END
    (233) namedblock -> BEGIN COLON ID . END
    (234) namedblock_statements -> . namedblock_statements namedblock_statement
    (235) namedblock_statements -> . namedblock_statement
    (236) namedblock_statement -> . basic_statement
    (237) namedblock_statement -> . decl
    (238) namedblock_statement -> . integerdecl
    (239) namedblock_statement -> . realdecl
    (240) namedblock_statement -> . parameterdecl
    (241) namedblock_statement -> . localparamdecl
    (205) basic_statement -> . if_statement
    (206) basic_statement -> . case_statement
    (207) basic_statement -> . for_statement
    (208) basic_statement -> . while_statement
    (209) basic_statement -> . event_statement
    (210) basic_statement -> . wait_statement
    (211) basic_statement -> . forever_statement
    (212) basic_statement -> . block
    (213) basic_statement -> . namedblock
    (214) basic_statement -> . parallelblock
    (215) basic_statement -> . blocking_substitution
    (216) basic_statement -> . nonblocking_substitution
    (217) basic_statement -> . single_statement
    (67) decl -> . sigtypes declnamelist SEMICOLON
    (68) decl -> . sigtypes width declnamelist SEMICOLON
    (77) integerdecl -> . INTEGER integernamelist SEMICOLON
    (78) integerdecl -> . INTEGER SIGNED integernamelist SEMICOLON
    (82) realdecl -> . REAL realnamelist SEMICOLON
    (86) parameterdecl -> . PARAMETER param_substitution_list SEMICOLON
    (87) parameterdecl -> . PARAMETER width param_substitution_list SEMICOLON
    (88) parameterdecl -> . PARAMETER INTEGER param_substitution_list SEMICOLON
    (89) localparamdecl -> . LOCALPARAM param_substitution_list SEMICOLON
    (90) localparamdecl -> . LOCALPARAM width param_substitution_list SEMICOLON
    (91) localparamdecl -> . LOCALPARAM INTEGER param_substitution_list SEMICOLON
    (244) if_statement -> . IF LPAREN cond RPAREN true_statement ELSE else_statement
    (245) if_statement -> . IF LPAREN cond RPAREN true_statement
    (246) if_statement -> . delays IF LPAREN cond RPAREN true_statement ELSE else_statement
    (247) if_statement -> . delays IF LPAREN cond RPAREN true_statement
    (262) case_statement -> . CASE LPAREN case_comp RPAREN casecontent_statements ENDCASE
    (252) for_statement -> . FOR LPAREN forpre forcond forpost RPAREN forcontent_statement
    (260) while_statement -> . WHILE LPAREN cond RPAREN whilecontent_statement
    (272) event_statement -> . senslist SEMICOLON
    (273) wait_statement -> . WAIT LPAREN cond RPAREN waitcontent_statement
    (276) forever_statement -> . FOREVER basic_statement
    (227) block -> . BEGIN block_statements END
    (228) block -> . BEGIN END
    (232) namedblock -> . BEGIN COLON ID namedblock_statements END
    (233) namedblock -> . BEGIN COLON ID END
    (242) parallelblock -> . FORK block_statements JOIN
    (243) parallelblock -> . FORK JOIN
    (219) blocking_substitution -> . delays lvalue EQUALS delays rvalue SEMICOLON
    (221) nonblocking_substitution -> . delays lvalue LE delays rvalue SEMICOLON
    (362) single_statement -> . DELAY expression SEMICOLON
    (363) single_statement -> . systemcall SEMICOLON
    (364) single_statement -> . disable SEMICOLON
    (30) sigtypes -> . sigtypes sigtype
    (31) sigtypes -> . sigtype
    (222) delays -> . DELAY LPAREN expression RPAREN
    (223) delays -> . DELAY identifier
    (224) delays -> . DELAY intnumber
    (225) delays -> . DELAY floatnumber
    (226) delays -> . empty
    (186) senslist -> . AT LPAREN edgesigs RPAREN
    (193) senslist -> . empty
    (194) senslist -> . AT levelsig
    (195) senslist -> . AT LPAREN levelsigs RPAREN
    (203) senslist -> . AT TIMES
    (204) senslist -> . AT LPAREN TIMES RPAREN
    (319) systemcall -> . DOLLER ID
    (320) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (361) disable -> . DISABLE ID
    (32) sigtype -> . INPUT
    (33) sigtype -> . OUTPUT
    (34) sigtype -> . INOUT
    (35) sigtype -> . TRI
    (36) sigtype -> . REG
    (37) sigtype -> . WIRE
    (38) sigtype -> . SIGNED
    (365) empty -> .

  ! shift/reduce conflict for IF resolved as shift
    END             shift and go to state 521
    INTEGER         shift and go to state 69
    REAL            shift and go to state 49
    PARAMETER       shift and go to state 66
    LOCALPARAM      shift and go to state 52
    IF              shift and go to state 150
    CASE            shift and go to state 136
    FOR             shift and go to state 144
    WHILE           shift and go to state 146
    WAIT            shift and go to state 131
    FOREVER         shift and go to state 143
    BEGIN           shift and go to state 153
    FORK            shift and go to state 138
    DELAY           shift and go to state 147
    AT              shift and go to state 159
    DOLLER          shift and go to state 100
    DISABLE         shift and go to state 155
    INPUT           shift and go to state 37
    OUTPUT          shift and go to state 24
    INOUT           shift and go to state 25
    TRI             shift and go to state 36
    REG             shift and go to state 35
    WIRE            shift and go to state 26
    SIGNED          shift and go to state 29
    LBRACE          reduce using rule 365 (empty -> .)
    ID              reduce using rule 365 (empty -> .)
    SEMICOLON       reduce using rule 365 (empty -> .)

  ! IF              [ reduce using rule 365 (empty -> .) ]

    parallelblock                  shift and go to state 129
    for_statement                  shift and go to state 130
    empty                          shift and go to state 157
    if_statement                   shift and go to state 132
    disable                        shift and go to state 133
    event_statement                shift and go to state 135
    blocking_substitution          shift and go to state 137
    integerdecl                    shift and go to state 514
    case_statement                 shift and go to state 139
    sigtype                        shift and go to state 33
    namedblock_statements          shift and go to state 522
    nonblocking_substitution       shift and go to state 142
    namedblock                     shift and go to state 145
    localparamdecl                 shift and go to state 515
    delays                         shift and go to state 141
    single_statement               shift and go to state 140
    while_statement                shift and go to state 148
    basic_statement                shift and go to state 517
    realdecl                       shift and go to state 516
    namedblock_statement           shift and go to state 518
    wait_statement                 shift and go to state 151
    forever_statement              shift and go to state 152
    decl                           shift and go to state 519
    senslist                       shift and go to state 154
    sigtypes                       shift and go to state 394
    parameterdecl                  shift and go to state 520
    block                          shift and go to state 156
    systemcall                     shift and go to state 158

state 417

    (170) pointer -> identifier LBRACKET . expression RBRACKET
    (164) partselect -> identifier LBRACKET . expression COLON expression RBRACKET
    (165) partselect -> identifier LBRACKET . expression PLUSCOLON expression RBRACKET
    (166) partselect -> identifier LBRACKET . expression MINUSCOLON expression RBRACKET
    (116) expression -> . MINUS expression
    (117) expression -> . PLUS expression
    (118) expression -> . LNOT expression
    (119) expression -> . NOT expression
    (120) expression -> . AND expression
    (121) expression -> . NAND expression
    (122) expression -> . NOR expression
    (123) expression -> . OR expression
    (124) expression -> . XOR expression
    (125) expression -> . XNOR expression
    (126) expression -> . expression POWER expression
    (127) expression -> . expression TIMES expression
    (128) expression -> . expression DIVIDE expression
    (129) expression -> . expression MOD expression
    (130) expression -> . expression PLUS expression
    (131) expression -> . expression MINUS expression
    (132) expression -> . expression LSHIFT expression
    (133) expression -> . expression RSHIFT expression
    (134) expression -> . expression LSHIFTA expression
    (135) expression -> . expression RSHIFTA expression
    (136) expression -> . expression LT expression
    (137) expression -> . expression GT expression
    (138) expression -> . expression LE expression
    (139) expression -> . expression GE expression
    (140) expression -> . expression EQ expression
    (141) expression -> . expression NE expression
    (142) expression -> . expression EQL expression
    (143) expression -> . expression NEL expression
    (144) expression -> . expression AND expression
    (145) expression -> . expression XOR expression
    (146) expression -> . expression XNOR expression
    (147) expression -> . expression OR expression
    (148) expression -> . expression LAND expression
    (149) expression -> . expression LOR expression
    (150) expression -> . expression COND expression COLON expression
    (151) expression -> . LPAREN expression RPAREN
    (152) expression -> . concat
    (153) expression -> . repeat
    (154) expression -> . partselect
    (155) expression -> . pointer
    (156) expression -> . functioncall
    (157) expression -> . systemcall
    (158) expression -> . identifier
    (159) expression -> . const_expression
    (160) concat -> . LBRACE concatlist RBRACE
    (163) repeat -> . LBRACE expression concat RBRACE
    (164) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (165) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (166) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (167) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (168) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (169) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (170) pointer -> . identifier LBRACKET expression RBRACKET
    (171) pointer -> . pointer LBRACKET expression RBRACKET
    (339) functioncall -> . identifier LPAREN func_args RPAREN
    (319) systemcall -> . DOLLER ID
    (320) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (357) identifier -> . ID
    (358) identifier -> . scope ID
    (172) const_expression -> . intnumber
    (173) const_expression -> . floatnumber
    (174) const_expression -> . stringliteral
    (359) scope -> . identifier DOT
    (360) scope -> . pointer DOT
    (176) intnumber -> . INTNUMBER_DEC
    (177) intnumber -> . SIGNED_INTNUMBER_DEC
    (178) intnumber -> . INTNUMBER_BIN
    (179) intnumber -> . SIGNED_INTNUMBER_BIN
    (180) intnumber -> . INTNUMBER_OCT
    (181) intnumber -> . SIGNED_INTNUMBER_OCT
    (182) intnumber -> . INTNUMBER_HEX
    (183) intnumber -> . SIGNED_INTNUMBER_HEX
    (175) floatnumber -> . FLOATNUMBER
    (184) stringliteral -> . STRING_LITERAL

    MINUS           shift and go to state 97
    PLUS            shift and go to state 89
    LNOT            shift and go to state 95
    NOT             shift and go to state 78
    AND             shift and go to state 91
    NAND            shift and go to state 98
    NOR             shift and go to state 76
    OR              shift and go to state 105
    XOR             shift and go to state 82
    XNOR            shift and go to state 87
    LPAREN          shift and go to state 96
    LBRACE          shift and go to state 77
    DOLLER          shift and go to state 100
    ID              shift and go to state 85
    INTNUMBER_DEC   shift and go to state 79
    SIGNED_INTNUMBER_DEC shift and go to state 101
    INTNUMBER_BIN   shift and go to state 111
    SIGNED_INTNUMBER_BIN shift and go to state 112
    INTNUMBER_OCT   shift and go to state 86
    SIGNED_INTNUMBER_OCT shift and go to state 106
    INTNUMBER_HEX   shift and go to state 93
    SIGNED_INTNUMBER_HEX shift and go to state 83
    FLOATNUMBER     shift and go to state 102
    STRING_LITERAL  shift and go to state 107

    stringliteral                  shift and go to state 99
    intnumber                      shift and go to state 81
    expression                     shift and go to state 523
    repeat                         shift and go to state 108
    partselect                     shift and go to state 103
    identifier                     shift and go to state 104
    pointer                        shift and go to state 80
    functioncall                   shift and go to state 94
    scope                          shift and go to state 84
    systemcall                     shift and go to state 109
    const_expression               shift and go to state 110
    concat                         shift and go to state 88
    floatnumber                    shift and go to state 90

state 418

    (171) pointer -> pointer LBRACKET . expression RBRACKET
    (167) partselect -> pointer LBRACKET . expression COLON expression RBRACKET
    (168) partselect -> pointer LBRACKET . expression PLUSCOLON expression RBRACKET
    (169) partselect -> pointer LBRACKET . expression MINUSCOLON expression RBRACKET
    (116) expression -> . MINUS expression
    (117) expression -> . PLUS expression
    (118) expression -> . LNOT expression
    (119) expression -> . NOT expression
    (120) expression -> . AND expression
    (121) expression -> . NAND expression
    (122) expression -> . NOR expression
    (123) expression -> . OR expression
    (124) expression -> . XOR expression
    (125) expression -> . XNOR expression
    (126) expression -> . expression POWER expression
    (127) expression -> . expression TIMES expression
    (128) expression -> . expression DIVIDE expression
    (129) expression -> . expression MOD expression
    (130) expression -> . expression PLUS expression
    (131) expression -> . expression MINUS expression
    (132) expression -> . expression LSHIFT expression
    (133) expression -> . expression RSHIFT expression
    (134) expression -> . expression LSHIFTA expression
    (135) expression -> . expression RSHIFTA expression
    (136) expression -> . expression LT expression
    (137) expression -> . expression GT expression
    (138) expression -> . expression LE expression
    (139) expression -> . expression GE expression
    (140) expression -> . expression EQ expression
    (141) expression -> . expression NE expression
    (142) expression -> . expression EQL expression
    (143) expression -> . expression NEL expression
    (144) expression -> . expression AND expression
    (145) expression -> . expression XOR expression
    (146) expression -> . expression XNOR expression
    (147) expression -> . expression OR expression
    (148) expression -> . expression LAND expression
    (149) expression -> . expression LOR expression
    (150) expression -> . expression COND expression COLON expression
    (151) expression -> . LPAREN expression RPAREN
    (152) expression -> . concat
    (153) expression -> . repeat
    (154) expression -> . partselect
    (155) expression -> . pointer
    (156) expression -> . functioncall
    (157) expression -> . systemcall
    (158) expression -> . identifier
    (159) expression -> . const_expression
    (160) concat -> . LBRACE concatlist RBRACE
    (163) repeat -> . LBRACE expression concat RBRACE
    (164) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (165) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (166) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (167) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (168) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (169) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (170) pointer -> . identifier LBRACKET expression RBRACKET
    (171) pointer -> . pointer LBRACKET expression RBRACKET
    (339) functioncall -> . identifier LPAREN func_args RPAREN
    (319) systemcall -> . DOLLER ID
    (320) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (357) identifier -> . ID
    (358) identifier -> . scope ID
    (172) const_expression -> . intnumber
    (173) const_expression -> . floatnumber
    (174) const_expression -> . stringliteral
    (359) scope -> . identifier DOT
    (360) scope -> . pointer DOT
    (176) intnumber -> . INTNUMBER_DEC
    (177) intnumber -> . SIGNED_INTNUMBER_DEC
    (178) intnumber -> . INTNUMBER_BIN
    (179) intnumber -> . SIGNED_INTNUMBER_BIN
    (180) intnumber -> . INTNUMBER_OCT
    (181) intnumber -> . SIGNED_INTNUMBER_OCT
    (182) intnumber -> . INTNUMBER_HEX
    (183) intnumber -> . SIGNED_INTNUMBER_HEX
    (175) floatnumber -> . FLOATNUMBER
    (184) stringliteral -> . STRING_LITERAL

    MINUS           shift and go to state 97
    PLUS            shift and go to state 89
    LNOT            shift and go to state 95
    NOT             shift and go to state 78
    AND             shift and go to state 91
    NAND            shift and go to state 98
    NOR             shift and go to state 76
    OR              shift and go to state 105
    XOR             shift and go to state 82
    XNOR            shift and go to state 87
    LPAREN          shift and go to state 96
    LBRACE          shift and go to state 77
    DOLLER          shift and go to state 100
    ID              shift and go to state 85
    INTNUMBER_DEC   shift and go to state 79
    SIGNED_INTNUMBER_DEC shift and go to state 101
    INTNUMBER_BIN   shift and go to state 111
    SIGNED_INTNUMBER_BIN shift and go to state 112
    INTNUMBER_OCT   shift and go to state 86
    SIGNED_INTNUMBER_OCT shift and go to state 106
    INTNUMBER_HEX   shift and go to state 93
    SIGNED_INTNUMBER_HEX shift and go to state 83
    FLOATNUMBER     shift and go to state 102
    STRING_LITERAL  shift and go to state 107

    stringliteral                  shift and go to state 99
    intnumber                      shift and go to state 81
    expression                     shift and go to state 524
    repeat                         shift and go to state 108
    partselect                     shift and go to state 103
    identifier                     shift and go to state 104
    pointer                        shift and go to state 80
    functioncall                   shift and go to state 94
    scope                          shift and go to state 84
    systemcall                     shift and go to state 109
    const_expression               shift and go to state 110
    concat                         shift and go to state 88
    floatnumber                    shift and go to state 90

state 419

    (188) edgesig -> NEGEDGE . edgesig_base
    (189) edgesig_base -> . identifier
    (190) edgesig_base -> . pointer
    (357) identifier -> . ID
    (358) identifier -> . scope ID
    (170) pointer -> . identifier LBRACKET expression RBRACKET
    (171) pointer -> . pointer LBRACKET expression RBRACKET
    (359) scope -> . identifier DOT
    (360) scope -> . pointer DOT

    ID              shift and go to state 85

    edgesig_base                   shift and go to state 525
    pointer                        shift and go to state 526
    scope                          shift and go to state 84
    identifier                     shift and go to state 527

state 420

    (192) edgesigs -> edgesig .

    RPAREN          reduce using rule 192 (edgesigs -> edgesig .)
    SENS_OR         reduce using rule 192 (edgesigs -> edgesig .)


state 421

    (195) senslist -> AT LPAREN levelsigs . RPAREN
    (200) levelsigs -> levelsigs . SENS_OR levelsig
    (201) levelsigs -> levelsigs . COMMA levelsig

    RPAREN          shift and go to state 530
    SENS_OR         shift and go to state 529
    COMMA           shift and go to state 528


state 422

    (204) senslist -> AT LPAREN TIMES . RPAREN

    RPAREN          shift and go to state 531


state 423

    (186) senslist -> AT LPAREN edgesigs . RPAREN
    (191) edgesigs -> edgesigs . SENS_OR edgesig

    RPAREN          shift and go to state 533
    SENS_OR         shift and go to state 532


state 424

    (202) levelsigs -> levelsig .

    RPAREN          reduce using rule 202 (levelsigs -> levelsig .)
    SENS_OR         reduce using rule 202 (levelsigs -> levelsig .)
    COMMA           reduce using rule 202 (levelsigs -> levelsig .)


state 425

    (187) edgesig -> POSEDGE . edgesig_base
    (189) edgesig_base -> . identifier
    (190) edgesig_base -> . pointer
    (357) identifier -> . ID
    (358) identifier -> . scope ID
    (170) pointer -> . identifier LBRACKET expression RBRACKET
    (171) pointer -> . pointer LBRACKET expression RBRACKET
    (359) scope -> . identifier DOT
    (360) scope -> . pointer DOT

    ID              shift and go to state 85

    edgesig_base                   shift and go to state 534
    pointer                        shift and go to state 526
    scope                          shift and go to state 84
    identifier                     shift and go to state 527

state 426

    (104) lconcat -> LBRACE lconcatlist RBRACE .

    EQUALS          reduce using rule 104 (lconcat -> LBRACE lconcatlist RBRACE .)
    LE              reduce using rule 104 (lconcat -> LBRACE lconcatlist RBRACE .)
    RBRACE          reduce using rule 104 (lconcat -> LBRACE lconcatlist RBRACE .)
    COMMA           reduce using rule 104 (lconcat -> LBRACE lconcatlist RBRACE .)


state 427

    (105) lconcatlist -> lconcatlist COMMA . lconcat_one
    (107) lconcat_one -> . identifier
    (108) lconcat_one -> . lpartselect
    (109) lconcat_one -> . lpointer
    (110) lconcat_one -> . lconcat
    (357) identifier -> . ID
    (358) identifier -> . scope ID
    (97) lpartselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (98) lpartselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (99) lpartselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (100) lpartselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (101) lpartselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (102) lpartselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (103) lpointer -> . pointer
    (104) lconcat -> . LBRACE lconcatlist RBRACE
    (359) scope -> . identifier DOT
    (360) scope -> . pointer DOT
    (170) pointer -> . identifier LBRACKET expression RBRACKET
    (171) pointer -> . pointer LBRACKET expression RBRACKET

    ID              shift and go to state 85
    LBRACE          shift and go to state 162

    pointer                        shift and go to state 305
    lconcat_one                    shift and go to state 535
    scope                          shift and go to state 84
    lpointer                       shift and go to state 302
    lpartselect                    shift and go to state 303
    identifier                     shift and go to state 304
    lconcat                        shift and go to state 307

state 428

    (115) rvalue -> expression .
    (126) expression -> expression . POWER expression
    (127) expression -> expression . TIMES expression
    (128) expression -> expression . DIVIDE expression
    (129) expression -> expression . MOD expression
    (130) expression -> expression . PLUS expression
    (131) expression -> expression . MINUS expression
    (132) expression -> expression . LSHIFT expression
    (133) expression -> expression . RSHIFT expression
    (134) expression -> expression . LSHIFTA expression
    (135) expression -> expression . RSHIFTA expression
    (136) expression -> expression . LT expression
    (137) expression -> expression . GT expression
    (138) expression -> expression . LE expression
    (139) expression -> expression . GE expression
    (140) expression -> expression . EQ expression
    (141) expression -> expression . NE expression
    (142) expression -> expression . EQL expression
    (143) expression -> expression . NEL expression
    (144) expression -> expression . AND expression
    (145) expression -> expression . XOR expression
    (146) expression -> expression . XNOR expression
    (147) expression -> expression . OR expression
    (148) expression -> expression . LAND expression
    (149) expression -> expression . LOR expression
    (150) expression -> expression . COND expression COLON expression

    RPAREN          reduce using rule 115 (rvalue -> expression .)
    SEMICOLON       reduce using rule 115 (rvalue -> expression .)
    COMMA           reduce using rule 115 (rvalue -> expression .)
    POWER           shift and go to state 246
    TIMES           shift and go to state 349
    DIVIDE          shift and go to state 244
    MOD             shift and go to state 231
    PLUS            shift and go to state 240
    MINUS           shift and go to state 229
    LSHIFT          shift and go to state 243
    RSHIFT          shift and go to state 226
    LSHIFTA         shift and go to state 241
    RSHIFTA         shift and go to state 238
    LT              shift and go to state 235
    GT              shift and go to state 228
    LE              shift and go to state 222
    GE              shift and go to state 239
    EQ              shift and go to state 223
    NE              shift and go to state 225
    EQL             shift and go to state 245
    NEL             shift and go to state 242
    AND             shift and go to state 224
    XOR             shift and go to state 237
    XNOR            shift and go to state 232
    OR              shift and go to state 234
    LAND            shift and go to state 227
    LOR             shift and go to state 230
    COND            shift and go to state 233


state 429

    (95) assignment -> ASSIGN lvalue EQUALS rvalue . SEMICOLON

    SEMICOLON       shift and go to state 536


state 430

    (100) lpartselect -> identifier LBRACKET expression . COLON expression RBRACKET
    (101) lpartselect -> identifier LBRACKET expression . PLUSCOLON expression RBRACKET
    (102) lpartselect -> identifier LBRACKET expression . MINUSCOLON expression RBRACKET
    (170) pointer -> identifier LBRACKET expression . RBRACKET
    (126) expression -> expression . POWER expression
    (127) expression -> expression . TIMES expression
    (128) expression -> expression . DIVIDE expression
    (129) expression -> expression . MOD expression
    (130) expression -> expression . PLUS expression
    (131) expression -> expression . MINUS expression
    (132) expression -> expression . LSHIFT expression
    (133) expression -> expression . RSHIFT expression
    (134) expression -> expression . LSHIFTA expression
    (135) expression -> expression . RSHIFTA expression
    (136) expression -> expression . LT expression
    (137) expression -> expression . GT expression
    (138) expression -> expression . LE expression
    (139) expression -> expression . GE expression
    (140) expression -> expression . EQ expression
    (141) expression -> expression . NE expression
    (142) expression -> expression . EQL expression
    (143) expression -> expression . NEL expression
    (144) expression -> expression . AND expression
    (145) expression -> expression . XOR expression
    (146) expression -> expression . XNOR expression
    (147) expression -> expression . OR expression
    (148) expression -> expression . LAND expression
    (149) expression -> expression . LOR expression
    (150) expression -> expression . COND expression COLON expression

    COLON           shift and go to state 537
    PLUSCOLON       shift and go to state 538
    MINUSCOLON      shift and go to state 539
    RBRACKET        shift and go to state 485
    POWER           shift and go to state 246
    TIMES           shift and go to state 349
    DIVIDE          shift and go to state 244
    MOD             shift and go to state 231
    PLUS            shift and go to state 240
    MINUS           shift and go to state 229
    LSHIFT          shift and go to state 243
    RSHIFT          shift and go to state 226
    LSHIFTA         shift and go to state 241
    RSHIFTA         shift and go to state 238
    LT              shift and go to state 235
    GT              shift and go to state 228
    LE              shift and go to state 222
    GE              shift and go to state 239
    EQ              shift and go to state 223
    NE              shift and go to state 225
    EQL             shift and go to state 245
    NEL             shift and go to state 242
    AND             shift and go to state 224
    XOR             shift and go to state 237
    XNOR            shift and go to state 232
    OR              shift and go to state 234
    LAND            shift and go to state 227
    LOR             shift and go to state 230
    COND            shift and go to state 233


state 431

    (97) lpartselect -> pointer LBRACKET expression . COLON expression RBRACKET
    (98) lpartselect -> pointer LBRACKET expression . PLUSCOLON expression RBRACKET
    (99) lpartselect -> pointer LBRACKET expression . MINUSCOLON expression RBRACKET
    (171) pointer -> pointer LBRACKET expression . RBRACKET
    (126) expression -> expression . POWER expression
    (127) expression -> expression . TIMES expression
    (128) expression -> expression . DIVIDE expression
    (129) expression -> expression . MOD expression
    (130) expression -> expression . PLUS expression
    (131) expression -> expression . MINUS expression
    (132) expression -> expression . LSHIFT expression
    (133) expression -> expression . RSHIFT expression
    (134) expression -> expression . LSHIFTA expression
    (135) expression -> expression . RSHIFTA expression
    (136) expression -> expression . LT expression
    (137) expression -> expression . GT expression
    (138) expression -> expression . LE expression
    (139) expression -> expression . GE expression
    (140) expression -> expression . EQ expression
    (141) expression -> expression . NE expression
    (142) expression -> expression . EQL expression
    (143) expression -> expression . NEL expression
    (144) expression -> expression . AND expression
    (145) expression -> expression . XOR expression
    (146) expression -> expression . XNOR expression
    (147) expression -> expression . OR expression
    (148) expression -> expression . LAND expression
    (149) expression -> expression . LOR expression
    (150) expression -> expression . COND expression COLON expression

    COLON           shift and go to state 540
    PLUSCOLON       shift and go to state 541
    MINUSCOLON      shift and go to state 542
    RBRACKET        shift and go to state 474
    POWER           shift and go to state 246
    TIMES           shift and go to state 349
    DIVIDE          shift and go to state 244
    MOD             shift and go to state 231
    PLUS            shift and go to state 240
    MINUS           shift and go to state 229
    LSHIFT          shift and go to state 243
    RSHIFT          shift and go to state 226
    LSHIFTA         shift and go to state 241
    RSHIFTA         shift and go to state 238
    LT              shift and go to state 235
    GT              shift and go to state 228
    LE              shift and go to state 222
    GE              shift and go to state 239
    EQ              shift and go to state 223
    NE              shift and go to state 225
    EQL             shift and go to state 245
    NEL             shift and go to state 242
    AND             shift and go to state 224
    XOR             shift and go to state 237
    XNOR            shift and go to state 232
    OR              shift and go to state 234
    LAND            shift and go to state 227
    LOR             shift and go to state 230
    COND            shift and go to state 233


state 432

    (222) delays -> DELAY LPAREN expression . RPAREN
    (126) expression -> expression . POWER expression
    (127) expression -> expression . TIMES expression
    (128) expression -> expression . DIVIDE expression
    (129) expression -> expression . MOD expression
    (130) expression -> expression . PLUS expression
    (131) expression -> expression . MINUS expression
    (132) expression -> expression . LSHIFT expression
    (133) expression -> expression . RSHIFT expression
    (134) expression -> expression . LSHIFTA expression
    (135) expression -> expression . RSHIFTA expression
    (136) expression -> expression . LT expression
    (137) expression -> expression . GT expression
    (138) expression -> expression . LE expression
    (139) expression -> expression . GE expression
    (140) expression -> expression . EQ expression
    (141) expression -> expression . NE expression
    (142) expression -> expression . EQL expression
    (143) expression -> expression . NEL expression
    (144) expression -> expression . AND expression
    (145) expression -> expression . XOR expression
    (146) expression -> expression . XNOR expression
    (147) expression -> expression . OR expression
    (148) expression -> expression . LAND expression
    (149) expression -> expression . LOR expression
    (150) expression -> expression . COND expression COLON expression

    RPAREN          shift and go to state 543
    POWER           shift and go to state 246
    TIMES           shift and go to state 349
    DIVIDE          shift and go to state 244
    MOD             shift and go to state 231
    PLUS            shift and go to state 240
    MINUS           shift and go to state 229
    LSHIFT          shift and go to state 243
    RSHIFT          shift and go to state 226
    LSHIFTA         shift and go to state 241
    RSHIFTA         shift and go to state 238
    LT              shift and go to state 235
    GT              shift and go to state 228
    LE              shift and go to state 222
    GE              shift and go to state 239
    EQ              shift and go to state 223
    NE              shift and go to state 225
    EQL             shift and go to state 245
    NEL             shift and go to state 242
    AND             shift and go to state 224
    XOR             shift and go to state 237
    XNOR            shift and go to state 232
    OR              shift and go to state 234
    LAND            shift and go to state 227
    LOR             shift and go to state 230
    COND            shift and go to state 233


state 433

    (170) pointer -> identifier LBRACKET . expression RBRACKET
    (116) expression -> . MINUS expression
    (117) expression -> . PLUS expression
    (118) expression -> . LNOT expression
    (119) expression -> . NOT expression
    (120) expression -> . AND expression
    (121) expression -> . NAND expression
    (122) expression -> . NOR expression
    (123) expression -> . OR expression
    (124) expression -> . XOR expression
    (125) expression -> . XNOR expression
    (126) expression -> . expression POWER expression
    (127) expression -> . expression TIMES expression
    (128) expression -> . expression DIVIDE expression
    (129) expression -> . expression MOD expression
    (130) expression -> . expression PLUS expression
    (131) expression -> . expression MINUS expression
    (132) expression -> . expression LSHIFT expression
    (133) expression -> . expression RSHIFT expression
    (134) expression -> . expression LSHIFTA expression
    (135) expression -> . expression RSHIFTA expression
    (136) expression -> . expression LT expression
    (137) expression -> . expression GT expression
    (138) expression -> . expression LE expression
    (139) expression -> . expression GE expression
    (140) expression -> . expression EQ expression
    (141) expression -> . expression NE expression
    (142) expression -> . expression EQL expression
    (143) expression -> . expression NEL expression
    (144) expression -> . expression AND expression
    (145) expression -> . expression XOR expression
    (146) expression -> . expression XNOR expression
    (147) expression -> . expression OR expression
    (148) expression -> . expression LAND expression
    (149) expression -> . expression LOR expression
    (150) expression -> . expression COND expression COLON expression
    (151) expression -> . LPAREN expression RPAREN
    (152) expression -> . concat
    (153) expression -> . repeat
    (154) expression -> . partselect
    (155) expression -> . pointer
    (156) expression -> . functioncall
    (157) expression -> . systemcall
    (158) expression -> . identifier
    (159) expression -> . const_expression
    (160) concat -> . LBRACE concatlist RBRACE
    (163) repeat -> . LBRACE expression concat RBRACE
    (164) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (165) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (166) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (167) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (168) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (169) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (170) pointer -> . identifier LBRACKET expression RBRACKET
    (171) pointer -> . pointer LBRACKET expression RBRACKET
    (339) functioncall -> . identifier LPAREN func_args RPAREN
    (319) systemcall -> . DOLLER ID
    (320) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (357) identifier -> . ID
    (358) identifier -> . scope ID
    (172) const_expression -> . intnumber
    (173) const_expression -> . floatnumber
    (174) const_expression -> . stringliteral
    (359) scope -> . identifier DOT
    (360) scope -> . pointer DOT
    (176) intnumber -> . INTNUMBER_DEC
    (177) intnumber -> . SIGNED_INTNUMBER_DEC
    (178) intnumber -> . INTNUMBER_BIN
    (179) intnumber -> . SIGNED_INTNUMBER_BIN
    (180) intnumber -> . INTNUMBER_OCT
    (181) intnumber -> . SIGNED_INTNUMBER_OCT
    (182) intnumber -> . INTNUMBER_HEX
    (183) intnumber -> . SIGNED_INTNUMBER_HEX
    (175) floatnumber -> . FLOATNUMBER
    (184) stringliteral -> . STRING_LITERAL

    MINUS           shift and go to state 97
    PLUS            shift and go to state 89
    LNOT            shift and go to state 95
    NOT             shift and go to state 78
    AND             shift and go to state 91
    NAND            shift and go to state 98
    NOR             shift and go to state 76
    OR              shift and go to state 105
    XOR             shift and go to state 82
    XNOR            shift and go to state 87
    LPAREN          shift and go to state 96
    LBRACE          shift and go to state 77
    DOLLER          shift and go to state 100
    ID              shift and go to state 85
    INTNUMBER_DEC   shift and go to state 79
    SIGNED_INTNUMBER_DEC shift and go to state 101
    INTNUMBER_BIN   shift and go to state 111
    SIGNED_INTNUMBER_BIN shift and go to state 112
    INTNUMBER_OCT   shift and go to state 86
    SIGNED_INTNUMBER_OCT shift and go to state 106
    INTNUMBER_HEX   shift and go to state 93
    SIGNED_INTNUMBER_HEX shift and go to state 83
    FLOATNUMBER     shift and go to state 102
    STRING_LITERAL  shift and go to state 107

    stringliteral                  shift and go to state 99
    intnumber                      shift and go to state 81
    expression                     shift and go to state 544
    repeat                         shift and go to state 108
    partselect                     shift and go to state 103
    identifier                     shift and go to state 104
    pointer                        shift and go to state 80
    functioncall                   shift and go to state 94
    scope                          shift and go to state 84
    systemcall                     shift and go to state 109
    const_expression               shift and go to state 110
    concat                         shift and go to state 88
    floatnumber                    shift and go to state 90

state 434

    (171) pointer -> pointer LBRACKET . expression RBRACKET
    (116) expression -> . MINUS expression
    (117) expression -> . PLUS expression
    (118) expression -> . LNOT expression
    (119) expression -> . NOT expression
    (120) expression -> . AND expression
    (121) expression -> . NAND expression
    (122) expression -> . NOR expression
    (123) expression -> . OR expression
    (124) expression -> . XOR expression
    (125) expression -> . XNOR expression
    (126) expression -> . expression POWER expression
    (127) expression -> . expression TIMES expression
    (128) expression -> . expression DIVIDE expression
    (129) expression -> . expression MOD expression
    (130) expression -> . expression PLUS expression
    (131) expression -> . expression MINUS expression
    (132) expression -> . expression LSHIFT expression
    (133) expression -> . expression RSHIFT expression
    (134) expression -> . expression LSHIFTA expression
    (135) expression -> . expression RSHIFTA expression
    (136) expression -> . expression LT expression
    (137) expression -> . expression GT expression
    (138) expression -> . expression LE expression
    (139) expression -> . expression GE expression
    (140) expression -> . expression EQ expression
    (141) expression -> . expression NE expression
    (142) expression -> . expression EQL expression
    (143) expression -> . expression NEL expression
    (144) expression -> . expression AND expression
    (145) expression -> . expression XOR expression
    (146) expression -> . expression XNOR expression
    (147) expression -> . expression OR expression
    (148) expression -> . expression LAND expression
    (149) expression -> . expression LOR expression
    (150) expression -> . expression COND expression COLON expression
    (151) expression -> . LPAREN expression RPAREN
    (152) expression -> . concat
    (153) expression -> . repeat
    (154) expression -> . partselect
    (155) expression -> . pointer
    (156) expression -> . functioncall
    (157) expression -> . systemcall
    (158) expression -> . identifier
    (159) expression -> . const_expression
    (160) concat -> . LBRACE concatlist RBRACE
    (163) repeat -> . LBRACE expression concat RBRACE
    (164) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (165) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (166) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (167) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (168) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (169) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (170) pointer -> . identifier LBRACKET expression RBRACKET
    (171) pointer -> . pointer LBRACKET expression RBRACKET
    (339) functioncall -> . identifier LPAREN func_args RPAREN
    (319) systemcall -> . DOLLER ID
    (320) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (357) identifier -> . ID
    (358) identifier -> . scope ID
    (172) const_expression -> . intnumber
    (173) const_expression -> . floatnumber
    (174) const_expression -> . stringliteral
    (359) scope -> . identifier DOT
    (360) scope -> . pointer DOT
    (176) intnumber -> . INTNUMBER_DEC
    (177) intnumber -> . SIGNED_INTNUMBER_DEC
    (178) intnumber -> . INTNUMBER_BIN
    (179) intnumber -> . SIGNED_INTNUMBER_BIN
    (180) intnumber -> . INTNUMBER_OCT
    (181) intnumber -> . SIGNED_INTNUMBER_OCT
    (182) intnumber -> . INTNUMBER_HEX
    (183) intnumber -> . SIGNED_INTNUMBER_HEX
    (175) floatnumber -> . FLOATNUMBER
    (184) stringliteral -> . STRING_LITERAL

    MINUS           shift and go to state 97
    PLUS            shift and go to state 89
    LNOT            shift and go to state 95
    NOT             shift and go to state 78
    AND             shift and go to state 91
    NAND            shift and go to state 98
    NOR             shift and go to state 76
    OR              shift and go to state 105
    XOR             shift and go to state 82
    XNOR            shift and go to state 87
    LPAREN          shift and go to state 96
    LBRACE          shift and go to state 77
    DOLLER          shift and go to state 100
    ID              shift and go to state 85
    INTNUMBER_DEC   shift and go to state 79
    SIGNED_INTNUMBER_DEC shift and go to state 101
    INTNUMBER_BIN   shift and go to state 111
    SIGNED_INTNUMBER_BIN shift and go to state 112
    INTNUMBER_OCT   shift and go to state 86
    SIGNED_INTNUMBER_OCT shift and go to state 106
    INTNUMBER_HEX   shift and go to state 93
    SIGNED_INTNUMBER_HEX shift and go to state 83
    FLOATNUMBER     shift and go to state 102
    STRING_LITERAL  shift and go to state 107

    stringliteral                  shift and go to state 99
    intnumber                      shift and go to state 81
    expression                     shift and go to state 545
    repeat                         shift and go to state 108
    partselect                     shift and go to state 103
    identifier                     shift and go to state 104
    pointer                        shift and go to state 80
    functioncall                   shift and go to state 94
    scope                          shift and go to state 84
    systemcall                     shift and go to state 109
    const_expression               shift and go to state 110
    concat                         shift and go to state 88
    floatnumber                    shift and go to state 90

state 435

    (96) assignment -> ASSIGN delays lvalue EQUALS . delays rvalue SEMICOLON
    (222) delays -> . DELAY LPAREN expression RPAREN
    (223) delays -> . DELAY identifier
    (224) delays -> . DELAY intnumber
    (225) delays -> . DELAY floatnumber
    (226) delays -> . empty
    (365) empty -> .

    DELAY           shift and go to state 170
    MINUS           reduce using rule 365 (empty -> .)
    PLUS            reduce using rule 365 (empty -> .)
    LNOT            reduce using rule 365 (empty -> .)
    NOT             reduce using rule 365 (empty -> .)
    AND             reduce using rule 365 (empty -> .)
    NAND            reduce using rule 365 (empty -> .)
    NOR             reduce using rule 365 (empty -> .)
    OR              reduce using rule 365 (empty -> .)
    XOR             reduce using rule 365 (empty -> .)
    XNOR            reduce using rule 365 (empty -> .)
    LPAREN          reduce using rule 365 (empty -> .)
    LBRACE          reduce using rule 365 (empty -> .)
    DOLLER          reduce using rule 365 (empty -> .)
    ID              reduce using rule 365 (empty -> .)
    INTNUMBER_DEC   reduce using rule 365 (empty -> .)
    SIGNED_INTNUMBER_DEC reduce using rule 365 (empty -> .)
    INTNUMBER_BIN   reduce using rule 365 (empty -> .)
    SIGNED_INTNUMBER_BIN reduce using rule 365 (empty -> .)
    INTNUMBER_OCT   reduce using rule 365 (empty -> .)
    SIGNED_INTNUMBER_OCT reduce using rule 365 (empty -> .)
    INTNUMBER_HEX   reduce using rule 365 (empty -> .)
    SIGNED_INTNUMBER_HEX reduce using rule 365 (empty -> .)
    FLOATNUMBER     reduce using rule 365 (empty -> .)
    STRING_LITERAL  reduce using rule 365 (empty -> .)

    delays                         shift and go to state 546
    empty                          shift and go to state 163

state 436

    (83) realnamelist -> realnamelist COMMA realname .

    SEMICOLON       reduce using rule 83 (realnamelist -> realnamelist COMMA realname .)
    COMMA           reduce using rule 83 (realnamelist -> realnamelist COMMA realname .)


state 437

    (277) instance -> ID parameterlist ID LPAREN . instance_ports RPAREN SEMICOLON
    (287) instance_ports -> . instance_ports_list
    (288) instance_ports -> . instance_ports_arg
    (289) instance_ports_list -> . instance_ports_list COMMA instance_port_list
    (290) instance_ports_list -> . instance_port_list
    (292) instance_ports_arg -> . instance_ports_arg COMMA instance_port_arg
    (293) instance_ports_arg -> . instance_port_arg
    (291) instance_port_list -> . expression
    (294) instance_port_arg -> . DOT ID LPAREN identifier RPAREN
    (295) instance_port_arg -> . DOT ID LPAREN expression RPAREN
    (296) instance_port_arg -> . DOT ID LPAREN RPAREN
    (116) expression -> . MINUS expression
    (117) expression -> . PLUS expression
    (118) expression -> . LNOT expression
    (119) expression -> . NOT expression
    (120) expression -> . AND expression
    (121) expression -> . NAND expression
    (122) expression -> . NOR expression
    (123) expression -> . OR expression
    (124) expression -> . XOR expression
    (125) expression -> . XNOR expression
    (126) expression -> . expression POWER expression
    (127) expression -> . expression TIMES expression
    (128) expression -> . expression DIVIDE expression
    (129) expression -> . expression MOD expression
    (130) expression -> . expression PLUS expression
    (131) expression -> . expression MINUS expression
    (132) expression -> . expression LSHIFT expression
    (133) expression -> . expression RSHIFT expression
    (134) expression -> . expression LSHIFTA expression
    (135) expression -> . expression RSHIFTA expression
    (136) expression -> . expression LT expression
    (137) expression -> . expression GT expression
    (138) expression -> . expression LE expression
    (139) expression -> . expression GE expression
    (140) expression -> . expression EQ expression
    (141) expression -> . expression NE expression
    (142) expression -> . expression EQL expression
    (143) expression -> . expression NEL expression
    (144) expression -> . expression AND expression
    (145) expression -> . expression XOR expression
    (146) expression -> . expression XNOR expression
    (147) expression -> . expression OR expression
    (148) expression -> . expression LAND expression
    (149) expression -> . expression LOR expression
    (150) expression -> . expression COND expression COLON expression
    (151) expression -> . LPAREN expression RPAREN
    (152) expression -> . concat
    (153) expression -> . repeat
    (154) expression -> . partselect
    (155) expression -> . pointer
    (156) expression -> . functioncall
    (157) expression -> . systemcall
    (158) expression -> . identifier
    (159) expression -> . const_expression
    (160) concat -> . LBRACE concatlist RBRACE
    (163) repeat -> . LBRACE expression concat RBRACE
    (164) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (165) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (166) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (167) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (168) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (169) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (170) pointer -> . identifier LBRACKET expression RBRACKET
    (171) pointer -> . pointer LBRACKET expression RBRACKET
    (339) functioncall -> . identifier LPAREN func_args RPAREN
    (319) systemcall -> . DOLLER ID
    (320) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (357) identifier -> . ID
    (358) identifier -> . scope ID
    (172) const_expression -> . intnumber
    (173) const_expression -> . floatnumber
    (174) const_expression -> . stringliteral
    (359) scope -> . identifier DOT
    (360) scope -> . pointer DOT
    (176) intnumber -> . INTNUMBER_DEC
    (177) intnumber -> . SIGNED_INTNUMBER_DEC
    (178) intnumber -> . INTNUMBER_BIN
    (179) intnumber -> . SIGNED_INTNUMBER_BIN
    (180) intnumber -> . INTNUMBER_OCT
    (181) intnumber -> . SIGNED_INTNUMBER_OCT
    (182) intnumber -> . INTNUMBER_HEX
    (183) intnumber -> . SIGNED_INTNUMBER_HEX
    (175) floatnumber -> . FLOATNUMBER
    (184) stringliteral -> . STRING_LITERAL

    DOT             shift and go to state 551
    MINUS           shift and go to state 97
    PLUS            shift and go to state 89
    LNOT            shift and go to state 95
    NOT             shift and go to state 78
    AND             shift and go to state 91
    NAND            shift and go to state 98
    NOR             shift and go to state 76
    OR              shift and go to state 105
    XOR             shift and go to state 82
    XNOR            shift and go to state 87
    LPAREN          shift and go to state 96
    LBRACE          shift and go to state 77
    DOLLER          shift and go to state 100
    ID              shift and go to state 85
    INTNUMBER_DEC   shift and go to state 79
    SIGNED_INTNUMBER_DEC shift and go to state 101
    INTNUMBER_BIN   shift and go to state 111
    SIGNED_INTNUMBER_BIN shift and go to state 112
    INTNUMBER_OCT   shift and go to state 86
    SIGNED_INTNUMBER_OCT shift and go to state 106
    INTNUMBER_HEX   shift and go to state 93
    SIGNED_INTNUMBER_HEX shift and go to state 83
    FLOATNUMBER     shift and go to state 102
    STRING_LITERAL  shift and go to state 107

    expression                     shift and go to state 552
    functioncall                   shift and go to state 94
    systemcall                     shift and go to state 109
    stringliteral                  shift and go to state 99
    intnumber                      shift and go to state 81
    repeat                         shift and go to state 108
    instance_port_arg              shift and go to state 547
    partselect                     shift and go to state 103
    identifier                     shift and go to state 104
    pointer                        shift and go to state 80
    instance_ports_arg             shift and go to state 553
    scope                          shift and go to state 84
    instance_ports                 shift and go to state 549
    instance_ports_list            shift and go to state 550
    instance_port_list             shift and go to state 548
    const_expression               shift and go to state 110
    concat                         shift and go to state 88
    floatnumber                    shift and go to state 90

state 438

    (279) parameterlist -> DELAY LPAREN param_args_noname . RPAREN
    (281) param_args_noname -> param_args_noname . COMMA param_arg_noname

    RPAREN          shift and go to state 555
    COMMA           shift and go to state 554


state 439

    (286) param_arg -> DOT . ID LPAREN expression RPAREN

    ID              shift and go to state 556


state 440

    (282) param_args_noname -> param_arg_noname .

    RPAREN          reduce using rule 282 (param_args_noname -> param_arg_noname .)
    COMMA           reduce using rule 282 (param_args_noname -> param_arg_noname .)


state 441

    (285) param_arg_noname -> expression .
    (126) expression -> expression . POWER expression
    (127) expression -> expression . TIMES expression
    (128) expression -> expression . DIVIDE expression
    (129) expression -> expression . MOD expression
    (130) expression -> expression . PLUS expression
    (131) expression -> expression . MINUS expression
    (132) expression -> expression . LSHIFT expression
    (133) expression -> expression . RSHIFT expression
    (134) expression -> expression . LSHIFTA expression
    (135) expression -> expression . RSHIFTA expression
    (136) expression -> expression . LT expression
    (137) expression -> expression . GT expression
    (138) expression -> expression . LE expression
    (139) expression -> expression . GE expression
    (140) expression -> expression . EQ expression
    (141) expression -> expression . NE expression
    (142) expression -> expression . EQL expression
    (143) expression -> expression . NEL expression
    (144) expression -> expression . AND expression
    (145) expression -> expression . XOR expression
    (146) expression -> expression . XNOR expression
    (147) expression -> expression . OR expression
    (148) expression -> expression . LAND expression
    (149) expression -> expression . LOR expression
    (150) expression -> expression . COND expression COLON expression

    RPAREN          reduce using rule 285 (param_arg_noname -> expression .)
    COMMA           reduce using rule 285 (param_arg_noname -> expression .)
    POWER           shift and go to state 246
    TIMES           shift and go to state 349
    DIVIDE          shift and go to state 244
    MOD             shift and go to state 231
    PLUS            shift and go to state 240
    MINUS           shift and go to state 229
    LSHIFT          shift and go to state 243
    RSHIFT          shift and go to state 226
    LSHIFTA         shift and go to state 241
    RSHIFTA         shift and go to state 238
    LT              shift and go to state 235
    GT              shift and go to state 228
    LE              shift and go to state 222
    GE              shift and go to state 239
    EQ              shift and go to state 223
    NE              shift and go to state 225
    EQL             shift and go to state 245
    NEL             shift and go to state 242
    AND             shift and go to state 224
    XOR             shift and go to state 237
    XNOR            shift and go to state 232
    OR              shift and go to state 234
    LAND            shift and go to state 227
    LOR             shift and go to state 230
    COND            shift and go to state 233


state 442

    (278) parameterlist -> DELAY LPAREN param_args . RPAREN
    (283) param_args -> param_args . COMMA param_arg

    RPAREN          shift and go to state 558
    COMMA           shift and go to state 557


state 443

    (284) param_args -> param_arg .

    RPAREN          reduce using rule 284 (param_args -> param_arg .)
    COMMA           reduce using rule 284 (param_args -> param_arg .)


state 444

    (90) localparamdecl -> LOCALPARAM width param_substitution_list SEMICOLON .

    ENDGENERATE     reduce using rule 90 (localparamdecl -> LOCALPARAM width param_substitution_list SEMICOLON .)
    IF              reduce using rule 90 (localparamdecl -> LOCALPARAM width param_substitution_list SEMICOLON .)
    FOR             reduce using rule 90 (localparamdecl -> LOCALPARAM width param_substitution_list SEMICOLON .)
    INTEGER         reduce using rule 90 (localparamdecl -> LOCALPARAM width param_substitution_list SEMICOLON .)
    REAL            reduce using rule 90 (localparamdecl -> LOCALPARAM width param_substitution_list SEMICOLON .)
    PARAMETER       reduce using rule 90 (localparamdecl -> LOCALPARAM width param_substitution_list SEMICOLON .)
    LOCALPARAM      reduce using rule 90 (localparamdecl -> LOCALPARAM width param_substitution_list SEMICOLON .)
    GENVAR          reduce using rule 90 (localparamdecl -> LOCALPARAM width param_substitution_list SEMICOLON .)
    ASSIGN          reduce using rule 90 (localparamdecl -> LOCALPARAM width param_substitution_list SEMICOLON .)
    ALWAYS          reduce using rule 90 (localparamdecl -> LOCALPARAM width param_substitution_list SEMICOLON .)
    INITIAL         reduce using rule 90 (localparamdecl -> LOCALPARAM width param_substitution_list SEMICOLON .)
    ID              reduce using rule 90 (localparamdecl -> LOCALPARAM width param_substitution_list SEMICOLON .)
    FUNCTION        reduce using rule 90 (localparamdecl -> LOCALPARAM width param_substitution_list SEMICOLON .)
    TASK            reduce using rule 90 (localparamdecl -> LOCALPARAM width param_substitution_list SEMICOLON .)
    LPAREN          reduce using rule 90 (localparamdecl -> LOCALPARAM width param_substitution_list SEMICOLON .)
    INPUT           reduce using rule 90 (localparamdecl -> LOCALPARAM width param_substitution_list SEMICOLON .)
    OUTPUT          reduce using rule 90 (localparamdecl -> LOCALPARAM width param_substitution_list SEMICOLON .)
    INOUT           reduce using rule 90 (localparamdecl -> LOCALPARAM width param_substitution_list SEMICOLON .)
    TRI             reduce using rule 90 (localparamdecl -> LOCALPARAM width param_substitution_list SEMICOLON .)
    REG             reduce using rule 90 (localparamdecl -> LOCALPARAM width param_substitution_list SEMICOLON .)
    WIRE            reduce using rule 90 (localparamdecl -> LOCALPARAM width param_substitution_list SEMICOLON .)
    SIGNED          reduce using rule 90 (localparamdecl -> LOCALPARAM width param_substitution_list SEMICOLON .)
    ELSE            reduce using rule 90 (localparamdecl -> LOCALPARAM width param_substitution_list SEMICOLON .)
    END             reduce using rule 90 (localparamdecl -> LOCALPARAM width param_substitution_list SEMICOLON .)
    CASE            reduce using rule 90 (localparamdecl -> LOCALPARAM width param_substitution_list SEMICOLON .)
    WHILE           reduce using rule 90 (localparamdecl -> LOCALPARAM width param_substitution_list SEMICOLON .)
    WAIT            reduce using rule 90 (localparamdecl -> LOCALPARAM width param_substitution_list SEMICOLON .)
    FOREVER         reduce using rule 90 (localparamdecl -> LOCALPARAM width param_substitution_list SEMICOLON .)
    BEGIN           reduce using rule 90 (localparamdecl -> LOCALPARAM width param_substitution_list SEMICOLON .)
    FORK            reduce using rule 90 (localparamdecl -> LOCALPARAM width param_substitution_list SEMICOLON .)
    DELAY           reduce using rule 90 (localparamdecl -> LOCALPARAM width param_substitution_list SEMICOLON .)
    AT              reduce using rule 90 (localparamdecl -> LOCALPARAM width param_substitution_list SEMICOLON .)
    DOLLER          reduce using rule 90 (localparamdecl -> LOCALPARAM width param_substitution_list SEMICOLON .)
    DISABLE         reduce using rule 90 (localparamdecl -> LOCALPARAM width param_substitution_list SEMICOLON .)
    LBRACE          reduce using rule 90 (localparamdecl -> LOCALPARAM width param_substitution_list SEMICOLON .)
    SEMICOLON       reduce using rule 90 (localparamdecl -> LOCALPARAM width param_substitution_list SEMICOLON .)
    ENDMODULE       reduce using rule 90 (localparamdecl -> LOCALPARAM width param_substitution_list SEMICOLON .)
    GENERATE        reduce using rule 90 (localparamdecl -> LOCALPARAM width param_substitution_list SEMICOLON .)


state 445

    (91) localparamdecl -> LOCALPARAM INTEGER param_substitution_list SEMICOLON .

    ENDGENERATE     reduce using rule 91 (localparamdecl -> LOCALPARAM INTEGER param_substitution_list SEMICOLON .)
    IF              reduce using rule 91 (localparamdecl -> LOCALPARAM INTEGER param_substitution_list SEMICOLON .)
    FOR             reduce using rule 91 (localparamdecl -> LOCALPARAM INTEGER param_substitution_list SEMICOLON .)
    INTEGER         reduce using rule 91 (localparamdecl -> LOCALPARAM INTEGER param_substitution_list SEMICOLON .)
    REAL            reduce using rule 91 (localparamdecl -> LOCALPARAM INTEGER param_substitution_list SEMICOLON .)
    PARAMETER       reduce using rule 91 (localparamdecl -> LOCALPARAM INTEGER param_substitution_list SEMICOLON .)
    LOCALPARAM      reduce using rule 91 (localparamdecl -> LOCALPARAM INTEGER param_substitution_list SEMICOLON .)
    GENVAR          reduce using rule 91 (localparamdecl -> LOCALPARAM INTEGER param_substitution_list SEMICOLON .)
    ASSIGN          reduce using rule 91 (localparamdecl -> LOCALPARAM INTEGER param_substitution_list SEMICOLON .)
    ALWAYS          reduce using rule 91 (localparamdecl -> LOCALPARAM INTEGER param_substitution_list SEMICOLON .)
    INITIAL         reduce using rule 91 (localparamdecl -> LOCALPARAM INTEGER param_substitution_list SEMICOLON .)
    ID              reduce using rule 91 (localparamdecl -> LOCALPARAM INTEGER param_substitution_list SEMICOLON .)
    FUNCTION        reduce using rule 91 (localparamdecl -> LOCALPARAM INTEGER param_substitution_list SEMICOLON .)
    TASK            reduce using rule 91 (localparamdecl -> LOCALPARAM INTEGER param_substitution_list SEMICOLON .)
    LPAREN          reduce using rule 91 (localparamdecl -> LOCALPARAM INTEGER param_substitution_list SEMICOLON .)
    INPUT           reduce using rule 91 (localparamdecl -> LOCALPARAM INTEGER param_substitution_list SEMICOLON .)
    OUTPUT          reduce using rule 91 (localparamdecl -> LOCALPARAM INTEGER param_substitution_list SEMICOLON .)
    INOUT           reduce using rule 91 (localparamdecl -> LOCALPARAM INTEGER param_substitution_list SEMICOLON .)
    TRI             reduce using rule 91 (localparamdecl -> LOCALPARAM INTEGER param_substitution_list SEMICOLON .)
    REG             reduce using rule 91 (localparamdecl -> LOCALPARAM INTEGER param_substitution_list SEMICOLON .)
    WIRE            reduce using rule 91 (localparamdecl -> LOCALPARAM INTEGER param_substitution_list SEMICOLON .)
    SIGNED          reduce using rule 91 (localparamdecl -> LOCALPARAM INTEGER param_substitution_list SEMICOLON .)
    ELSE            reduce using rule 91 (localparamdecl -> LOCALPARAM INTEGER param_substitution_list SEMICOLON .)
    END             reduce using rule 91 (localparamdecl -> LOCALPARAM INTEGER param_substitution_list SEMICOLON .)
    CASE            reduce using rule 91 (localparamdecl -> LOCALPARAM INTEGER param_substitution_list SEMICOLON .)
    WHILE           reduce using rule 91 (localparamdecl -> LOCALPARAM INTEGER param_substitution_list SEMICOLON .)
    WAIT            reduce using rule 91 (localparamdecl -> LOCALPARAM INTEGER param_substitution_list SEMICOLON .)
    FOREVER         reduce using rule 91 (localparamdecl -> LOCALPARAM INTEGER param_substitution_list SEMICOLON .)
    BEGIN           reduce using rule 91 (localparamdecl -> LOCALPARAM INTEGER param_substitution_list SEMICOLON .)
    FORK            reduce using rule 91 (localparamdecl -> LOCALPARAM INTEGER param_substitution_list SEMICOLON .)
    DELAY           reduce using rule 91 (localparamdecl -> LOCALPARAM INTEGER param_substitution_list SEMICOLON .)
    AT              reduce using rule 91 (localparamdecl -> LOCALPARAM INTEGER param_substitution_list SEMICOLON .)
    DOLLER          reduce using rule 91 (localparamdecl -> LOCALPARAM INTEGER param_substitution_list SEMICOLON .)
    DISABLE         reduce using rule 91 (localparamdecl -> LOCALPARAM INTEGER param_substitution_list SEMICOLON .)
    LBRACE          reduce using rule 91 (localparamdecl -> LOCALPARAM INTEGER param_substitution_list SEMICOLON .)
    SEMICOLON       reduce using rule 91 (localparamdecl -> LOCALPARAM INTEGER param_substitution_list SEMICOLON .)
    ENDMODULE       reduce using rule 91 (localparamdecl -> LOCALPARAM INTEGER param_substitution_list SEMICOLON .)
    GENERATE        reduce using rule 91 (localparamdecl -> LOCALPARAM INTEGER param_substitution_list SEMICOLON .)


state 446

    (94) param_substitution -> ID EQUALS rvalue .

    SEMICOLON       reduce using rule 94 (param_substitution -> ID EQUALS rvalue .)
    COMMA           reduce using rule 94 (param_substitution -> ID EQUALS rvalue .)
    RPAREN          reduce using rule 94 (param_substitution -> ID EQUALS rvalue .)


state 447

    (92) param_substitution_list -> param_substitution_list COMMA param_substitution .

    SEMICOLON       reduce using rule 92 (param_substitution_list -> param_substitution_list COMMA param_substitution .)
    COMMA           reduce using rule 92 (param_substitution_list -> param_substitution_list COMMA param_substitution .)
    RPAREN          reduce using rule 92 (param_substitution_list -> param_substitution_list COMMA param_substitution .)


state 448

    (316) generate_for -> FOR LPAREN forpre . forcond forpost RPAREN generate_forcontent
    (255) forcond -> . cond SEMICOLON
    (256) forcond -> . SEMICOLON
    (248) cond -> . expression
    (116) expression -> . MINUS expression
    (117) expression -> . PLUS expression
    (118) expression -> . LNOT expression
    (119) expression -> . NOT expression
    (120) expression -> . AND expression
    (121) expression -> . NAND expression
    (122) expression -> . NOR expression
    (123) expression -> . OR expression
    (124) expression -> . XOR expression
    (125) expression -> . XNOR expression
    (126) expression -> . expression POWER expression
    (127) expression -> . expression TIMES expression
    (128) expression -> . expression DIVIDE expression
    (129) expression -> . expression MOD expression
    (130) expression -> . expression PLUS expression
    (131) expression -> . expression MINUS expression
    (132) expression -> . expression LSHIFT expression
    (133) expression -> . expression RSHIFT expression
    (134) expression -> . expression LSHIFTA expression
    (135) expression -> . expression RSHIFTA expression
    (136) expression -> . expression LT expression
    (137) expression -> . expression GT expression
    (138) expression -> . expression LE expression
    (139) expression -> . expression GE expression
    (140) expression -> . expression EQ expression
    (141) expression -> . expression NE expression
    (142) expression -> . expression EQL expression
    (143) expression -> . expression NEL expression
    (144) expression -> . expression AND expression
    (145) expression -> . expression XOR expression
    (146) expression -> . expression XNOR expression
    (147) expression -> . expression OR expression
    (148) expression -> . expression LAND expression
    (149) expression -> . expression LOR expression
    (150) expression -> . expression COND expression COLON expression
    (151) expression -> . LPAREN expression RPAREN
    (152) expression -> . concat
    (153) expression -> . repeat
    (154) expression -> . partselect
    (155) expression -> . pointer
    (156) expression -> . functioncall
    (157) expression -> . systemcall
    (158) expression -> . identifier
    (159) expression -> . const_expression
    (160) concat -> . LBRACE concatlist RBRACE
    (163) repeat -> . LBRACE expression concat RBRACE
    (164) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (165) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (166) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (167) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (168) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (169) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (170) pointer -> . identifier LBRACKET expression RBRACKET
    (171) pointer -> . pointer LBRACKET expression RBRACKET
    (339) functioncall -> . identifier LPAREN func_args RPAREN
    (319) systemcall -> . DOLLER ID
    (320) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (357) identifier -> . ID
    (358) identifier -> . scope ID
    (172) const_expression -> . intnumber
    (173) const_expression -> . floatnumber
    (174) const_expression -> . stringliteral
    (359) scope -> . identifier DOT
    (360) scope -> . pointer DOT
    (176) intnumber -> . INTNUMBER_DEC
    (177) intnumber -> . SIGNED_INTNUMBER_DEC
    (178) intnumber -> . INTNUMBER_BIN
    (179) intnumber -> . SIGNED_INTNUMBER_BIN
    (180) intnumber -> . INTNUMBER_OCT
    (181) intnumber -> . SIGNED_INTNUMBER_OCT
    (182) intnumber -> . INTNUMBER_HEX
    (183) intnumber -> . SIGNED_INTNUMBER_HEX
    (175) floatnumber -> . FLOATNUMBER
    (184) stringliteral -> . STRING_LITERAL

    SEMICOLON       shift and go to state 508
    MINUS           shift and go to state 97
    PLUS            shift and go to state 89
    LNOT            shift and go to state 95
    NOT             shift and go to state 78
    AND             shift and go to state 91
    NAND            shift and go to state 98
    NOR             shift and go to state 76
    OR              shift and go to state 105
    XOR             shift and go to state 82
    XNOR            shift and go to state 87
    LPAREN          shift and go to state 96
    LBRACE          shift and go to state 77
    DOLLER          shift and go to state 100
    ID              shift and go to state 85
    INTNUMBER_DEC   shift and go to state 79
    SIGNED_INTNUMBER_DEC shift and go to state 101
    INTNUMBER_BIN   shift and go to state 111
    SIGNED_INTNUMBER_BIN shift and go to state 112
    INTNUMBER_OCT   shift and go to state 86
    SIGNED_INTNUMBER_OCT shift and go to state 106
    INTNUMBER_HEX   shift and go to state 93
    SIGNED_INTNUMBER_HEX shift and go to state 83
    FLOATNUMBER     shift and go to state 102
    STRING_LITERAL  shift and go to state 107

    stringliteral                  shift and go to state 99
    functioncall                   shift and go to state 94
    intnumber                      shift and go to state 81
    expression                     shift and go to state 398
    repeat                         shift and go to state 108
    partselect                     shift and go to state 103
    forcond                        shift and go to state 559
    pointer                        shift and go to state 80
    scope                          shift and go to state 84
    systemcall                     shift and go to state 109
    identifier                     shift and go to state 104
    const_expression               shift and go to state 110
    concat                         shift and go to state 88
    floatnumber                    shift and go to state 90
    cond                           shift and go to state 509

state 449

    (310) generate_if -> IF LPAREN cond . RPAREN gif_true_item ELSE gif_false_item
    (311) generate_if -> IF LPAREN cond . RPAREN gif_true_item

    RPAREN          shift and go to state 560


state 450

    (69) declnamelist -> declnamelist COMMA declname .

    SEMICOLON       reduce using rule 69 (declnamelist -> declnamelist COMMA declname .)
    COMMA           reduce using rule 69 (declnamelist -> declnamelist COMMA declname .)


state 451

    (71) declname -> ID .
    (72) declname -> ID . length
    (47) length -> . LBRACKET expression COLON expression RBRACKET

    SEMICOLON       reduce using rule 71 (declname -> ID .)
    COMMA           reduce using rule 71 (declname -> ID .)
    LBRACKET        shift and go to state 336

    length                         shift and go to state 338

state 452

    (76) declassign_element -> delays ID EQUALS . delays rvalue
    (222) delays -> . DELAY LPAREN expression RPAREN
    (223) delays -> . DELAY identifier
    (224) delays -> . DELAY intnumber
    (225) delays -> . DELAY floatnumber
    (226) delays -> . empty
    (365) empty -> .

    DELAY           shift and go to state 170
    MINUS           reduce using rule 365 (empty -> .)
    PLUS            reduce using rule 365 (empty -> .)
    LNOT            reduce using rule 365 (empty -> .)
    NOT             reduce using rule 365 (empty -> .)
    AND             reduce using rule 365 (empty -> .)
    NAND            reduce using rule 365 (empty -> .)
    NOR             reduce using rule 365 (empty -> .)
    OR              reduce using rule 365 (empty -> .)
    XOR             reduce using rule 365 (empty -> .)
    XNOR            reduce using rule 365 (empty -> .)
    LPAREN          reduce using rule 365 (empty -> .)
    LBRACE          reduce using rule 365 (empty -> .)
    DOLLER          reduce using rule 365 (empty -> .)
    ID              reduce using rule 365 (empty -> .)
    INTNUMBER_DEC   reduce using rule 365 (empty -> .)
    SIGNED_INTNUMBER_DEC reduce using rule 365 (empty -> .)
    INTNUMBER_BIN   reduce using rule 365 (empty -> .)
    SIGNED_INTNUMBER_BIN reduce using rule 365 (empty -> .)
    INTNUMBER_OCT   reduce using rule 365 (empty -> .)
    SIGNED_INTNUMBER_OCT reduce using rule 365 (empty -> .)
    INTNUMBER_HEX   reduce using rule 365 (empty -> .)
    SIGNED_INTNUMBER_HEX reduce using rule 365 (empty -> .)
    FLOATNUMBER     reduce using rule 365 (empty -> .)
    STRING_LITERAL  reduce using rule 365 (empty -> .)

    empty                          shift and go to state 163
    delays                         shift and go to state 561

state 453

    (74) declassign -> sigtypes width declassign_element SEMICOLON .

    ELSE            reduce using rule 74 (declassign -> sigtypes width declassign_element SEMICOLON .)
    ENDGENERATE     reduce using rule 74 (declassign -> sigtypes width declassign_element SEMICOLON .)
    IF              reduce using rule 74 (declassign -> sigtypes width declassign_element SEMICOLON .)
    FOR             reduce using rule 74 (declassign -> sigtypes width declassign_element SEMICOLON .)
    INTEGER         reduce using rule 74 (declassign -> sigtypes width declassign_element SEMICOLON .)
    REAL            reduce using rule 74 (declassign -> sigtypes width declassign_element SEMICOLON .)
    PARAMETER       reduce using rule 74 (declassign -> sigtypes width declassign_element SEMICOLON .)
    LOCALPARAM      reduce using rule 74 (declassign -> sigtypes width declassign_element SEMICOLON .)
    GENVAR          reduce using rule 74 (declassign -> sigtypes width declassign_element SEMICOLON .)
    ASSIGN          reduce using rule 74 (declassign -> sigtypes width declassign_element SEMICOLON .)
    ALWAYS          reduce using rule 74 (declassign -> sigtypes width declassign_element SEMICOLON .)
    INITIAL         reduce using rule 74 (declassign -> sigtypes width declassign_element SEMICOLON .)
    ID              reduce using rule 74 (declassign -> sigtypes width declassign_element SEMICOLON .)
    FUNCTION        reduce using rule 74 (declassign -> sigtypes width declassign_element SEMICOLON .)
    TASK            reduce using rule 74 (declassign -> sigtypes width declassign_element SEMICOLON .)
    LPAREN          reduce using rule 74 (declassign -> sigtypes width declassign_element SEMICOLON .)
    INPUT           reduce using rule 74 (declassign -> sigtypes width declassign_element SEMICOLON .)
    OUTPUT          reduce using rule 74 (declassign -> sigtypes width declassign_element SEMICOLON .)
    INOUT           reduce using rule 74 (declassign -> sigtypes width declassign_element SEMICOLON .)
    TRI             reduce using rule 74 (declassign -> sigtypes width declassign_element SEMICOLON .)
    REG             reduce using rule 74 (declassign -> sigtypes width declassign_element SEMICOLON .)
    WIRE            reduce using rule 74 (declassign -> sigtypes width declassign_element SEMICOLON .)
    SIGNED          reduce using rule 74 (declassign -> sigtypes width declassign_element SEMICOLON .)
    END             reduce using rule 74 (declassign -> sigtypes width declassign_element SEMICOLON .)
    ENDMODULE       reduce using rule 74 (declassign -> sigtypes width declassign_element SEMICOLON .)
    GENERATE        reduce using rule 74 (declassign -> sigtypes width declassign_element SEMICOLON .)


state 454

    (68) decl -> sigtypes width declnamelist SEMICOLON .

    END             reduce using rule 68 (decl -> sigtypes width declnamelist SEMICOLON .)
    IF              reduce using rule 68 (decl -> sigtypes width declnamelist SEMICOLON .)
    FOR             reduce using rule 68 (decl -> sigtypes width declnamelist SEMICOLON .)
    INTEGER         reduce using rule 68 (decl -> sigtypes width declnamelist SEMICOLON .)
    REAL            reduce using rule 68 (decl -> sigtypes width declnamelist SEMICOLON .)
    PARAMETER       reduce using rule 68 (decl -> sigtypes width declnamelist SEMICOLON .)
    LOCALPARAM      reduce using rule 68 (decl -> sigtypes width declnamelist SEMICOLON .)
    GENVAR          reduce using rule 68 (decl -> sigtypes width declnamelist SEMICOLON .)
    ASSIGN          reduce using rule 68 (decl -> sigtypes width declnamelist SEMICOLON .)
    ALWAYS          reduce using rule 68 (decl -> sigtypes width declnamelist SEMICOLON .)
    INITIAL         reduce using rule 68 (decl -> sigtypes width declnamelist SEMICOLON .)
    ID              reduce using rule 68 (decl -> sigtypes width declnamelist SEMICOLON .)
    FUNCTION        reduce using rule 68 (decl -> sigtypes width declnamelist SEMICOLON .)
    TASK            reduce using rule 68 (decl -> sigtypes width declnamelist SEMICOLON .)
    LPAREN          reduce using rule 68 (decl -> sigtypes width declnamelist SEMICOLON .)
    INPUT           reduce using rule 68 (decl -> sigtypes width declnamelist SEMICOLON .)
    OUTPUT          reduce using rule 68 (decl -> sigtypes width declnamelist SEMICOLON .)
    INOUT           reduce using rule 68 (decl -> sigtypes width declnamelist SEMICOLON .)
    TRI             reduce using rule 68 (decl -> sigtypes width declnamelist SEMICOLON .)
    REG             reduce using rule 68 (decl -> sigtypes width declnamelist SEMICOLON .)
    WIRE            reduce using rule 68 (decl -> sigtypes width declnamelist SEMICOLON .)
    SIGNED          reduce using rule 68 (decl -> sigtypes width declnamelist SEMICOLON .)
    ELSE            reduce using rule 68 (decl -> sigtypes width declnamelist SEMICOLON .)
    ENDGENERATE     reduce using rule 68 (decl -> sigtypes width declnamelist SEMICOLON .)
    CASE            reduce using rule 68 (decl -> sigtypes width declnamelist SEMICOLON .)
    WHILE           reduce using rule 68 (decl -> sigtypes width declnamelist SEMICOLON .)
    WAIT            reduce using rule 68 (decl -> sigtypes width declnamelist SEMICOLON .)
    FOREVER         reduce using rule 68 (decl -> sigtypes width declnamelist SEMICOLON .)
    BEGIN           reduce using rule 68 (decl -> sigtypes width declnamelist SEMICOLON .)
    FORK            reduce using rule 68 (decl -> sigtypes width declnamelist SEMICOLON .)
    DELAY           reduce using rule 68 (decl -> sigtypes width declnamelist SEMICOLON .)
    AT              reduce using rule 68 (decl -> sigtypes width declnamelist SEMICOLON .)
    DOLLER          reduce using rule 68 (decl -> sigtypes width declnamelist SEMICOLON .)
    DISABLE         reduce using rule 68 (decl -> sigtypes width declnamelist SEMICOLON .)
    LBRACE          reduce using rule 68 (decl -> sigtypes width declnamelist SEMICOLON .)
    SEMICOLON       reduce using rule 68 (decl -> sigtypes width declnamelist SEMICOLON .)
    ENDMODULE       reduce using rule 68 (decl -> sigtypes width declnamelist SEMICOLON .)
    GENERATE        reduce using rule 68 (decl -> sigtypes width declnamelist SEMICOLON .)


state 455

    (47) length -> LBRACKET expression . COLON expression RBRACKET
    (126) expression -> expression . POWER expression
    (127) expression -> expression . TIMES expression
    (128) expression -> expression . DIVIDE expression
    (129) expression -> expression . MOD expression
    (130) expression -> expression . PLUS expression
    (131) expression -> expression . MINUS expression
    (132) expression -> expression . LSHIFT expression
    (133) expression -> expression . RSHIFT expression
    (134) expression -> expression . LSHIFTA expression
    (135) expression -> expression . RSHIFTA expression
    (136) expression -> expression . LT expression
    (137) expression -> expression . GT expression
    (138) expression -> expression . LE expression
    (139) expression -> expression . GE expression
    (140) expression -> expression . EQ expression
    (141) expression -> expression . NE expression
    (142) expression -> expression . EQL expression
    (143) expression -> expression . NEL expression
    (144) expression -> expression . AND expression
    (145) expression -> expression . XOR expression
    (146) expression -> expression . XNOR expression
    (147) expression -> expression . OR expression
    (148) expression -> expression . LAND expression
    (149) expression -> expression . LOR expression
    (150) expression -> expression . COND expression COLON expression

    COLON           shift and go to state 562
    POWER           shift and go to state 246
    TIMES           shift and go to state 349
    DIVIDE          shift and go to state 244
    MOD             shift and go to state 231
    PLUS            shift and go to state 240
    MINUS           shift and go to state 229
    LSHIFT          shift and go to state 243
    RSHIFT          shift and go to state 226
    LSHIFTA         shift and go to state 241
    RSHIFTA         shift and go to state 238
    LT              shift and go to state 235
    GT              shift and go to state 228
    LE              shift and go to state 222
    GE              shift and go to state 239
    EQ              shift and go to state 223
    NE              shift and go to state 225
    EQL             shift and go to state 245
    NEL             shift and go to state 242
    AND             shift and go to state 224
    XOR             shift and go to state 237
    XNOR            shift and go to state 232
    OR              shift and go to state 234
    LAND            shift and go to state 227
    LOR             shift and go to state 230
    COND            shift and go to state 233


state 456

    (75) declassign_element -> ID EQUALS rvalue .

    SEMICOLON       reduce using rule 75 (declassign_element -> ID EQUALS rvalue .)


state 457

    (87) parameterdecl -> PARAMETER width param_substitution_list SEMICOLON .

    END             reduce using rule 87 (parameterdecl -> PARAMETER width param_substitution_list SEMICOLON .)
    IF              reduce using rule 87 (parameterdecl -> PARAMETER width param_substitution_list SEMICOLON .)
    FOR             reduce using rule 87 (parameterdecl -> PARAMETER width param_substitution_list SEMICOLON .)
    INTEGER         reduce using rule 87 (parameterdecl -> PARAMETER width param_substitution_list SEMICOLON .)
    REAL            reduce using rule 87 (parameterdecl -> PARAMETER width param_substitution_list SEMICOLON .)
    PARAMETER       reduce using rule 87 (parameterdecl -> PARAMETER width param_substitution_list SEMICOLON .)
    LOCALPARAM      reduce using rule 87 (parameterdecl -> PARAMETER width param_substitution_list SEMICOLON .)
    GENVAR          reduce using rule 87 (parameterdecl -> PARAMETER width param_substitution_list SEMICOLON .)
    ASSIGN          reduce using rule 87 (parameterdecl -> PARAMETER width param_substitution_list SEMICOLON .)
    ALWAYS          reduce using rule 87 (parameterdecl -> PARAMETER width param_substitution_list SEMICOLON .)
    INITIAL         reduce using rule 87 (parameterdecl -> PARAMETER width param_substitution_list SEMICOLON .)
    ID              reduce using rule 87 (parameterdecl -> PARAMETER width param_substitution_list SEMICOLON .)
    FUNCTION        reduce using rule 87 (parameterdecl -> PARAMETER width param_substitution_list SEMICOLON .)
    TASK            reduce using rule 87 (parameterdecl -> PARAMETER width param_substitution_list SEMICOLON .)
    LPAREN          reduce using rule 87 (parameterdecl -> PARAMETER width param_substitution_list SEMICOLON .)
    INPUT           reduce using rule 87 (parameterdecl -> PARAMETER width param_substitution_list SEMICOLON .)
    OUTPUT          reduce using rule 87 (parameterdecl -> PARAMETER width param_substitution_list SEMICOLON .)
    INOUT           reduce using rule 87 (parameterdecl -> PARAMETER width param_substitution_list SEMICOLON .)
    TRI             reduce using rule 87 (parameterdecl -> PARAMETER width param_substitution_list SEMICOLON .)
    REG             reduce using rule 87 (parameterdecl -> PARAMETER width param_substitution_list SEMICOLON .)
    WIRE            reduce using rule 87 (parameterdecl -> PARAMETER width param_substitution_list SEMICOLON .)
    SIGNED          reduce using rule 87 (parameterdecl -> PARAMETER width param_substitution_list SEMICOLON .)
    ENDMODULE       reduce using rule 87 (parameterdecl -> PARAMETER width param_substitution_list SEMICOLON .)
    GENERATE        reduce using rule 87 (parameterdecl -> PARAMETER width param_substitution_list SEMICOLON .)
    ELSE            reduce using rule 87 (parameterdecl -> PARAMETER width param_substitution_list SEMICOLON .)
    ENDGENERATE     reduce using rule 87 (parameterdecl -> PARAMETER width param_substitution_list SEMICOLON .)
    CASE            reduce using rule 87 (parameterdecl -> PARAMETER width param_substitution_list SEMICOLON .)
    WHILE           reduce using rule 87 (parameterdecl -> PARAMETER width param_substitution_list SEMICOLON .)
    WAIT            reduce using rule 87 (parameterdecl -> PARAMETER width param_substitution_list SEMICOLON .)
    FOREVER         reduce using rule 87 (parameterdecl -> PARAMETER width param_substitution_list SEMICOLON .)
    BEGIN           reduce using rule 87 (parameterdecl -> PARAMETER width param_substitution_list SEMICOLON .)
    FORK            reduce using rule 87 (parameterdecl -> PARAMETER width param_substitution_list SEMICOLON .)
    DELAY           reduce using rule 87 (parameterdecl -> PARAMETER width param_substitution_list SEMICOLON .)
    AT              reduce using rule 87 (parameterdecl -> PARAMETER width param_substitution_list SEMICOLON .)
    DOLLER          reduce using rule 87 (parameterdecl -> PARAMETER width param_substitution_list SEMICOLON .)
    DISABLE         reduce using rule 87 (parameterdecl -> PARAMETER width param_substitution_list SEMICOLON .)
    LBRACE          reduce using rule 87 (parameterdecl -> PARAMETER width param_substitution_list SEMICOLON .)
    SEMICOLON       reduce using rule 87 (parameterdecl -> PARAMETER width param_substitution_list SEMICOLON .)


state 458

    (88) parameterdecl -> PARAMETER INTEGER param_substitution_list SEMICOLON .

    END             reduce using rule 88 (parameterdecl -> PARAMETER INTEGER param_substitution_list SEMICOLON .)
    IF              reduce using rule 88 (parameterdecl -> PARAMETER INTEGER param_substitution_list SEMICOLON .)
    FOR             reduce using rule 88 (parameterdecl -> PARAMETER INTEGER param_substitution_list SEMICOLON .)
    INTEGER         reduce using rule 88 (parameterdecl -> PARAMETER INTEGER param_substitution_list SEMICOLON .)
    REAL            reduce using rule 88 (parameterdecl -> PARAMETER INTEGER param_substitution_list SEMICOLON .)
    PARAMETER       reduce using rule 88 (parameterdecl -> PARAMETER INTEGER param_substitution_list SEMICOLON .)
    LOCALPARAM      reduce using rule 88 (parameterdecl -> PARAMETER INTEGER param_substitution_list SEMICOLON .)
    GENVAR          reduce using rule 88 (parameterdecl -> PARAMETER INTEGER param_substitution_list SEMICOLON .)
    ASSIGN          reduce using rule 88 (parameterdecl -> PARAMETER INTEGER param_substitution_list SEMICOLON .)
    ALWAYS          reduce using rule 88 (parameterdecl -> PARAMETER INTEGER param_substitution_list SEMICOLON .)
    INITIAL         reduce using rule 88 (parameterdecl -> PARAMETER INTEGER param_substitution_list SEMICOLON .)
    ID              reduce using rule 88 (parameterdecl -> PARAMETER INTEGER param_substitution_list SEMICOLON .)
    FUNCTION        reduce using rule 88 (parameterdecl -> PARAMETER INTEGER param_substitution_list SEMICOLON .)
    TASK            reduce using rule 88 (parameterdecl -> PARAMETER INTEGER param_substitution_list SEMICOLON .)
    LPAREN          reduce using rule 88 (parameterdecl -> PARAMETER INTEGER param_substitution_list SEMICOLON .)
    INPUT           reduce using rule 88 (parameterdecl -> PARAMETER INTEGER param_substitution_list SEMICOLON .)
    OUTPUT          reduce using rule 88 (parameterdecl -> PARAMETER INTEGER param_substitution_list SEMICOLON .)
    INOUT           reduce using rule 88 (parameterdecl -> PARAMETER INTEGER param_substitution_list SEMICOLON .)
    TRI             reduce using rule 88 (parameterdecl -> PARAMETER INTEGER param_substitution_list SEMICOLON .)
    REG             reduce using rule 88 (parameterdecl -> PARAMETER INTEGER param_substitution_list SEMICOLON .)
    WIRE            reduce using rule 88 (parameterdecl -> PARAMETER INTEGER param_substitution_list SEMICOLON .)
    SIGNED          reduce using rule 88 (parameterdecl -> PARAMETER INTEGER param_substitution_list SEMICOLON .)
    ENDMODULE       reduce using rule 88 (parameterdecl -> PARAMETER INTEGER param_substitution_list SEMICOLON .)
    GENERATE        reduce using rule 88 (parameterdecl -> PARAMETER INTEGER param_substitution_list SEMICOLON .)
    ELSE            reduce using rule 88 (parameterdecl -> PARAMETER INTEGER param_substitution_list SEMICOLON .)
    ENDGENERATE     reduce using rule 88 (parameterdecl -> PARAMETER INTEGER param_substitution_list SEMICOLON .)
    CASE            reduce using rule 88 (parameterdecl -> PARAMETER INTEGER param_substitution_list SEMICOLON .)
    WHILE           reduce using rule 88 (parameterdecl -> PARAMETER INTEGER param_substitution_list SEMICOLON .)
    WAIT            reduce using rule 88 (parameterdecl -> PARAMETER INTEGER param_substitution_list SEMICOLON .)
    FOREVER         reduce using rule 88 (parameterdecl -> PARAMETER INTEGER param_substitution_list SEMICOLON .)
    BEGIN           reduce using rule 88 (parameterdecl -> PARAMETER INTEGER param_substitution_list SEMICOLON .)
    FORK            reduce using rule 88 (parameterdecl -> PARAMETER INTEGER param_substitution_list SEMICOLON .)
    DELAY           reduce using rule 88 (parameterdecl -> PARAMETER INTEGER param_substitution_list SEMICOLON .)
    AT              reduce using rule 88 (parameterdecl -> PARAMETER INTEGER param_substitution_list SEMICOLON .)
    DOLLER          reduce using rule 88 (parameterdecl -> PARAMETER INTEGER param_substitution_list SEMICOLON .)
    DISABLE         reduce using rule 88 (parameterdecl -> PARAMETER INTEGER param_substitution_list SEMICOLON .)
    LBRACE          reduce using rule 88 (parameterdecl -> PARAMETER INTEGER param_substitution_list SEMICOLON .)
    SEMICOLON       reduce using rule 88 (parameterdecl -> PARAMETER INTEGER param_substitution_list SEMICOLON .)


state 459

    (347) taskvardecls -> empty .

    IF              reduce using rule 347 (taskvardecls -> empty .)
    FOR             reduce using rule 347 (taskvardecls -> empty .)
    WHILE           reduce using rule 347 (taskvardecls -> empty .)
    CASE            reduce using rule 347 (taskvardecls -> empty .)
    BEGIN           reduce using rule 347 (taskvardecls -> empty .)
    INTEGER         reduce using rule 347 (taskvardecls -> empty .)
    DELAY           reduce using rule 347 (taskvardecls -> empty .)
    INPUT           reduce using rule 347 (taskvardecls -> empty .)
    OUTPUT          reduce using rule 347 (taskvardecls -> empty .)
    INOUT           reduce using rule 347 (taskvardecls -> empty .)
    TRI             reduce using rule 347 (taskvardecls -> empty .)
    REG             reduce using rule 347 (taskvardecls -> empty .)
    WIRE            reduce using rule 347 (taskvardecls -> empty .)
    SIGNED          reduce using rule 347 (taskvardecls -> empty .)
    LBRACE          reduce using rule 347 (taskvardecls -> empty .)
    ID              reduce using rule 347 (taskvardecls -> empty .)


state 460

    (344) task_statement -> taskvardecls . task_calc
    (345) taskvardecls -> taskvardecls . taskvardecl
    (350) task_calc -> . blocking_substitution
    (351) task_calc -> . if_statement
    (352) task_calc -> . for_statement
    (353) task_calc -> . while_statement
    (354) task_calc -> . case_statement
    (355) task_calc -> . block
    (356) task_calc -> . namedblock
    (348) taskvardecl -> . decl
    (349) taskvardecl -> . integerdecl
    (219) blocking_substitution -> . delays lvalue EQUALS delays rvalue SEMICOLON
    (244) if_statement -> . IF LPAREN cond RPAREN true_statement ELSE else_statement
    (245) if_statement -> . IF LPAREN cond RPAREN true_statement
    (246) if_statement -> . delays IF LPAREN cond RPAREN true_statement ELSE else_statement
    (247) if_statement -> . delays IF LPAREN cond RPAREN true_statement
    (252) for_statement -> . FOR LPAREN forpre forcond forpost RPAREN forcontent_statement
    (260) while_statement -> . WHILE LPAREN cond RPAREN whilecontent_statement
    (262) case_statement -> . CASE LPAREN case_comp RPAREN casecontent_statements ENDCASE
    (227) block -> . BEGIN block_statements END
    (228) block -> . BEGIN END
    (232) namedblock -> . BEGIN COLON ID namedblock_statements END
    (233) namedblock -> . BEGIN COLON ID END
    (67) decl -> . sigtypes declnamelist SEMICOLON
    (68) decl -> . sigtypes width declnamelist SEMICOLON
    (77) integerdecl -> . INTEGER integernamelist SEMICOLON
    (78) integerdecl -> . INTEGER SIGNED integernamelist SEMICOLON
    (222) delays -> . DELAY LPAREN expression RPAREN
    (223) delays -> . DELAY identifier
    (224) delays -> . DELAY intnumber
    (225) delays -> . DELAY floatnumber
    (226) delays -> . empty
    (30) sigtypes -> . sigtypes sigtype
    (31) sigtypes -> . sigtype
    (365) empty -> .
    (32) sigtype -> . INPUT
    (33) sigtype -> . OUTPUT
    (34) sigtype -> . INOUT
    (35) sigtype -> . TRI
    (36) sigtype -> . REG
    (37) sigtype -> . WIRE
    (38) sigtype -> . SIGNED

  ! shift/reduce conflict for IF resolved as shift
    IF              shift and go to state 150
    FOR             shift and go to state 144
    WHILE           shift and go to state 146
    CASE            shift and go to state 136
    BEGIN           shift and go to state 153
    INTEGER         shift and go to state 69
    DELAY           shift and go to state 170
    LBRACE          reduce using rule 365 (empty -> .)
    ID              reduce using rule 365 (empty -> .)
    INPUT           shift and go to state 37
    OUTPUT          shift and go to state 24
    INOUT           shift and go to state 25
    TRI             shift and go to state 36
    REG             shift and go to state 35
    WIRE            shift and go to state 26
    SIGNED          shift and go to state 29

  ! IF              [ reduce using rule 365 (empty -> .) ]

    for_statement                  shift and go to state 563
    empty                          shift and go to state 163
    if_statement                   shift and go to state 564
    while_statement                shift and go to state 568
    taskvardecl                    shift and go to state 569
    sigtypes                       shift and go to state 394
    task_calc                      shift and go to state 570
    blocking_substitution          shift and go to state 565
    decl                           shift and go to state 463
    integerdecl                    shift and go to state 464
    case_statement                 shift and go to state 566
    block                          shift and go to state 571
    delays                         shift and go to state 495
    sigtype                        shift and go to state 33
    namedblock                     shift and go to state 567

state 461

    (346) taskvardecls -> taskvardecl .

    IF              reduce using rule 346 (taskvardecls -> taskvardecl .)
    FOR             reduce using rule 346 (taskvardecls -> taskvardecl .)
    WHILE           reduce using rule 346 (taskvardecls -> taskvardecl .)
    CASE            reduce using rule 346 (taskvardecls -> taskvardecl .)
    BEGIN           reduce using rule 346 (taskvardecls -> taskvardecl .)
    INTEGER         reduce using rule 346 (taskvardecls -> taskvardecl .)
    DELAY           reduce using rule 346 (taskvardecls -> taskvardecl .)
    INPUT           reduce using rule 346 (taskvardecls -> taskvardecl .)
    OUTPUT          reduce using rule 346 (taskvardecls -> taskvardecl .)
    INOUT           reduce using rule 346 (taskvardecls -> taskvardecl .)
    TRI             reduce using rule 346 (taskvardecls -> taskvardecl .)
    REG             reduce using rule 346 (taskvardecls -> taskvardecl .)
    WIRE            reduce using rule 346 (taskvardecls -> taskvardecl .)
    SIGNED          reduce using rule 346 (taskvardecls -> taskvardecl .)
    LBRACE          reduce using rule 346 (taskvardecls -> taskvardecl .)
    ID              reduce using rule 346 (taskvardecls -> taskvardecl .)


state 462

    (343) task -> TASK ID SEMICOLON task_statement . ENDTASK

    ENDTASK         shift and go to state 572


state 463

    (348) taskvardecl -> decl .

    IF              reduce using rule 348 (taskvardecl -> decl .)
    FOR             reduce using rule 348 (taskvardecl -> decl .)
    WHILE           reduce using rule 348 (taskvardecl -> decl .)
    CASE            reduce using rule 348 (taskvardecl -> decl .)
    BEGIN           reduce using rule 348 (taskvardecl -> decl .)
    INTEGER         reduce using rule 348 (taskvardecl -> decl .)
    DELAY           reduce using rule 348 (taskvardecl -> decl .)
    INPUT           reduce using rule 348 (taskvardecl -> decl .)
    OUTPUT          reduce using rule 348 (taskvardecl -> decl .)
    INOUT           reduce using rule 348 (taskvardecl -> decl .)
    TRI             reduce using rule 348 (taskvardecl -> decl .)
    REG             reduce using rule 348 (taskvardecl -> decl .)
    WIRE            reduce using rule 348 (taskvardecl -> decl .)
    SIGNED          reduce using rule 348 (taskvardecl -> decl .)
    LBRACE          reduce using rule 348 (taskvardecl -> decl .)
    ID              reduce using rule 348 (taskvardecl -> decl .)


state 464

    (349) taskvardecl -> integerdecl .

    IF              reduce using rule 349 (taskvardecl -> integerdecl .)
    FOR             reduce using rule 349 (taskvardecl -> integerdecl .)
    WHILE           reduce using rule 349 (taskvardecl -> integerdecl .)
    CASE            reduce using rule 349 (taskvardecl -> integerdecl .)
    BEGIN           reduce using rule 349 (taskvardecl -> integerdecl .)
    INTEGER         reduce using rule 349 (taskvardecl -> integerdecl .)
    DELAY           reduce using rule 349 (taskvardecl -> integerdecl .)
    INPUT           reduce using rule 349 (taskvardecl -> integerdecl .)
    OUTPUT          reduce using rule 349 (taskvardecl -> integerdecl .)
    INOUT           reduce using rule 349 (taskvardecl -> integerdecl .)
    TRI             reduce using rule 349 (taskvardecl -> integerdecl .)
    REG             reduce using rule 349 (taskvardecl -> integerdecl .)
    WIRE            reduce using rule 349 (taskvardecl -> integerdecl .)
    SIGNED          reduce using rule 349 (taskvardecl -> integerdecl .)
    LBRACE          reduce using rule 349 (taskvardecl -> integerdecl .)
    ID              reduce using rule 349 (taskvardecl -> integerdecl .)


state 465

    (78) integerdecl -> INTEGER SIGNED integernamelist SEMICOLON .

    IF              reduce using rule 78 (integerdecl -> INTEGER SIGNED integernamelist SEMICOLON .)
    FOR             reduce using rule 78 (integerdecl -> INTEGER SIGNED integernamelist SEMICOLON .)
    WHILE           reduce using rule 78 (integerdecl -> INTEGER SIGNED integernamelist SEMICOLON .)
    CASE            reduce using rule 78 (integerdecl -> INTEGER SIGNED integernamelist SEMICOLON .)
    BEGIN           reduce using rule 78 (integerdecl -> INTEGER SIGNED integernamelist SEMICOLON .)
    INTEGER         reduce using rule 78 (integerdecl -> INTEGER SIGNED integernamelist SEMICOLON .)
    DELAY           reduce using rule 78 (integerdecl -> INTEGER SIGNED integernamelist SEMICOLON .)
    INPUT           reduce using rule 78 (integerdecl -> INTEGER SIGNED integernamelist SEMICOLON .)
    OUTPUT          reduce using rule 78 (integerdecl -> INTEGER SIGNED integernamelist SEMICOLON .)
    INOUT           reduce using rule 78 (integerdecl -> INTEGER SIGNED integernamelist SEMICOLON .)
    TRI             reduce using rule 78 (integerdecl -> INTEGER SIGNED integernamelist SEMICOLON .)
    REG             reduce using rule 78 (integerdecl -> INTEGER SIGNED integernamelist SEMICOLON .)
    WIRE            reduce using rule 78 (integerdecl -> INTEGER SIGNED integernamelist SEMICOLON .)
    SIGNED          reduce using rule 78 (integerdecl -> INTEGER SIGNED integernamelist SEMICOLON .)
    LBRACE          reduce using rule 78 (integerdecl -> INTEGER SIGNED integernamelist SEMICOLON .)
    ID              reduce using rule 78 (integerdecl -> INTEGER SIGNED integernamelist SEMICOLON .)
    END             reduce using rule 78 (integerdecl -> INTEGER SIGNED integernamelist SEMICOLON .)
    REAL            reduce using rule 78 (integerdecl -> INTEGER SIGNED integernamelist SEMICOLON .)
    PARAMETER       reduce using rule 78 (integerdecl -> INTEGER SIGNED integernamelist SEMICOLON .)
    LOCALPARAM      reduce using rule 78 (integerdecl -> INTEGER SIGNED integernamelist SEMICOLON .)
    GENVAR          reduce using rule 78 (integerdecl -> INTEGER SIGNED integernamelist SEMICOLON .)
    ASSIGN          reduce using rule 78 (integerdecl -> INTEGER SIGNED integernamelist SEMICOLON .)
    ALWAYS          reduce using rule 78 (integerdecl -> INTEGER SIGNED integernamelist SEMICOLON .)
    INITIAL         reduce using rule 78 (integerdecl -> INTEGER SIGNED integernamelist SEMICOLON .)
    FUNCTION        reduce using rule 78 (integerdecl -> INTEGER SIGNED integernamelist SEMICOLON .)
    TASK            reduce using rule 78 (integerdecl -> INTEGER SIGNED integernamelist SEMICOLON .)
    LPAREN          reduce using rule 78 (integerdecl -> INTEGER SIGNED integernamelist SEMICOLON .)
    ENDMODULE       reduce using rule 78 (integerdecl -> INTEGER SIGNED integernamelist SEMICOLON .)
    GENERATE        reduce using rule 78 (integerdecl -> INTEGER SIGNED integernamelist SEMICOLON .)
    ENDGENERATE     reduce using rule 78 (integerdecl -> INTEGER SIGNED integernamelist SEMICOLON .)
    ELSE            reduce using rule 78 (integerdecl -> INTEGER SIGNED integernamelist SEMICOLON .)
    WAIT            reduce using rule 78 (integerdecl -> INTEGER SIGNED integernamelist SEMICOLON .)
    FOREVER         reduce using rule 78 (integerdecl -> INTEGER SIGNED integernamelist SEMICOLON .)
    FORK            reduce using rule 78 (integerdecl -> INTEGER SIGNED integernamelist SEMICOLON .)
    AT              reduce using rule 78 (integerdecl -> INTEGER SIGNED integernamelist SEMICOLON .)
    DOLLER          reduce using rule 78 (integerdecl -> INTEGER SIGNED integernamelist SEMICOLON .)
    DISABLE         reduce using rule 78 (integerdecl -> INTEGER SIGNED integernamelist SEMICOLON .)
    SEMICOLON       reduce using rule 78 (integerdecl -> INTEGER SIGNED integernamelist SEMICOLON .)


state 466

    (79) integernamelist -> integernamelist COMMA integername .

    SEMICOLON       reduce using rule 79 (integernamelist -> integernamelist COMMA integername .)
    COMMA           reduce using rule 79 (integernamelist -> integernamelist COMMA integername .)


state 467

    (18) param -> PARAMETER width param_substitution_list COMMA .
    (92) param_substitution_list -> param_substitution_list COMMA . param_substitution
    (94) param_substitution -> . ID EQUALS rvalue

    PARAMETER       reduce using rule 18 (param -> PARAMETER width param_substitution_list COMMA .)
    ID              shift and go to state 181

    param_substitution             shift and go to state 447

state 468

    (19) param -> PARAMETER INTEGER param_substitution_list COMMA .
    (92) param_substitution_list -> param_substitution_list COMMA . param_substitution
    (94) param_substitution -> . ID EQUALS rvalue

    PARAMETER       reduce using rule 19 (param -> PARAMETER INTEGER param_substitution_list COMMA .)
    ID              shift and go to state 181

    param_substitution             shift and go to state 447

state 469

    (162) concatlist -> expression .
    (126) expression -> expression . POWER expression
    (127) expression -> expression . TIMES expression
    (128) expression -> expression . DIVIDE expression
    (129) expression -> expression . MOD expression
    (130) expression -> expression . PLUS expression
    (131) expression -> expression . MINUS expression
    (132) expression -> expression . LSHIFT expression
    (133) expression -> expression . RSHIFT expression
    (134) expression -> expression . LSHIFTA expression
    (135) expression -> expression . RSHIFTA expression
    (136) expression -> expression . LT expression
    (137) expression -> expression . GT expression
    (138) expression -> expression . LE expression
    (139) expression -> expression . GE expression
    (140) expression -> expression . EQ expression
    (141) expression -> expression . NE expression
    (142) expression -> expression . EQL expression
    (143) expression -> expression . NEL expression
    (144) expression -> expression . AND expression
    (145) expression -> expression . XOR expression
    (146) expression -> expression . XNOR expression
    (147) expression -> expression . OR expression
    (148) expression -> expression . LAND expression
    (149) expression -> expression . LOR expression
    (150) expression -> expression . COND expression COLON expression

    RBRACE          reduce using rule 162 (concatlist -> expression .)
    COMMA           reduce using rule 162 (concatlist -> expression .)
    POWER           shift and go to state 246
    TIMES           shift and go to state 349
    DIVIDE          shift and go to state 244
    MOD             shift and go to state 231
    PLUS            shift and go to state 240
    MINUS           shift and go to state 229
    LSHIFT          shift and go to state 243
    RSHIFT          shift and go to state 226
    LSHIFTA         shift and go to state 241
    RSHIFTA         shift and go to state 238
    LT              shift and go to state 235
    GT              shift and go to state 228
    LE              shift and go to state 222
    GE              shift and go to state 239
    EQ              shift and go to state 223
    NE              shift and go to state 225
    EQL             shift and go to state 245
    NEL             shift and go to state 242
    AND             shift and go to state 224
    XOR             shift and go to state 237
    XNOR            shift and go to state 232
    OR              shift and go to state 234
    LAND            shift and go to state 227
    LOR             shift and go to state 230
    COND            shift and go to state 233


state 470

    (163) repeat -> LBRACE expression concat RBRACE .

    RBRACKET        reduce using rule 163 (repeat -> LBRACE expression concat RBRACE .)
    POWER           reduce using rule 163 (repeat -> LBRACE expression concat RBRACE .)
    TIMES           reduce using rule 163 (repeat -> LBRACE expression concat RBRACE .)
    DIVIDE          reduce using rule 163 (repeat -> LBRACE expression concat RBRACE .)
    MOD             reduce using rule 163 (repeat -> LBRACE expression concat RBRACE .)
    PLUS            reduce using rule 163 (repeat -> LBRACE expression concat RBRACE .)
    MINUS           reduce using rule 163 (repeat -> LBRACE expression concat RBRACE .)
    LSHIFT          reduce using rule 163 (repeat -> LBRACE expression concat RBRACE .)
    RSHIFT          reduce using rule 163 (repeat -> LBRACE expression concat RBRACE .)
    LSHIFTA         reduce using rule 163 (repeat -> LBRACE expression concat RBRACE .)
    RSHIFTA         reduce using rule 163 (repeat -> LBRACE expression concat RBRACE .)
    LT              reduce using rule 163 (repeat -> LBRACE expression concat RBRACE .)
    GT              reduce using rule 163 (repeat -> LBRACE expression concat RBRACE .)
    LE              reduce using rule 163 (repeat -> LBRACE expression concat RBRACE .)
    GE              reduce using rule 163 (repeat -> LBRACE expression concat RBRACE .)
    EQ              reduce using rule 163 (repeat -> LBRACE expression concat RBRACE .)
    NE              reduce using rule 163 (repeat -> LBRACE expression concat RBRACE .)
    EQL             reduce using rule 163 (repeat -> LBRACE expression concat RBRACE .)
    NEL             reduce using rule 163 (repeat -> LBRACE expression concat RBRACE .)
    AND             reduce using rule 163 (repeat -> LBRACE expression concat RBRACE .)
    XOR             reduce using rule 163 (repeat -> LBRACE expression concat RBRACE .)
    XNOR            reduce using rule 163 (repeat -> LBRACE expression concat RBRACE .)
    OR              reduce using rule 163 (repeat -> LBRACE expression concat RBRACE .)
    LAND            reduce using rule 163 (repeat -> LBRACE expression concat RBRACE .)
    LOR             reduce using rule 163 (repeat -> LBRACE expression concat RBRACE .)
    COND            reduce using rule 163 (repeat -> LBRACE expression concat RBRACE .)
    COLON           reduce using rule 163 (repeat -> LBRACE expression concat RBRACE .)
    COMMA           reduce using rule 163 (repeat -> LBRACE expression concat RBRACE .)
    RPAREN          reduce using rule 163 (repeat -> LBRACE expression concat RBRACE .)
    SEMICOLON       reduce using rule 163 (repeat -> LBRACE expression concat RBRACE .)
    LBRACE          reduce using rule 163 (repeat -> LBRACE expression concat RBRACE .)
    RBRACE          reduce using rule 163 (repeat -> LBRACE expression concat RBRACE .)
    PLUSCOLON       reduce using rule 163 (repeat -> LBRACE expression concat RBRACE .)
    MINUSCOLON      reduce using rule 163 (repeat -> LBRACE expression concat RBRACE .)


state 471

    (161) concatlist -> concatlist COMMA expression .
    (126) expression -> expression . POWER expression
    (127) expression -> expression . TIMES expression
    (128) expression -> expression . DIVIDE expression
    (129) expression -> expression . MOD expression
    (130) expression -> expression . PLUS expression
    (131) expression -> expression . MINUS expression
    (132) expression -> expression . LSHIFT expression
    (133) expression -> expression . RSHIFT expression
    (134) expression -> expression . LSHIFTA expression
    (135) expression -> expression . RSHIFTA expression
    (136) expression -> expression . LT expression
    (137) expression -> expression . GT expression
    (138) expression -> expression . LE expression
    (139) expression -> expression . GE expression
    (140) expression -> expression . EQ expression
    (141) expression -> expression . NE expression
    (142) expression -> expression . EQL expression
    (143) expression -> expression . NEL expression
    (144) expression -> expression . AND expression
    (145) expression -> expression . XOR expression
    (146) expression -> expression . XNOR expression
    (147) expression -> expression . OR expression
    (148) expression -> expression . LAND expression
    (149) expression -> expression . LOR expression
    (150) expression -> expression . COND expression COLON expression

    RBRACE          reduce using rule 161 (concatlist -> concatlist COMMA expression .)
    COMMA           reduce using rule 161 (concatlist -> concatlist COMMA expression .)
    POWER           shift and go to state 246
    TIMES           shift and go to state 349
    DIVIDE          shift and go to state 244
    MOD             shift and go to state 231
    PLUS            shift and go to state 240
    MINUS           shift and go to state 229
    LSHIFT          shift and go to state 243
    RSHIFT          shift and go to state 226
    LSHIFTA         shift and go to state 241
    RSHIFTA         shift and go to state 238
    LT              shift and go to state 235
    GT              shift and go to state 228
    LE              shift and go to state 222
    GE              shift and go to state 239
    EQ              shift and go to state 223
    NE              shift and go to state 225
    EQL             shift and go to state 245
    NEL             shift and go to state 242
    AND             shift and go to state 224
    XOR             shift and go to state 237
    XNOR            shift and go to state 232
    OR              shift and go to state 234
    LAND            shift and go to state 227
    LOR             shift and go to state 230
    COND            shift and go to state 233


state 472

    (167) partselect -> pointer LBRACKET expression COLON . expression RBRACKET
    (116) expression -> . MINUS expression
    (117) expression -> . PLUS expression
    (118) expression -> . LNOT expression
    (119) expression -> . NOT expression
    (120) expression -> . AND expression
    (121) expression -> . NAND expression
    (122) expression -> . NOR expression
    (123) expression -> . OR expression
    (124) expression -> . XOR expression
    (125) expression -> . XNOR expression
    (126) expression -> . expression POWER expression
    (127) expression -> . expression TIMES expression
    (128) expression -> . expression DIVIDE expression
    (129) expression -> . expression MOD expression
    (130) expression -> . expression PLUS expression
    (131) expression -> . expression MINUS expression
    (132) expression -> . expression LSHIFT expression
    (133) expression -> . expression RSHIFT expression
    (134) expression -> . expression LSHIFTA expression
    (135) expression -> . expression RSHIFTA expression
    (136) expression -> . expression LT expression
    (137) expression -> . expression GT expression
    (138) expression -> . expression LE expression
    (139) expression -> . expression GE expression
    (140) expression -> . expression EQ expression
    (141) expression -> . expression NE expression
    (142) expression -> . expression EQL expression
    (143) expression -> . expression NEL expression
    (144) expression -> . expression AND expression
    (145) expression -> . expression XOR expression
    (146) expression -> . expression XNOR expression
    (147) expression -> . expression OR expression
    (148) expression -> . expression LAND expression
    (149) expression -> . expression LOR expression
    (150) expression -> . expression COND expression COLON expression
    (151) expression -> . LPAREN expression RPAREN
    (152) expression -> . concat
    (153) expression -> . repeat
    (154) expression -> . partselect
    (155) expression -> . pointer
    (156) expression -> . functioncall
    (157) expression -> . systemcall
    (158) expression -> . identifier
    (159) expression -> . const_expression
    (160) concat -> . LBRACE concatlist RBRACE
    (163) repeat -> . LBRACE expression concat RBRACE
    (164) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (165) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (166) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (167) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (168) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (169) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (170) pointer -> . identifier LBRACKET expression RBRACKET
    (171) pointer -> . pointer LBRACKET expression RBRACKET
    (339) functioncall -> . identifier LPAREN func_args RPAREN
    (319) systemcall -> . DOLLER ID
    (320) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (357) identifier -> . ID
    (358) identifier -> . scope ID
    (172) const_expression -> . intnumber
    (173) const_expression -> . floatnumber
    (174) const_expression -> . stringliteral
    (359) scope -> . identifier DOT
    (360) scope -> . pointer DOT
    (176) intnumber -> . INTNUMBER_DEC
    (177) intnumber -> . SIGNED_INTNUMBER_DEC
    (178) intnumber -> . INTNUMBER_BIN
    (179) intnumber -> . SIGNED_INTNUMBER_BIN
    (180) intnumber -> . INTNUMBER_OCT
    (181) intnumber -> . SIGNED_INTNUMBER_OCT
    (182) intnumber -> . INTNUMBER_HEX
    (183) intnumber -> . SIGNED_INTNUMBER_HEX
    (175) floatnumber -> . FLOATNUMBER
    (184) stringliteral -> . STRING_LITERAL

    MINUS           shift and go to state 97
    PLUS            shift and go to state 89
    LNOT            shift and go to state 95
    NOT             shift and go to state 78
    AND             shift and go to state 91
    NAND            shift and go to state 98
    NOR             shift and go to state 76
    OR              shift and go to state 105
    XOR             shift and go to state 82
    XNOR            shift and go to state 87
    LPAREN          shift and go to state 96
    LBRACE          shift and go to state 77
    DOLLER          shift and go to state 100
    ID              shift and go to state 85
    INTNUMBER_DEC   shift and go to state 79
    SIGNED_INTNUMBER_DEC shift and go to state 101
    INTNUMBER_BIN   shift and go to state 111
    SIGNED_INTNUMBER_BIN shift and go to state 112
    INTNUMBER_OCT   shift and go to state 86
    SIGNED_INTNUMBER_OCT shift and go to state 106
    INTNUMBER_HEX   shift and go to state 93
    SIGNED_INTNUMBER_HEX shift and go to state 83
    FLOATNUMBER     shift and go to state 102
    STRING_LITERAL  shift and go to state 107

    stringliteral                  shift and go to state 99
    intnumber                      shift and go to state 81
    expression                     shift and go to state 573
    repeat                         shift and go to state 108
    partselect                     shift and go to state 103
    identifier                     shift and go to state 104
    pointer                        shift and go to state 80
    functioncall                   shift and go to state 94
    scope                          shift and go to state 84
    systemcall                     shift and go to state 109
    const_expression               shift and go to state 110
    concat                         shift and go to state 88
    floatnumber                    shift and go to state 90

state 473

    (168) partselect -> pointer LBRACKET expression PLUSCOLON . expression RBRACKET
    (116) expression -> . MINUS expression
    (117) expression -> . PLUS expression
    (118) expression -> . LNOT expression
    (119) expression -> . NOT expression
    (120) expression -> . AND expression
    (121) expression -> . NAND expression
    (122) expression -> . NOR expression
    (123) expression -> . OR expression
    (124) expression -> . XOR expression
    (125) expression -> . XNOR expression
    (126) expression -> . expression POWER expression
    (127) expression -> . expression TIMES expression
    (128) expression -> . expression DIVIDE expression
    (129) expression -> . expression MOD expression
    (130) expression -> . expression PLUS expression
    (131) expression -> . expression MINUS expression
    (132) expression -> . expression LSHIFT expression
    (133) expression -> . expression RSHIFT expression
    (134) expression -> . expression LSHIFTA expression
    (135) expression -> . expression RSHIFTA expression
    (136) expression -> . expression LT expression
    (137) expression -> . expression GT expression
    (138) expression -> . expression LE expression
    (139) expression -> . expression GE expression
    (140) expression -> . expression EQ expression
    (141) expression -> . expression NE expression
    (142) expression -> . expression EQL expression
    (143) expression -> . expression NEL expression
    (144) expression -> . expression AND expression
    (145) expression -> . expression XOR expression
    (146) expression -> . expression XNOR expression
    (147) expression -> . expression OR expression
    (148) expression -> . expression LAND expression
    (149) expression -> . expression LOR expression
    (150) expression -> . expression COND expression COLON expression
    (151) expression -> . LPAREN expression RPAREN
    (152) expression -> . concat
    (153) expression -> . repeat
    (154) expression -> . partselect
    (155) expression -> . pointer
    (156) expression -> . functioncall
    (157) expression -> . systemcall
    (158) expression -> . identifier
    (159) expression -> . const_expression
    (160) concat -> . LBRACE concatlist RBRACE
    (163) repeat -> . LBRACE expression concat RBRACE
    (164) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (165) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (166) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (167) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (168) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (169) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (170) pointer -> . identifier LBRACKET expression RBRACKET
    (171) pointer -> . pointer LBRACKET expression RBRACKET
    (339) functioncall -> . identifier LPAREN func_args RPAREN
    (319) systemcall -> . DOLLER ID
    (320) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (357) identifier -> . ID
    (358) identifier -> . scope ID
    (172) const_expression -> . intnumber
    (173) const_expression -> . floatnumber
    (174) const_expression -> . stringliteral
    (359) scope -> . identifier DOT
    (360) scope -> . pointer DOT
    (176) intnumber -> . INTNUMBER_DEC
    (177) intnumber -> . SIGNED_INTNUMBER_DEC
    (178) intnumber -> . INTNUMBER_BIN
    (179) intnumber -> . SIGNED_INTNUMBER_BIN
    (180) intnumber -> . INTNUMBER_OCT
    (181) intnumber -> . SIGNED_INTNUMBER_OCT
    (182) intnumber -> . INTNUMBER_HEX
    (183) intnumber -> . SIGNED_INTNUMBER_HEX
    (175) floatnumber -> . FLOATNUMBER
    (184) stringliteral -> . STRING_LITERAL

    MINUS           shift and go to state 97
    PLUS            shift and go to state 89
    LNOT            shift and go to state 95
    NOT             shift and go to state 78
    AND             shift and go to state 91
    NAND            shift and go to state 98
    NOR             shift and go to state 76
    OR              shift and go to state 105
    XOR             shift and go to state 82
    XNOR            shift and go to state 87
    LPAREN          shift and go to state 96
    LBRACE          shift and go to state 77
    DOLLER          shift and go to state 100
    ID              shift and go to state 85
    INTNUMBER_DEC   shift and go to state 79
    SIGNED_INTNUMBER_DEC shift and go to state 101
    INTNUMBER_BIN   shift and go to state 111
    SIGNED_INTNUMBER_BIN shift and go to state 112
    INTNUMBER_OCT   shift and go to state 86
    SIGNED_INTNUMBER_OCT shift and go to state 106
    INTNUMBER_HEX   shift and go to state 93
    SIGNED_INTNUMBER_HEX shift and go to state 83
    FLOATNUMBER     shift and go to state 102
    STRING_LITERAL  shift and go to state 107

    stringliteral                  shift and go to state 99
    intnumber                      shift and go to state 81
    expression                     shift and go to state 574
    repeat                         shift and go to state 108
    partselect                     shift and go to state 103
    identifier                     shift and go to state 104
    pointer                        shift and go to state 80
    functioncall                   shift and go to state 94
    scope                          shift and go to state 84
    systemcall                     shift and go to state 109
    const_expression               shift and go to state 110
    concat                         shift and go to state 88
    floatnumber                    shift and go to state 90

state 474

    (171) pointer -> pointer LBRACKET expression RBRACKET .

    LBRACKET        reduce using rule 171 (pointer -> pointer LBRACKET expression RBRACKET .)
    DOT             reduce using rule 171 (pointer -> pointer LBRACKET expression RBRACKET .)
    SEMICOLON       reduce using rule 171 (pointer -> pointer LBRACKET expression RBRACKET .)
    POWER           reduce using rule 171 (pointer -> pointer LBRACKET expression RBRACKET .)
    TIMES           reduce using rule 171 (pointer -> pointer LBRACKET expression RBRACKET .)
    DIVIDE          reduce using rule 171 (pointer -> pointer LBRACKET expression RBRACKET .)
    MOD             reduce using rule 171 (pointer -> pointer LBRACKET expression RBRACKET .)
    PLUS            reduce using rule 171 (pointer -> pointer LBRACKET expression RBRACKET .)
    MINUS           reduce using rule 171 (pointer -> pointer LBRACKET expression RBRACKET .)
    LSHIFT          reduce using rule 171 (pointer -> pointer LBRACKET expression RBRACKET .)
    RSHIFT          reduce using rule 171 (pointer -> pointer LBRACKET expression RBRACKET .)
    LSHIFTA         reduce using rule 171 (pointer -> pointer LBRACKET expression RBRACKET .)
    RSHIFTA         reduce using rule 171 (pointer -> pointer LBRACKET expression RBRACKET .)
    LT              reduce using rule 171 (pointer -> pointer LBRACKET expression RBRACKET .)
    GT              reduce using rule 171 (pointer -> pointer LBRACKET expression RBRACKET .)
    LE              reduce using rule 171 (pointer -> pointer LBRACKET expression RBRACKET .)
    GE              reduce using rule 171 (pointer -> pointer LBRACKET expression RBRACKET .)
    EQ              reduce using rule 171 (pointer -> pointer LBRACKET expression RBRACKET .)
    NE              reduce using rule 171 (pointer -> pointer LBRACKET expression RBRACKET .)
    EQL             reduce using rule 171 (pointer -> pointer LBRACKET expression RBRACKET .)
    NEL             reduce using rule 171 (pointer -> pointer LBRACKET expression RBRACKET .)
    AND             reduce using rule 171 (pointer -> pointer LBRACKET expression RBRACKET .)
    XOR             reduce using rule 171 (pointer -> pointer LBRACKET expression RBRACKET .)
    XNOR            reduce using rule 171 (pointer -> pointer LBRACKET expression RBRACKET .)
    OR              reduce using rule 171 (pointer -> pointer LBRACKET expression RBRACKET .)
    LAND            reduce using rule 171 (pointer -> pointer LBRACKET expression RBRACKET .)
    LOR             reduce using rule 171 (pointer -> pointer LBRACKET expression RBRACKET .)
    COND            reduce using rule 171 (pointer -> pointer LBRACKET expression RBRACKET .)
    EQUALS          reduce using rule 171 (pointer -> pointer LBRACKET expression RBRACKET .)
    RBRACKET        reduce using rule 171 (pointer -> pointer LBRACKET expression RBRACKET .)
    LBRACE          reduce using rule 171 (pointer -> pointer LBRACKET expression RBRACKET .)
    RBRACE          reduce using rule 171 (pointer -> pointer LBRACKET expression RBRACKET .)
    COMMA           reduce using rule 171 (pointer -> pointer LBRACKET expression RBRACKET .)
    RPAREN          reduce using rule 171 (pointer -> pointer LBRACKET expression RBRACKET .)
    COLON           reduce using rule 171 (pointer -> pointer LBRACKET expression RBRACKET .)
    PLUSCOLON       reduce using rule 171 (pointer -> pointer LBRACKET expression RBRACKET .)
    MINUSCOLON      reduce using rule 171 (pointer -> pointer LBRACKET expression RBRACKET .)
    SENS_OR         reduce using rule 171 (pointer -> pointer LBRACKET expression RBRACKET .)
    IF              reduce using rule 171 (pointer -> pointer LBRACKET expression RBRACKET .)
    CASE            reduce using rule 171 (pointer -> pointer LBRACKET expression RBRACKET .)
    FOR             reduce using rule 171 (pointer -> pointer LBRACKET expression RBRACKET .)
    WHILE           reduce using rule 171 (pointer -> pointer LBRACKET expression RBRACKET .)
    WAIT            reduce using rule 171 (pointer -> pointer LBRACKET expression RBRACKET .)
    FOREVER         reduce using rule 171 (pointer -> pointer LBRACKET expression RBRACKET .)
    BEGIN           reduce using rule 171 (pointer -> pointer LBRACKET expression RBRACKET .)
    FORK            reduce using rule 171 (pointer -> pointer LBRACKET expression RBRACKET .)
    DELAY           reduce using rule 171 (pointer -> pointer LBRACKET expression RBRACKET .)
    AT              reduce using rule 171 (pointer -> pointer LBRACKET expression RBRACKET .)
    DOLLER          reduce using rule 171 (pointer -> pointer LBRACKET expression RBRACKET .)
    DISABLE         reduce using rule 171 (pointer -> pointer LBRACKET expression RBRACKET .)
    ID              reduce using rule 171 (pointer -> pointer LBRACKET expression RBRACKET .)


state 475

    (169) partselect -> pointer LBRACKET expression MINUSCOLON . expression RBRACKET
    (116) expression -> . MINUS expression
    (117) expression -> . PLUS expression
    (118) expression -> . LNOT expression
    (119) expression -> . NOT expression
    (120) expression -> . AND expression
    (121) expression -> . NAND expression
    (122) expression -> . NOR expression
    (123) expression -> . OR expression
    (124) expression -> . XOR expression
    (125) expression -> . XNOR expression
    (126) expression -> . expression POWER expression
    (127) expression -> . expression TIMES expression
    (128) expression -> . expression DIVIDE expression
    (129) expression -> . expression MOD expression
    (130) expression -> . expression PLUS expression
    (131) expression -> . expression MINUS expression
    (132) expression -> . expression LSHIFT expression
    (133) expression -> . expression RSHIFT expression
    (134) expression -> . expression LSHIFTA expression
    (135) expression -> . expression RSHIFTA expression
    (136) expression -> . expression LT expression
    (137) expression -> . expression GT expression
    (138) expression -> . expression LE expression
    (139) expression -> . expression GE expression
    (140) expression -> . expression EQ expression
    (141) expression -> . expression NE expression
    (142) expression -> . expression EQL expression
    (143) expression -> . expression NEL expression
    (144) expression -> . expression AND expression
    (145) expression -> . expression XOR expression
    (146) expression -> . expression XNOR expression
    (147) expression -> . expression OR expression
    (148) expression -> . expression LAND expression
    (149) expression -> . expression LOR expression
    (150) expression -> . expression COND expression COLON expression
    (151) expression -> . LPAREN expression RPAREN
    (152) expression -> . concat
    (153) expression -> . repeat
    (154) expression -> . partselect
    (155) expression -> . pointer
    (156) expression -> . functioncall
    (157) expression -> . systemcall
    (158) expression -> . identifier
    (159) expression -> . const_expression
    (160) concat -> . LBRACE concatlist RBRACE
    (163) repeat -> . LBRACE expression concat RBRACE
    (164) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (165) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (166) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (167) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (168) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (169) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (170) pointer -> . identifier LBRACKET expression RBRACKET
    (171) pointer -> . pointer LBRACKET expression RBRACKET
    (339) functioncall -> . identifier LPAREN func_args RPAREN
    (319) systemcall -> . DOLLER ID
    (320) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (357) identifier -> . ID
    (358) identifier -> . scope ID
    (172) const_expression -> . intnumber
    (173) const_expression -> . floatnumber
    (174) const_expression -> . stringliteral
    (359) scope -> . identifier DOT
    (360) scope -> . pointer DOT
    (176) intnumber -> . INTNUMBER_DEC
    (177) intnumber -> . SIGNED_INTNUMBER_DEC
    (178) intnumber -> . INTNUMBER_BIN
    (179) intnumber -> . SIGNED_INTNUMBER_BIN
    (180) intnumber -> . INTNUMBER_OCT
    (181) intnumber -> . SIGNED_INTNUMBER_OCT
    (182) intnumber -> . INTNUMBER_HEX
    (183) intnumber -> . SIGNED_INTNUMBER_HEX
    (175) floatnumber -> . FLOATNUMBER
    (184) stringliteral -> . STRING_LITERAL

    MINUS           shift and go to state 97
    PLUS            shift and go to state 89
    LNOT            shift and go to state 95
    NOT             shift and go to state 78
    AND             shift and go to state 91
    NAND            shift and go to state 98
    NOR             shift and go to state 76
    OR              shift and go to state 105
    XOR             shift and go to state 82
    XNOR            shift and go to state 87
    LPAREN          shift and go to state 96
    LBRACE          shift and go to state 77
    DOLLER          shift and go to state 100
    ID              shift and go to state 85
    INTNUMBER_DEC   shift and go to state 79
    SIGNED_INTNUMBER_DEC shift and go to state 101
    INTNUMBER_BIN   shift and go to state 111
    SIGNED_INTNUMBER_BIN shift and go to state 112
    INTNUMBER_OCT   shift and go to state 86
    SIGNED_INTNUMBER_OCT shift and go to state 106
    INTNUMBER_HEX   shift and go to state 93
    SIGNED_INTNUMBER_HEX shift and go to state 83
    FLOATNUMBER     shift and go to state 102
    STRING_LITERAL  shift and go to state 107

    stringliteral                  shift and go to state 99
    intnumber                      shift and go to state 81
    expression                     shift and go to state 575
    repeat                         shift and go to state 108
    partselect                     shift and go to state 103
    identifier                     shift and go to state 104
    pointer                        shift and go to state 80
    functioncall                   shift and go to state 94
    scope                          shift and go to state 84
    systemcall                     shift and go to state 109
    const_expression               shift and go to state 110
    concat                         shift and go to state 88
    floatnumber                    shift and go to state 90

state 476

    (150) expression -> expression COND expression COLON . expression
    (116) expression -> . MINUS expression
    (117) expression -> . PLUS expression
    (118) expression -> . LNOT expression
    (119) expression -> . NOT expression
    (120) expression -> . AND expression
    (121) expression -> . NAND expression
    (122) expression -> . NOR expression
    (123) expression -> . OR expression
    (124) expression -> . XOR expression
    (125) expression -> . XNOR expression
    (126) expression -> . expression POWER expression
    (127) expression -> . expression TIMES expression
    (128) expression -> . expression DIVIDE expression
    (129) expression -> . expression MOD expression
    (130) expression -> . expression PLUS expression
    (131) expression -> . expression MINUS expression
    (132) expression -> . expression LSHIFT expression
    (133) expression -> . expression RSHIFT expression
    (134) expression -> . expression LSHIFTA expression
    (135) expression -> . expression RSHIFTA expression
    (136) expression -> . expression LT expression
    (137) expression -> . expression GT expression
    (138) expression -> . expression LE expression
    (139) expression -> . expression GE expression
    (140) expression -> . expression EQ expression
    (141) expression -> . expression NE expression
    (142) expression -> . expression EQL expression
    (143) expression -> . expression NEL expression
    (144) expression -> . expression AND expression
    (145) expression -> . expression XOR expression
    (146) expression -> . expression XNOR expression
    (147) expression -> . expression OR expression
    (148) expression -> . expression LAND expression
    (149) expression -> . expression LOR expression
    (150) expression -> . expression COND expression COLON expression
    (151) expression -> . LPAREN expression RPAREN
    (152) expression -> . concat
    (153) expression -> . repeat
    (154) expression -> . partselect
    (155) expression -> . pointer
    (156) expression -> . functioncall
    (157) expression -> . systemcall
    (158) expression -> . identifier
    (159) expression -> . const_expression
    (160) concat -> . LBRACE concatlist RBRACE
    (163) repeat -> . LBRACE expression concat RBRACE
    (164) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (165) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (166) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (167) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (168) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (169) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (170) pointer -> . identifier LBRACKET expression RBRACKET
    (171) pointer -> . pointer LBRACKET expression RBRACKET
    (339) functioncall -> . identifier LPAREN func_args RPAREN
    (319) systemcall -> . DOLLER ID
    (320) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (357) identifier -> . ID
    (358) identifier -> . scope ID
    (172) const_expression -> . intnumber
    (173) const_expression -> . floatnumber
    (174) const_expression -> . stringliteral
    (359) scope -> . identifier DOT
    (360) scope -> . pointer DOT
    (176) intnumber -> . INTNUMBER_DEC
    (177) intnumber -> . SIGNED_INTNUMBER_DEC
    (178) intnumber -> . INTNUMBER_BIN
    (179) intnumber -> . SIGNED_INTNUMBER_BIN
    (180) intnumber -> . INTNUMBER_OCT
    (181) intnumber -> . SIGNED_INTNUMBER_OCT
    (182) intnumber -> . INTNUMBER_HEX
    (183) intnumber -> . SIGNED_INTNUMBER_HEX
    (175) floatnumber -> . FLOATNUMBER
    (184) stringliteral -> . STRING_LITERAL

    MINUS           shift and go to state 97
    PLUS            shift and go to state 89
    LNOT            shift and go to state 95
    NOT             shift and go to state 78
    AND             shift and go to state 91
    NAND            shift and go to state 98
    NOR             shift and go to state 76
    OR              shift and go to state 105
    XOR             shift and go to state 82
    XNOR            shift and go to state 87
    LPAREN          shift and go to state 96
    LBRACE          shift and go to state 77
    DOLLER          shift and go to state 100
    ID              shift and go to state 85
    INTNUMBER_DEC   shift and go to state 79
    SIGNED_INTNUMBER_DEC shift and go to state 101
    INTNUMBER_BIN   shift and go to state 111
    SIGNED_INTNUMBER_BIN shift and go to state 112
    INTNUMBER_OCT   shift and go to state 86
    SIGNED_INTNUMBER_OCT shift and go to state 106
    INTNUMBER_HEX   shift and go to state 93
    SIGNED_INTNUMBER_HEX shift and go to state 83
    FLOATNUMBER     shift and go to state 102
    STRING_LITERAL  shift and go to state 107

    stringliteral                  shift and go to state 99
    intnumber                      shift and go to state 81
    expression                     shift and go to state 576
    repeat                         shift and go to state 108
    partselect                     shift and go to state 103
    identifier                     shift and go to state 104
    pointer                        shift and go to state 80
    functioncall                   shift and go to state 94
    scope                          shift and go to state 84
    systemcall                     shift and go to state 109
    const_expression               shift and go to state 110
    concat                         shift and go to state 88
    floatnumber                    shift and go to state 90

state 477

    (322) sysargs -> sysarg .

    RPAREN          reduce using rule 322 (sysargs -> sysarg .)
    COMMA           reduce using rule 322 (sysargs -> sysarg .)


state 478

    (323) sysargs -> empty .

    RPAREN          reduce using rule 323 (sysargs -> empty .)
    COMMA           reduce using rule 323 (sysargs -> empty .)


state 479

    (320) systemcall -> DOLLER ID LPAREN sysargs . RPAREN
    (321) sysargs -> sysargs . COMMA sysarg

    RPAREN          shift and go to state 578
    COMMA           shift and go to state 577


state 480

    (324) sysarg -> expression .
    (126) expression -> expression . POWER expression
    (127) expression -> expression . TIMES expression
    (128) expression -> expression . DIVIDE expression
    (129) expression -> expression . MOD expression
    (130) expression -> expression . PLUS expression
    (131) expression -> expression . MINUS expression
    (132) expression -> expression . LSHIFT expression
    (133) expression -> expression . RSHIFT expression
    (134) expression -> expression . LSHIFTA expression
    (135) expression -> expression . RSHIFTA expression
    (136) expression -> expression . LT expression
    (137) expression -> expression . GT expression
    (138) expression -> expression . LE expression
    (139) expression -> expression . GE expression
    (140) expression -> expression . EQ expression
    (141) expression -> expression . NE expression
    (142) expression -> expression . EQL expression
    (143) expression -> expression . NEL expression
    (144) expression -> expression . AND expression
    (145) expression -> expression . XOR expression
    (146) expression -> expression . XNOR expression
    (147) expression -> expression . OR expression
    (148) expression -> expression . LAND expression
    (149) expression -> expression . LOR expression
    (150) expression -> expression . COND expression COLON expression

    RPAREN          reduce using rule 324 (sysarg -> expression .)
    COMMA           reduce using rule 324 (sysarg -> expression .)
    POWER           shift and go to state 246
    TIMES           shift and go to state 349
    DIVIDE          shift and go to state 244
    MOD             shift and go to state 231
    PLUS            shift and go to state 240
    MINUS           shift and go to state 229
    LSHIFT          shift and go to state 243
    RSHIFT          shift and go to state 226
    LSHIFTA         shift and go to state 241
    RSHIFTA         shift and go to state 238
    LT              shift and go to state 235
    GT              shift and go to state 228
    LE              shift and go to state 222
    GE              shift and go to state 239
    EQ              shift and go to state 223
    NE              shift and go to state 225
    EQL             shift and go to state 245
    NEL             shift and go to state 242
    AND             shift and go to state 224
    XOR             shift and go to state 237
    XNOR            shift and go to state 232
    OR              shift and go to state 234
    LAND            shift and go to state 227
    LOR             shift and go to state 230
    COND            shift and go to state 233


state 481

    (340) func_args -> func_args COMMA . expression
    (116) expression -> . MINUS expression
    (117) expression -> . PLUS expression
    (118) expression -> . LNOT expression
    (119) expression -> . NOT expression
    (120) expression -> . AND expression
    (121) expression -> . NAND expression
    (122) expression -> . NOR expression
    (123) expression -> . OR expression
    (124) expression -> . XOR expression
    (125) expression -> . XNOR expression
    (126) expression -> . expression POWER expression
    (127) expression -> . expression TIMES expression
    (128) expression -> . expression DIVIDE expression
    (129) expression -> . expression MOD expression
    (130) expression -> . expression PLUS expression
    (131) expression -> . expression MINUS expression
    (132) expression -> . expression LSHIFT expression
    (133) expression -> . expression RSHIFT expression
    (134) expression -> . expression LSHIFTA expression
    (135) expression -> . expression RSHIFTA expression
    (136) expression -> . expression LT expression
    (137) expression -> . expression GT expression
    (138) expression -> . expression LE expression
    (139) expression -> . expression GE expression
    (140) expression -> . expression EQ expression
    (141) expression -> . expression NE expression
    (142) expression -> . expression EQL expression
    (143) expression -> . expression NEL expression
    (144) expression -> . expression AND expression
    (145) expression -> . expression XOR expression
    (146) expression -> . expression XNOR expression
    (147) expression -> . expression OR expression
    (148) expression -> . expression LAND expression
    (149) expression -> . expression LOR expression
    (150) expression -> . expression COND expression COLON expression
    (151) expression -> . LPAREN expression RPAREN
    (152) expression -> . concat
    (153) expression -> . repeat
    (154) expression -> . partselect
    (155) expression -> . pointer
    (156) expression -> . functioncall
    (157) expression -> . systemcall
    (158) expression -> . identifier
    (159) expression -> . const_expression
    (160) concat -> . LBRACE concatlist RBRACE
    (163) repeat -> . LBRACE expression concat RBRACE
    (164) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (165) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (166) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (167) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (168) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (169) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (170) pointer -> . identifier LBRACKET expression RBRACKET
    (171) pointer -> . pointer LBRACKET expression RBRACKET
    (339) functioncall -> . identifier LPAREN func_args RPAREN
    (319) systemcall -> . DOLLER ID
    (320) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (357) identifier -> . ID
    (358) identifier -> . scope ID
    (172) const_expression -> . intnumber
    (173) const_expression -> . floatnumber
    (174) const_expression -> . stringliteral
    (359) scope -> . identifier DOT
    (360) scope -> . pointer DOT
    (176) intnumber -> . INTNUMBER_DEC
    (177) intnumber -> . SIGNED_INTNUMBER_DEC
    (178) intnumber -> . INTNUMBER_BIN
    (179) intnumber -> . SIGNED_INTNUMBER_BIN
    (180) intnumber -> . INTNUMBER_OCT
    (181) intnumber -> . SIGNED_INTNUMBER_OCT
    (182) intnumber -> . INTNUMBER_HEX
    (183) intnumber -> . SIGNED_INTNUMBER_HEX
    (175) floatnumber -> . FLOATNUMBER
    (184) stringliteral -> . STRING_LITERAL

    MINUS           shift and go to state 97
    PLUS            shift and go to state 89
    LNOT            shift and go to state 95
    NOT             shift and go to state 78
    AND             shift and go to state 91
    NAND            shift and go to state 98
    NOR             shift and go to state 76
    OR              shift and go to state 105
    XOR             shift and go to state 82
    XNOR            shift and go to state 87
    LPAREN          shift and go to state 96
    LBRACE          shift and go to state 77
    DOLLER          shift and go to state 100
    ID              shift and go to state 85
    INTNUMBER_DEC   shift and go to state 79
    SIGNED_INTNUMBER_DEC shift and go to state 101
    INTNUMBER_BIN   shift and go to state 111
    SIGNED_INTNUMBER_BIN shift and go to state 112
    INTNUMBER_OCT   shift and go to state 86
    SIGNED_INTNUMBER_OCT shift and go to state 106
    INTNUMBER_HEX   shift and go to state 93
    SIGNED_INTNUMBER_HEX shift and go to state 83
    FLOATNUMBER     shift and go to state 102
    STRING_LITERAL  shift and go to state 107

    stringliteral                  shift and go to state 99
    intnumber                      shift and go to state 81
    expression                     shift and go to state 579
    repeat                         shift and go to state 108
    partselect                     shift and go to state 103
    identifier                     shift and go to state 104
    pointer                        shift and go to state 80
    functioncall                   shift and go to state 94
    scope                          shift and go to state 84
    systemcall                     shift and go to state 109
    const_expression               shift and go to state 110
    concat                         shift and go to state 88
    floatnumber                    shift and go to state 90

state 482

    (339) functioncall -> identifier LPAREN func_args RPAREN .

    POWER           reduce using rule 339 (functioncall -> identifier LPAREN func_args RPAREN .)
    TIMES           reduce using rule 339 (functioncall -> identifier LPAREN func_args RPAREN .)
    DIVIDE          reduce using rule 339 (functioncall -> identifier LPAREN func_args RPAREN .)
    MOD             reduce using rule 339 (functioncall -> identifier LPAREN func_args RPAREN .)
    PLUS            reduce using rule 339 (functioncall -> identifier LPAREN func_args RPAREN .)
    MINUS           reduce using rule 339 (functioncall -> identifier LPAREN func_args RPAREN .)
    LSHIFT          reduce using rule 339 (functioncall -> identifier LPAREN func_args RPAREN .)
    RSHIFT          reduce using rule 339 (functioncall -> identifier LPAREN func_args RPAREN .)
    LSHIFTA         reduce using rule 339 (functioncall -> identifier LPAREN func_args RPAREN .)
    RSHIFTA         reduce using rule 339 (functioncall -> identifier LPAREN func_args RPAREN .)
    LT              reduce using rule 339 (functioncall -> identifier LPAREN func_args RPAREN .)
    GT              reduce using rule 339 (functioncall -> identifier LPAREN func_args RPAREN .)
    LE              reduce using rule 339 (functioncall -> identifier LPAREN func_args RPAREN .)
    GE              reduce using rule 339 (functioncall -> identifier LPAREN func_args RPAREN .)
    EQ              reduce using rule 339 (functioncall -> identifier LPAREN func_args RPAREN .)
    NE              reduce using rule 339 (functioncall -> identifier LPAREN func_args RPAREN .)
    EQL             reduce using rule 339 (functioncall -> identifier LPAREN func_args RPAREN .)
    NEL             reduce using rule 339 (functioncall -> identifier LPAREN func_args RPAREN .)
    AND             reduce using rule 339 (functioncall -> identifier LPAREN func_args RPAREN .)
    XOR             reduce using rule 339 (functioncall -> identifier LPAREN func_args RPAREN .)
    XNOR            reduce using rule 339 (functioncall -> identifier LPAREN func_args RPAREN .)
    OR              reduce using rule 339 (functioncall -> identifier LPAREN func_args RPAREN .)
    LAND            reduce using rule 339 (functioncall -> identifier LPAREN func_args RPAREN .)
    LOR             reduce using rule 339 (functioncall -> identifier LPAREN func_args RPAREN .)
    COND            reduce using rule 339 (functioncall -> identifier LPAREN func_args RPAREN .)
    LBRACE          reduce using rule 339 (functioncall -> identifier LPAREN func_args RPAREN .)
    RBRACE          reduce using rule 339 (functioncall -> identifier LPAREN func_args RPAREN .)
    COMMA           reduce using rule 339 (functioncall -> identifier LPAREN func_args RPAREN .)
    RPAREN          reduce using rule 339 (functioncall -> identifier LPAREN func_args RPAREN .)
    COLON           reduce using rule 339 (functioncall -> identifier LPAREN func_args RPAREN .)
    SEMICOLON       reduce using rule 339 (functioncall -> identifier LPAREN func_args RPAREN .)
    PLUSCOLON       reduce using rule 339 (functioncall -> identifier LPAREN func_args RPAREN .)
    MINUSCOLON      reduce using rule 339 (functioncall -> identifier LPAREN func_args RPAREN .)
    RBRACKET        reduce using rule 339 (functioncall -> identifier LPAREN func_args RPAREN .)


state 483

    (164) partselect -> identifier LBRACKET expression COLON . expression RBRACKET
    (116) expression -> . MINUS expression
    (117) expression -> . PLUS expression
    (118) expression -> . LNOT expression
    (119) expression -> . NOT expression
    (120) expression -> . AND expression
    (121) expression -> . NAND expression
    (122) expression -> . NOR expression
    (123) expression -> . OR expression
    (124) expression -> . XOR expression
    (125) expression -> . XNOR expression
    (126) expression -> . expression POWER expression
    (127) expression -> . expression TIMES expression
    (128) expression -> . expression DIVIDE expression
    (129) expression -> . expression MOD expression
    (130) expression -> . expression PLUS expression
    (131) expression -> . expression MINUS expression
    (132) expression -> . expression LSHIFT expression
    (133) expression -> . expression RSHIFT expression
    (134) expression -> . expression LSHIFTA expression
    (135) expression -> . expression RSHIFTA expression
    (136) expression -> . expression LT expression
    (137) expression -> . expression GT expression
    (138) expression -> . expression LE expression
    (139) expression -> . expression GE expression
    (140) expression -> . expression EQ expression
    (141) expression -> . expression NE expression
    (142) expression -> . expression EQL expression
    (143) expression -> . expression NEL expression
    (144) expression -> . expression AND expression
    (145) expression -> . expression XOR expression
    (146) expression -> . expression XNOR expression
    (147) expression -> . expression OR expression
    (148) expression -> . expression LAND expression
    (149) expression -> . expression LOR expression
    (150) expression -> . expression COND expression COLON expression
    (151) expression -> . LPAREN expression RPAREN
    (152) expression -> . concat
    (153) expression -> . repeat
    (154) expression -> . partselect
    (155) expression -> . pointer
    (156) expression -> . functioncall
    (157) expression -> . systemcall
    (158) expression -> . identifier
    (159) expression -> . const_expression
    (160) concat -> . LBRACE concatlist RBRACE
    (163) repeat -> . LBRACE expression concat RBRACE
    (164) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (165) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (166) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (167) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (168) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (169) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (170) pointer -> . identifier LBRACKET expression RBRACKET
    (171) pointer -> . pointer LBRACKET expression RBRACKET
    (339) functioncall -> . identifier LPAREN func_args RPAREN
    (319) systemcall -> . DOLLER ID
    (320) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (357) identifier -> . ID
    (358) identifier -> . scope ID
    (172) const_expression -> . intnumber
    (173) const_expression -> . floatnumber
    (174) const_expression -> . stringliteral
    (359) scope -> . identifier DOT
    (360) scope -> . pointer DOT
    (176) intnumber -> . INTNUMBER_DEC
    (177) intnumber -> . SIGNED_INTNUMBER_DEC
    (178) intnumber -> . INTNUMBER_BIN
    (179) intnumber -> . SIGNED_INTNUMBER_BIN
    (180) intnumber -> . INTNUMBER_OCT
    (181) intnumber -> . SIGNED_INTNUMBER_OCT
    (182) intnumber -> . INTNUMBER_HEX
    (183) intnumber -> . SIGNED_INTNUMBER_HEX
    (175) floatnumber -> . FLOATNUMBER
    (184) stringliteral -> . STRING_LITERAL

    MINUS           shift and go to state 97
    PLUS            shift and go to state 89
    LNOT            shift and go to state 95
    NOT             shift and go to state 78
    AND             shift and go to state 91
    NAND            shift and go to state 98
    NOR             shift and go to state 76
    OR              shift and go to state 105
    XOR             shift and go to state 82
    XNOR            shift and go to state 87
    LPAREN          shift and go to state 96
    LBRACE          shift and go to state 77
    DOLLER          shift and go to state 100
    ID              shift and go to state 85
    INTNUMBER_DEC   shift and go to state 79
    SIGNED_INTNUMBER_DEC shift and go to state 101
    INTNUMBER_BIN   shift and go to state 111
    SIGNED_INTNUMBER_BIN shift and go to state 112
    INTNUMBER_OCT   shift and go to state 86
    SIGNED_INTNUMBER_OCT shift and go to state 106
    INTNUMBER_HEX   shift and go to state 93
    SIGNED_INTNUMBER_HEX shift and go to state 83
    FLOATNUMBER     shift and go to state 102
    STRING_LITERAL  shift and go to state 107

    stringliteral                  shift and go to state 99
    intnumber                      shift and go to state 81
    expression                     shift and go to state 580
    repeat                         shift and go to state 108
    partselect                     shift and go to state 103
    identifier                     shift and go to state 104
    pointer                        shift and go to state 80
    functioncall                   shift and go to state 94
    scope                          shift and go to state 84
    systemcall                     shift and go to state 109
    const_expression               shift and go to state 110
    concat                         shift and go to state 88
    floatnumber                    shift and go to state 90

state 484

    (165) partselect -> identifier LBRACKET expression PLUSCOLON . expression RBRACKET
    (116) expression -> . MINUS expression
    (117) expression -> . PLUS expression
    (118) expression -> . LNOT expression
    (119) expression -> . NOT expression
    (120) expression -> . AND expression
    (121) expression -> . NAND expression
    (122) expression -> . NOR expression
    (123) expression -> . OR expression
    (124) expression -> . XOR expression
    (125) expression -> . XNOR expression
    (126) expression -> . expression POWER expression
    (127) expression -> . expression TIMES expression
    (128) expression -> . expression DIVIDE expression
    (129) expression -> . expression MOD expression
    (130) expression -> . expression PLUS expression
    (131) expression -> . expression MINUS expression
    (132) expression -> . expression LSHIFT expression
    (133) expression -> . expression RSHIFT expression
    (134) expression -> . expression LSHIFTA expression
    (135) expression -> . expression RSHIFTA expression
    (136) expression -> . expression LT expression
    (137) expression -> . expression GT expression
    (138) expression -> . expression LE expression
    (139) expression -> . expression GE expression
    (140) expression -> . expression EQ expression
    (141) expression -> . expression NE expression
    (142) expression -> . expression EQL expression
    (143) expression -> . expression NEL expression
    (144) expression -> . expression AND expression
    (145) expression -> . expression XOR expression
    (146) expression -> . expression XNOR expression
    (147) expression -> . expression OR expression
    (148) expression -> . expression LAND expression
    (149) expression -> . expression LOR expression
    (150) expression -> . expression COND expression COLON expression
    (151) expression -> . LPAREN expression RPAREN
    (152) expression -> . concat
    (153) expression -> . repeat
    (154) expression -> . partselect
    (155) expression -> . pointer
    (156) expression -> . functioncall
    (157) expression -> . systemcall
    (158) expression -> . identifier
    (159) expression -> . const_expression
    (160) concat -> . LBRACE concatlist RBRACE
    (163) repeat -> . LBRACE expression concat RBRACE
    (164) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (165) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (166) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (167) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (168) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (169) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (170) pointer -> . identifier LBRACKET expression RBRACKET
    (171) pointer -> . pointer LBRACKET expression RBRACKET
    (339) functioncall -> . identifier LPAREN func_args RPAREN
    (319) systemcall -> . DOLLER ID
    (320) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (357) identifier -> . ID
    (358) identifier -> . scope ID
    (172) const_expression -> . intnumber
    (173) const_expression -> . floatnumber
    (174) const_expression -> . stringliteral
    (359) scope -> . identifier DOT
    (360) scope -> . pointer DOT
    (176) intnumber -> . INTNUMBER_DEC
    (177) intnumber -> . SIGNED_INTNUMBER_DEC
    (178) intnumber -> . INTNUMBER_BIN
    (179) intnumber -> . SIGNED_INTNUMBER_BIN
    (180) intnumber -> . INTNUMBER_OCT
    (181) intnumber -> . SIGNED_INTNUMBER_OCT
    (182) intnumber -> . INTNUMBER_HEX
    (183) intnumber -> . SIGNED_INTNUMBER_HEX
    (175) floatnumber -> . FLOATNUMBER
    (184) stringliteral -> . STRING_LITERAL

    MINUS           shift and go to state 97
    PLUS            shift and go to state 89
    LNOT            shift and go to state 95
    NOT             shift and go to state 78
    AND             shift and go to state 91
    NAND            shift and go to state 98
    NOR             shift and go to state 76
    OR              shift and go to state 105
    XOR             shift and go to state 82
    XNOR            shift and go to state 87
    LPAREN          shift and go to state 96
    LBRACE          shift and go to state 77
    DOLLER          shift and go to state 100
    ID              shift and go to state 85
    INTNUMBER_DEC   shift and go to state 79
    SIGNED_INTNUMBER_DEC shift and go to state 101
    INTNUMBER_BIN   shift and go to state 111
    SIGNED_INTNUMBER_BIN shift and go to state 112
    INTNUMBER_OCT   shift and go to state 86
    SIGNED_INTNUMBER_OCT shift and go to state 106
    INTNUMBER_HEX   shift and go to state 93
    SIGNED_INTNUMBER_HEX shift and go to state 83
    FLOATNUMBER     shift and go to state 102
    STRING_LITERAL  shift and go to state 107

    stringliteral                  shift and go to state 99
    intnumber                      shift and go to state 81
    expression                     shift and go to state 581
    repeat                         shift and go to state 108
    partselect                     shift and go to state 103
    identifier                     shift and go to state 104
    pointer                        shift and go to state 80
    functioncall                   shift and go to state 94
    scope                          shift and go to state 84
    systemcall                     shift and go to state 109
    const_expression               shift and go to state 110
    concat                         shift and go to state 88
    floatnumber                    shift and go to state 90

state 485

    (170) pointer -> identifier LBRACKET expression RBRACKET .

    LBRACKET        reduce using rule 170 (pointer -> identifier LBRACKET expression RBRACKET .)
    DOT             reduce using rule 170 (pointer -> identifier LBRACKET expression RBRACKET .)
    SEMICOLON       reduce using rule 170 (pointer -> identifier LBRACKET expression RBRACKET .)
    POWER           reduce using rule 170 (pointer -> identifier LBRACKET expression RBRACKET .)
    TIMES           reduce using rule 170 (pointer -> identifier LBRACKET expression RBRACKET .)
    DIVIDE          reduce using rule 170 (pointer -> identifier LBRACKET expression RBRACKET .)
    MOD             reduce using rule 170 (pointer -> identifier LBRACKET expression RBRACKET .)
    PLUS            reduce using rule 170 (pointer -> identifier LBRACKET expression RBRACKET .)
    MINUS           reduce using rule 170 (pointer -> identifier LBRACKET expression RBRACKET .)
    LSHIFT          reduce using rule 170 (pointer -> identifier LBRACKET expression RBRACKET .)
    RSHIFT          reduce using rule 170 (pointer -> identifier LBRACKET expression RBRACKET .)
    LSHIFTA         reduce using rule 170 (pointer -> identifier LBRACKET expression RBRACKET .)
    RSHIFTA         reduce using rule 170 (pointer -> identifier LBRACKET expression RBRACKET .)
    LT              reduce using rule 170 (pointer -> identifier LBRACKET expression RBRACKET .)
    GT              reduce using rule 170 (pointer -> identifier LBRACKET expression RBRACKET .)
    LE              reduce using rule 170 (pointer -> identifier LBRACKET expression RBRACKET .)
    GE              reduce using rule 170 (pointer -> identifier LBRACKET expression RBRACKET .)
    EQ              reduce using rule 170 (pointer -> identifier LBRACKET expression RBRACKET .)
    NE              reduce using rule 170 (pointer -> identifier LBRACKET expression RBRACKET .)
    EQL             reduce using rule 170 (pointer -> identifier LBRACKET expression RBRACKET .)
    NEL             reduce using rule 170 (pointer -> identifier LBRACKET expression RBRACKET .)
    AND             reduce using rule 170 (pointer -> identifier LBRACKET expression RBRACKET .)
    XOR             reduce using rule 170 (pointer -> identifier LBRACKET expression RBRACKET .)
    XNOR            reduce using rule 170 (pointer -> identifier LBRACKET expression RBRACKET .)
    OR              reduce using rule 170 (pointer -> identifier LBRACKET expression RBRACKET .)
    LAND            reduce using rule 170 (pointer -> identifier LBRACKET expression RBRACKET .)
    LOR             reduce using rule 170 (pointer -> identifier LBRACKET expression RBRACKET .)
    COND            reduce using rule 170 (pointer -> identifier LBRACKET expression RBRACKET .)
    EQUALS          reduce using rule 170 (pointer -> identifier LBRACKET expression RBRACKET .)
    RBRACKET        reduce using rule 170 (pointer -> identifier LBRACKET expression RBRACKET .)
    LBRACE          reduce using rule 170 (pointer -> identifier LBRACKET expression RBRACKET .)
    RBRACE          reduce using rule 170 (pointer -> identifier LBRACKET expression RBRACKET .)
    COMMA           reduce using rule 170 (pointer -> identifier LBRACKET expression RBRACKET .)
    RPAREN          reduce using rule 170 (pointer -> identifier LBRACKET expression RBRACKET .)
    COLON           reduce using rule 170 (pointer -> identifier LBRACKET expression RBRACKET .)
    PLUSCOLON       reduce using rule 170 (pointer -> identifier LBRACKET expression RBRACKET .)
    MINUSCOLON      reduce using rule 170 (pointer -> identifier LBRACKET expression RBRACKET .)
    SENS_OR         reduce using rule 170 (pointer -> identifier LBRACKET expression RBRACKET .)
    IF              reduce using rule 170 (pointer -> identifier LBRACKET expression RBRACKET .)
    CASE            reduce using rule 170 (pointer -> identifier LBRACKET expression RBRACKET .)
    FOR             reduce using rule 170 (pointer -> identifier LBRACKET expression RBRACKET .)
    WHILE           reduce using rule 170 (pointer -> identifier LBRACKET expression RBRACKET .)
    WAIT            reduce using rule 170 (pointer -> identifier LBRACKET expression RBRACKET .)
    FOREVER         reduce using rule 170 (pointer -> identifier LBRACKET expression RBRACKET .)
    BEGIN           reduce using rule 170 (pointer -> identifier LBRACKET expression RBRACKET .)
    FORK            reduce using rule 170 (pointer -> identifier LBRACKET expression RBRACKET .)
    DELAY           reduce using rule 170 (pointer -> identifier LBRACKET expression RBRACKET .)
    AT              reduce using rule 170 (pointer -> identifier LBRACKET expression RBRACKET .)
    DOLLER          reduce using rule 170 (pointer -> identifier LBRACKET expression RBRACKET .)
    DISABLE         reduce using rule 170 (pointer -> identifier LBRACKET expression RBRACKET .)
    ID              reduce using rule 170 (pointer -> identifier LBRACKET expression RBRACKET .)


state 486

    (166) partselect -> identifier LBRACKET expression MINUSCOLON . expression RBRACKET
    (116) expression -> . MINUS expression
    (117) expression -> . PLUS expression
    (118) expression -> . LNOT expression
    (119) expression -> . NOT expression
    (120) expression -> . AND expression
    (121) expression -> . NAND expression
    (122) expression -> . NOR expression
    (123) expression -> . OR expression
    (124) expression -> . XOR expression
    (125) expression -> . XNOR expression
    (126) expression -> . expression POWER expression
    (127) expression -> . expression TIMES expression
    (128) expression -> . expression DIVIDE expression
    (129) expression -> . expression MOD expression
    (130) expression -> . expression PLUS expression
    (131) expression -> . expression MINUS expression
    (132) expression -> . expression LSHIFT expression
    (133) expression -> . expression RSHIFT expression
    (134) expression -> . expression LSHIFTA expression
    (135) expression -> . expression RSHIFTA expression
    (136) expression -> . expression LT expression
    (137) expression -> . expression GT expression
    (138) expression -> . expression LE expression
    (139) expression -> . expression GE expression
    (140) expression -> . expression EQ expression
    (141) expression -> . expression NE expression
    (142) expression -> . expression EQL expression
    (143) expression -> . expression NEL expression
    (144) expression -> . expression AND expression
    (145) expression -> . expression XOR expression
    (146) expression -> . expression XNOR expression
    (147) expression -> . expression OR expression
    (148) expression -> . expression LAND expression
    (149) expression -> . expression LOR expression
    (150) expression -> . expression COND expression COLON expression
    (151) expression -> . LPAREN expression RPAREN
    (152) expression -> . concat
    (153) expression -> . repeat
    (154) expression -> . partselect
    (155) expression -> . pointer
    (156) expression -> . functioncall
    (157) expression -> . systemcall
    (158) expression -> . identifier
    (159) expression -> . const_expression
    (160) concat -> . LBRACE concatlist RBRACE
    (163) repeat -> . LBRACE expression concat RBRACE
    (164) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (165) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (166) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (167) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (168) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (169) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (170) pointer -> . identifier LBRACKET expression RBRACKET
    (171) pointer -> . pointer LBRACKET expression RBRACKET
    (339) functioncall -> . identifier LPAREN func_args RPAREN
    (319) systemcall -> . DOLLER ID
    (320) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (357) identifier -> . ID
    (358) identifier -> . scope ID
    (172) const_expression -> . intnumber
    (173) const_expression -> . floatnumber
    (174) const_expression -> . stringliteral
    (359) scope -> . identifier DOT
    (360) scope -> . pointer DOT
    (176) intnumber -> . INTNUMBER_DEC
    (177) intnumber -> . SIGNED_INTNUMBER_DEC
    (178) intnumber -> . INTNUMBER_BIN
    (179) intnumber -> . SIGNED_INTNUMBER_BIN
    (180) intnumber -> . INTNUMBER_OCT
    (181) intnumber -> . SIGNED_INTNUMBER_OCT
    (182) intnumber -> . INTNUMBER_HEX
    (183) intnumber -> . SIGNED_INTNUMBER_HEX
    (175) floatnumber -> . FLOATNUMBER
    (184) stringliteral -> . STRING_LITERAL

    MINUS           shift and go to state 97
    PLUS            shift and go to state 89
    LNOT            shift and go to state 95
    NOT             shift and go to state 78
    AND             shift and go to state 91
    NAND            shift and go to state 98
    NOR             shift and go to state 76
    OR              shift and go to state 105
    XOR             shift and go to state 82
    XNOR            shift and go to state 87
    LPAREN          shift and go to state 96
    LBRACE          shift and go to state 77
    DOLLER          shift and go to state 100
    ID              shift and go to state 85
    INTNUMBER_DEC   shift and go to state 79
    SIGNED_INTNUMBER_DEC shift and go to state 101
    INTNUMBER_BIN   shift and go to state 111
    SIGNED_INTNUMBER_BIN shift and go to state 112
    INTNUMBER_OCT   shift and go to state 86
    SIGNED_INTNUMBER_OCT shift and go to state 106
    INTNUMBER_HEX   shift and go to state 93
    SIGNED_INTNUMBER_HEX shift and go to state 83
    FLOATNUMBER     shift and go to state 102
    STRING_LITERAL  shift and go to state 107

    stringliteral                  shift and go to state 99
    intnumber                      shift and go to state 81
    expression                     shift and go to state 582
    repeat                         shift and go to state 108
    partselect                     shift and go to state 103
    identifier                     shift and go to state 104
    pointer                        shift and go to state 80
    functioncall                   shift and go to state 94
    scope                          shift and go to state 84
    systemcall                     shift and go to state 109
    const_expression               shift and go to state 110
    concat                         shift and go to state 88
    floatnumber                    shift and go to state 90

state 487

    (46) width -> LBRACKET expression COLON expression . RBRACKET
    (126) expression -> expression . POWER expression
    (127) expression -> expression . TIMES expression
    (128) expression -> expression . DIVIDE expression
    (129) expression -> expression . MOD expression
    (130) expression -> expression . PLUS expression
    (131) expression -> expression . MINUS expression
    (132) expression -> expression . LSHIFT expression
    (133) expression -> expression . RSHIFT expression
    (134) expression -> expression . LSHIFTA expression
    (135) expression -> expression . RSHIFTA expression
    (136) expression -> expression . LT expression
    (137) expression -> expression . GT expression
    (138) expression -> expression . LE expression
    (139) expression -> expression . GE expression
    (140) expression -> expression . EQ expression
    (141) expression -> expression . NE expression
    (142) expression -> expression . EQL expression
    (143) expression -> expression . NEL expression
    (144) expression -> expression . AND expression
    (145) expression -> expression . XOR expression
    (146) expression -> expression . XNOR expression
    (147) expression -> expression . OR expression
    (148) expression -> expression . LAND expression
    (149) expression -> expression . LOR expression
    (150) expression -> expression . COND expression COLON expression

    RBRACKET        shift and go to state 583
    POWER           shift and go to state 246
    TIMES           shift and go to state 349
    DIVIDE          shift and go to state 244
    MOD             shift and go to state 231
    PLUS            shift and go to state 240
    MINUS           shift and go to state 229
    LSHIFT          shift and go to state 243
    RSHIFT          shift and go to state 226
    LSHIFTA         shift and go to state 241
    RSHIFTA         shift and go to state 238
    LT              shift and go to state 235
    GT              shift and go to state 228
    LE              shift and go to state 222
    GE              shift and go to state 239
    EQ              shift and go to state 223
    NE              shift and go to state 225
    EQL             shift and go to state 245
    NEL             shift and go to state 242
    AND             shift and go to state 224
    XOR             shift and go to state 237
    XNOR            shift and go to state 232
    OR              shift and go to state 234
    LAND            shift and go to state 227
    LOR             shift and go to state 230
    COND            shift and go to state 233


state 488

    (42) ioport -> sigtypes width portname .

    RPAREN          reduce using rule 42 (ioport -> sigtypes width portname .)
    COMMA           reduce using rule 42 (ioport -> sigtypes width portname .)


state 489

    (326) function -> FUNCTION ID SEMICOLON function_statement ENDFUNCTION .

    ELSE            reduce using rule 326 (function -> FUNCTION ID SEMICOLON function_statement ENDFUNCTION .)
    ENDGENERATE     reduce using rule 326 (function -> FUNCTION ID SEMICOLON function_statement ENDFUNCTION .)
    IF              reduce using rule 326 (function -> FUNCTION ID SEMICOLON function_statement ENDFUNCTION .)
    FOR             reduce using rule 326 (function -> FUNCTION ID SEMICOLON function_statement ENDFUNCTION .)
    INTEGER         reduce using rule 326 (function -> FUNCTION ID SEMICOLON function_statement ENDFUNCTION .)
    REAL            reduce using rule 326 (function -> FUNCTION ID SEMICOLON function_statement ENDFUNCTION .)
    PARAMETER       reduce using rule 326 (function -> FUNCTION ID SEMICOLON function_statement ENDFUNCTION .)
    LOCALPARAM      reduce using rule 326 (function -> FUNCTION ID SEMICOLON function_statement ENDFUNCTION .)
    GENVAR          reduce using rule 326 (function -> FUNCTION ID SEMICOLON function_statement ENDFUNCTION .)
    ASSIGN          reduce using rule 326 (function -> FUNCTION ID SEMICOLON function_statement ENDFUNCTION .)
    ALWAYS          reduce using rule 326 (function -> FUNCTION ID SEMICOLON function_statement ENDFUNCTION .)
    INITIAL         reduce using rule 326 (function -> FUNCTION ID SEMICOLON function_statement ENDFUNCTION .)
    ID              reduce using rule 326 (function -> FUNCTION ID SEMICOLON function_statement ENDFUNCTION .)
    FUNCTION        reduce using rule 326 (function -> FUNCTION ID SEMICOLON function_statement ENDFUNCTION .)
    TASK            reduce using rule 326 (function -> FUNCTION ID SEMICOLON function_statement ENDFUNCTION .)
    LPAREN          reduce using rule 326 (function -> FUNCTION ID SEMICOLON function_statement ENDFUNCTION .)
    INPUT           reduce using rule 326 (function -> FUNCTION ID SEMICOLON function_statement ENDFUNCTION .)
    OUTPUT          reduce using rule 326 (function -> FUNCTION ID SEMICOLON function_statement ENDFUNCTION .)
    INOUT           reduce using rule 326 (function -> FUNCTION ID SEMICOLON function_statement ENDFUNCTION .)
    TRI             reduce using rule 326 (function -> FUNCTION ID SEMICOLON function_statement ENDFUNCTION .)
    REG             reduce using rule 326 (function -> FUNCTION ID SEMICOLON function_statement ENDFUNCTION .)
    WIRE            reduce using rule 326 (function -> FUNCTION ID SEMICOLON function_statement ENDFUNCTION .)
    SIGNED          reduce using rule 326 (function -> FUNCTION ID SEMICOLON function_statement ENDFUNCTION .)
    END             reduce using rule 326 (function -> FUNCTION ID SEMICOLON function_statement ENDFUNCTION .)
    ENDMODULE       reduce using rule 326 (function -> FUNCTION ID SEMICOLON function_statement ENDFUNCTION .)
    GENERATE        reduce using rule 326 (function -> FUNCTION ID SEMICOLON function_statement ENDFUNCTION .)


state 490

    (334) function_calc -> for_statement .

    ENDFUNCTION     reduce using rule 334 (function_calc -> for_statement .)


state 491

    (327) function_statement -> funcvardecls function_calc .

    ENDFUNCTION     reduce using rule 327 (function_statement -> funcvardecls function_calc .)


state 492

    (333) function_calc -> if_statement .

    ENDFUNCTION     reduce using rule 333 (function_calc -> if_statement .)


state 493

    (332) function_calc -> blocking_substitution .

    ENDFUNCTION     reduce using rule 332 (function_calc -> blocking_substitution .)


state 494

    (336) function_calc -> case_statement .

    ENDFUNCTION     reduce using rule 336 (function_calc -> case_statement .)


state 495

    (219) blocking_substitution -> delays . lvalue EQUALS delays rvalue SEMICOLON
    (246) if_statement -> delays . IF LPAREN cond RPAREN true_statement ELSE else_statement
    (247) if_statement -> delays . IF LPAREN cond RPAREN true_statement
    (111) lvalue -> . lpartselect
    (112) lvalue -> . lpointer
    (113) lvalue -> . lconcat
    (114) lvalue -> . identifier
    (97) lpartselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (98) lpartselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (99) lpartselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (100) lpartselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (101) lpartselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (102) lpartselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (103) lpointer -> . pointer
    (104) lconcat -> . LBRACE lconcatlist RBRACE
    (357) identifier -> . ID
    (358) identifier -> . scope ID
    (170) pointer -> . identifier LBRACKET expression RBRACKET
    (171) pointer -> . pointer LBRACKET expression RBRACKET
    (359) scope -> . identifier DOT
    (360) scope -> . pointer DOT

    IF              shift and go to state 275
    LBRACE          shift and go to state 162
    ID              shift and go to state 85

    lpointer                       shift and go to state 165
    lpartselect                    shift and go to state 166
    lvalue                         shift and go to state 510
    identifier                     shift and go to state 168
    pointer                        shift and go to state 169
    scope                          shift and go to state 84
    lconcat                        shift and go to state 164

state 496

    (338) function_calc -> namedblock .

    ENDFUNCTION     reduce using rule 338 (function_calc -> namedblock .)


state 497

    (335) function_calc -> while_statement .

    ENDFUNCTION     reduce using rule 335 (function_calc -> while_statement .)


state 498

    (328) funcvardecls -> funcvardecls funcvardecl .

    IF              reduce using rule 328 (funcvardecls -> funcvardecls funcvardecl .)
    FOR             reduce using rule 328 (funcvardecls -> funcvardecls funcvardecl .)
    WHILE           reduce using rule 328 (funcvardecls -> funcvardecls funcvardecl .)
    CASE            reduce using rule 328 (funcvardecls -> funcvardecls funcvardecl .)
    BEGIN           reduce using rule 328 (funcvardecls -> funcvardecls funcvardecl .)
    INTEGER         reduce using rule 328 (funcvardecls -> funcvardecls funcvardecl .)
    DELAY           reduce using rule 328 (funcvardecls -> funcvardecls funcvardecl .)
    INPUT           reduce using rule 328 (funcvardecls -> funcvardecls funcvardecl .)
    OUTPUT          reduce using rule 328 (funcvardecls -> funcvardecls funcvardecl .)
    INOUT           reduce using rule 328 (funcvardecls -> funcvardecls funcvardecl .)
    TRI             reduce using rule 328 (funcvardecls -> funcvardecls funcvardecl .)
    REG             reduce using rule 328 (funcvardecls -> funcvardecls funcvardecl .)
    WIRE            reduce using rule 328 (funcvardecls -> funcvardecls funcvardecl .)
    SIGNED          reduce using rule 328 (funcvardecls -> funcvardecls funcvardecl .)
    LBRACE          reduce using rule 328 (funcvardecls -> funcvardecls funcvardecl .)
    ID              reduce using rule 328 (funcvardecls -> funcvardecls funcvardecl .)


state 499

    (337) function_calc -> block .

    ENDFUNCTION     reduce using rule 337 (function_calc -> block .)


state 500

    (68) decl -> sigtypes width . declnamelist SEMICOLON
    (69) declnamelist -> . declnamelist COMMA declname
    (70) declnamelist -> . declname
    (71) declname -> . ID
    (72) declname -> . ID length

    ID              shift and go to state 451

    declname                       shift and go to state 195
    declnamelist                   shift and go to state 335

state 501

    (325) function -> FUNCTION width ID SEMICOLON function_statement . ENDFUNCTION

    ENDFUNCTION     shift and go to state 584


state 502

    (273) wait_statement -> WAIT LPAREN cond RPAREN . waitcontent_statement
    (274) waitcontent_statement -> . basic_statement
    (275) waitcontent_statement -> . SEMICOLON
    (205) basic_statement -> . if_statement
    (206) basic_statement -> . case_statement
    (207) basic_statement -> . for_statement
    (208) basic_statement -> . while_statement
    (209) basic_statement -> . event_statement
    (210) basic_statement -> . wait_statement
    (211) basic_statement -> . forever_statement
    (212) basic_statement -> . block
    (213) basic_statement -> . namedblock
    (214) basic_statement -> . parallelblock
    (215) basic_statement -> . blocking_substitution
    (216) basic_statement -> . nonblocking_substitution
    (217) basic_statement -> . single_statement
    (244) if_statement -> . IF LPAREN cond RPAREN true_statement ELSE else_statement
    (245) if_statement -> . IF LPAREN cond RPAREN true_statement
    (246) if_statement -> . delays IF LPAREN cond RPAREN true_statement ELSE else_statement
    (247) if_statement -> . delays IF LPAREN cond RPAREN true_statement
    (262) case_statement -> . CASE LPAREN case_comp RPAREN casecontent_statements ENDCASE
    (252) for_statement -> . FOR LPAREN forpre forcond forpost RPAREN forcontent_statement
    (260) while_statement -> . WHILE LPAREN cond RPAREN whilecontent_statement
    (272) event_statement -> . senslist SEMICOLON
    (273) wait_statement -> . WAIT LPAREN cond RPAREN waitcontent_statement
    (276) forever_statement -> . FOREVER basic_statement
    (227) block -> . BEGIN block_statements END
    (228) block -> . BEGIN END
    (232) namedblock -> . BEGIN COLON ID namedblock_statements END
    (233) namedblock -> . BEGIN COLON ID END
    (242) parallelblock -> . FORK block_statements JOIN
    (243) parallelblock -> . FORK JOIN
    (219) blocking_substitution -> . delays lvalue EQUALS delays rvalue SEMICOLON
    (221) nonblocking_substitution -> . delays lvalue LE delays rvalue SEMICOLON
    (362) single_statement -> . DELAY expression SEMICOLON
    (363) single_statement -> . systemcall SEMICOLON
    (364) single_statement -> . disable SEMICOLON
    (222) delays -> . DELAY LPAREN expression RPAREN
    (223) delays -> . DELAY identifier
    (224) delays -> . DELAY intnumber
    (225) delays -> . DELAY floatnumber
    (226) delays -> . empty
    (186) senslist -> . AT LPAREN edgesigs RPAREN
    (193) senslist -> . empty
    (194) senslist -> . AT levelsig
    (195) senslist -> . AT LPAREN levelsigs RPAREN
    (203) senslist -> . AT TIMES
    (204) senslist -> . AT LPAREN TIMES RPAREN
    (319) systemcall -> . DOLLER ID
    (320) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (361) disable -> . DISABLE ID
    (365) empty -> .

  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for SEMICOLON resolved as shift
    SEMICOLON       shift and go to state 585
    IF              shift and go to state 150
    CASE            shift and go to state 136
    FOR             shift and go to state 144
    WHILE           shift and go to state 146
    WAIT            shift and go to state 131
    FOREVER         shift and go to state 143
    BEGIN           shift and go to state 153
    FORK            shift and go to state 138
    DELAY           shift and go to state 147
    AT              shift and go to state 159
    DOLLER          shift and go to state 100
    DISABLE         shift and go to state 155
    LBRACE          reduce using rule 365 (empty -> .)
    ID              reduce using rule 365 (empty -> .)

  ! IF              [ reduce using rule 365 (empty -> .) ]
  ! SEMICOLON       [ reduce using rule 365 (empty -> .) ]

    parallelblock                  shift and go to state 129
    for_statement                  shift and go to state 130
    empty                          shift and go to state 157
    if_statement                   shift and go to state 132
    while_statement                shift and go to state 148
    waitcontent_statement          shift and go to state 586
    blocking_substitution          shift and go to state 137
    systemcall                     shift and go to state 158
    basic_statement                shift and go to state 587
    event_statement                shift and go to state 135
    wait_statement                 shift and go to state 151
    forever_statement              shift and go to state 152
    case_statement                 shift and go to state 139
    disable                        shift and go to state 133
    senslist                       shift and go to state 154
    single_statement               shift and go to state 140
    block                          shift and go to state 156
    delays                         shift and go to state 141
    nonblocking_substitution       shift and go to state 142
    namedblock                     shift and go to state 145

state 503

    (262) case_statement -> CASE LPAREN case_comp RPAREN . casecontent_statements ENDCASE
    (264) casecontent_statements -> . casecontent_statements casecontent_statement
    (265) casecontent_statements -> . casecontent_statement
    (266) casecontent_statement -> . casecontent_condition COLON basic_statement
    (269) casecontent_statement -> . DEFAULT COLON basic_statement
    (267) casecontent_condition -> . casecontent_condition COMMA expression
    (268) casecontent_condition -> . expression
    (116) expression -> . MINUS expression
    (117) expression -> . PLUS expression
    (118) expression -> . LNOT expression
    (119) expression -> . NOT expression
    (120) expression -> . AND expression
    (121) expression -> . NAND expression
    (122) expression -> . NOR expression
    (123) expression -> . OR expression
    (124) expression -> . XOR expression
    (125) expression -> . XNOR expression
    (126) expression -> . expression POWER expression
    (127) expression -> . expression TIMES expression
    (128) expression -> . expression DIVIDE expression
    (129) expression -> . expression MOD expression
    (130) expression -> . expression PLUS expression
    (131) expression -> . expression MINUS expression
    (132) expression -> . expression LSHIFT expression
    (133) expression -> . expression RSHIFT expression
    (134) expression -> . expression LSHIFTA expression
    (135) expression -> . expression RSHIFTA expression
    (136) expression -> . expression LT expression
    (137) expression -> . expression GT expression
    (138) expression -> . expression LE expression
    (139) expression -> . expression GE expression
    (140) expression -> . expression EQ expression
    (141) expression -> . expression NE expression
    (142) expression -> . expression EQL expression
    (143) expression -> . expression NEL expression
    (144) expression -> . expression AND expression
    (145) expression -> . expression XOR expression
    (146) expression -> . expression XNOR expression
    (147) expression -> . expression OR expression
    (148) expression -> . expression LAND expression
    (149) expression -> . expression LOR expression
    (150) expression -> . expression COND expression COLON expression
    (151) expression -> . LPAREN expression RPAREN
    (152) expression -> . concat
    (153) expression -> . repeat
    (154) expression -> . partselect
    (155) expression -> . pointer
    (156) expression -> . functioncall
    (157) expression -> . systemcall
    (158) expression -> . identifier
    (159) expression -> . const_expression
    (160) concat -> . LBRACE concatlist RBRACE
    (163) repeat -> . LBRACE expression concat RBRACE
    (164) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (165) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (166) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (167) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (168) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (169) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (170) pointer -> . identifier LBRACKET expression RBRACKET
    (171) pointer -> . pointer LBRACKET expression RBRACKET
    (339) functioncall -> . identifier LPAREN func_args RPAREN
    (319) systemcall -> . DOLLER ID
    (320) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (357) identifier -> . ID
    (358) identifier -> . scope ID
    (172) const_expression -> . intnumber
    (173) const_expression -> . floatnumber
    (174) const_expression -> . stringliteral
    (359) scope -> . identifier DOT
    (360) scope -> . pointer DOT
    (176) intnumber -> . INTNUMBER_DEC
    (177) intnumber -> . SIGNED_INTNUMBER_DEC
    (178) intnumber -> . INTNUMBER_BIN
    (179) intnumber -> . SIGNED_INTNUMBER_BIN
    (180) intnumber -> . INTNUMBER_OCT
    (181) intnumber -> . SIGNED_INTNUMBER_OCT
    (182) intnumber -> . INTNUMBER_HEX
    (183) intnumber -> . SIGNED_INTNUMBER_HEX
    (175) floatnumber -> . FLOATNUMBER
    (184) stringliteral -> . STRING_LITERAL

    DEFAULT         shift and go to state 592
    MINUS           shift and go to state 97
    PLUS            shift and go to state 89
    LNOT            shift and go to state 95
    NOT             shift and go to state 78
    AND             shift and go to state 91
    NAND            shift and go to state 98
    NOR             shift and go to state 76
    OR              shift and go to state 105
    XOR             shift and go to state 82
    XNOR            shift and go to state 87
    LPAREN          shift and go to state 96
    LBRACE          shift and go to state 77
    DOLLER          shift and go to state 100
    ID              shift and go to state 85
    INTNUMBER_DEC   shift and go to state 79
    SIGNED_INTNUMBER_DEC shift and go to state 101
    INTNUMBER_BIN   shift and go to state 111
    SIGNED_INTNUMBER_BIN shift and go to state 112
    INTNUMBER_OCT   shift and go to state 86
    SIGNED_INTNUMBER_OCT shift and go to state 106
    INTNUMBER_HEX   shift and go to state 93
    SIGNED_INTNUMBER_HEX shift and go to state 83
    FLOATNUMBER     shift and go to state 102
    STRING_LITERAL  shift and go to state 107

    scope                          shift and go to state 84
    const_expression               shift and go to state 110
    expression                     shift and go to state 590
    repeat                         shift and go to state 108
    functioncall                   shift and go to state 94
    identifier                     shift and go to state 104
    partselect                     shift and go to state 103
    pointer                        shift and go to state 80
    casecontent_condition          shift and go to state 588
    casecontent_statement          shift and go to state 591
    systemcall                     shift and go to state 109
    stringliteral                  shift and go to state 99
    concat                         shift and go to state 88
    casecontent_statements         shift and go to state 589
    floatnumber                    shift and go to state 90
    intnumber                      shift and go to state 81

state 504

    (246) if_statement -> delays IF LPAREN cond . RPAREN true_statement ELSE else_statement
    (247) if_statement -> delays IF LPAREN cond . RPAREN true_statement

    RPAREN          shift and go to state 593


state 505

    (221) nonblocking_substitution -> delays lvalue LE delays . rvalue SEMICOLON
    (115) rvalue -> . expression
    (116) expression -> . MINUS expression
    (117) expression -> . PLUS expression
    (118) expression -> . LNOT expression
    (119) expression -> . NOT expression
    (120) expression -> . AND expression
    (121) expression -> . NAND expression
    (122) expression -> . NOR expression
    (123) expression -> . OR expression
    (124) expression -> . XOR expression
    (125) expression -> . XNOR expression
    (126) expression -> . expression POWER expression
    (127) expression -> . expression TIMES expression
    (128) expression -> . expression DIVIDE expression
    (129) expression -> . expression MOD expression
    (130) expression -> . expression PLUS expression
    (131) expression -> . expression MINUS expression
    (132) expression -> . expression LSHIFT expression
    (133) expression -> . expression RSHIFT expression
    (134) expression -> . expression LSHIFTA expression
    (135) expression -> . expression RSHIFTA expression
    (136) expression -> . expression LT expression
    (137) expression -> . expression GT expression
    (138) expression -> . expression LE expression
    (139) expression -> . expression GE expression
    (140) expression -> . expression EQ expression
    (141) expression -> . expression NE expression
    (142) expression -> . expression EQL expression
    (143) expression -> . expression NEL expression
    (144) expression -> . expression AND expression
    (145) expression -> . expression XOR expression
    (146) expression -> . expression XNOR expression
    (147) expression -> . expression OR expression
    (148) expression -> . expression LAND expression
    (149) expression -> . expression LOR expression
    (150) expression -> . expression COND expression COLON expression
    (151) expression -> . LPAREN expression RPAREN
    (152) expression -> . concat
    (153) expression -> . repeat
    (154) expression -> . partselect
    (155) expression -> . pointer
    (156) expression -> . functioncall
    (157) expression -> . systemcall
    (158) expression -> . identifier
    (159) expression -> . const_expression
    (160) concat -> . LBRACE concatlist RBRACE
    (163) repeat -> . LBRACE expression concat RBRACE
    (164) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (165) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (166) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (167) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (168) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (169) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (170) pointer -> . identifier LBRACKET expression RBRACKET
    (171) pointer -> . pointer LBRACKET expression RBRACKET
    (339) functioncall -> . identifier LPAREN func_args RPAREN
    (319) systemcall -> . DOLLER ID
    (320) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (357) identifier -> . ID
    (358) identifier -> . scope ID
    (172) const_expression -> . intnumber
    (173) const_expression -> . floatnumber
    (174) const_expression -> . stringliteral
    (359) scope -> . identifier DOT
    (360) scope -> . pointer DOT
    (176) intnumber -> . INTNUMBER_DEC
    (177) intnumber -> . SIGNED_INTNUMBER_DEC
    (178) intnumber -> . INTNUMBER_BIN
    (179) intnumber -> . SIGNED_INTNUMBER_BIN
    (180) intnumber -> . INTNUMBER_OCT
    (181) intnumber -> . SIGNED_INTNUMBER_OCT
    (182) intnumber -> . INTNUMBER_HEX
    (183) intnumber -> . SIGNED_INTNUMBER_HEX
    (175) floatnumber -> . FLOATNUMBER
    (184) stringliteral -> . STRING_LITERAL

    MINUS           shift and go to state 97
    PLUS            shift and go to state 89
    LNOT            shift and go to state 95
    NOT             shift and go to state 78
    AND             shift and go to state 91
    NAND            shift and go to state 98
    NOR             shift and go to state 76
    OR              shift and go to state 105
    XOR             shift and go to state 82
    XNOR            shift and go to state 87
    LPAREN          shift and go to state 96
    LBRACE          shift and go to state 77
    DOLLER          shift and go to state 100
    ID              shift and go to state 85
    INTNUMBER_DEC   shift and go to state 79
    SIGNED_INTNUMBER_DEC shift and go to state 101
    INTNUMBER_BIN   shift and go to state 111
    SIGNED_INTNUMBER_BIN shift and go to state 112
    INTNUMBER_OCT   shift and go to state 86
    SIGNED_INTNUMBER_OCT shift and go to state 106
    INTNUMBER_HEX   shift and go to state 93
    SIGNED_INTNUMBER_HEX shift and go to state 83
    FLOATNUMBER     shift and go to state 102
    STRING_LITERAL  shift and go to state 107

    stringliteral                  shift and go to state 99
    intnumber                      shift and go to state 81
    expression                     shift and go to state 428
    repeat                         shift and go to state 108
    rvalue                         shift and go to state 594
    partselect                     shift and go to state 103
    identifier                     shift and go to state 104
    pointer                        shift and go to state 80
    functioncall                   shift and go to state 94
    scope                          shift and go to state 84
    systemcall                     shift and go to state 109
    const_expression               shift and go to state 110
    concat                         shift and go to state 88
    floatnumber                    shift and go to state 90

state 506

    (219) blocking_substitution -> delays lvalue EQUALS delays . rvalue SEMICOLON
    (115) rvalue -> . expression
    (116) expression -> . MINUS expression
    (117) expression -> . PLUS expression
    (118) expression -> . LNOT expression
    (119) expression -> . NOT expression
    (120) expression -> . AND expression
    (121) expression -> . NAND expression
    (122) expression -> . NOR expression
    (123) expression -> . OR expression
    (124) expression -> . XOR expression
    (125) expression -> . XNOR expression
    (126) expression -> . expression POWER expression
    (127) expression -> . expression TIMES expression
    (128) expression -> . expression DIVIDE expression
    (129) expression -> . expression MOD expression
    (130) expression -> . expression PLUS expression
    (131) expression -> . expression MINUS expression
    (132) expression -> . expression LSHIFT expression
    (133) expression -> . expression RSHIFT expression
    (134) expression -> . expression LSHIFTA expression
    (135) expression -> . expression RSHIFTA expression
    (136) expression -> . expression LT expression
    (137) expression -> . expression GT expression
    (138) expression -> . expression LE expression
    (139) expression -> . expression GE expression
    (140) expression -> . expression EQ expression
    (141) expression -> . expression NE expression
    (142) expression -> . expression EQL expression
    (143) expression -> . expression NEL expression
    (144) expression -> . expression AND expression
    (145) expression -> . expression XOR expression
    (146) expression -> . expression XNOR expression
    (147) expression -> . expression OR expression
    (148) expression -> . expression LAND expression
    (149) expression -> . expression LOR expression
    (150) expression -> . expression COND expression COLON expression
    (151) expression -> . LPAREN expression RPAREN
    (152) expression -> . concat
    (153) expression -> . repeat
    (154) expression -> . partselect
    (155) expression -> . pointer
    (156) expression -> . functioncall
    (157) expression -> . systemcall
    (158) expression -> . identifier
    (159) expression -> . const_expression
    (160) concat -> . LBRACE concatlist RBRACE
    (163) repeat -> . LBRACE expression concat RBRACE
    (164) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (165) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (166) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (167) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (168) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (169) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (170) pointer -> . identifier LBRACKET expression RBRACKET
    (171) pointer -> . pointer LBRACKET expression RBRACKET
    (339) functioncall -> . identifier LPAREN func_args RPAREN
    (319) systemcall -> . DOLLER ID
    (320) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (357) identifier -> . ID
    (358) identifier -> . scope ID
    (172) const_expression -> . intnumber
    (173) const_expression -> . floatnumber
    (174) const_expression -> . stringliteral
    (359) scope -> . identifier DOT
    (360) scope -> . pointer DOT
    (176) intnumber -> . INTNUMBER_DEC
    (177) intnumber -> . SIGNED_INTNUMBER_DEC
    (178) intnumber -> . INTNUMBER_BIN
    (179) intnumber -> . SIGNED_INTNUMBER_BIN
    (180) intnumber -> . INTNUMBER_OCT
    (181) intnumber -> . SIGNED_INTNUMBER_OCT
    (182) intnumber -> . INTNUMBER_HEX
    (183) intnumber -> . SIGNED_INTNUMBER_HEX
    (175) floatnumber -> . FLOATNUMBER
    (184) stringliteral -> . STRING_LITERAL

    MINUS           shift and go to state 97
    PLUS            shift and go to state 89
    LNOT            shift and go to state 95
    NOT             shift and go to state 78
    AND             shift and go to state 91
    NAND            shift and go to state 98
    NOR             shift and go to state 76
    OR              shift and go to state 105
    XOR             shift and go to state 82
    XNOR            shift and go to state 87
    LPAREN          shift and go to state 96
    LBRACE          shift and go to state 77
    DOLLER          shift and go to state 100
    ID              shift and go to state 85
    INTNUMBER_DEC   shift and go to state 79
    SIGNED_INTNUMBER_DEC shift and go to state 101
    INTNUMBER_BIN   shift and go to state 111
    SIGNED_INTNUMBER_BIN shift and go to state 112
    INTNUMBER_OCT   shift and go to state 86
    SIGNED_INTNUMBER_OCT shift and go to state 106
    INTNUMBER_HEX   shift and go to state 93
    SIGNED_INTNUMBER_HEX shift and go to state 83
    FLOATNUMBER     shift and go to state 102
    STRING_LITERAL  shift and go to state 107

    stringliteral                  shift and go to state 99
    intnumber                      shift and go to state 81
    expression                     shift and go to state 428
    repeat                         shift and go to state 108
    rvalue                         shift and go to state 595
    partselect                     shift and go to state 103
    identifier                     shift and go to state 104
    pointer                        shift and go to state 80
    functioncall                   shift and go to state 94
    scope                          shift and go to state 84
    systemcall                     shift and go to state 109
    const_expression               shift and go to state 110
    concat                         shift and go to state 88
    floatnumber                    shift and go to state 90

state 507

    (252) for_statement -> FOR LPAREN forpre forcond . forpost RPAREN forcontent_statement
    (257) forpost -> . blocking_substitution_base
    (258) forpost -> . empty
    (220) blocking_substitution_base -> . delays lvalue EQUALS delays rvalue
    (365) empty -> .
    (222) delays -> . DELAY LPAREN expression RPAREN
    (223) delays -> . DELAY identifier
    (224) delays -> . DELAY intnumber
    (225) delays -> . DELAY floatnumber
    (226) delays -> . empty

    RPAREN          reduce using rule 365 (empty -> .)
    LBRACE          reduce using rule 365 (empty -> .)
    ID              reduce using rule 365 (empty -> .)
    DELAY           shift and go to state 170

    blocking_substitution_base     shift and go to state 596
    empty                          shift and go to state 597
    forpost                        shift and go to state 598
    delays                         shift and go to state 599

state 508

    (256) forcond -> SEMICOLON .

    DELAY           reduce using rule 256 (forcond -> SEMICOLON .)
    RPAREN          reduce using rule 256 (forcond -> SEMICOLON .)
    LBRACE          reduce using rule 256 (forcond -> SEMICOLON .)
    ID              reduce using rule 256 (forcond -> SEMICOLON .)


state 509

    (255) forcond -> cond . SEMICOLON

    SEMICOLON       shift and go to state 600


state 510

    (219) blocking_substitution -> delays lvalue . EQUALS delays rvalue SEMICOLON

    EQUALS          shift and go to state 406


state 511

    (260) while_statement -> WHILE LPAREN cond RPAREN . whilecontent_statement
    (261) whilecontent_statement -> . basic_statement
    (205) basic_statement -> . if_statement
    (206) basic_statement -> . case_statement
    (207) basic_statement -> . for_statement
    (208) basic_statement -> . while_statement
    (209) basic_statement -> . event_statement
    (210) basic_statement -> . wait_statement
    (211) basic_statement -> . forever_statement
    (212) basic_statement -> . block
    (213) basic_statement -> . namedblock
    (214) basic_statement -> . parallelblock
    (215) basic_statement -> . blocking_substitution
    (216) basic_statement -> . nonblocking_substitution
    (217) basic_statement -> . single_statement
    (244) if_statement -> . IF LPAREN cond RPAREN true_statement ELSE else_statement
    (245) if_statement -> . IF LPAREN cond RPAREN true_statement
    (246) if_statement -> . delays IF LPAREN cond RPAREN true_statement ELSE else_statement
    (247) if_statement -> . delays IF LPAREN cond RPAREN true_statement
    (262) case_statement -> . CASE LPAREN case_comp RPAREN casecontent_statements ENDCASE
    (252) for_statement -> . FOR LPAREN forpre forcond forpost RPAREN forcontent_statement
    (260) while_statement -> . WHILE LPAREN cond RPAREN whilecontent_statement
    (272) event_statement -> . senslist SEMICOLON
    (273) wait_statement -> . WAIT LPAREN cond RPAREN waitcontent_statement
    (276) forever_statement -> . FOREVER basic_statement
    (227) block -> . BEGIN block_statements END
    (228) block -> . BEGIN END
    (232) namedblock -> . BEGIN COLON ID namedblock_statements END
    (233) namedblock -> . BEGIN COLON ID END
    (242) parallelblock -> . FORK block_statements JOIN
    (243) parallelblock -> . FORK JOIN
    (219) blocking_substitution -> . delays lvalue EQUALS delays rvalue SEMICOLON
    (221) nonblocking_substitution -> . delays lvalue LE delays rvalue SEMICOLON
    (362) single_statement -> . DELAY expression SEMICOLON
    (363) single_statement -> . systemcall SEMICOLON
    (364) single_statement -> . disable SEMICOLON
    (222) delays -> . DELAY LPAREN expression RPAREN
    (223) delays -> . DELAY identifier
    (224) delays -> . DELAY intnumber
    (225) delays -> . DELAY floatnumber
    (226) delays -> . empty
    (186) senslist -> . AT LPAREN edgesigs RPAREN
    (193) senslist -> . empty
    (194) senslist -> . AT levelsig
    (195) senslist -> . AT LPAREN levelsigs RPAREN
    (203) senslist -> . AT TIMES
    (204) senslist -> . AT LPAREN TIMES RPAREN
    (319) systemcall -> . DOLLER ID
    (320) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (361) disable -> . DISABLE ID
    (365) empty -> .

  ! shift/reduce conflict for IF resolved as shift
    IF              shift and go to state 150
    CASE            shift and go to state 136
    FOR             shift and go to state 144
    WHILE           shift and go to state 146
    WAIT            shift and go to state 131
    FOREVER         shift and go to state 143
    BEGIN           shift and go to state 153
    FORK            shift and go to state 138
    DELAY           shift and go to state 147
    AT              shift and go to state 159
    DOLLER          shift and go to state 100
    DISABLE         shift and go to state 155
    LBRACE          reduce using rule 365 (empty -> .)
    ID              reduce using rule 365 (empty -> .)
    SEMICOLON       reduce using rule 365 (empty -> .)

  ! IF              [ reduce using rule 365 (empty -> .) ]

    parallelblock                  shift and go to state 129
    for_statement                  shift and go to state 130
    empty                          shift and go to state 157
    if_statement                   shift and go to state 132
    while_statement                shift and go to state 148
    blocking_substitution          shift and go to state 137
    systemcall                     shift and go to state 158
    basic_statement                shift and go to state 602
    event_statement                shift and go to state 135
    wait_statement                 shift and go to state 151
    forever_statement              shift and go to state 152
    whilecontent_statement         shift and go to state 601
    case_statement                 shift and go to state 139
    disable                        shift and go to state 133
    senslist                       shift and go to state 154
    single_statement               shift and go to state 140
    block                          shift and go to state 156
    delays                         shift and go to state 141
    nonblocking_substitution       shift and go to state 142
    namedblock                     shift and go to state 145

state 512

    (222) delays -> DELAY LPAREN expression RPAREN .
    (151) expression -> LPAREN expression RPAREN .

    IF              reduce using rule 222 (delays -> DELAY LPAREN expression RPAREN .)
    LBRACE          reduce using rule 222 (delays -> DELAY LPAREN expression RPAREN .)
    ID              reduce using rule 222 (delays -> DELAY LPAREN expression RPAREN .)
    SEMICOLON       reduce using rule 151 (expression -> LPAREN expression RPAREN .)
    POWER           reduce using rule 151 (expression -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 151 (expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 151 (expression -> LPAREN expression RPAREN .)
    MOD             reduce using rule 151 (expression -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 151 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 151 (expression -> LPAREN expression RPAREN .)
    LSHIFT          reduce using rule 151 (expression -> LPAREN expression RPAREN .)
    RSHIFT          reduce using rule 151 (expression -> LPAREN expression RPAREN .)
    LSHIFTA         reduce using rule 151 (expression -> LPAREN expression RPAREN .)
    RSHIFTA         reduce using rule 151 (expression -> LPAREN expression RPAREN .)
    LT              reduce using rule 151 (expression -> LPAREN expression RPAREN .)
    GT              reduce using rule 151 (expression -> LPAREN expression RPAREN .)
    LE              reduce using rule 151 (expression -> LPAREN expression RPAREN .)
    GE              reduce using rule 151 (expression -> LPAREN expression RPAREN .)
    EQ              reduce using rule 151 (expression -> LPAREN expression RPAREN .)
    NE              reduce using rule 151 (expression -> LPAREN expression RPAREN .)
    EQL             reduce using rule 151 (expression -> LPAREN expression RPAREN .)
    NEL             reduce using rule 151 (expression -> LPAREN expression RPAREN .)
    AND             reduce using rule 151 (expression -> LPAREN expression RPAREN .)
    XOR             reduce using rule 151 (expression -> LPAREN expression RPAREN .)
    XNOR            reduce using rule 151 (expression -> LPAREN expression RPAREN .)
    OR              reduce using rule 151 (expression -> LPAREN expression RPAREN .)
    LAND            reduce using rule 151 (expression -> LPAREN expression RPAREN .)
    LOR             reduce using rule 151 (expression -> LPAREN expression RPAREN .)
    COND            reduce using rule 151 (expression -> LPAREN expression RPAREN .)


state 513

    (244) if_statement -> IF LPAREN cond RPAREN . true_statement ELSE else_statement
    (245) if_statement -> IF LPAREN cond RPAREN . true_statement
    (250) true_statement -> . ifcontent_statement
    (249) ifcontent_statement -> . basic_statement
    (205) basic_statement -> . if_statement
    (206) basic_statement -> . case_statement
    (207) basic_statement -> . for_statement
    (208) basic_statement -> . while_statement
    (209) basic_statement -> . event_statement
    (210) basic_statement -> . wait_statement
    (211) basic_statement -> . forever_statement
    (212) basic_statement -> . block
    (213) basic_statement -> . namedblock
    (214) basic_statement -> . parallelblock
    (215) basic_statement -> . blocking_substitution
    (216) basic_statement -> . nonblocking_substitution
    (217) basic_statement -> . single_statement
    (244) if_statement -> . IF LPAREN cond RPAREN true_statement ELSE else_statement
    (245) if_statement -> . IF LPAREN cond RPAREN true_statement
    (246) if_statement -> . delays IF LPAREN cond RPAREN true_statement ELSE else_statement
    (247) if_statement -> . delays IF LPAREN cond RPAREN true_statement
    (262) case_statement -> . CASE LPAREN case_comp RPAREN casecontent_statements ENDCASE
    (252) for_statement -> . FOR LPAREN forpre forcond forpost RPAREN forcontent_statement
    (260) while_statement -> . WHILE LPAREN cond RPAREN whilecontent_statement
    (272) event_statement -> . senslist SEMICOLON
    (273) wait_statement -> . WAIT LPAREN cond RPAREN waitcontent_statement
    (276) forever_statement -> . FOREVER basic_statement
    (227) block -> . BEGIN block_statements END
    (228) block -> . BEGIN END
    (232) namedblock -> . BEGIN COLON ID namedblock_statements END
    (233) namedblock -> . BEGIN COLON ID END
    (242) parallelblock -> . FORK block_statements JOIN
    (243) parallelblock -> . FORK JOIN
    (219) blocking_substitution -> . delays lvalue EQUALS delays rvalue SEMICOLON
    (221) nonblocking_substitution -> . delays lvalue LE delays rvalue SEMICOLON
    (362) single_statement -> . DELAY expression SEMICOLON
    (363) single_statement -> . systemcall SEMICOLON
    (364) single_statement -> . disable SEMICOLON
    (222) delays -> . DELAY LPAREN expression RPAREN
    (223) delays -> . DELAY identifier
    (224) delays -> . DELAY intnumber
    (225) delays -> . DELAY floatnumber
    (226) delays -> . empty
    (186) senslist -> . AT LPAREN edgesigs RPAREN
    (193) senslist -> . empty
    (194) senslist -> . AT levelsig
    (195) senslist -> . AT LPAREN levelsigs RPAREN
    (203) senslist -> . AT TIMES
    (204) senslist -> . AT LPAREN TIMES RPAREN
    (319) systemcall -> . DOLLER ID
    (320) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (361) disable -> . DISABLE ID
    (365) empty -> .

  ! shift/reduce conflict for IF resolved as shift
    IF              shift and go to state 150
    CASE            shift and go to state 136
    FOR             shift and go to state 144
    WHILE           shift and go to state 146
    WAIT            shift and go to state 131
    FOREVER         shift and go to state 143
    BEGIN           shift and go to state 153
    FORK            shift and go to state 138
    DELAY           shift and go to state 147
    AT              shift and go to state 159
    DOLLER          shift and go to state 100
    DISABLE         shift and go to state 155
    LBRACE          reduce using rule 365 (empty -> .)
    ID              reduce using rule 365 (empty -> .)
    SEMICOLON       reduce using rule 365 (empty -> .)

  ! IF              [ reduce using rule 365 (empty -> .) ]

    parallelblock                  shift and go to state 129
    for_statement                  shift and go to state 130
    true_statement                 shift and go to state 603
    empty                          shift and go to state 157
    if_statement                   shift and go to state 132
    while_statement                shift and go to state 148
    blocking_substitution          shift and go to state 137
    systemcall                     shift and go to state 158
    basic_statement                shift and go to state 605
    ifcontent_statement            shift and go to state 604
    event_statement                shift and go to state 135
    wait_statement                 shift and go to state 151
    forever_statement              shift and go to state 152
    case_statement                 shift and go to state 139
    disable                        shift and go to state 133
    senslist                       shift and go to state 154
    single_statement               shift and go to state 140
    block                          shift and go to state 156
    delays                         shift and go to state 141
    nonblocking_substitution       shift and go to state 142
    namedblock                     shift and go to state 145

state 514

    (238) namedblock_statement -> integerdecl .

    END             reduce using rule 238 (namedblock_statement -> integerdecl .)
    INTEGER         reduce using rule 238 (namedblock_statement -> integerdecl .)
    REAL            reduce using rule 238 (namedblock_statement -> integerdecl .)
    PARAMETER       reduce using rule 238 (namedblock_statement -> integerdecl .)
    LOCALPARAM      reduce using rule 238 (namedblock_statement -> integerdecl .)
    IF              reduce using rule 238 (namedblock_statement -> integerdecl .)
    CASE            reduce using rule 238 (namedblock_statement -> integerdecl .)
    FOR             reduce using rule 238 (namedblock_statement -> integerdecl .)
    WHILE           reduce using rule 238 (namedblock_statement -> integerdecl .)
    WAIT            reduce using rule 238 (namedblock_statement -> integerdecl .)
    FOREVER         reduce using rule 238 (namedblock_statement -> integerdecl .)
    BEGIN           reduce using rule 238 (namedblock_statement -> integerdecl .)
    FORK            reduce using rule 238 (namedblock_statement -> integerdecl .)
    DELAY           reduce using rule 238 (namedblock_statement -> integerdecl .)
    AT              reduce using rule 238 (namedblock_statement -> integerdecl .)
    DOLLER          reduce using rule 238 (namedblock_statement -> integerdecl .)
    DISABLE         reduce using rule 238 (namedblock_statement -> integerdecl .)
    INPUT           reduce using rule 238 (namedblock_statement -> integerdecl .)
    OUTPUT          reduce using rule 238 (namedblock_statement -> integerdecl .)
    INOUT           reduce using rule 238 (namedblock_statement -> integerdecl .)
    TRI             reduce using rule 238 (namedblock_statement -> integerdecl .)
    REG             reduce using rule 238 (namedblock_statement -> integerdecl .)
    WIRE            reduce using rule 238 (namedblock_statement -> integerdecl .)
    SIGNED          reduce using rule 238 (namedblock_statement -> integerdecl .)
    LBRACE          reduce using rule 238 (namedblock_statement -> integerdecl .)
    ID              reduce using rule 238 (namedblock_statement -> integerdecl .)
    SEMICOLON       reduce using rule 238 (namedblock_statement -> integerdecl .)


state 515

    (241) namedblock_statement -> localparamdecl .

    END             reduce using rule 241 (namedblock_statement -> localparamdecl .)
    INTEGER         reduce using rule 241 (namedblock_statement -> localparamdecl .)
    REAL            reduce using rule 241 (namedblock_statement -> localparamdecl .)
    PARAMETER       reduce using rule 241 (namedblock_statement -> localparamdecl .)
    LOCALPARAM      reduce using rule 241 (namedblock_statement -> localparamdecl .)
    IF              reduce using rule 241 (namedblock_statement -> localparamdecl .)
    CASE            reduce using rule 241 (namedblock_statement -> localparamdecl .)
    FOR             reduce using rule 241 (namedblock_statement -> localparamdecl .)
    WHILE           reduce using rule 241 (namedblock_statement -> localparamdecl .)
    WAIT            reduce using rule 241 (namedblock_statement -> localparamdecl .)
    FOREVER         reduce using rule 241 (namedblock_statement -> localparamdecl .)
    BEGIN           reduce using rule 241 (namedblock_statement -> localparamdecl .)
    FORK            reduce using rule 241 (namedblock_statement -> localparamdecl .)
    DELAY           reduce using rule 241 (namedblock_statement -> localparamdecl .)
    AT              reduce using rule 241 (namedblock_statement -> localparamdecl .)
    DOLLER          reduce using rule 241 (namedblock_statement -> localparamdecl .)
    DISABLE         reduce using rule 241 (namedblock_statement -> localparamdecl .)
    INPUT           reduce using rule 241 (namedblock_statement -> localparamdecl .)
    OUTPUT          reduce using rule 241 (namedblock_statement -> localparamdecl .)
    INOUT           reduce using rule 241 (namedblock_statement -> localparamdecl .)
    TRI             reduce using rule 241 (namedblock_statement -> localparamdecl .)
    REG             reduce using rule 241 (namedblock_statement -> localparamdecl .)
    WIRE            reduce using rule 241 (namedblock_statement -> localparamdecl .)
    SIGNED          reduce using rule 241 (namedblock_statement -> localparamdecl .)
    LBRACE          reduce using rule 241 (namedblock_statement -> localparamdecl .)
    ID              reduce using rule 241 (namedblock_statement -> localparamdecl .)
    SEMICOLON       reduce using rule 241 (namedblock_statement -> localparamdecl .)


state 516

    (239) namedblock_statement -> realdecl .

    END             reduce using rule 239 (namedblock_statement -> realdecl .)
    INTEGER         reduce using rule 239 (namedblock_statement -> realdecl .)
    REAL            reduce using rule 239 (namedblock_statement -> realdecl .)
    PARAMETER       reduce using rule 239 (namedblock_statement -> realdecl .)
    LOCALPARAM      reduce using rule 239 (namedblock_statement -> realdecl .)
    IF              reduce using rule 239 (namedblock_statement -> realdecl .)
    CASE            reduce using rule 239 (namedblock_statement -> realdecl .)
    FOR             reduce using rule 239 (namedblock_statement -> realdecl .)
    WHILE           reduce using rule 239 (namedblock_statement -> realdecl .)
    WAIT            reduce using rule 239 (namedblock_statement -> realdecl .)
    FOREVER         reduce using rule 239 (namedblock_statement -> realdecl .)
    BEGIN           reduce using rule 239 (namedblock_statement -> realdecl .)
    FORK            reduce using rule 239 (namedblock_statement -> realdecl .)
    DELAY           reduce using rule 239 (namedblock_statement -> realdecl .)
    AT              reduce using rule 239 (namedblock_statement -> realdecl .)
    DOLLER          reduce using rule 239 (namedblock_statement -> realdecl .)
    DISABLE         reduce using rule 239 (namedblock_statement -> realdecl .)
    INPUT           reduce using rule 239 (namedblock_statement -> realdecl .)
    OUTPUT          reduce using rule 239 (namedblock_statement -> realdecl .)
    INOUT           reduce using rule 239 (namedblock_statement -> realdecl .)
    TRI             reduce using rule 239 (namedblock_statement -> realdecl .)
    REG             reduce using rule 239 (namedblock_statement -> realdecl .)
    WIRE            reduce using rule 239 (namedblock_statement -> realdecl .)
    SIGNED          reduce using rule 239 (namedblock_statement -> realdecl .)
    LBRACE          reduce using rule 239 (namedblock_statement -> realdecl .)
    ID              reduce using rule 239 (namedblock_statement -> realdecl .)
    SEMICOLON       reduce using rule 239 (namedblock_statement -> realdecl .)


state 517

    (236) namedblock_statement -> basic_statement .

    END             reduce using rule 236 (namedblock_statement -> basic_statement .)
    INTEGER         reduce using rule 236 (namedblock_statement -> basic_statement .)
    REAL            reduce using rule 236 (namedblock_statement -> basic_statement .)
    PARAMETER       reduce using rule 236 (namedblock_statement -> basic_statement .)
    LOCALPARAM      reduce using rule 236 (namedblock_statement -> basic_statement .)
    IF              reduce using rule 236 (namedblock_statement -> basic_statement .)
    CASE            reduce using rule 236 (namedblock_statement -> basic_statement .)
    FOR             reduce using rule 236 (namedblock_statement -> basic_statement .)
    WHILE           reduce using rule 236 (namedblock_statement -> basic_statement .)
    WAIT            reduce using rule 236 (namedblock_statement -> basic_statement .)
    FOREVER         reduce using rule 236 (namedblock_statement -> basic_statement .)
    BEGIN           reduce using rule 236 (namedblock_statement -> basic_statement .)
    FORK            reduce using rule 236 (namedblock_statement -> basic_statement .)
    DELAY           reduce using rule 236 (namedblock_statement -> basic_statement .)
    AT              reduce using rule 236 (namedblock_statement -> basic_statement .)
    DOLLER          reduce using rule 236 (namedblock_statement -> basic_statement .)
    DISABLE         reduce using rule 236 (namedblock_statement -> basic_statement .)
    INPUT           reduce using rule 236 (namedblock_statement -> basic_statement .)
    OUTPUT          reduce using rule 236 (namedblock_statement -> basic_statement .)
    INOUT           reduce using rule 236 (namedblock_statement -> basic_statement .)
    TRI             reduce using rule 236 (namedblock_statement -> basic_statement .)
    REG             reduce using rule 236 (namedblock_statement -> basic_statement .)
    WIRE            reduce using rule 236 (namedblock_statement -> basic_statement .)
    SIGNED          reduce using rule 236 (namedblock_statement -> basic_statement .)
    LBRACE          reduce using rule 236 (namedblock_statement -> basic_statement .)
    ID              reduce using rule 236 (namedblock_statement -> basic_statement .)
    SEMICOLON       reduce using rule 236 (namedblock_statement -> basic_statement .)


state 518

    (235) namedblock_statements -> namedblock_statement .

    END             reduce using rule 235 (namedblock_statements -> namedblock_statement .)
    INTEGER         reduce using rule 235 (namedblock_statements -> namedblock_statement .)
    REAL            reduce using rule 235 (namedblock_statements -> namedblock_statement .)
    PARAMETER       reduce using rule 235 (namedblock_statements -> namedblock_statement .)
    LOCALPARAM      reduce using rule 235 (namedblock_statements -> namedblock_statement .)
    IF              reduce using rule 235 (namedblock_statements -> namedblock_statement .)
    CASE            reduce using rule 235 (namedblock_statements -> namedblock_statement .)
    FOR             reduce using rule 235 (namedblock_statements -> namedblock_statement .)
    WHILE           reduce using rule 235 (namedblock_statements -> namedblock_statement .)
    WAIT            reduce using rule 235 (namedblock_statements -> namedblock_statement .)
    FOREVER         reduce using rule 235 (namedblock_statements -> namedblock_statement .)
    BEGIN           reduce using rule 235 (namedblock_statements -> namedblock_statement .)
    FORK            reduce using rule 235 (namedblock_statements -> namedblock_statement .)
    DELAY           reduce using rule 235 (namedblock_statements -> namedblock_statement .)
    AT              reduce using rule 235 (namedblock_statements -> namedblock_statement .)
    DOLLER          reduce using rule 235 (namedblock_statements -> namedblock_statement .)
    DISABLE         reduce using rule 235 (namedblock_statements -> namedblock_statement .)
    INPUT           reduce using rule 235 (namedblock_statements -> namedblock_statement .)
    OUTPUT          reduce using rule 235 (namedblock_statements -> namedblock_statement .)
    INOUT           reduce using rule 235 (namedblock_statements -> namedblock_statement .)
    TRI             reduce using rule 235 (namedblock_statements -> namedblock_statement .)
    REG             reduce using rule 235 (namedblock_statements -> namedblock_statement .)
    WIRE            reduce using rule 235 (namedblock_statements -> namedblock_statement .)
    SIGNED          reduce using rule 235 (namedblock_statements -> namedblock_statement .)
    LBRACE          reduce using rule 235 (namedblock_statements -> namedblock_statement .)
    ID              reduce using rule 235 (namedblock_statements -> namedblock_statement .)
    SEMICOLON       reduce using rule 235 (namedblock_statements -> namedblock_statement .)


state 519

    (237) namedblock_statement -> decl .

    END             reduce using rule 237 (namedblock_statement -> decl .)
    INTEGER         reduce using rule 237 (namedblock_statement -> decl .)
    REAL            reduce using rule 237 (namedblock_statement -> decl .)
    PARAMETER       reduce using rule 237 (namedblock_statement -> decl .)
    LOCALPARAM      reduce using rule 237 (namedblock_statement -> decl .)
    IF              reduce using rule 237 (namedblock_statement -> decl .)
    CASE            reduce using rule 237 (namedblock_statement -> decl .)
    FOR             reduce using rule 237 (namedblock_statement -> decl .)
    WHILE           reduce using rule 237 (namedblock_statement -> decl .)
    WAIT            reduce using rule 237 (namedblock_statement -> decl .)
    FOREVER         reduce using rule 237 (namedblock_statement -> decl .)
    BEGIN           reduce using rule 237 (namedblock_statement -> decl .)
    FORK            reduce using rule 237 (namedblock_statement -> decl .)
    DELAY           reduce using rule 237 (namedblock_statement -> decl .)
    AT              reduce using rule 237 (namedblock_statement -> decl .)
    DOLLER          reduce using rule 237 (namedblock_statement -> decl .)
    DISABLE         reduce using rule 237 (namedblock_statement -> decl .)
    INPUT           reduce using rule 237 (namedblock_statement -> decl .)
    OUTPUT          reduce using rule 237 (namedblock_statement -> decl .)
    INOUT           reduce using rule 237 (namedblock_statement -> decl .)
    TRI             reduce using rule 237 (namedblock_statement -> decl .)
    REG             reduce using rule 237 (namedblock_statement -> decl .)
    WIRE            reduce using rule 237 (namedblock_statement -> decl .)
    SIGNED          reduce using rule 237 (namedblock_statement -> decl .)
    LBRACE          reduce using rule 237 (namedblock_statement -> decl .)
    ID              reduce using rule 237 (namedblock_statement -> decl .)
    SEMICOLON       reduce using rule 237 (namedblock_statement -> decl .)


state 520

    (240) namedblock_statement -> parameterdecl .

    END             reduce using rule 240 (namedblock_statement -> parameterdecl .)
    INTEGER         reduce using rule 240 (namedblock_statement -> parameterdecl .)
    REAL            reduce using rule 240 (namedblock_statement -> parameterdecl .)
    PARAMETER       reduce using rule 240 (namedblock_statement -> parameterdecl .)
    LOCALPARAM      reduce using rule 240 (namedblock_statement -> parameterdecl .)
    IF              reduce using rule 240 (namedblock_statement -> parameterdecl .)
    CASE            reduce using rule 240 (namedblock_statement -> parameterdecl .)
    FOR             reduce using rule 240 (namedblock_statement -> parameterdecl .)
    WHILE           reduce using rule 240 (namedblock_statement -> parameterdecl .)
    WAIT            reduce using rule 240 (namedblock_statement -> parameterdecl .)
    FOREVER         reduce using rule 240 (namedblock_statement -> parameterdecl .)
    BEGIN           reduce using rule 240 (namedblock_statement -> parameterdecl .)
    FORK            reduce using rule 240 (namedblock_statement -> parameterdecl .)
    DELAY           reduce using rule 240 (namedblock_statement -> parameterdecl .)
    AT              reduce using rule 240 (namedblock_statement -> parameterdecl .)
    DOLLER          reduce using rule 240 (namedblock_statement -> parameterdecl .)
    DISABLE         reduce using rule 240 (namedblock_statement -> parameterdecl .)
    INPUT           reduce using rule 240 (namedblock_statement -> parameterdecl .)
    OUTPUT          reduce using rule 240 (namedblock_statement -> parameterdecl .)
    INOUT           reduce using rule 240 (namedblock_statement -> parameterdecl .)
    TRI             reduce using rule 240 (namedblock_statement -> parameterdecl .)
    REG             reduce using rule 240 (namedblock_statement -> parameterdecl .)
    WIRE            reduce using rule 240 (namedblock_statement -> parameterdecl .)
    SIGNED          reduce using rule 240 (namedblock_statement -> parameterdecl .)
    LBRACE          reduce using rule 240 (namedblock_statement -> parameterdecl .)
    ID              reduce using rule 240 (namedblock_statement -> parameterdecl .)
    SEMICOLON       reduce using rule 240 (namedblock_statement -> parameterdecl .)


state 521

    (233) namedblock -> BEGIN COLON ID END .

    ENDMODULE       reduce using rule 233 (namedblock -> BEGIN COLON ID END .)
    GENERATE        reduce using rule 233 (namedblock -> BEGIN COLON ID END .)
    INTEGER         reduce using rule 233 (namedblock -> BEGIN COLON ID END .)
    REAL            reduce using rule 233 (namedblock -> BEGIN COLON ID END .)
    PARAMETER       reduce using rule 233 (namedblock -> BEGIN COLON ID END .)
    LOCALPARAM      reduce using rule 233 (namedblock -> BEGIN COLON ID END .)
    GENVAR          reduce using rule 233 (namedblock -> BEGIN COLON ID END .)
    ASSIGN          reduce using rule 233 (namedblock -> BEGIN COLON ID END .)
    ALWAYS          reduce using rule 233 (namedblock -> BEGIN COLON ID END .)
    INITIAL         reduce using rule 233 (namedblock -> BEGIN COLON ID END .)
    ID              reduce using rule 233 (namedblock -> BEGIN COLON ID END .)
    FUNCTION        reduce using rule 233 (namedblock -> BEGIN COLON ID END .)
    TASK            reduce using rule 233 (namedblock -> BEGIN COLON ID END .)
    LPAREN          reduce using rule 233 (namedblock -> BEGIN COLON ID END .)
    INPUT           reduce using rule 233 (namedblock -> BEGIN COLON ID END .)
    OUTPUT          reduce using rule 233 (namedblock -> BEGIN COLON ID END .)
    INOUT           reduce using rule 233 (namedblock -> BEGIN COLON ID END .)
    TRI             reduce using rule 233 (namedblock -> BEGIN COLON ID END .)
    REG             reduce using rule 233 (namedblock -> BEGIN COLON ID END .)
    WIRE            reduce using rule 233 (namedblock -> BEGIN COLON ID END .)
    SIGNED          reduce using rule 233 (namedblock -> BEGIN COLON ID END .)
    ENDGENERATE     reduce using rule 233 (namedblock -> BEGIN COLON ID END .)
    IF              reduce using rule 233 (namedblock -> BEGIN COLON ID END .)
    FOR             reduce using rule 233 (namedblock -> BEGIN COLON ID END .)
    ELSE            reduce using rule 233 (namedblock -> BEGIN COLON ID END .)
    END             reduce using rule 233 (namedblock -> BEGIN COLON ID END .)
    JOIN            reduce using rule 233 (namedblock -> BEGIN COLON ID END .)
    CASE            reduce using rule 233 (namedblock -> BEGIN COLON ID END .)
    WHILE           reduce using rule 233 (namedblock -> BEGIN COLON ID END .)
    WAIT            reduce using rule 233 (namedblock -> BEGIN COLON ID END .)
    FOREVER         reduce using rule 233 (namedblock -> BEGIN COLON ID END .)
    BEGIN           reduce using rule 233 (namedblock -> BEGIN COLON ID END .)
    FORK            reduce using rule 233 (namedblock -> BEGIN COLON ID END .)
    DELAY           reduce using rule 233 (namedblock -> BEGIN COLON ID END .)
    AT              reduce using rule 233 (namedblock -> BEGIN COLON ID END .)
    DOLLER          reduce using rule 233 (namedblock -> BEGIN COLON ID END .)
    DISABLE         reduce using rule 233 (namedblock -> BEGIN COLON ID END .)
    LBRACE          reduce using rule 233 (namedblock -> BEGIN COLON ID END .)
    SEMICOLON       reduce using rule 233 (namedblock -> BEGIN COLON ID END .)
    ENDFUNCTION     reduce using rule 233 (namedblock -> BEGIN COLON ID END .)
    ENDTASK         reduce using rule 233 (namedblock -> BEGIN COLON ID END .)
    ENDCASE         reduce using rule 233 (namedblock -> BEGIN COLON ID END .)
    DEFAULT         reduce using rule 233 (namedblock -> BEGIN COLON ID END .)
    MINUS           reduce using rule 233 (namedblock -> BEGIN COLON ID END .)
    PLUS            reduce using rule 233 (namedblock -> BEGIN COLON ID END .)
    LNOT            reduce using rule 233 (namedblock -> BEGIN COLON ID END .)
    NOT             reduce using rule 233 (namedblock -> BEGIN COLON ID END .)
    AND             reduce using rule 233 (namedblock -> BEGIN COLON ID END .)
    NAND            reduce using rule 233 (namedblock -> BEGIN COLON ID END .)
    NOR             reduce using rule 233 (namedblock -> BEGIN COLON ID END .)
    OR              reduce using rule 233 (namedblock -> BEGIN COLON ID END .)
    XOR             reduce using rule 233 (namedblock -> BEGIN COLON ID END .)
    XNOR            reduce using rule 233 (namedblock -> BEGIN COLON ID END .)
    INTNUMBER_DEC   reduce using rule 233 (namedblock -> BEGIN COLON ID END .)
    SIGNED_INTNUMBER_DEC reduce using rule 233 (namedblock -> BEGIN COLON ID END .)
    INTNUMBER_BIN   reduce using rule 233 (namedblock -> BEGIN COLON ID END .)
    SIGNED_INTNUMBER_BIN reduce using rule 233 (namedblock -> BEGIN COLON ID END .)
    INTNUMBER_OCT   reduce using rule 233 (namedblock -> BEGIN COLON ID END .)
    SIGNED_INTNUMBER_OCT reduce using rule 233 (namedblock -> BEGIN COLON ID END .)
    INTNUMBER_HEX   reduce using rule 233 (namedblock -> BEGIN COLON ID END .)
    SIGNED_INTNUMBER_HEX reduce using rule 233 (namedblock -> BEGIN COLON ID END .)
    FLOATNUMBER     reduce using rule 233 (namedblock -> BEGIN COLON ID END .)
    STRING_LITERAL  reduce using rule 233 (namedblock -> BEGIN COLON ID END .)


state 522

    (232) namedblock -> BEGIN COLON ID namedblock_statements . END
    (234) namedblock_statements -> namedblock_statements . namedblock_statement
    (236) namedblock_statement -> . basic_statement
    (237) namedblock_statement -> . decl
    (238) namedblock_statement -> . integerdecl
    (239) namedblock_statement -> . realdecl
    (240) namedblock_statement -> . parameterdecl
    (241) namedblock_statement -> . localparamdecl
    (205) basic_statement -> . if_statement
    (206) basic_statement -> . case_statement
    (207) basic_statement -> . for_statement
    (208) basic_statement -> . while_statement
    (209) basic_statement -> . event_statement
    (210) basic_statement -> . wait_statement
    (211) basic_statement -> . forever_statement
    (212) basic_statement -> . block
    (213) basic_statement -> . namedblock
    (214) basic_statement -> . parallelblock
    (215) basic_statement -> . blocking_substitution
    (216) basic_statement -> . nonblocking_substitution
    (217) basic_statement -> . single_statement
    (67) decl -> . sigtypes declnamelist SEMICOLON
    (68) decl -> . sigtypes width declnamelist SEMICOLON
    (77) integerdecl -> . INTEGER integernamelist SEMICOLON
    (78) integerdecl -> . INTEGER SIGNED integernamelist SEMICOLON
    (82) realdecl -> . REAL realnamelist SEMICOLON
    (86) parameterdecl -> . PARAMETER param_substitution_list SEMICOLON
    (87) parameterdecl -> . PARAMETER width param_substitution_list SEMICOLON
    (88) parameterdecl -> . PARAMETER INTEGER param_substitution_list SEMICOLON
    (89) localparamdecl -> . LOCALPARAM param_substitution_list SEMICOLON
    (90) localparamdecl -> . LOCALPARAM width param_substitution_list SEMICOLON
    (91) localparamdecl -> . LOCALPARAM INTEGER param_substitution_list SEMICOLON
    (244) if_statement -> . IF LPAREN cond RPAREN true_statement ELSE else_statement
    (245) if_statement -> . IF LPAREN cond RPAREN true_statement
    (246) if_statement -> . delays IF LPAREN cond RPAREN true_statement ELSE else_statement
    (247) if_statement -> . delays IF LPAREN cond RPAREN true_statement
    (262) case_statement -> . CASE LPAREN case_comp RPAREN casecontent_statements ENDCASE
    (252) for_statement -> . FOR LPAREN forpre forcond forpost RPAREN forcontent_statement
    (260) while_statement -> . WHILE LPAREN cond RPAREN whilecontent_statement
    (272) event_statement -> . senslist SEMICOLON
    (273) wait_statement -> . WAIT LPAREN cond RPAREN waitcontent_statement
    (276) forever_statement -> . FOREVER basic_statement
    (227) block -> . BEGIN block_statements END
    (228) block -> . BEGIN END
    (232) namedblock -> . BEGIN COLON ID namedblock_statements END
    (233) namedblock -> . BEGIN COLON ID END
    (242) parallelblock -> . FORK block_statements JOIN
    (243) parallelblock -> . FORK JOIN
    (219) blocking_substitution -> . delays lvalue EQUALS delays rvalue SEMICOLON
    (221) nonblocking_substitution -> . delays lvalue LE delays rvalue SEMICOLON
    (362) single_statement -> . DELAY expression SEMICOLON
    (363) single_statement -> . systemcall SEMICOLON
    (364) single_statement -> . disable SEMICOLON
    (30) sigtypes -> . sigtypes sigtype
    (31) sigtypes -> . sigtype
    (222) delays -> . DELAY LPAREN expression RPAREN
    (223) delays -> . DELAY identifier
    (224) delays -> . DELAY intnumber
    (225) delays -> . DELAY floatnumber
    (226) delays -> . empty
    (186) senslist -> . AT LPAREN edgesigs RPAREN
    (193) senslist -> . empty
    (194) senslist -> . AT levelsig
    (195) senslist -> . AT LPAREN levelsigs RPAREN
    (203) senslist -> . AT TIMES
    (204) senslist -> . AT LPAREN TIMES RPAREN
    (319) systemcall -> . DOLLER ID
    (320) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (361) disable -> . DISABLE ID
    (32) sigtype -> . INPUT
    (33) sigtype -> . OUTPUT
    (34) sigtype -> . INOUT
    (35) sigtype -> . TRI
    (36) sigtype -> . REG
    (37) sigtype -> . WIRE
    (38) sigtype -> . SIGNED
    (365) empty -> .

  ! shift/reduce conflict for IF resolved as shift
    END             shift and go to state 607
    INTEGER         shift and go to state 69
    REAL            shift and go to state 49
    PARAMETER       shift and go to state 66
    LOCALPARAM      shift and go to state 52
    IF              shift and go to state 150
    CASE            shift and go to state 136
    FOR             shift and go to state 144
    WHILE           shift and go to state 146
    WAIT            shift and go to state 131
    FOREVER         shift and go to state 143
    BEGIN           shift and go to state 153
    FORK            shift and go to state 138
    DELAY           shift and go to state 147
    AT              shift and go to state 159
    DOLLER          shift and go to state 100
    DISABLE         shift and go to state 155
    INPUT           shift and go to state 37
    OUTPUT          shift and go to state 24
    INOUT           shift and go to state 25
    TRI             shift and go to state 36
    REG             shift and go to state 35
    WIRE            shift and go to state 26
    SIGNED          shift and go to state 29
    LBRACE          reduce using rule 365 (empty -> .)
    ID              reduce using rule 365 (empty -> .)
    SEMICOLON       reduce using rule 365 (empty -> .)

  ! IF              [ reduce using rule 365 (empty -> .) ]

    parallelblock                  shift and go to state 129
    for_statement                  shift and go to state 130
    empty                          shift and go to state 157
    if_statement                   shift and go to state 132
    disable                        shift and go to state 133
    event_statement                shift and go to state 135
    blocking_substitution          shift and go to state 137
    integerdecl                    shift and go to state 514
    case_statement                 shift and go to state 139
    sigtype                        shift and go to state 33
    nonblocking_substitution       shift and go to state 142
    namedblock                     shift and go to state 145
    localparamdecl                 shift and go to state 515
    delays                         shift and go to state 141
    single_statement               shift and go to state 140
    while_statement                shift and go to state 148
    basic_statement                shift and go to state 517
    realdecl                       shift and go to state 516
    namedblock_statement           shift and go to state 606
    wait_statement                 shift and go to state 151
    forever_statement              shift and go to state 152
    decl                           shift and go to state 519
    senslist                       shift and go to state 154
    sigtypes                       shift and go to state 394
    parameterdecl                  shift and go to state 520
    block                          shift and go to state 156
    systemcall                     shift and go to state 158

state 523

    (170) pointer -> identifier LBRACKET expression . RBRACKET
    (164) partselect -> identifier LBRACKET expression . COLON expression RBRACKET
    (165) partselect -> identifier LBRACKET expression . PLUSCOLON expression RBRACKET
    (166) partselect -> identifier LBRACKET expression . MINUSCOLON expression RBRACKET
    (126) expression -> expression . POWER expression
    (127) expression -> expression . TIMES expression
    (128) expression -> expression . DIVIDE expression
    (129) expression -> expression . MOD expression
    (130) expression -> expression . PLUS expression
    (131) expression -> expression . MINUS expression
    (132) expression -> expression . LSHIFT expression
    (133) expression -> expression . RSHIFT expression
    (134) expression -> expression . LSHIFTA expression
    (135) expression -> expression . RSHIFTA expression
    (136) expression -> expression . LT expression
    (137) expression -> expression . GT expression
    (138) expression -> expression . LE expression
    (139) expression -> expression . GE expression
    (140) expression -> expression . EQ expression
    (141) expression -> expression . NE expression
    (142) expression -> expression . EQL expression
    (143) expression -> expression . NEL expression
    (144) expression -> expression . AND expression
    (145) expression -> expression . XOR expression
    (146) expression -> expression . XNOR expression
    (147) expression -> expression . OR expression
    (148) expression -> expression . LAND expression
    (149) expression -> expression . LOR expression
    (150) expression -> expression . COND expression COLON expression

    RBRACKET        shift and go to state 485
    COLON           shift and go to state 483
    PLUSCOLON       shift and go to state 484
    MINUSCOLON      shift and go to state 486
    POWER           shift and go to state 246
    TIMES           shift and go to state 349
    DIVIDE          shift and go to state 244
    MOD             shift and go to state 231
    PLUS            shift and go to state 240
    MINUS           shift and go to state 229
    LSHIFT          shift and go to state 243
    RSHIFT          shift and go to state 226
    LSHIFTA         shift and go to state 241
    RSHIFTA         shift and go to state 238
    LT              shift and go to state 235
    GT              shift and go to state 228
    LE              shift and go to state 222
    GE              shift and go to state 239
    EQ              shift and go to state 223
    NE              shift and go to state 225
    EQL             shift and go to state 245
    NEL             shift and go to state 242
    AND             shift and go to state 224
    XOR             shift and go to state 237
    XNOR            shift and go to state 232
    OR              shift and go to state 234
    LAND            shift and go to state 227
    LOR             shift and go to state 230
    COND            shift and go to state 233


state 524

    (171) pointer -> pointer LBRACKET expression . RBRACKET
    (167) partselect -> pointer LBRACKET expression . COLON expression RBRACKET
    (168) partselect -> pointer LBRACKET expression . PLUSCOLON expression RBRACKET
    (169) partselect -> pointer LBRACKET expression . MINUSCOLON expression RBRACKET
    (126) expression -> expression . POWER expression
    (127) expression -> expression . TIMES expression
    (128) expression -> expression . DIVIDE expression
    (129) expression -> expression . MOD expression
    (130) expression -> expression . PLUS expression
    (131) expression -> expression . MINUS expression
    (132) expression -> expression . LSHIFT expression
    (133) expression -> expression . RSHIFT expression
    (134) expression -> expression . LSHIFTA expression
    (135) expression -> expression . RSHIFTA expression
    (136) expression -> expression . LT expression
    (137) expression -> expression . GT expression
    (138) expression -> expression . LE expression
    (139) expression -> expression . GE expression
    (140) expression -> expression . EQ expression
    (141) expression -> expression . NE expression
    (142) expression -> expression . EQL expression
    (143) expression -> expression . NEL expression
    (144) expression -> expression . AND expression
    (145) expression -> expression . XOR expression
    (146) expression -> expression . XNOR expression
    (147) expression -> expression . OR expression
    (148) expression -> expression . LAND expression
    (149) expression -> expression . LOR expression
    (150) expression -> expression . COND expression COLON expression

    RBRACKET        shift and go to state 474
    COLON           shift and go to state 472
    PLUSCOLON       shift and go to state 473
    MINUSCOLON      shift and go to state 475
    POWER           shift and go to state 246
    TIMES           shift and go to state 349
    DIVIDE          shift and go to state 244
    MOD             shift and go to state 231
    PLUS            shift and go to state 240
    MINUS           shift and go to state 229
    LSHIFT          shift and go to state 243
    RSHIFT          shift and go to state 226
    LSHIFTA         shift and go to state 241
    RSHIFTA         shift and go to state 238
    LT              shift and go to state 235
    GT              shift and go to state 228
    LE              shift and go to state 222
    GE              shift and go to state 239
    EQ              shift and go to state 223
    NE              shift and go to state 225
    EQL             shift and go to state 245
    NEL             shift and go to state 242
    AND             shift and go to state 224
    XOR             shift and go to state 237
    XNOR            shift and go to state 232
    OR              shift and go to state 234
    LAND            shift and go to state 227
    LOR             shift and go to state 230
    COND            shift and go to state 233


state 525

    (188) edgesig -> NEGEDGE edgesig_base .

    RPAREN          reduce using rule 188 (edgesig -> NEGEDGE edgesig_base .)
    SENS_OR         reduce using rule 188 (edgesig -> NEGEDGE edgesig_base .)


state 526

    (190) edgesig_base -> pointer .
    (171) pointer -> pointer . LBRACKET expression RBRACKET
    (360) scope -> pointer . DOT

    RPAREN          reduce using rule 190 (edgesig_base -> pointer .)
    SENS_OR         reduce using rule 190 (edgesig_base -> pointer .)
    LBRACKET        shift and go to state 434
    DOT             shift and go to state 215


state 527

    (189) edgesig_base -> identifier .
    (170) pointer -> identifier . LBRACKET expression RBRACKET
    (359) scope -> identifier . DOT

    RPAREN          reduce using rule 189 (edgesig_base -> identifier .)
    SENS_OR         reduce using rule 189 (edgesig_base -> identifier .)
    LBRACKET        shift and go to state 433
    DOT             shift and go to state 252


state 528

    (201) levelsigs -> levelsigs COMMA . levelsig
    (196) levelsig -> . levelsig_base
    (197) levelsig_base -> . identifier
    (198) levelsig_base -> . pointer
    (199) levelsig_base -> . partselect
    (357) identifier -> . ID
    (358) identifier -> . scope ID
    (170) pointer -> . identifier LBRACKET expression RBRACKET
    (171) pointer -> . pointer LBRACKET expression RBRACKET
    (164) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (165) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (166) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (167) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (168) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (169) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (359) scope -> . identifier DOT
    (360) scope -> . pointer DOT

    ID              shift and go to state 85

    pointer                        shift and go to state 296
    scope                          shift and go to state 84
    levelsig                       shift and go to state 608
    levelsig_base                  shift and go to state 293
    partselect                     shift and go to state 294
    identifier                     shift and go to state 295

state 529

    (200) levelsigs -> levelsigs SENS_OR . levelsig
    (196) levelsig -> . levelsig_base
    (197) levelsig_base -> . identifier
    (198) levelsig_base -> . pointer
    (199) levelsig_base -> . partselect
    (357) identifier -> . ID
    (358) identifier -> . scope ID
    (170) pointer -> . identifier LBRACKET expression RBRACKET
    (171) pointer -> . pointer LBRACKET expression RBRACKET
    (164) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (165) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (166) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (167) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (168) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (169) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (359) scope -> . identifier DOT
    (360) scope -> . pointer DOT

    ID              shift and go to state 85

    pointer                        shift and go to state 296
    scope                          shift and go to state 84
    levelsig                       shift and go to state 609
    levelsig_base                  shift and go to state 293
    partselect                     shift and go to state 294
    identifier                     shift and go to state 295

state 530

    (195) senslist -> AT LPAREN levelsigs RPAREN .

    SEMICOLON       reduce using rule 195 (senslist -> AT LPAREN levelsigs RPAREN .)
    IF              reduce using rule 195 (senslist -> AT LPAREN levelsigs RPAREN .)
    CASE            reduce using rule 195 (senslist -> AT LPAREN levelsigs RPAREN .)
    FOR             reduce using rule 195 (senslist -> AT LPAREN levelsigs RPAREN .)
    WHILE           reduce using rule 195 (senslist -> AT LPAREN levelsigs RPAREN .)
    WAIT            reduce using rule 195 (senslist -> AT LPAREN levelsigs RPAREN .)
    FOREVER         reduce using rule 195 (senslist -> AT LPAREN levelsigs RPAREN .)
    BEGIN           reduce using rule 195 (senslist -> AT LPAREN levelsigs RPAREN .)
    FORK            reduce using rule 195 (senslist -> AT LPAREN levelsigs RPAREN .)
    DELAY           reduce using rule 195 (senslist -> AT LPAREN levelsigs RPAREN .)
    AT              reduce using rule 195 (senslist -> AT LPAREN levelsigs RPAREN .)
    DOLLER          reduce using rule 195 (senslist -> AT LPAREN levelsigs RPAREN .)
    DISABLE         reduce using rule 195 (senslist -> AT LPAREN levelsigs RPAREN .)
    LBRACE          reduce using rule 195 (senslist -> AT LPAREN levelsigs RPAREN .)
    ID              reduce using rule 195 (senslist -> AT LPAREN levelsigs RPAREN .)


state 531

    (204) senslist -> AT LPAREN TIMES RPAREN .

    SEMICOLON       reduce using rule 204 (senslist -> AT LPAREN TIMES RPAREN .)
    IF              reduce using rule 204 (senslist -> AT LPAREN TIMES RPAREN .)
    CASE            reduce using rule 204 (senslist -> AT LPAREN TIMES RPAREN .)
    FOR             reduce using rule 204 (senslist -> AT LPAREN TIMES RPAREN .)
    WHILE           reduce using rule 204 (senslist -> AT LPAREN TIMES RPAREN .)
    WAIT            reduce using rule 204 (senslist -> AT LPAREN TIMES RPAREN .)
    FOREVER         reduce using rule 204 (senslist -> AT LPAREN TIMES RPAREN .)
    BEGIN           reduce using rule 204 (senslist -> AT LPAREN TIMES RPAREN .)
    FORK            reduce using rule 204 (senslist -> AT LPAREN TIMES RPAREN .)
    DELAY           reduce using rule 204 (senslist -> AT LPAREN TIMES RPAREN .)
    AT              reduce using rule 204 (senslist -> AT LPAREN TIMES RPAREN .)
    DOLLER          reduce using rule 204 (senslist -> AT LPAREN TIMES RPAREN .)
    DISABLE         reduce using rule 204 (senslist -> AT LPAREN TIMES RPAREN .)
    LBRACE          reduce using rule 204 (senslist -> AT LPAREN TIMES RPAREN .)
    ID              reduce using rule 204 (senslist -> AT LPAREN TIMES RPAREN .)


state 532

    (191) edgesigs -> edgesigs SENS_OR . edgesig
    (187) edgesig -> . POSEDGE edgesig_base
    (188) edgesig -> . NEGEDGE edgesig_base

    POSEDGE         shift and go to state 425
    NEGEDGE         shift and go to state 419

    edgesig                        shift and go to state 610

state 533

    (186) senslist -> AT LPAREN edgesigs RPAREN .

    SEMICOLON       reduce using rule 186 (senslist -> AT LPAREN edgesigs RPAREN .)
    IF              reduce using rule 186 (senslist -> AT LPAREN edgesigs RPAREN .)
    CASE            reduce using rule 186 (senslist -> AT LPAREN edgesigs RPAREN .)
    FOR             reduce using rule 186 (senslist -> AT LPAREN edgesigs RPAREN .)
    WHILE           reduce using rule 186 (senslist -> AT LPAREN edgesigs RPAREN .)
    WAIT            reduce using rule 186 (senslist -> AT LPAREN edgesigs RPAREN .)
    FOREVER         reduce using rule 186 (senslist -> AT LPAREN edgesigs RPAREN .)
    BEGIN           reduce using rule 186 (senslist -> AT LPAREN edgesigs RPAREN .)
    FORK            reduce using rule 186 (senslist -> AT LPAREN edgesigs RPAREN .)
    DELAY           reduce using rule 186 (senslist -> AT LPAREN edgesigs RPAREN .)
    AT              reduce using rule 186 (senslist -> AT LPAREN edgesigs RPAREN .)
    DOLLER          reduce using rule 186 (senslist -> AT LPAREN edgesigs RPAREN .)
    DISABLE         reduce using rule 186 (senslist -> AT LPAREN edgesigs RPAREN .)
    LBRACE          reduce using rule 186 (senslist -> AT LPAREN edgesigs RPAREN .)
    ID              reduce using rule 186 (senslist -> AT LPAREN edgesigs RPAREN .)


state 534

    (187) edgesig -> POSEDGE edgesig_base .

    RPAREN          reduce using rule 187 (edgesig -> POSEDGE edgesig_base .)
    SENS_OR         reduce using rule 187 (edgesig -> POSEDGE edgesig_base .)


state 535

    (105) lconcatlist -> lconcatlist COMMA lconcat_one .

    RBRACE          reduce using rule 105 (lconcatlist -> lconcatlist COMMA lconcat_one .)
    COMMA           reduce using rule 105 (lconcatlist -> lconcatlist COMMA lconcat_one .)


state 536

    (95) assignment -> ASSIGN lvalue EQUALS rvalue SEMICOLON .

    END             reduce using rule 95 (assignment -> ASSIGN lvalue EQUALS rvalue SEMICOLON .)
    IF              reduce using rule 95 (assignment -> ASSIGN lvalue EQUALS rvalue SEMICOLON .)
    FOR             reduce using rule 95 (assignment -> ASSIGN lvalue EQUALS rvalue SEMICOLON .)
    INTEGER         reduce using rule 95 (assignment -> ASSIGN lvalue EQUALS rvalue SEMICOLON .)
    REAL            reduce using rule 95 (assignment -> ASSIGN lvalue EQUALS rvalue SEMICOLON .)
    PARAMETER       reduce using rule 95 (assignment -> ASSIGN lvalue EQUALS rvalue SEMICOLON .)
    LOCALPARAM      reduce using rule 95 (assignment -> ASSIGN lvalue EQUALS rvalue SEMICOLON .)
    GENVAR          reduce using rule 95 (assignment -> ASSIGN lvalue EQUALS rvalue SEMICOLON .)
    ASSIGN          reduce using rule 95 (assignment -> ASSIGN lvalue EQUALS rvalue SEMICOLON .)
    ALWAYS          reduce using rule 95 (assignment -> ASSIGN lvalue EQUALS rvalue SEMICOLON .)
    INITIAL         reduce using rule 95 (assignment -> ASSIGN lvalue EQUALS rvalue SEMICOLON .)
    ID              reduce using rule 95 (assignment -> ASSIGN lvalue EQUALS rvalue SEMICOLON .)
    FUNCTION        reduce using rule 95 (assignment -> ASSIGN lvalue EQUALS rvalue SEMICOLON .)
    TASK            reduce using rule 95 (assignment -> ASSIGN lvalue EQUALS rvalue SEMICOLON .)
    LPAREN          reduce using rule 95 (assignment -> ASSIGN lvalue EQUALS rvalue SEMICOLON .)
    INPUT           reduce using rule 95 (assignment -> ASSIGN lvalue EQUALS rvalue SEMICOLON .)
    OUTPUT          reduce using rule 95 (assignment -> ASSIGN lvalue EQUALS rvalue SEMICOLON .)
    INOUT           reduce using rule 95 (assignment -> ASSIGN lvalue EQUALS rvalue SEMICOLON .)
    TRI             reduce using rule 95 (assignment -> ASSIGN lvalue EQUALS rvalue SEMICOLON .)
    REG             reduce using rule 95 (assignment -> ASSIGN lvalue EQUALS rvalue SEMICOLON .)
    WIRE            reduce using rule 95 (assignment -> ASSIGN lvalue EQUALS rvalue SEMICOLON .)
    SIGNED          reduce using rule 95 (assignment -> ASSIGN lvalue EQUALS rvalue SEMICOLON .)
    ELSE            reduce using rule 95 (assignment -> ASSIGN lvalue EQUALS rvalue SEMICOLON .)
    ENDGENERATE     reduce using rule 95 (assignment -> ASSIGN lvalue EQUALS rvalue SEMICOLON .)
    ENDMODULE       reduce using rule 95 (assignment -> ASSIGN lvalue EQUALS rvalue SEMICOLON .)
    GENERATE        reduce using rule 95 (assignment -> ASSIGN lvalue EQUALS rvalue SEMICOLON .)


state 537

    (100) lpartselect -> identifier LBRACKET expression COLON . expression RBRACKET
    (116) expression -> . MINUS expression
    (117) expression -> . PLUS expression
    (118) expression -> . LNOT expression
    (119) expression -> . NOT expression
    (120) expression -> . AND expression
    (121) expression -> . NAND expression
    (122) expression -> . NOR expression
    (123) expression -> . OR expression
    (124) expression -> . XOR expression
    (125) expression -> . XNOR expression
    (126) expression -> . expression POWER expression
    (127) expression -> . expression TIMES expression
    (128) expression -> . expression DIVIDE expression
    (129) expression -> . expression MOD expression
    (130) expression -> . expression PLUS expression
    (131) expression -> . expression MINUS expression
    (132) expression -> . expression LSHIFT expression
    (133) expression -> . expression RSHIFT expression
    (134) expression -> . expression LSHIFTA expression
    (135) expression -> . expression RSHIFTA expression
    (136) expression -> . expression LT expression
    (137) expression -> . expression GT expression
    (138) expression -> . expression LE expression
    (139) expression -> . expression GE expression
    (140) expression -> . expression EQ expression
    (141) expression -> . expression NE expression
    (142) expression -> . expression EQL expression
    (143) expression -> . expression NEL expression
    (144) expression -> . expression AND expression
    (145) expression -> . expression XOR expression
    (146) expression -> . expression XNOR expression
    (147) expression -> . expression OR expression
    (148) expression -> . expression LAND expression
    (149) expression -> . expression LOR expression
    (150) expression -> . expression COND expression COLON expression
    (151) expression -> . LPAREN expression RPAREN
    (152) expression -> . concat
    (153) expression -> . repeat
    (154) expression -> . partselect
    (155) expression -> . pointer
    (156) expression -> . functioncall
    (157) expression -> . systemcall
    (158) expression -> . identifier
    (159) expression -> . const_expression
    (160) concat -> . LBRACE concatlist RBRACE
    (163) repeat -> . LBRACE expression concat RBRACE
    (164) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (165) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (166) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (167) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (168) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (169) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (170) pointer -> . identifier LBRACKET expression RBRACKET
    (171) pointer -> . pointer LBRACKET expression RBRACKET
    (339) functioncall -> . identifier LPAREN func_args RPAREN
    (319) systemcall -> . DOLLER ID
    (320) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (357) identifier -> . ID
    (358) identifier -> . scope ID
    (172) const_expression -> . intnumber
    (173) const_expression -> . floatnumber
    (174) const_expression -> . stringliteral
    (359) scope -> . identifier DOT
    (360) scope -> . pointer DOT
    (176) intnumber -> . INTNUMBER_DEC
    (177) intnumber -> . SIGNED_INTNUMBER_DEC
    (178) intnumber -> . INTNUMBER_BIN
    (179) intnumber -> . SIGNED_INTNUMBER_BIN
    (180) intnumber -> . INTNUMBER_OCT
    (181) intnumber -> . SIGNED_INTNUMBER_OCT
    (182) intnumber -> . INTNUMBER_HEX
    (183) intnumber -> . SIGNED_INTNUMBER_HEX
    (175) floatnumber -> . FLOATNUMBER
    (184) stringliteral -> . STRING_LITERAL

    MINUS           shift and go to state 97
    PLUS            shift and go to state 89
    LNOT            shift and go to state 95
    NOT             shift and go to state 78
    AND             shift and go to state 91
    NAND            shift and go to state 98
    NOR             shift and go to state 76
    OR              shift and go to state 105
    XOR             shift and go to state 82
    XNOR            shift and go to state 87
    LPAREN          shift and go to state 96
    LBRACE          shift and go to state 77
    DOLLER          shift and go to state 100
    ID              shift and go to state 85
    INTNUMBER_DEC   shift and go to state 79
    SIGNED_INTNUMBER_DEC shift and go to state 101
    INTNUMBER_BIN   shift and go to state 111
    SIGNED_INTNUMBER_BIN shift and go to state 112
    INTNUMBER_OCT   shift and go to state 86
    SIGNED_INTNUMBER_OCT shift and go to state 106
    INTNUMBER_HEX   shift and go to state 93
    SIGNED_INTNUMBER_HEX shift and go to state 83
    FLOATNUMBER     shift and go to state 102
    STRING_LITERAL  shift and go to state 107

    stringliteral                  shift and go to state 99
    intnumber                      shift and go to state 81
    expression                     shift and go to state 611
    repeat                         shift and go to state 108
    partselect                     shift and go to state 103
    identifier                     shift and go to state 104
    pointer                        shift and go to state 80
    functioncall                   shift and go to state 94
    scope                          shift and go to state 84
    systemcall                     shift and go to state 109
    const_expression               shift and go to state 110
    concat                         shift and go to state 88
    floatnumber                    shift and go to state 90

state 538

    (101) lpartselect -> identifier LBRACKET expression PLUSCOLON . expression RBRACKET
    (116) expression -> . MINUS expression
    (117) expression -> . PLUS expression
    (118) expression -> . LNOT expression
    (119) expression -> . NOT expression
    (120) expression -> . AND expression
    (121) expression -> . NAND expression
    (122) expression -> . NOR expression
    (123) expression -> . OR expression
    (124) expression -> . XOR expression
    (125) expression -> . XNOR expression
    (126) expression -> . expression POWER expression
    (127) expression -> . expression TIMES expression
    (128) expression -> . expression DIVIDE expression
    (129) expression -> . expression MOD expression
    (130) expression -> . expression PLUS expression
    (131) expression -> . expression MINUS expression
    (132) expression -> . expression LSHIFT expression
    (133) expression -> . expression RSHIFT expression
    (134) expression -> . expression LSHIFTA expression
    (135) expression -> . expression RSHIFTA expression
    (136) expression -> . expression LT expression
    (137) expression -> . expression GT expression
    (138) expression -> . expression LE expression
    (139) expression -> . expression GE expression
    (140) expression -> . expression EQ expression
    (141) expression -> . expression NE expression
    (142) expression -> . expression EQL expression
    (143) expression -> . expression NEL expression
    (144) expression -> . expression AND expression
    (145) expression -> . expression XOR expression
    (146) expression -> . expression XNOR expression
    (147) expression -> . expression OR expression
    (148) expression -> . expression LAND expression
    (149) expression -> . expression LOR expression
    (150) expression -> . expression COND expression COLON expression
    (151) expression -> . LPAREN expression RPAREN
    (152) expression -> . concat
    (153) expression -> . repeat
    (154) expression -> . partselect
    (155) expression -> . pointer
    (156) expression -> . functioncall
    (157) expression -> . systemcall
    (158) expression -> . identifier
    (159) expression -> . const_expression
    (160) concat -> . LBRACE concatlist RBRACE
    (163) repeat -> . LBRACE expression concat RBRACE
    (164) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (165) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (166) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (167) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (168) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (169) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (170) pointer -> . identifier LBRACKET expression RBRACKET
    (171) pointer -> . pointer LBRACKET expression RBRACKET
    (339) functioncall -> . identifier LPAREN func_args RPAREN
    (319) systemcall -> . DOLLER ID
    (320) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (357) identifier -> . ID
    (358) identifier -> . scope ID
    (172) const_expression -> . intnumber
    (173) const_expression -> . floatnumber
    (174) const_expression -> . stringliteral
    (359) scope -> . identifier DOT
    (360) scope -> . pointer DOT
    (176) intnumber -> . INTNUMBER_DEC
    (177) intnumber -> . SIGNED_INTNUMBER_DEC
    (178) intnumber -> . INTNUMBER_BIN
    (179) intnumber -> . SIGNED_INTNUMBER_BIN
    (180) intnumber -> . INTNUMBER_OCT
    (181) intnumber -> . SIGNED_INTNUMBER_OCT
    (182) intnumber -> . INTNUMBER_HEX
    (183) intnumber -> . SIGNED_INTNUMBER_HEX
    (175) floatnumber -> . FLOATNUMBER
    (184) stringliteral -> . STRING_LITERAL

    MINUS           shift and go to state 97
    PLUS            shift and go to state 89
    LNOT            shift and go to state 95
    NOT             shift and go to state 78
    AND             shift and go to state 91
    NAND            shift and go to state 98
    NOR             shift and go to state 76
    OR              shift and go to state 105
    XOR             shift and go to state 82
    XNOR            shift and go to state 87
    LPAREN          shift and go to state 96
    LBRACE          shift and go to state 77
    DOLLER          shift and go to state 100
    ID              shift and go to state 85
    INTNUMBER_DEC   shift and go to state 79
    SIGNED_INTNUMBER_DEC shift and go to state 101
    INTNUMBER_BIN   shift and go to state 111
    SIGNED_INTNUMBER_BIN shift and go to state 112
    INTNUMBER_OCT   shift and go to state 86
    SIGNED_INTNUMBER_OCT shift and go to state 106
    INTNUMBER_HEX   shift and go to state 93
    SIGNED_INTNUMBER_HEX shift and go to state 83
    FLOATNUMBER     shift and go to state 102
    STRING_LITERAL  shift and go to state 107

    stringliteral                  shift and go to state 99
    intnumber                      shift and go to state 81
    expression                     shift and go to state 612
    repeat                         shift and go to state 108
    partselect                     shift and go to state 103
    identifier                     shift and go to state 104
    pointer                        shift and go to state 80
    functioncall                   shift and go to state 94
    scope                          shift and go to state 84
    systemcall                     shift and go to state 109
    const_expression               shift and go to state 110
    concat                         shift and go to state 88
    floatnumber                    shift and go to state 90

state 539

    (102) lpartselect -> identifier LBRACKET expression MINUSCOLON . expression RBRACKET
    (116) expression -> . MINUS expression
    (117) expression -> . PLUS expression
    (118) expression -> . LNOT expression
    (119) expression -> . NOT expression
    (120) expression -> . AND expression
    (121) expression -> . NAND expression
    (122) expression -> . NOR expression
    (123) expression -> . OR expression
    (124) expression -> . XOR expression
    (125) expression -> . XNOR expression
    (126) expression -> . expression POWER expression
    (127) expression -> . expression TIMES expression
    (128) expression -> . expression DIVIDE expression
    (129) expression -> . expression MOD expression
    (130) expression -> . expression PLUS expression
    (131) expression -> . expression MINUS expression
    (132) expression -> . expression LSHIFT expression
    (133) expression -> . expression RSHIFT expression
    (134) expression -> . expression LSHIFTA expression
    (135) expression -> . expression RSHIFTA expression
    (136) expression -> . expression LT expression
    (137) expression -> . expression GT expression
    (138) expression -> . expression LE expression
    (139) expression -> . expression GE expression
    (140) expression -> . expression EQ expression
    (141) expression -> . expression NE expression
    (142) expression -> . expression EQL expression
    (143) expression -> . expression NEL expression
    (144) expression -> . expression AND expression
    (145) expression -> . expression XOR expression
    (146) expression -> . expression XNOR expression
    (147) expression -> . expression OR expression
    (148) expression -> . expression LAND expression
    (149) expression -> . expression LOR expression
    (150) expression -> . expression COND expression COLON expression
    (151) expression -> . LPAREN expression RPAREN
    (152) expression -> . concat
    (153) expression -> . repeat
    (154) expression -> . partselect
    (155) expression -> . pointer
    (156) expression -> . functioncall
    (157) expression -> . systemcall
    (158) expression -> . identifier
    (159) expression -> . const_expression
    (160) concat -> . LBRACE concatlist RBRACE
    (163) repeat -> . LBRACE expression concat RBRACE
    (164) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (165) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (166) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (167) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (168) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (169) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (170) pointer -> . identifier LBRACKET expression RBRACKET
    (171) pointer -> . pointer LBRACKET expression RBRACKET
    (339) functioncall -> . identifier LPAREN func_args RPAREN
    (319) systemcall -> . DOLLER ID
    (320) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (357) identifier -> . ID
    (358) identifier -> . scope ID
    (172) const_expression -> . intnumber
    (173) const_expression -> . floatnumber
    (174) const_expression -> . stringliteral
    (359) scope -> . identifier DOT
    (360) scope -> . pointer DOT
    (176) intnumber -> . INTNUMBER_DEC
    (177) intnumber -> . SIGNED_INTNUMBER_DEC
    (178) intnumber -> . INTNUMBER_BIN
    (179) intnumber -> . SIGNED_INTNUMBER_BIN
    (180) intnumber -> . INTNUMBER_OCT
    (181) intnumber -> . SIGNED_INTNUMBER_OCT
    (182) intnumber -> . INTNUMBER_HEX
    (183) intnumber -> . SIGNED_INTNUMBER_HEX
    (175) floatnumber -> . FLOATNUMBER
    (184) stringliteral -> . STRING_LITERAL

    MINUS           shift and go to state 97
    PLUS            shift and go to state 89
    LNOT            shift and go to state 95
    NOT             shift and go to state 78
    AND             shift and go to state 91
    NAND            shift and go to state 98
    NOR             shift and go to state 76
    OR              shift and go to state 105
    XOR             shift and go to state 82
    XNOR            shift and go to state 87
    LPAREN          shift and go to state 96
    LBRACE          shift and go to state 77
    DOLLER          shift and go to state 100
    ID              shift and go to state 85
    INTNUMBER_DEC   shift and go to state 79
    SIGNED_INTNUMBER_DEC shift and go to state 101
    INTNUMBER_BIN   shift and go to state 111
    SIGNED_INTNUMBER_BIN shift and go to state 112
    INTNUMBER_OCT   shift and go to state 86
    SIGNED_INTNUMBER_OCT shift and go to state 106
    INTNUMBER_HEX   shift and go to state 93
    SIGNED_INTNUMBER_HEX shift and go to state 83
    FLOATNUMBER     shift and go to state 102
    STRING_LITERAL  shift and go to state 107

    stringliteral                  shift and go to state 99
    intnumber                      shift and go to state 81
    expression                     shift and go to state 613
    repeat                         shift and go to state 108
    partselect                     shift and go to state 103
    identifier                     shift and go to state 104
    pointer                        shift and go to state 80
    functioncall                   shift and go to state 94
    scope                          shift and go to state 84
    systemcall                     shift and go to state 109
    const_expression               shift and go to state 110
    concat                         shift and go to state 88
    floatnumber                    shift and go to state 90

state 540

    (97) lpartselect -> pointer LBRACKET expression COLON . expression RBRACKET
    (116) expression -> . MINUS expression
    (117) expression -> . PLUS expression
    (118) expression -> . LNOT expression
    (119) expression -> . NOT expression
    (120) expression -> . AND expression
    (121) expression -> . NAND expression
    (122) expression -> . NOR expression
    (123) expression -> . OR expression
    (124) expression -> . XOR expression
    (125) expression -> . XNOR expression
    (126) expression -> . expression POWER expression
    (127) expression -> . expression TIMES expression
    (128) expression -> . expression DIVIDE expression
    (129) expression -> . expression MOD expression
    (130) expression -> . expression PLUS expression
    (131) expression -> . expression MINUS expression
    (132) expression -> . expression LSHIFT expression
    (133) expression -> . expression RSHIFT expression
    (134) expression -> . expression LSHIFTA expression
    (135) expression -> . expression RSHIFTA expression
    (136) expression -> . expression LT expression
    (137) expression -> . expression GT expression
    (138) expression -> . expression LE expression
    (139) expression -> . expression GE expression
    (140) expression -> . expression EQ expression
    (141) expression -> . expression NE expression
    (142) expression -> . expression EQL expression
    (143) expression -> . expression NEL expression
    (144) expression -> . expression AND expression
    (145) expression -> . expression XOR expression
    (146) expression -> . expression XNOR expression
    (147) expression -> . expression OR expression
    (148) expression -> . expression LAND expression
    (149) expression -> . expression LOR expression
    (150) expression -> . expression COND expression COLON expression
    (151) expression -> . LPAREN expression RPAREN
    (152) expression -> . concat
    (153) expression -> . repeat
    (154) expression -> . partselect
    (155) expression -> . pointer
    (156) expression -> . functioncall
    (157) expression -> . systemcall
    (158) expression -> . identifier
    (159) expression -> . const_expression
    (160) concat -> . LBRACE concatlist RBRACE
    (163) repeat -> . LBRACE expression concat RBRACE
    (164) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (165) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (166) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (167) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (168) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (169) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (170) pointer -> . identifier LBRACKET expression RBRACKET
    (171) pointer -> . pointer LBRACKET expression RBRACKET
    (339) functioncall -> . identifier LPAREN func_args RPAREN
    (319) systemcall -> . DOLLER ID
    (320) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (357) identifier -> . ID
    (358) identifier -> . scope ID
    (172) const_expression -> . intnumber
    (173) const_expression -> . floatnumber
    (174) const_expression -> . stringliteral
    (359) scope -> . identifier DOT
    (360) scope -> . pointer DOT
    (176) intnumber -> . INTNUMBER_DEC
    (177) intnumber -> . SIGNED_INTNUMBER_DEC
    (178) intnumber -> . INTNUMBER_BIN
    (179) intnumber -> . SIGNED_INTNUMBER_BIN
    (180) intnumber -> . INTNUMBER_OCT
    (181) intnumber -> . SIGNED_INTNUMBER_OCT
    (182) intnumber -> . INTNUMBER_HEX
    (183) intnumber -> . SIGNED_INTNUMBER_HEX
    (175) floatnumber -> . FLOATNUMBER
    (184) stringliteral -> . STRING_LITERAL

    MINUS           shift and go to state 97
    PLUS            shift and go to state 89
    LNOT            shift and go to state 95
    NOT             shift and go to state 78
    AND             shift and go to state 91
    NAND            shift and go to state 98
    NOR             shift and go to state 76
    OR              shift and go to state 105
    XOR             shift and go to state 82
    XNOR            shift and go to state 87
    LPAREN          shift and go to state 96
    LBRACE          shift and go to state 77
    DOLLER          shift and go to state 100
    ID              shift and go to state 85
    INTNUMBER_DEC   shift and go to state 79
    SIGNED_INTNUMBER_DEC shift and go to state 101
    INTNUMBER_BIN   shift and go to state 111
    SIGNED_INTNUMBER_BIN shift and go to state 112
    INTNUMBER_OCT   shift and go to state 86
    SIGNED_INTNUMBER_OCT shift and go to state 106
    INTNUMBER_HEX   shift and go to state 93
    SIGNED_INTNUMBER_HEX shift and go to state 83
    FLOATNUMBER     shift and go to state 102
    STRING_LITERAL  shift and go to state 107

    stringliteral                  shift and go to state 99
    intnumber                      shift and go to state 81
    expression                     shift and go to state 614
    repeat                         shift and go to state 108
    partselect                     shift and go to state 103
    identifier                     shift and go to state 104
    pointer                        shift and go to state 80
    functioncall                   shift and go to state 94
    scope                          shift and go to state 84
    systemcall                     shift and go to state 109
    const_expression               shift and go to state 110
    concat                         shift and go to state 88
    floatnumber                    shift and go to state 90

state 541

    (98) lpartselect -> pointer LBRACKET expression PLUSCOLON . expression RBRACKET
    (116) expression -> . MINUS expression
    (117) expression -> . PLUS expression
    (118) expression -> . LNOT expression
    (119) expression -> . NOT expression
    (120) expression -> . AND expression
    (121) expression -> . NAND expression
    (122) expression -> . NOR expression
    (123) expression -> . OR expression
    (124) expression -> . XOR expression
    (125) expression -> . XNOR expression
    (126) expression -> . expression POWER expression
    (127) expression -> . expression TIMES expression
    (128) expression -> . expression DIVIDE expression
    (129) expression -> . expression MOD expression
    (130) expression -> . expression PLUS expression
    (131) expression -> . expression MINUS expression
    (132) expression -> . expression LSHIFT expression
    (133) expression -> . expression RSHIFT expression
    (134) expression -> . expression LSHIFTA expression
    (135) expression -> . expression RSHIFTA expression
    (136) expression -> . expression LT expression
    (137) expression -> . expression GT expression
    (138) expression -> . expression LE expression
    (139) expression -> . expression GE expression
    (140) expression -> . expression EQ expression
    (141) expression -> . expression NE expression
    (142) expression -> . expression EQL expression
    (143) expression -> . expression NEL expression
    (144) expression -> . expression AND expression
    (145) expression -> . expression XOR expression
    (146) expression -> . expression XNOR expression
    (147) expression -> . expression OR expression
    (148) expression -> . expression LAND expression
    (149) expression -> . expression LOR expression
    (150) expression -> . expression COND expression COLON expression
    (151) expression -> . LPAREN expression RPAREN
    (152) expression -> . concat
    (153) expression -> . repeat
    (154) expression -> . partselect
    (155) expression -> . pointer
    (156) expression -> . functioncall
    (157) expression -> . systemcall
    (158) expression -> . identifier
    (159) expression -> . const_expression
    (160) concat -> . LBRACE concatlist RBRACE
    (163) repeat -> . LBRACE expression concat RBRACE
    (164) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (165) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (166) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (167) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (168) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (169) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (170) pointer -> . identifier LBRACKET expression RBRACKET
    (171) pointer -> . pointer LBRACKET expression RBRACKET
    (339) functioncall -> . identifier LPAREN func_args RPAREN
    (319) systemcall -> . DOLLER ID
    (320) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (357) identifier -> . ID
    (358) identifier -> . scope ID
    (172) const_expression -> . intnumber
    (173) const_expression -> . floatnumber
    (174) const_expression -> . stringliteral
    (359) scope -> . identifier DOT
    (360) scope -> . pointer DOT
    (176) intnumber -> . INTNUMBER_DEC
    (177) intnumber -> . SIGNED_INTNUMBER_DEC
    (178) intnumber -> . INTNUMBER_BIN
    (179) intnumber -> . SIGNED_INTNUMBER_BIN
    (180) intnumber -> . INTNUMBER_OCT
    (181) intnumber -> . SIGNED_INTNUMBER_OCT
    (182) intnumber -> . INTNUMBER_HEX
    (183) intnumber -> . SIGNED_INTNUMBER_HEX
    (175) floatnumber -> . FLOATNUMBER
    (184) stringliteral -> . STRING_LITERAL

    MINUS           shift and go to state 97
    PLUS            shift and go to state 89
    LNOT            shift and go to state 95
    NOT             shift and go to state 78
    AND             shift and go to state 91
    NAND            shift and go to state 98
    NOR             shift and go to state 76
    OR              shift and go to state 105
    XOR             shift and go to state 82
    XNOR            shift and go to state 87
    LPAREN          shift and go to state 96
    LBRACE          shift and go to state 77
    DOLLER          shift and go to state 100
    ID              shift and go to state 85
    INTNUMBER_DEC   shift and go to state 79
    SIGNED_INTNUMBER_DEC shift and go to state 101
    INTNUMBER_BIN   shift and go to state 111
    SIGNED_INTNUMBER_BIN shift and go to state 112
    INTNUMBER_OCT   shift and go to state 86
    SIGNED_INTNUMBER_OCT shift and go to state 106
    INTNUMBER_HEX   shift and go to state 93
    SIGNED_INTNUMBER_HEX shift and go to state 83
    FLOATNUMBER     shift and go to state 102
    STRING_LITERAL  shift and go to state 107

    stringliteral                  shift and go to state 99
    intnumber                      shift and go to state 81
    expression                     shift and go to state 615
    repeat                         shift and go to state 108
    partselect                     shift and go to state 103
    identifier                     shift and go to state 104
    pointer                        shift and go to state 80
    functioncall                   shift and go to state 94
    scope                          shift and go to state 84
    systemcall                     shift and go to state 109
    const_expression               shift and go to state 110
    concat                         shift and go to state 88
    floatnumber                    shift and go to state 90

state 542

    (99) lpartselect -> pointer LBRACKET expression MINUSCOLON . expression RBRACKET
    (116) expression -> . MINUS expression
    (117) expression -> . PLUS expression
    (118) expression -> . LNOT expression
    (119) expression -> . NOT expression
    (120) expression -> . AND expression
    (121) expression -> . NAND expression
    (122) expression -> . NOR expression
    (123) expression -> . OR expression
    (124) expression -> . XOR expression
    (125) expression -> . XNOR expression
    (126) expression -> . expression POWER expression
    (127) expression -> . expression TIMES expression
    (128) expression -> . expression DIVIDE expression
    (129) expression -> . expression MOD expression
    (130) expression -> . expression PLUS expression
    (131) expression -> . expression MINUS expression
    (132) expression -> . expression LSHIFT expression
    (133) expression -> . expression RSHIFT expression
    (134) expression -> . expression LSHIFTA expression
    (135) expression -> . expression RSHIFTA expression
    (136) expression -> . expression LT expression
    (137) expression -> . expression GT expression
    (138) expression -> . expression LE expression
    (139) expression -> . expression GE expression
    (140) expression -> . expression EQ expression
    (141) expression -> . expression NE expression
    (142) expression -> . expression EQL expression
    (143) expression -> . expression NEL expression
    (144) expression -> . expression AND expression
    (145) expression -> . expression XOR expression
    (146) expression -> . expression XNOR expression
    (147) expression -> . expression OR expression
    (148) expression -> . expression LAND expression
    (149) expression -> . expression LOR expression
    (150) expression -> . expression COND expression COLON expression
    (151) expression -> . LPAREN expression RPAREN
    (152) expression -> . concat
    (153) expression -> . repeat
    (154) expression -> . partselect
    (155) expression -> . pointer
    (156) expression -> . functioncall
    (157) expression -> . systemcall
    (158) expression -> . identifier
    (159) expression -> . const_expression
    (160) concat -> . LBRACE concatlist RBRACE
    (163) repeat -> . LBRACE expression concat RBRACE
    (164) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (165) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (166) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (167) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (168) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (169) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (170) pointer -> . identifier LBRACKET expression RBRACKET
    (171) pointer -> . pointer LBRACKET expression RBRACKET
    (339) functioncall -> . identifier LPAREN func_args RPAREN
    (319) systemcall -> . DOLLER ID
    (320) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (357) identifier -> . ID
    (358) identifier -> . scope ID
    (172) const_expression -> . intnumber
    (173) const_expression -> . floatnumber
    (174) const_expression -> . stringliteral
    (359) scope -> . identifier DOT
    (360) scope -> . pointer DOT
    (176) intnumber -> . INTNUMBER_DEC
    (177) intnumber -> . SIGNED_INTNUMBER_DEC
    (178) intnumber -> . INTNUMBER_BIN
    (179) intnumber -> . SIGNED_INTNUMBER_BIN
    (180) intnumber -> . INTNUMBER_OCT
    (181) intnumber -> . SIGNED_INTNUMBER_OCT
    (182) intnumber -> . INTNUMBER_HEX
    (183) intnumber -> . SIGNED_INTNUMBER_HEX
    (175) floatnumber -> . FLOATNUMBER
    (184) stringliteral -> . STRING_LITERAL

    MINUS           shift and go to state 97
    PLUS            shift and go to state 89
    LNOT            shift and go to state 95
    NOT             shift and go to state 78
    AND             shift and go to state 91
    NAND            shift and go to state 98
    NOR             shift and go to state 76
    OR              shift and go to state 105
    XOR             shift and go to state 82
    XNOR            shift and go to state 87
    LPAREN          shift and go to state 96
    LBRACE          shift and go to state 77
    DOLLER          shift and go to state 100
    ID              shift and go to state 85
    INTNUMBER_DEC   shift and go to state 79
    SIGNED_INTNUMBER_DEC shift and go to state 101
    INTNUMBER_BIN   shift and go to state 111
    SIGNED_INTNUMBER_BIN shift and go to state 112
    INTNUMBER_OCT   shift and go to state 86
    SIGNED_INTNUMBER_OCT shift and go to state 106
    INTNUMBER_HEX   shift and go to state 93
    SIGNED_INTNUMBER_HEX shift and go to state 83
    FLOATNUMBER     shift and go to state 102
    STRING_LITERAL  shift and go to state 107

    stringliteral                  shift and go to state 99
    intnumber                      shift and go to state 81
    expression                     shift and go to state 616
    repeat                         shift and go to state 108
    partselect                     shift and go to state 103
    identifier                     shift and go to state 104
    pointer                        shift and go to state 80
    functioncall                   shift and go to state 94
    scope                          shift and go to state 84
    systemcall                     shift and go to state 109
    const_expression               shift and go to state 110
    concat                         shift and go to state 88
    floatnumber                    shift and go to state 90

state 543

    (222) delays -> DELAY LPAREN expression RPAREN .

    MINUS           reduce using rule 222 (delays -> DELAY LPAREN expression RPAREN .)
    PLUS            reduce using rule 222 (delays -> DELAY LPAREN expression RPAREN .)
    LNOT            reduce using rule 222 (delays -> DELAY LPAREN expression RPAREN .)
    NOT             reduce using rule 222 (delays -> DELAY LPAREN expression RPAREN .)
    AND             reduce using rule 222 (delays -> DELAY LPAREN expression RPAREN .)
    NAND            reduce using rule 222 (delays -> DELAY LPAREN expression RPAREN .)
    NOR             reduce using rule 222 (delays -> DELAY LPAREN expression RPAREN .)
    OR              reduce using rule 222 (delays -> DELAY LPAREN expression RPAREN .)
    XOR             reduce using rule 222 (delays -> DELAY LPAREN expression RPAREN .)
    XNOR            reduce using rule 222 (delays -> DELAY LPAREN expression RPAREN .)
    LPAREN          reduce using rule 222 (delays -> DELAY LPAREN expression RPAREN .)
    LBRACE          reduce using rule 222 (delays -> DELAY LPAREN expression RPAREN .)
    DOLLER          reduce using rule 222 (delays -> DELAY LPAREN expression RPAREN .)
    ID              reduce using rule 222 (delays -> DELAY LPAREN expression RPAREN .)
    INTNUMBER_DEC   reduce using rule 222 (delays -> DELAY LPAREN expression RPAREN .)
    SIGNED_INTNUMBER_DEC reduce using rule 222 (delays -> DELAY LPAREN expression RPAREN .)
    INTNUMBER_BIN   reduce using rule 222 (delays -> DELAY LPAREN expression RPAREN .)
    SIGNED_INTNUMBER_BIN reduce using rule 222 (delays -> DELAY LPAREN expression RPAREN .)
    INTNUMBER_OCT   reduce using rule 222 (delays -> DELAY LPAREN expression RPAREN .)
    SIGNED_INTNUMBER_OCT reduce using rule 222 (delays -> DELAY LPAREN expression RPAREN .)
    INTNUMBER_HEX   reduce using rule 222 (delays -> DELAY LPAREN expression RPAREN .)
    SIGNED_INTNUMBER_HEX reduce using rule 222 (delays -> DELAY LPAREN expression RPAREN .)
    FLOATNUMBER     reduce using rule 222 (delays -> DELAY LPAREN expression RPAREN .)
    STRING_LITERAL  reduce using rule 222 (delays -> DELAY LPAREN expression RPAREN .)
    IF              reduce using rule 222 (delays -> DELAY LPAREN expression RPAREN .)


state 544

    (170) pointer -> identifier LBRACKET expression . RBRACKET
    (126) expression -> expression . POWER expression
    (127) expression -> expression . TIMES expression
    (128) expression -> expression . DIVIDE expression
    (129) expression -> expression . MOD expression
    (130) expression -> expression . PLUS expression
    (131) expression -> expression . MINUS expression
    (132) expression -> expression . LSHIFT expression
    (133) expression -> expression . RSHIFT expression
    (134) expression -> expression . LSHIFTA expression
    (135) expression -> expression . RSHIFTA expression
    (136) expression -> expression . LT expression
    (137) expression -> expression . GT expression
    (138) expression -> expression . LE expression
    (139) expression -> expression . GE expression
    (140) expression -> expression . EQ expression
    (141) expression -> expression . NE expression
    (142) expression -> expression . EQL expression
    (143) expression -> expression . NEL expression
    (144) expression -> expression . AND expression
    (145) expression -> expression . XOR expression
    (146) expression -> expression . XNOR expression
    (147) expression -> expression . OR expression
    (148) expression -> expression . LAND expression
    (149) expression -> expression . LOR expression
    (150) expression -> expression . COND expression COLON expression

    RBRACKET        shift and go to state 485
    POWER           shift and go to state 246
    TIMES           shift and go to state 349
    DIVIDE          shift and go to state 244
    MOD             shift and go to state 231
    PLUS            shift and go to state 240
    MINUS           shift and go to state 229
    LSHIFT          shift and go to state 243
    RSHIFT          shift and go to state 226
    LSHIFTA         shift and go to state 241
    RSHIFTA         shift and go to state 238
    LT              shift and go to state 235
    GT              shift and go to state 228
    LE              shift and go to state 222
    GE              shift and go to state 239
    EQ              shift and go to state 223
    NE              shift and go to state 225
    EQL             shift and go to state 245
    NEL             shift and go to state 242
    AND             shift and go to state 224
    XOR             shift and go to state 237
    XNOR            shift and go to state 232
    OR              shift and go to state 234
    LAND            shift and go to state 227
    LOR             shift and go to state 230
    COND            shift and go to state 233


state 545

    (171) pointer -> pointer LBRACKET expression . RBRACKET
    (126) expression -> expression . POWER expression
    (127) expression -> expression . TIMES expression
    (128) expression -> expression . DIVIDE expression
    (129) expression -> expression . MOD expression
    (130) expression -> expression . PLUS expression
    (131) expression -> expression . MINUS expression
    (132) expression -> expression . LSHIFT expression
    (133) expression -> expression . RSHIFT expression
    (134) expression -> expression . LSHIFTA expression
    (135) expression -> expression . RSHIFTA expression
    (136) expression -> expression . LT expression
    (137) expression -> expression . GT expression
    (138) expression -> expression . LE expression
    (139) expression -> expression . GE expression
    (140) expression -> expression . EQ expression
    (141) expression -> expression . NE expression
    (142) expression -> expression . EQL expression
    (143) expression -> expression . NEL expression
    (144) expression -> expression . AND expression
    (145) expression -> expression . XOR expression
    (146) expression -> expression . XNOR expression
    (147) expression -> expression . OR expression
    (148) expression -> expression . LAND expression
    (149) expression -> expression . LOR expression
    (150) expression -> expression . COND expression COLON expression

    RBRACKET        shift and go to state 474
    POWER           shift and go to state 246
    TIMES           shift and go to state 349
    DIVIDE          shift and go to state 244
    MOD             shift and go to state 231
    PLUS            shift and go to state 240
    MINUS           shift and go to state 229
    LSHIFT          shift and go to state 243
    RSHIFT          shift and go to state 226
    LSHIFTA         shift and go to state 241
    RSHIFTA         shift and go to state 238
    LT              shift and go to state 235
    GT              shift and go to state 228
    LE              shift and go to state 222
    GE              shift and go to state 239
    EQ              shift and go to state 223
    NE              shift and go to state 225
    EQL             shift and go to state 245
    NEL             shift and go to state 242
    AND             shift and go to state 224
    XOR             shift and go to state 237
    XNOR            shift and go to state 232
    OR              shift and go to state 234
    LAND            shift and go to state 227
    LOR             shift and go to state 230
    COND            shift and go to state 233


state 546

    (96) assignment -> ASSIGN delays lvalue EQUALS delays . rvalue SEMICOLON
    (115) rvalue -> . expression
    (116) expression -> . MINUS expression
    (117) expression -> . PLUS expression
    (118) expression -> . LNOT expression
    (119) expression -> . NOT expression
    (120) expression -> . AND expression
    (121) expression -> . NAND expression
    (122) expression -> . NOR expression
    (123) expression -> . OR expression
    (124) expression -> . XOR expression
    (125) expression -> . XNOR expression
    (126) expression -> . expression POWER expression
    (127) expression -> . expression TIMES expression
    (128) expression -> . expression DIVIDE expression
    (129) expression -> . expression MOD expression
    (130) expression -> . expression PLUS expression
    (131) expression -> . expression MINUS expression
    (132) expression -> . expression LSHIFT expression
    (133) expression -> . expression RSHIFT expression
    (134) expression -> . expression LSHIFTA expression
    (135) expression -> . expression RSHIFTA expression
    (136) expression -> . expression LT expression
    (137) expression -> . expression GT expression
    (138) expression -> . expression LE expression
    (139) expression -> . expression GE expression
    (140) expression -> . expression EQ expression
    (141) expression -> . expression NE expression
    (142) expression -> . expression EQL expression
    (143) expression -> . expression NEL expression
    (144) expression -> . expression AND expression
    (145) expression -> . expression XOR expression
    (146) expression -> . expression XNOR expression
    (147) expression -> . expression OR expression
    (148) expression -> . expression LAND expression
    (149) expression -> . expression LOR expression
    (150) expression -> . expression COND expression COLON expression
    (151) expression -> . LPAREN expression RPAREN
    (152) expression -> . concat
    (153) expression -> . repeat
    (154) expression -> . partselect
    (155) expression -> . pointer
    (156) expression -> . functioncall
    (157) expression -> . systemcall
    (158) expression -> . identifier
    (159) expression -> . const_expression
    (160) concat -> . LBRACE concatlist RBRACE
    (163) repeat -> . LBRACE expression concat RBRACE
    (164) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (165) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (166) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (167) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (168) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (169) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (170) pointer -> . identifier LBRACKET expression RBRACKET
    (171) pointer -> . pointer LBRACKET expression RBRACKET
    (339) functioncall -> . identifier LPAREN func_args RPAREN
    (319) systemcall -> . DOLLER ID
    (320) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (357) identifier -> . ID
    (358) identifier -> . scope ID
    (172) const_expression -> . intnumber
    (173) const_expression -> . floatnumber
    (174) const_expression -> . stringliteral
    (359) scope -> . identifier DOT
    (360) scope -> . pointer DOT
    (176) intnumber -> . INTNUMBER_DEC
    (177) intnumber -> . SIGNED_INTNUMBER_DEC
    (178) intnumber -> . INTNUMBER_BIN
    (179) intnumber -> . SIGNED_INTNUMBER_BIN
    (180) intnumber -> . INTNUMBER_OCT
    (181) intnumber -> . SIGNED_INTNUMBER_OCT
    (182) intnumber -> . INTNUMBER_HEX
    (183) intnumber -> . SIGNED_INTNUMBER_HEX
    (175) floatnumber -> . FLOATNUMBER
    (184) stringliteral -> . STRING_LITERAL

    MINUS           shift and go to state 97
    PLUS            shift and go to state 89
    LNOT            shift and go to state 95
    NOT             shift and go to state 78
    AND             shift and go to state 91
    NAND            shift and go to state 98
    NOR             shift and go to state 76
    OR              shift and go to state 105
    XOR             shift and go to state 82
    XNOR            shift and go to state 87
    LPAREN          shift and go to state 96
    LBRACE          shift and go to state 77
    DOLLER          shift and go to state 100
    ID              shift and go to state 85
    INTNUMBER_DEC   shift and go to state 79
    SIGNED_INTNUMBER_DEC shift and go to state 101
    INTNUMBER_BIN   shift and go to state 111
    SIGNED_INTNUMBER_BIN shift and go to state 112
    INTNUMBER_OCT   shift and go to state 86
    SIGNED_INTNUMBER_OCT shift and go to state 106
    INTNUMBER_HEX   shift and go to state 93
    SIGNED_INTNUMBER_HEX shift and go to state 83
    FLOATNUMBER     shift and go to state 102
    STRING_LITERAL  shift and go to state 107

    stringliteral                  shift and go to state 99
    intnumber                      shift and go to state 81
    expression                     shift and go to state 428
    repeat                         shift and go to state 108
    rvalue                         shift and go to state 617
    partselect                     shift and go to state 103
    identifier                     shift and go to state 104
    pointer                        shift and go to state 80
    functioncall                   shift and go to state 94
    scope                          shift and go to state 84
    systemcall                     shift and go to state 109
    const_expression               shift and go to state 110
    concat                         shift and go to state 88
    floatnumber                    shift and go to state 90

state 547

    (293) instance_ports_arg -> instance_port_arg .

    COMMA           reduce using rule 293 (instance_ports_arg -> instance_port_arg .)
    RPAREN          reduce using rule 293 (instance_ports_arg -> instance_port_arg .)


state 548

    (290) instance_ports_list -> instance_port_list .

    COMMA           reduce using rule 290 (instance_ports_list -> instance_port_list .)
    RPAREN          reduce using rule 290 (instance_ports_list -> instance_port_list .)


state 549

    (277) instance -> ID parameterlist ID LPAREN instance_ports . RPAREN SEMICOLON

    RPAREN          shift and go to state 618


state 550

    (287) instance_ports -> instance_ports_list .
    (289) instance_ports_list -> instance_ports_list . COMMA instance_port_list

    RPAREN          reduce using rule 287 (instance_ports -> instance_ports_list .)
    COMMA           shift and go to state 619


state 551

    (294) instance_port_arg -> DOT . ID LPAREN identifier RPAREN
    (295) instance_port_arg -> DOT . ID LPAREN expression RPAREN
    (296) instance_port_arg -> DOT . ID LPAREN RPAREN

    ID              shift and go to state 620


state 552

    (291) instance_port_list -> expression .
    (126) expression -> expression . POWER expression
    (127) expression -> expression . TIMES expression
    (128) expression -> expression . DIVIDE expression
    (129) expression -> expression . MOD expression
    (130) expression -> expression . PLUS expression
    (131) expression -> expression . MINUS expression
    (132) expression -> expression . LSHIFT expression
    (133) expression -> expression . RSHIFT expression
    (134) expression -> expression . LSHIFTA expression
    (135) expression -> expression . RSHIFTA expression
    (136) expression -> expression . LT expression
    (137) expression -> expression . GT expression
    (138) expression -> expression . LE expression
    (139) expression -> expression . GE expression
    (140) expression -> expression . EQ expression
    (141) expression -> expression . NE expression
    (142) expression -> expression . EQL expression
    (143) expression -> expression . NEL expression
    (144) expression -> expression . AND expression
    (145) expression -> expression . XOR expression
    (146) expression -> expression . XNOR expression
    (147) expression -> expression . OR expression
    (148) expression -> expression . LAND expression
    (149) expression -> expression . LOR expression
    (150) expression -> expression . COND expression COLON expression

    COMMA           reduce using rule 291 (instance_port_list -> expression .)
    RPAREN          reduce using rule 291 (instance_port_list -> expression .)
    POWER           shift and go to state 246
    TIMES           shift and go to state 349
    DIVIDE          shift and go to state 244
    MOD             shift and go to state 231
    PLUS            shift and go to state 240
    MINUS           shift and go to state 229
    LSHIFT          shift and go to state 243
    RSHIFT          shift and go to state 226
    LSHIFTA         shift and go to state 241
    RSHIFTA         shift and go to state 238
    LT              shift and go to state 235
    GT              shift and go to state 228
    LE              shift and go to state 222
    GE              shift and go to state 239
    EQ              shift and go to state 223
    NE              shift and go to state 225
    EQL             shift and go to state 245
    NEL             shift and go to state 242
    AND             shift and go to state 224
    XOR             shift and go to state 237
    XNOR            shift and go to state 232
    OR              shift and go to state 234
    LAND            shift and go to state 227
    LOR             shift and go to state 230
    COND            shift and go to state 233


state 553

    (288) instance_ports -> instance_ports_arg .
    (292) instance_ports_arg -> instance_ports_arg . COMMA instance_port_arg

    RPAREN          reduce using rule 288 (instance_ports -> instance_ports_arg .)
    COMMA           shift and go to state 621


state 554

    (281) param_args_noname -> param_args_noname COMMA . param_arg_noname
    (285) param_arg_noname -> . expression
    (116) expression -> . MINUS expression
    (117) expression -> . PLUS expression
    (118) expression -> . LNOT expression
    (119) expression -> . NOT expression
    (120) expression -> . AND expression
    (121) expression -> . NAND expression
    (122) expression -> . NOR expression
    (123) expression -> . OR expression
    (124) expression -> . XOR expression
    (125) expression -> . XNOR expression
    (126) expression -> . expression POWER expression
    (127) expression -> . expression TIMES expression
    (128) expression -> . expression DIVIDE expression
    (129) expression -> . expression MOD expression
    (130) expression -> . expression PLUS expression
    (131) expression -> . expression MINUS expression
    (132) expression -> . expression LSHIFT expression
    (133) expression -> . expression RSHIFT expression
    (134) expression -> . expression LSHIFTA expression
    (135) expression -> . expression RSHIFTA expression
    (136) expression -> . expression LT expression
    (137) expression -> . expression GT expression
    (138) expression -> . expression LE expression
    (139) expression -> . expression GE expression
    (140) expression -> . expression EQ expression
    (141) expression -> . expression NE expression
    (142) expression -> . expression EQL expression
    (143) expression -> . expression NEL expression
    (144) expression -> . expression AND expression
    (145) expression -> . expression XOR expression
    (146) expression -> . expression XNOR expression
    (147) expression -> . expression OR expression
    (148) expression -> . expression LAND expression
    (149) expression -> . expression LOR expression
    (150) expression -> . expression COND expression COLON expression
    (151) expression -> . LPAREN expression RPAREN
    (152) expression -> . concat
    (153) expression -> . repeat
    (154) expression -> . partselect
    (155) expression -> . pointer
    (156) expression -> . functioncall
    (157) expression -> . systemcall
    (158) expression -> . identifier
    (159) expression -> . const_expression
    (160) concat -> . LBRACE concatlist RBRACE
    (163) repeat -> . LBRACE expression concat RBRACE
    (164) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (165) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (166) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (167) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (168) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (169) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (170) pointer -> . identifier LBRACKET expression RBRACKET
    (171) pointer -> . pointer LBRACKET expression RBRACKET
    (339) functioncall -> . identifier LPAREN func_args RPAREN
    (319) systemcall -> . DOLLER ID
    (320) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (357) identifier -> . ID
    (358) identifier -> . scope ID
    (172) const_expression -> . intnumber
    (173) const_expression -> . floatnumber
    (174) const_expression -> . stringliteral
    (359) scope -> . identifier DOT
    (360) scope -> . pointer DOT
    (176) intnumber -> . INTNUMBER_DEC
    (177) intnumber -> . SIGNED_INTNUMBER_DEC
    (178) intnumber -> . INTNUMBER_BIN
    (179) intnumber -> . SIGNED_INTNUMBER_BIN
    (180) intnumber -> . INTNUMBER_OCT
    (181) intnumber -> . SIGNED_INTNUMBER_OCT
    (182) intnumber -> . INTNUMBER_HEX
    (183) intnumber -> . SIGNED_INTNUMBER_HEX
    (175) floatnumber -> . FLOATNUMBER
    (184) stringliteral -> . STRING_LITERAL

    MINUS           shift and go to state 97
    PLUS            shift and go to state 89
    LNOT            shift and go to state 95
    NOT             shift and go to state 78
    AND             shift and go to state 91
    NAND            shift and go to state 98
    NOR             shift and go to state 76
    OR              shift and go to state 105
    XOR             shift and go to state 82
    XNOR            shift and go to state 87
    LPAREN          shift and go to state 96
    LBRACE          shift and go to state 77
    DOLLER          shift and go to state 100
    ID              shift and go to state 85
    INTNUMBER_DEC   shift and go to state 79
    SIGNED_INTNUMBER_DEC shift and go to state 101
    INTNUMBER_BIN   shift and go to state 111
    SIGNED_INTNUMBER_BIN shift and go to state 112
    INTNUMBER_OCT   shift and go to state 86
    SIGNED_INTNUMBER_OCT shift and go to state 106
    INTNUMBER_HEX   shift and go to state 93
    SIGNED_INTNUMBER_HEX shift and go to state 83
    FLOATNUMBER     shift and go to state 102
    STRING_LITERAL  shift and go to state 107

    stringliteral                  shift and go to state 99
    intnumber                      shift and go to state 81
    param_arg_noname               shift and go to state 622
    expression                     shift and go to state 441
    repeat                         shift and go to state 108
    partselect                     shift and go to state 103
    identifier                     shift and go to state 104
    pointer                        shift and go to state 80
    functioncall                   shift and go to state 94
    scope                          shift and go to state 84
    systemcall                     shift and go to state 109
    const_expression               shift and go to state 110
    concat                         shift and go to state 88
    floatnumber                    shift and go to state 90

state 555

    (279) parameterlist -> DELAY LPAREN param_args_noname RPAREN .

    ID              reduce using rule 279 (parameterlist -> DELAY LPAREN param_args_noname RPAREN .)


state 556

    (286) param_arg -> DOT ID . LPAREN expression RPAREN

    LPAREN          shift and go to state 623


state 557

    (283) param_args -> param_args COMMA . param_arg
    (286) param_arg -> . DOT ID LPAREN expression RPAREN

    DOT             shift and go to state 439

    param_arg                      shift and go to state 624

state 558

    (278) parameterlist -> DELAY LPAREN param_args RPAREN .

    ID              reduce using rule 278 (parameterlist -> DELAY LPAREN param_args RPAREN .)


state 559

    (316) generate_for -> FOR LPAREN forpre forcond . forpost RPAREN generate_forcontent
    (257) forpost -> . blocking_substitution_base
    (258) forpost -> . empty
    (220) blocking_substitution_base -> . delays lvalue EQUALS delays rvalue
    (365) empty -> .
    (222) delays -> . DELAY LPAREN expression RPAREN
    (223) delays -> . DELAY identifier
    (224) delays -> . DELAY intnumber
    (225) delays -> . DELAY floatnumber
    (226) delays -> . empty

    RPAREN          reduce using rule 365 (empty -> .)
    LBRACE          reduce using rule 365 (empty -> .)
    ID              reduce using rule 365 (empty -> .)
    DELAY           shift and go to state 170

    blocking_substitution_base     shift and go to state 596
    empty                          shift and go to state 597
    forpost                        shift and go to state 625
    delays                         shift and go to state 599

state 560

    (310) generate_if -> IF LPAREN cond RPAREN . gif_true_item ELSE gif_false_item
    (311) generate_if -> IF LPAREN cond RPAREN . gif_true_item
    (312) gif_true_item -> . generate_item
    (313) gif_true_item -> . generate_block
    (305) generate_item -> . standard_item
    (306) generate_item -> . generate_if
    (307) generate_item -> . generate_for
    (308) generate_block -> . BEGIN generate_items END
    (309) generate_block -> . BEGIN COLON ID generate_items END
    (53) standard_item -> . decl
    (54) standard_item -> . integerdecl
    (55) standard_item -> . realdecl
    (56) standard_item -> . declassign
    (57) standard_item -> . parameterdecl
    (58) standard_item -> . localparamdecl
    (59) standard_item -> . genvardecl
    (60) standard_item -> . assignment
    (61) standard_item -> . always
    (62) standard_item -> . initial
    (63) standard_item -> . instance
    (64) standard_item -> . function
    (65) standard_item -> . task
    (66) standard_item -> . pragma
    (310) generate_if -> . IF LPAREN cond RPAREN gif_true_item ELSE gif_false_item
    (311) generate_if -> . IF LPAREN cond RPAREN gif_true_item
    (316) generate_for -> . FOR LPAREN forpre forcond forpost RPAREN generate_forcontent
    (67) decl -> . sigtypes declnamelist SEMICOLON
    (68) decl -> . sigtypes width declnamelist SEMICOLON
    (77) integerdecl -> . INTEGER integernamelist SEMICOLON
    (78) integerdecl -> . INTEGER SIGNED integernamelist SEMICOLON
    (82) realdecl -> . REAL realnamelist SEMICOLON
    (73) declassign -> . sigtypes declassign_element SEMICOLON
    (74) declassign -> . sigtypes width declassign_element SEMICOLON
    (86) parameterdecl -> . PARAMETER param_substitution_list SEMICOLON
    (87) parameterdecl -> . PARAMETER width param_substitution_list SEMICOLON
    (88) parameterdecl -> . PARAMETER INTEGER param_substitution_list SEMICOLON
    (89) localparamdecl -> . LOCALPARAM param_substitution_list SEMICOLON
    (90) localparamdecl -> . LOCALPARAM width param_substitution_list SEMICOLON
    (91) localparamdecl -> . LOCALPARAM INTEGER param_substitution_list SEMICOLON
    (297) genvardecl -> . GENVAR genvarlist SEMICOLON
    (95) assignment -> . ASSIGN lvalue EQUALS rvalue SEMICOLON
    (96) assignment -> . ASSIGN delays lvalue EQUALS delays rvalue SEMICOLON
    (185) always -> . ALWAYS senslist always_statement
    (270) initial -> . INITIAL initial_statement
    (277) instance -> . ID parameterlist ID LPAREN instance_ports RPAREN SEMICOLON
    (325) function -> . FUNCTION width ID SEMICOLON function_statement ENDFUNCTION
    (326) function -> . FUNCTION ID SEMICOLON function_statement ENDFUNCTION
    (343) task -> . TASK ID SEMICOLON task_statement ENDTASK
    (7) pragma -> . LPAREN TIMES ID EQUALS expression TIMES RPAREN
    (8) pragma -> . LPAREN TIMES ID TIMES RPAREN
    (30) sigtypes -> . sigtypes sigtype
    (31) sigtypes -> . sigtype
    (32) sigtype -> . INPUT
    (33) sigtype -> . OUTPUT
    (34) sigtype -> . INOUT
    (35) sigtype -> . TRI
    (36) sigtype -> . REG
    (37) sigtype -> . WIRE
    (38) sigtype -> . SIGNED

    BEGIN           shift and go to state 629
    IF              shift and go to state 188
    FOR             shift and go to state 186
    INTEGER         shift and go to state 69
    REAL            shift and go to state 49
    PARAMETER       shift and go to state 66
    LOCALPARAM      shift and go to state 52
    GENVAR          shift and go to state 42
    ASSIGN          shift and go to state 48
    ALWAYS          shift and go to state 46
    INITIAL         shift and go to state 45
    ID              shift and go to state 51
    FUNCTION        shift and go to state 44
    TASK            shift and go to state 67
    LPAREN          shift and go to state 6
    INPUT           shift and go to state 37
    OUTPUT          shift and go to state 24
    INOUT           shift and go to state 25
    TRI             shift and go to state 36
    REG             shift and go to state 35
    WIRE            shift and go to state 26
    SIGNED          shift and go to state 29

    generate_item                  shift and go to state 626
    generate_if                    shift and go to state 185
    always                         shift and go to state 41
    genvardecl                     shift and go to state 43
    integerdecl                    shift and go to state 47
    sigtype                        shift and go to state 33
    instance                       shift and go to state 50
    localparamdecl                 shift and go to state 53
    standard_item                  shift and go to state 187
    gif_true_item                  shift and go to state 627
    declassign                     shift and go to state 58
    generate_block                 shift and go to state 628
    task                           shift and go to state 57
    function                       shift and go to state 59
    realdecl                       shift and go to state 60
    sigtypes                       shift and go to state 61
    decl                           shift and go to state 62
    pragma                         shift and go to state 63
    parameterdecl                  shift and go to state 64
    generate_for                   shift and go to state 190
    initial                        shift and go to state 65
    assignment                     shift and go to state 68

state 561

    (76) declassign_element -> delays ID EQUALS delays . rvalue
    (115) rvalue -> . expression
    (116) expression -> . MINUS expression
    (117) expression -> . PLUS expression
    (118) expression -> . LNOT expression
    (119) expression -> . NOT expression
    (120) expression -> . AND expression
    (121) expression -> . NAND expression
    (122) expression -> . NOR expression
    (123) expression -> . OR expression
    (124) expression -> . XOR expression
    (125) expression -> . XNOR expression
    (126) expression -> . expression POWER expression
    (127) expression -> . expression TIMES expression
    (128) expression -> . expression DIVIDE expression
    (129) expression -> . expression MOD expression
    (130) expression -> . expression PLUS expression
    (131) expression -> . expression MINUS expression
    (132) expression -> . expression LSHIFT expression
    (133) expression -> . expression RSHIFT expression
    (134) expression -> . expression LSHIFTA expression
    (135) expression -> . expression RSHIFTA expression
    (136) expression -> . expression LT expression
    (137) expression -> . expression GT expression
    (138) expression -> . expression LE expression
    (139) expression -> . expression GE expression
    (140) expression -> . expression EQ expression
    (141) expression -> . expression NE expression
    (142) expression -> . expression EQL expression
    (143) expression -> . expression NEL expression
    (144) expression -> . expression AND expression
    (145) expression -> . expression XOR expression
    (146) expression -> . expression XNOR expression
    (147) expression -> . expression OR expression
    (148) expression -> . expression LAND expression
    (149) expression -> . expression LOR expression
    (150) expression -> . expression COND expression COLON expression
    (151) expression -> . LPAREN expression RPAREN
    (152) expression -> . concat
    (153) expression -> . repeat
    (154) expression -> . partselect
    (155) expression -> . pointer
    (156) expression -> . functioncall
    (157) expression -> . systemcall
    (158) expression -> . identifier
    (159) expression -> . const_expression
    (160) concat -> . LBRACE concatlist RBRACE
    (163) repeat -> . LBRACE expression concat RBRACE
    (164) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (165) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (166) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (167) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (168) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (169) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (170) pointer -> . identifier LBRACKET expression RBRACKET
    (171) pointer -> . pointer LBRACKET expression RBRACKET
    (339) functioncall -> . identifier LPAREN func_args RPAREN
    (319) systemcall -> . DOLLER ID
    (320) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (357) identifier -> . ID
    (358) identifier -> . scope ID
    (172) const_expression -> . intnumber
    (173) const_expression -> . floatnumber
    (174) const_expression -> . stringliteral
    (359) scope -> . identifier DOT
    (360) scope -> . pointer DOT
    (176) intnumber -> . INTNUMBER_DEC
    (177) intnumber -> . SIGNED_INTNUMBER_DEC
    (178) intnumber -> . INTNUMBER_BIN
    (179) intnumber -> . SIGNED_INTNUMBER_BIN
    (180) intnumber -> . INTNUMBER_OCT
    (181) intnumber -> . SIGNED_INTNUMBER_OCT
    (182) intnumber -> . INTNUMBER_HEX
    (183) intnumber -> . SIGNED_INTNUMBER_HEX
    (175) floatnumber -> . FLOATNUMBER
    (184) stringliteral -> . STRING_LITERAL

    MINUS           shift and go to state 97
    PLUS            shift and go to state 89
    LNOT            shift and go to state 95
    NOT             shift and go to state 78
    AND             shift and go to state 91
    NAND            shift and go to state 98
    NOR             shift and go to state 76
    OR              shift and go to state 105
    XOR             shift and go to state 82
    XNOR            shift and go to state 87
    LPAREN          shift and go to state 96
    LBRACE          shift and go to state 77
    DOLLER          shift and go to state 100
    ID              shift and go to state 85
    INTNUMBER_DEC   shift and go to state 79
    SIGNED_INTNUMBER_DEC shift and go to state 101
    INTNUMBER_BIN   shift and go to state 111
    SIGNED_INTNUMBER_BIN shift and go to state 112
    INTNUMBER_OCT   shift and go to state 86
    SIGNED_INTNUMBER_OCT shift and go to state 106
    INTNUMBER_HEX   shift and go to state 93
    SIGNED_INTNUMBER_HEX shift and go to state 83
    FLOATNUMBER     shift and go to state 102
    STRING_LITERAL  shift and go to state 107

    stringliteral                  shift and go to state 99
    intnumber                      shift and go to state 81
    expression                     shift and go to state 428
    repeat                         shift and go to state 108
    rvalue                         shift and go to state 630
    partselect                     shift and go to state 103
    identifier                     shift and go to state 104
    pointer                        shift and go to state 80
    functioncall                   shift and go to state 94
    scope                          shift and go to state 84
    systemcall                     shift and go to state 109
    const_expression               shift and go to state 110
    concat                         shift and go to state 88
    floatnumber                    shift and go to state 90

state 562

    (47) length -> LBRACKET expression COLON . expression RBRACKET
    (116) expression -> . MINUS expression
    (117) expression -> . PLUS expression
    (118) expression -> . LNOT expression
    (119) expression -> . NOT expression
    (120) expression -> . AND expression
    (121) expression -> . NAND expression
    (122) expression -> . NOR expression
    (123) expression -> . OR expression
    (124) expression -> . XOR expression
    (125) expression -> . XNOR expression
    (126) expression -> . expression POWER expression
    (127) expression -> . expression TIMES expression
    (128) expression -> . expression DIVIDE expression
    (129) expression -> . expression MOD expression
    (130) expression -> . expression PLUS expression
    (131) expression -> . expression MINUS expression
    (132) expression -> . expression LSHIFT expression
    (133) expression -> . expression RSHIFT expression
    (134) expression -> . expression LSHIFTA expression
    (135) expression -> . expression RSHIFTA expression
    (136) expression -> . expression LT expression
    (137) expression -> . expression GT expression
    (138) expression -> . expression LE expression
    (139) expression -> . expression GE expression
    (140) expression -> . expression EQ expression
    (141) expression -> . expression NE expression
    (142) expression -> . expression EQL expression
    (143) expression -> . expression NEL expression
    (144) expression -> . expression AND expression
    (145) expression -> . expression XOR expression
    (146) expression -> . expression XNOR expression
    (147) expression -> . expression OR expression
    (148) expression -> . expression LAND expression
    (149) expression -> . expression LOR expression
    (150) expression -> . expression COND expression COLON expression
    (151) expression -> . LPAREN expression RPAREN
    (152) expression -> . concat
    (153) expression -> . repeat
    (154) expression -> . partselect
    (155) expression -> . pointer
    (156) expression -> . functioncall
    (157) expression -> . systemcall
    (158) expression -> . identifier
    (159) expression -> . const_expression
    (160) concat -> . LBRACE concatlist RBRACE
    (163) repeat -> . LBRACE expression concat RBRACE
    (164) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (165) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (166) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (167) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (168) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (169) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (170) pointer -> . identifier LBRACKET expression RBRACKET
    (171) pointer -> . pointer LBRACKET expression RBRACKET
    (339) functioncall -> . identifier LPAREN func_args RPAREN
    (319) systemcall -> . DOLLER ID
    (320) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (357) identifier -> . ID
    (358) identifier -> . scope ID
    (172) const_expression -> . intnumber
    (173) const_expression -> . floatnumber
    (174) const_expression -> . stringliteral
    (359) scope -> . identifier DOT
    (360) scope -> . pointer DOT
    (176) intnumber -> . INTNUMBER_DEC
    (177) intnumber -> . SIGNED_INTNUMBER_DEC
    (178) intnumber -> . INTNUMBER_BIN
    (179) intnumber -> . SIGNED_INTNUMBER_BIN
    (180) intnumber -> . INTNUMBER_OCT
    (181) intnumber -> . SIGNED_INTNUMBER_OCT
    (182) intnumber -> . INTNUMBER_HEX
    (183) intnumber -> . SIGNED_INTNUMBER_HEX
    (175) floatnumber -> . FLOATNUMBER
    (184) stringliteral -> . STRING_LITERAL

    MINUS           shift and go to state 97
    PLUS            shift and go to state 89
    LNOT            shift and go to state 95
    NOT             shift and go to state 78
    AND             shift and go to state 91
    NAND            shift and go to state 98
    NOR             shift and go to state 76
    OR              shift and go to state 105
    XOR             shift and go to state 82
    XNOR            shift and go to state 87
    LPAREN          shift and go to state 96
    LBRACE          shift and go to state 77
    DOLLER          shift and go to state 100
    ID              shift and go to state 85
    INTNUMBER_DEC   shift and go to state 79
    SIGNED_INTNUMBER_DEC shift and go to state 101
    INTNUMBER_BIN   shift and go to state 111
    SIGNED_INTNUMBER_BIN shift and go to state 112
    INTNUMBER_OCT   shift and go to state 86
    SIGNED_INTNUMBER_OCT shift and go to state 106
    INTNUMBER_HEX   shift and go to state 93
    SIGNED_INTNUMBER_HEX shift and go to state 83
    FLOATNUMBER     shift and go to state 102
    STRING_LITERAL  shift and go to state 107

    stringliteral                  shift and go to state 99
    intnumber                      shift and go to state 81
    expression                     shift and go to state 631
    repeat                         shift and go to state 108
    partselect                     shift and go to state 103
    identifier                     shift and go to state 104
    pointer                        shift and go to state 80
    functioncall                   shift and go to state 94
    scope                          shift and go to state 84
    systemcall                     shift and go to state 109
    const_expression               shift and go to state 110
    concat                         shift and go to state 88
    floatnumber                    shift and go to state 90

state 563

    (352) task_calc -> for_statement .

    ENDTASK         reduce using rule 352 (task_calc -> for_statement .)


state 564

    (351) task_calc -> if_statement .

    ENDTASK         reduce using rule 351 (task_calc -> if_statement .)


state 565

    (350) task_calc -> blocking_substitution .

    ENDTASK         reduce using rule 350 (task_calc -> blocking_substitution .)


state 566

    (354) task_calc -> case_statement .

    ENDTASK         reduce using rule 354 (task_calc -> case_statement .)


state 567

    (356) task_calc -> namedblock .

    ENDTASK         reduce using rule 356 (task_calc -> namedblock .)


state 568

    (353) task_calc -> while_statement .

    ENDTASK         reduce using rule 353 (task_calc -> while_statement .)


state 569

    (345) taskvardecls -> taskvardecls taskvardecl .

    IF              reduce using rule 345 (taskvardecls -> taskvardecls taskvardecl .)
    FOR             reduce using rule 345 (taskvardecls -> taskvardecls taskvardecl .)
    WHILE           reduce using rule 345 (taskvardecls -> taskvardecls taskvardecl .)
    CASE            reduce using rule 345 (taskvardecls -> taskvardecls taskvardecl .)
    BEGIN           reduce using rule 345 (taskvardecls -> taskvardecls taskvardecl .)
    INTEGER         reduce using rule 345 (taskvardecls -> taskvardecls taskvardecl .)
    DELAY           reduce using rule 345 (taskvardecls -> taskvardecls taskvardecl .)
    INPUT           reduce using rule 345 (taskvardecls -> taskvardecls taskvardecl .)
    OUTPUT          reduce using rule 345 (taskvardecls -> taskvardecls taskvardecl .)
    INOUT           reduce using rule 345 (taskvardecls -> taskvardecls taskvardecl .)
    TRI             reduce using rule 345 (taskvardecls -> taskvardecls taskvardecl .)
    REG             reduce using rule 345 (taskvardecls -> taskvardecls taskvardecl .)
    WIRE            reduce using rule 345 (taskvardecls -> taskvardecls taskvardecl .)
    SIGNED          reduce using rule 345 (taskvardecls -> taskvardecls taskvardecl .)
    LBRACE          reduce using rule 345 (taskvardecls -> taskvardecls taskvardecl .)
    ID              reduce using rule 345 (taskvardecls -> taskvardecls taskvardecl .)


state 570

    (344) task_statement -> taskvardecls task_calc .

    ENDTASK         reduce using rule 344 (task_statement -> taskvardecls task_calc .)


state 571

    (355) task_calc -> block .

    ENDTASK         reduce using rule 355 (task_calc -> block .)


state 572

    (343) task -> TASK ID SEMICOLON task_statement ENDTASK .

    END             reduce using rule 343 (task -> TASK ID SEMICOLON task_statement ENDTASK .)
    IF              reduce using rule 343 (task -> TASK ID SEMICOLON task_statement ENDTASK .)
    FOR             reduce using rule 343 (task -> TASK ID SEMICOLON task_statement ENDTASK .)
    INTEGER         reduce using rule 343 (task -> TASK ID SEMICOLON task_statement ENDTASK .)
    REAL            reduce using rule 343 (task -> TASK ID SEMICOLON task_statement ENDTASK .)
    PARAMETER       reduce using rule 343 (task -> TASK ID SEMICOLON task_statement ENDTASK .)
    LOCALPARAM      reduce using rule 343 (task -> TASK ID SEMICOLON task_statement ENDTASK .)
    GENVAR          reduce using rule 343 (task -> TASK ID SEMICOLON task_statement ENDTASK .)
    ASSIGN          reduce using rule 343 (task -> TASK ID SEMICOLON task_statement ENDTASK .)
    ALWAYS          reduce using rule 343 (task -> TASK ID SEMICOLON task_statement ENDTASK .)
    INITIAL         reduce using rule 343 (task -> TASK ID SEMICOLON task_statement ENDTASK .)
    ID              reduce using rule 343 (task -> TASK ID SEMICOLON task_statement ENDTASK .)
    FUNCTION        reduce using rule 343 (task -> TASK ID SEMICOLON task_statement ENDTASK .)
    TASK            reduce using rule 343 (task -> TASK ID SEMICOLON task_statement ENDTASK .)
    LPAREN          reduce using rule 343 (task -> TASK ID SEMICOLON task_statement ENDTASK .)
    INPUT           reduce using rule 343 (task -> TASK ID SEMICOLON task_statement ENDTASK .)
    OUTPUT          reduce using rule 343 (task -> TASK ID SEMICOLON task_statement ENDTASK .)
    INOUT           reduce using rule 343 (task -> TASK ID SEMICOLON task_statement ENDTASK .)
    TRI             reduce using rule 343 (task -> TASK ID SEMICOLON task_statement ENDTASK .)
    REG             reduce using rule 343 (task -> TASK ID SEMICOLON task_statement ENDTASK .)
    WIRE            reduce using rule 343 (task -> TASK ID SEMICOLON task_statement ENDTASK .)
    SIGNED          reduce using rule 343 (task -> TASK ID SEMICOLON task_statement ENDTASK .)
    ENDGENERATE     reduce using rule 343 (task -> TASK ID SEMICOLON task_statement ENDTASK .)
    ENDMODULE       reduce using rule 343 (task -> TASK ID SEMICOLON task_statement ENDTASK .)
    GENERATE        reduce using rule 343 (task -> TASK ID SEMICOLON task_statement ENDTASK .)
    ELSE            reduce using rule 343 (task -> TASK ID SEMICOLON task_statement ENDTASK .)


state 573

    (167) partselect -> pointer LBRACKET expression COLON expression . RBRACKET
    (126) expression -> expression . POWER expression
    (127) expression -> expression . TIMES expression
    (128) expression -> expression . DIVIDE expression
    (129) expression -> expression . MOD expression
    (130) expression -> expression . PLUS expression
    (131) expression -> expression . MINUS expression
    (132) expression -> expression . LSHIFT expression
    (133) expression -> expression . RSHIFT expression
    (134) expression -> expression . LSHIFTA expression
    (135) expression -> expression . RSHIFTA expression
    (136) expression -> expression . LT expression
    (137) expression -> expression . GT expression
    (138) expression -> expression . LE expression
    (139) expression -> expression . GE expression
    (140) expression -> expression . EQ expression
    (141) expression -> expression . NE expression
    (142) expression -> expression . EQL expression
    (143) expression -> expression . NEL expression
    (144) expression -> expression . AND expression
    (145) expression -> expression . XOR expression
    (146) expression -> expression . XNOR expression
    (147) expression -> expression . OR expression
    (148) expression -> expression . LAND expression
    (149) expression -> expression . LOR expression
    (150) expression -> expression . COND expression COLON expression

    RBRACKET        shift and go to state 632
    POWER           shift and go to state 246
    TIMES           shift and go to state 349
    DIVIDE          shift and go to state 244
    MOD             shift and go to state 231
    PLUS            shift and go to state 240
    MINUS           shift and go to state 229
    LSHIFT          shift and go to state 243
    RSHIFT          shift and go to state 226
    LSHIFTA         shift and go to state 241
    RSHIFTA         shift and go to state 238
    LT              shift and go to state 235
    GT              shift and go to state 228
    LE              shift and go to state 222
    GE              shift and go to state 239
    EQ              shift and go to state 223
    NE              shift and go to state 225
    EQL             shift and go to state 245
    NEL             shift and go to state 242
    AND             shift and go to state 224
    XOR             shift and go to state 237
    XNOR            shift and go to state 232
    OR              shift and go to state 234
    LAND            shift and go to state 227
    LOR             shift and go to state 230
    COND            shift and go to state 233


state 574

    (168) partselect -> pointer LBRACKET expression PLUSCOLON expression . RBRACKET
    (126) expression -> expression . POWER expression
    (127) expression -> expression . TIMES expression
    (128) expression -> expression . DIVIDE expression
    (129) expression -> expression . MOD expression
    (130) expression -> expression . PLUS expression
    (131) expression -> expression . MINUS expression
    (132) expression -> expression . LSHIFT expression
    (133) expression -> expression . RSHIFT expression
    (134) expression -> expression . LSHIFTA expression
    (135) expression -> expression . RSHIFTA expression
    (136) expression -> expression . LT expression
    (137) expression -> expression . GT expression
    (138) expression -> expression . LE expression
    (139) expression -> expression . GE expression
    (140) expression -> expression . EQ expression
    (141) expression -> expression . NE expression
    (142) expression -> expression . EQL expression
    (143) expression -> expression . NEL expression
    (144) expression -> expression . AND expression
    (145) expression -> expression . XOR expression
    (146) expression -> expression . XNOR expression
    (147) expression -> expression . OR expression
    (148) expression -> expression . LAND expression
    (149) expression -> expression . LOR expression
    (150) expression -> expression . COND expression COLON expression

    RBRACKET        shift and go to state 633
    POWER           shift and go to state 246
    TIMES           shift and go to state 349
    DIVIDE          shift and go to state 244
    MOD             shift and go to state 231
    PLUS            shift and go to state 240
    MINUS           shift and go to state 229
    LSHIFT          shift and go to state 243
    RSHIFT          shift and go to state 226
    LSHIFTA         shift and go to state 241
    RSHIFTA         shift and go to state 238
    LT              shift and go to state 235
    GT              shift and go to state 228
    LE              shift and go to state 222
    GE              shift and go to state 239
    EQ              shift and go to state 223
    NE              shift and go to state 225
    EQL             shift and go to state 245
    NEL             shift and go to state 242
    AND             shift and go to state 224
    XOR             shift and go to state 237
    XNOR            shift and go to state 232
    OR              shift and go to state 234
    LAND            shift and go to state 227
    LOR             shift and go to state 230
    COND            shift and go to state 233


state 575

    (169) partselect -> pointer LBRACKET expression MINUSCOLON expression . RBRACKET
    (126) expression -> expression . POWER expression
    (127) expression -> expression . TIMES expression
    (128) expression -> expression . DIVIDE expression
    (129) expression -> expression . MOD expression
    (130) expression -> expression . PLUS expression
    (131) expression -> expression . MINUS expression
    (132) expression -> expression . LSHIFT expression
    (133) expression -> expression . RSHIFT expression
    (134) expression -> expression . LSHIFTA expression
    (135) expression -> expression . RSHIFTA expression
    (136) expression -> expression . LT expression
    (137) expression -> expression . GT expression
    (138) expression -> expression . LE expression
    (139) expression -> expression . GE expression
    (140) expression -> expression . EQ expression
    (141) expression -> expression . NE expression
    (142) expression -> expression . EQL expression
    (143) expression -> expression . NEL expression
    (144) expression -> expression . AND expression
    (145) expression -> expression . XOR expression
    (146) expression -> expression . XNOR expression
    (147) expression -> expression . OR expression
    (148) expression -> expression . LAND expression
    (149) expression -> expression . LOR expression
    (150) expression -> expression . COND expression COLON expression

    RBRACKET        shift and go to state 634
    POWER           shift and go to state 246
    TIMES           shift and go to state 349
    DIVIDE          shift and go to state 244
    MOD             shift and go to state 231
    PLUS            shift and go to state 240
    MINUS           shift and go to state 229
    LSHIFT          shift and go to state 243
    RSHIFT          shift and go to state 226
    LSHIFTA         shift and go to state 241
    RSHIFTA         shift and go to state 238
    LT              shift and go to state 235
    GT              shift and go to state 228
    LE              shift and go to state 222
    GE              shift and go to state 239
    EQ              shift and go to state 223
    NE              shift and go to state 225
    EQL             shift and go to state 245
    NEL             shift and go to state 242
    AND             shift and go to state 224
    XOR             shift and go to state 237
    XNOR            shift and go to state 232
    OR              shift and go to state 234
    LAND            shift and go to state 227
    LOR             shift and go to state 230
    COND            shift and go to state 233


state 576

    (150) expression -> expression COND expression COLON expression .
    (126) expression -> expression . POWER expression
    (127) expression -> expression . TIMES expression
    (128) expression -> expression . DIVIDE expression
    (129) expression -> expression . MOD expression
    (130) expression -> expression . PLUS expression
    (131) expression -> expression . MINUS expression
    (132) expression -> expression . LSHIFT expression
    (133) expression -> expression . RSHIFT expression
    (134) expression -> expression . LSHIFTA expression
    (135) expression -> expression . RSHIFTA expression
    (136) expression -> expression . LT expression
    (137) expression -> expression . GT expression
    (138) expression -> expression . LE expression
    (139) expression -> expression . GE expression
    (140) expression -> expression . EQ expression
    (141) expression -> expression . NE expression
    (142) expression -> expression . EQL expression
    (143) expression -> expression . NEL expression
    (144) expression -> expression . AND expression
    (145) expression -> expression . XOR expression
    (146) expression -> expression . XNOR expression
    (147) expression -> expression . OR expression
    (148) expression -> expression . LAND expression
    (149) expression -> expression . LOR expression
    (150) expression -> expression . COND expression COLON expression

  ! shift/reduce conflict for POWER resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for LSHIFT resolved as shift
  ! shift/reduce conflict for RSHIFT resolved as shift
  ! shift/reduce conflict for LSHIFTA resolved as shift
  ! shift/reduce conflict for RSHIFTA resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NE resolved as shift
  ! shift/reduce conflict for EQL resolved as shift
  ! shift/reduce conflict for NEL resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for XOR resolved as shift
  ! shift/reduce conflict for XNOR resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for LAND resolved as shift
  ! shift/reduce conflict for LOR resolved as shift
  ! shift/reduce conflict for COND resolved as shift
    LBRACE          reduce using rule 150 (expression -> expression COND expression COLON expression .)
    RBRACE          reduce using rule 150 (expression -> expression COND expression COLON expression .)
    COMMA           reduce using rule 150 (expression -> expression COND expression COLON expression .)
    RPAREN          reduce using rule 150 (expression -> expression COND expression COLON expression .)
    COLON           reduce using rule 150 (expression -> expression COND expression COLON expression .)
    SEMICOLON       reduce using rule 150 (expression -> expression COND expression COLON expression .)
    PLUSCOLON       reduce using rule 150 (expression -> expression COND expression COLON expression .)
    MINUSCOLON      reduce using rule 150 (expression -> expression COND expression COLON expression .)
    RBRACKET        reduce using rule 150 (expression -> expression COND expression COLON expression .)
    POWER           shift and go to state 246
    TIMES           shift and go to state 349
    DIVIDE          shift and go to state 244
    MOD             shift and go to state 231
    PLUS            shift and go to state 240
    MINUS           shift and go to state 229
    LSHIFT          shift and go to state 243
    RSHIFT          shift and go to state 226
    LSHIFTA         shift and go to state 241
    RSHIFTA         shift and go to state 238
    LT              shift and go to state 235
    GT              shift and go to state 228
    LE              shift and go to state 222
    GE              shift and go to state 239
    EQ              shift and go to state 223
    NE              shift and go to state 225
    EQL             shift and go to state 245
    NEL             shift and go to state 242
    AND             shift and go to state 224
    XOR             shift and go to state 237
    XNOR            shift and go to state 232
    OR              shift and go to state 234
    LAND            shift and go to state 227
    LOR             shift and go to state 230
    COND            shift and go to state 233

  ! POWER           [ reduce using rule 150 (expression -> expression COND expression COLON expression .) ]
  ! TIMES           [ reduce using rule 150 (expression -> expression COND expression COLON expression .) ]
  ! DIVIDE          [ reduce using rule 150 (expression -> expression COND expression COLON expression .) ]
  ! MOD             [ reduce using rule 150 (expression -> expression COND expression COLON expression .) ]
  ! PLUS            [ reduce using rule 150 (expression -> expression COND expression COLON expression .) ]
  ! MINUS           [ reduce using rule 150 (expression -> expression COND expression COLON expression .) ]
  ! LSHIFT          [ reduce using rule 150 (expression -> expression COND expression COLON expression .) ]
  ! RSHIFT          [ reduce using rule 150 (expression -> expression COND expression COLON expression .) ]
  ! LSHIFTA         [ reduce using rule 150 (expression -> expression COND expression COLON expression .) ]
  ! RSHIFTA         [ reduce using rule 150 (expression -> expression COND expression COLON expression .) ]
  ! LT              [ reduce using rule 150 (expression -> expression COND expression COLON expression .) ]
  ! GT              [ reduce using rule 150 (expression -> expression COND expression COLON expression .) ]
  ! LE              [ reduce using rule 150 (expression -> expression COND expression COLON expression .) ]
  ! GE              [ reduce using rule 150 (expression -> expression COND expression COLON expression .) ]
  ! EQ              [ reduce using rule 150 (expression -> expression COND expression COLON expression .) ]
  ! NE              [ reduce using rule 150 (expression -> expression COND expression COLON expression .) ]
  ! EQL             [ reduce using rule 150 (expression -> expression COND expression COLON expression .) ]
  ! NEL             [ reduce using rule 150 (expression -> expression COND expression COLON expression .) ]
  ! AND             [ reduce using rule 150 (expression -> expression COND expression COLON expression .) ]
  ! XOR             [ reduce using rule 150 (expression -> expression COND expression COLON expression .) ]
  ! XNOR            [ reduce using rule 150 (expression -> expression COND expression COLON expression .) ]
  ! OR              [ reduce using rule 150 (expression -> expression COND expression COLON expression .) ]
  ! LAND            [ reduce using rule 150 (expression -> expression COND expression COLON expression .) ]
  ! LOR             [ reduce using rule 150 (expression -> expression COND expression COLON expression .) ]
  ! COND            [ reduce using rule 150 (expression -> expression COND expression COLON expression .) ]


state 577

    (321) sysargs -> sysargs COMMA . sysarg
    (324) sysarg -> . expression
    (116) expression -> . MINUS expression
    (117) expression -> . PLUS expression
    (118) expression -> . LNOT expression
    (119) expression -> . NOT expression
    (120) expression -> . AND expression
    (121) expression -> . NAND expression
    (122) expression -> . NOR expression
    (123) expression -> . OR expression
    (124) expression -> . XOR expression
    (125) expression -> . XNOR expression
    (126) expression -> . expression POWER expression
    (127) expression -> . expression TIMES expression
    (128) expression -> . expression DIVIDE expression
    (129) expression -> . expression MOD expression
    (130) expression -> . expression PLUS expression
    (131) expression -> . expression MINUS expression
    (132) expression -> . expression LSHIFT expression
    (133) expression -> . expression RSHIFT expression
    (134) expression -> . expression LSHIFTA expression
    (135) expression -> . expression RSHIFTA expression
    (136) expression -> . expression LT expression
    (137) expression -> . expression GT expression
    (138) expression -> . expression LE expression
    (139) expression -> . expression GE expression
    (140) expression -> . expression EQ expression
    (141) expression -> . expression NE expression
    (142) expression -> . expression EQL expression
    (143) expression -> . expression NEL expression
    (144) expression -> . expression AND expression
    (145) expression -> . expression XOR expression
    (146) expression -> . expression XNOR expression
    (147) expression -> . expression OR expression
    (148) expression -> . expression LAND expression
    (149) expression -> . expression LOR expression
    (150) expression -> . expression COND expression COLON expression
    (151) expression -> . LPAREN expression RPAREN
    (152) expression -> . concat
    (153) expression -> . repeat
    (154) expression -> . partselect
    (155) expression -> . pointer
    (156) expression -> . functioncall
    (157) expression -> . systemcall
    (158) expression -> . identifier
    (159) expression -> . const_expression
    (160) concat -> . LBRACE concatlist RBRACE
    (163) repeat -> . LBRACE expression concat RBRACE
    (164) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (165) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (166) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (167) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (168) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (169) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (170) pointer -> . identifier LBRACKET expression RBRACKET
    (171) pointer -> . pointer LBRACKET expression RBRACKET
    (339) functioncall -> . identifier LPAREN func_args RPAREN
    (319) systemcall -> . DOLLER ID
    (320) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (357) identifier -> . ID
    (358) identifier -> . scope ID
    (172) const_expression -> . intnumber
    (173) const_expression -> . floatnumber
    (174) const_expression -> . stringliteral
    (359) scope -> . identifier DOT
    (360) scope -> . pointer DOT
    (176) intnumber -> . INTNUMBER_DEC
    (177) intnumber -> . SIGNED_INTNUMBER_DEC
    (178) intnumber -> . INTNUMBER_BIN
    (179) intnumber -> . SIGNED_INTNUMBER_BIN
    (180) intnumber -> . INTNUMBER_OCT
    (181) intnumber -> . SIGNED_INTNUMBER_OCT
    (182) intnumber -> . INTNUMBER_HEX
    (183) intnumber -> . SIGNED_INTNUMBER_HEX
    (175) floatnumber -> . FLOATNUMBER
    (184) stringliteral -> . STRING_LITERAL

    MINUS           shift and go to state 97
    PLUS            shift and go to state 89
    LNOT            shift and go to state 95
    NOT             shift and go to state 78
    AND             shift and go to state 91
    NAND            shift and go to state 98
    NOR             shift and go to state 76
    OR              shift and go to state 105
    XOR             shift and go to state 82
    XNOR            shift and go to state 87
    LPAREN          shift and go to state 96
    LBRACE          shift and go to state 77
    DOLLER          shift and go to state 100
    ID              shift and go to state 85
    INTNUMBER_DEC   shift and go to state 79
    SIGNED_INTNUMBER_DEC shift and go to state 101
    INTNUMBER_BIN   shift and go to state 111
    SIGNED_INTNUMBER_BIN shift and go to state 112
    INTNUMBER_OCT   shift and go to state 86
    SIGNED_INTNUMBER_OCT shift and go to state 106
    INTNUMBER_HEX   shift and go to state 93
    SIGNED_INTNUMBER_HEX shift and go to state 83
    FLOATNUMBER     shift and go to state 102
    STRING_LITERAL  shift and go to state 107

    stringliteral                  shift and go to state 99
    intnumber                      shift and go to state 81
    expression                     shift and go to state 480
    repeat                         shift and go to state 108
    partselect                     shift and go to state 103
    identifier                     shift and go to state 104
    pointer                        shift and go to state 80
    functioncall                   shift and go to state 94
    scope                          shift and go to state 84
    systemcall                     shift and go to state 109
    sysarg                         shift and go to state 635
    const_expression               shift and go to state 110
    concat                         shift and go to state 88
    floatnumber                    shift and go to state 90

state 578

    (320) systemcall -> DOLLER ID LPAREN sysargs RPAREN .

    RPAREN          reduce using rule 320 (systemcall -> DOLLER ID LPAREN sysargs RPAREN .)
    POWER           reduce using rule 320 (systemcall -> DOLLER ID LPAREN sysargs RPAREN .)
    TIMES           reduce using rule 320 (systemcall -> DOLLER ID LPAREN sysargs RPAREN .)
    DIVIDE          reduce using rule 320 (systemcall -> DOLLER ID LPAREN sysargs RPAREN .)
    MOD             reduce using rule 320 (systemcall -> DOLLER ID LPAREN sysargs RPAREN .)
    PLUS            reduce using rule 320 (systemcall -> DOLLER ID LPAREN sysargs RPAREN .)
    MINUS           reduce using rule 320 (systemcall -> DOLLER ID LPAREN sysargs RPAREN .)
    LSHIFT          reduce using rule 320 (systemcall -> DOLLER ID LPAREN sysargs RPAREN .)
    RSHIFT          reduce using rule 320 (systemcall -> DOLLER ID LPAREN sysargs RPAREN .)
    LSHIFTA         reduce using rule 320 (systemcall -> DOLLER ID LPAREN sysargs RPAREN .)
    RSHIFTA         reduce using rule 320 (systemcall -> DOLLER ID LPAREN sysargs RPAREN .)
    LT              reduce using rule 320 (systemcall -> DOLLER ID LPAREN sysargs RPAREN .)
    GT              reduce using rule 320 (systemcall -> DOLLER ID LPAREN sysargs RPAREN .)
    LE              reduce using rule 320 (systemcall -> DOLLER ID LPAREN sysargs RPAREN .)
    GE              reduce using rule 320 (systemcall -> DOLLER ID LPAREN sysargs RPAREN .)
    EQ              reduce using rule 320 (systemcall -> DOLLER ID LPAREN sysargs RPAREN .)
    NE              reduce using rule 320 (systemcall -> DOLLER ID LPAREN sysargs RPAREN .)
    EQL             reduce using rule 320 (systemcall -> DOLLER ID LPAREN sysargs RPAREN .)
    NEL             reduce using rule 320 (systemcall -> DOLLER ID LPAREN sysargs RPAREN .)
    AND             reduce using rule 320 (systemcall -> DOLLER ID LPAREN sysargs RPAREN .)
    XOR             reduce using rule 320 (systemcall -> DOLLER ID LPAREN sysargs RPAREN .)
    XNOR            reduce using rule 320 (systemcall -> DOLLER ID LPAREN sysargs RPAREN .)
    OR              reduce using rule 320 (systemcall -> DOLLER ID LPAREN sysargs RPAREN .)
    LAND            reduce using rule 320 (systemcall -> DOLLER ID LPAREN sysargs RPAREN .)
    LOR             reduce using rule 320 (systemcall -> DOLLER ID LPAREN sysargs RPAREN .)
    COND            reduce using rule 320 (systemcall -> DOLLER ID LPAREN sysargs RPAREN .)
    SEMICOLON       reduce using rule 320 (systemcall -> DOLLER ID LPAREN sysargs RPAREN .)
    RBRACKET        reduce using rule 320 (systemcall -> DOLLER ID LPAREN sysargs RPAREN .)
    COLON           reduce using rule 320 (systemcall -> DOLLER ID LPAREN sysargs RPAREN .)
    PLUSCOLON       reduce using rule 320 (systemcall -> DOLLER ID LPAREN sysargs RPAREN .)
    MINUSCOLON      reduce using rule 320 (systemcall -> DOLLER ID LPAREN sysargs RPAREN .)
    LBRACE          reduce using rule 320 (systemcall -> DOLLER ID LPAREN sysargs RPAREN .)
    RBRACE          reduce using rule 320 (systemcall -> DOLLER ID LPAREN sysargs RPAREN .)
    COMMA           reduce using rule 320 (systemcall -> DOLLER ID LPAREN sysargs RPAREN .)


state 579

    (340) func_args -> func_args COMMA expression .
    (126) expression -> expression . POWER expression
    (127) expression -> expression . TIMES expression
    (128) expression -> expression . DIVIDE expression
    (129) expression -> expression . MOD expression
    (130) expression -> expression . PLUS expression
    (131) expression -> expression . MINUS expression
    (132) expression -> expression . LSHIFT expression
    (133) expression -> expression . RSHIFT expression
    (134) expression -> expression . LSHIFTA expression
    (135) expression -> expression . RSHIFTA expression
    (136) expression -> expression . LT expression
    (137) expression -> expression . GT expression
    (138) expression -> expression . LE expression
    (139) expression -> expression . GE expression
    (140) expression -> expression . EQ expression
    (141) expression -> expression . NE expression
    (142) expression -> expression . EQL expression
    (143) expression -> expression . NEL expression
    (144) expression -> expression . AND expression
    (145) expression -> expression . XOR expression
    (146) expression -> expression . XNOR expression
    (147) expression -> expression . OR expression
    (148) expression -> expression . LAND expression
    (149) expression -> expression . LOR expression
    (150) expression -> expression . COND expression COLON expression

    RPAREN          reduce using rule 340 (func_args -> func_args COMMA expression .)
    COMMA           reduce using rule 340 (func_args -> func_args COMMA expression .)
    POWER           shift and go to state 246
    TIMES           shift and go to state 349
    DIVIDE          shift and go to state 244
    MOD             shift and go to state 231
    PLUS            shift and go to state 240
    MINUS           shift and go to state 229
    LSHIFT          shift and go to state 243
    RSHIFT          shift and go to state 226
    LSHIFTA         shift and go to state 241
    RSHIFTA         shift and go to state 238
    LT              shift and go to state 235
    GT              shift and go to state 228
    LE              shift and go to state 222
    GE              shift and go to state 239
    EQ              shift and go to state 223
    NE              shift and go to state 225
    EQL             shift and go to state 245
    NEL             shift and go to state 242
    AND             shift and go to state 224
    XOR             shift and go to state 237
    XNOR            shift and go to state 232
    OR              shift and go to state 234
    LAND            shift and go to state 227
    LOR             shift and go to state 230
    COND            shift and go to state 233


state 580

    (164) partselect -> identifier LBRACKET expression COLON expression . RBRACKET
    (126) expression -> expression . POWER expression
    (127) expression -> expression . TIMES expression
    (128) expression -> expression . DIVIDE expression
    (129) expression -> expression . MOD expression
    (130) expression -> expression . PLUS expression
    (131) expression -> expression . MINUS expression
    (132) expression -> expression . LSHIFT expression
    (133) expression -> expression . RSHIFT expression
    (134) expression -> expression . LSHIFTA expression
    (135) expression -> expression . RSHIFTA expression
    (136) expression -> expression . LT expression
    (137) expression -> expression . GT expression
    (138) expression -> expression . LE expression
    (139) expression -> expression . GE expression
    (140) expression -> expression . EQ expression
    (141) expression -> expression . NE expression
    (142) expression -> expression . EQL expression
    (143) expression -> expression . NEL expression
    (144) expression -> expression . AND expression
    (145) expression -> expression . XOR expression
    (146) expression -> expression . XNOR expression
    (147) expression -> expression . OR expression
    (148) expression -> expression . LAND expression
    (149) expression -> expression . LOR expression
    (150) expression -> expression . COND expression COLON expression

    RBRACKET        shift and go to state 636
    POWER           shift and go to state 246
    TIMES           shift and go to state 349
    DIVIDE          shift and go to state 244
    MOD             shift and go to state 231
    PLUS            shift and go to state 240
    MINUS           shift and go to state 229
    LSHIFT          shift and go to state 243
    RSHIFT          shift and go to state 226
    LSHIFTA         shift and go to state 241
    RSHIFTA         shift and go to state 238
    LT              shift and go to state 235
    GT              shift and go to state 228
    LE              shift and go to state 222
    GE              shift and go to state 239
    EQ              shift and go to state 223
    NE              shift and go to state 225
    EQL             shift and go to state 245
    NEL             shift and go to state 242
    AND             shift and go to state 224
    XOR             shift and go to state 237
    XNOR            shift and go to state 232
    OR              shift and go to state 234
    LAND            shift and go to state 227
    LOR             shift and go to state 230
    COND            shift and go to state 233


state 581

    (165) partselect -> identifier LBRACKET expression PLUSCOLON expression . RBRACKET
    (126) expression -> expression . POWER expression
    (127) expression -> expression . TIMES expression
    (128) expression -> expression . DIVIDE expression
    (129) expression -> expression . MOD expression
    (130) expression -> expression . PLUS expression
    (131) expression -> expression . MINUS expression
    (132) expression -> expression . LSHIFT expression
    (133) expression -> expression . RSHIFT expression
    (134) expression -> expression . LSHIFTA expression
    (135) expression -> expression . RSHIFTA expression
    (136) expression -> expression . LT expression
    (137) expression -> expression . GT expression
    (138) expression -> expression . LE expression
    (139) expression -> expression . GE expression
    (140) expression -> expression . EQ expression
    (141) expression -> expression . NE expression
    (142) expression -> expression . EQL expression
    (143) expression -> expression . NEL expression
    (144) expression -> expression . AND expression
    (145) expression -> expression . XOR expression
    (146) expression -> expression . XNOR expression
    (147) expression -> expression . OR expression
    (148) expression -> expression . LAND expression
    (149) expression -> expression . LOR expression
    (150) expression -> expression . COND expression COLON expression

    RBRACKET        shift and go to state 637
    POWER           shift and go to state 246
    TIMES           shift and go to state 349
    DIVIDE          shift and go to state 244
    MOD             shift and go to state 231
    PLUS            shift and go to state 240
    MINUS           shift and go to state 229
    LSHIFT          shift and go to state 243
    RSHIFT          shift and go to state 226
    LSHIFTA         shift and go to state 241
    RSHIFTA         shift and go to state 238
    LT              shift and go to state 235
    GT              shift and go to state 228
    LE              shift and go to state 222
    GE              shift and go to state 239
    EQ              shift and go to state 223
    NE              shift and go to state 225
    EQL             shift and go to state 245
    NEL             shift and go to state 242
    AND             shift and go to state 224
    XOR             shift and go to state 237
    XNOR            shift and go to state 232
    OR              shift and go to state 234
    LAND            shift and go to state 227
    LOR             shift and go to state 230
    COND            shift and go to state 233


state 582

    (166) partselect -> identifier LBRACKET expression MINUSCOLON expression . RBRACKET
    (126) expression -> expression . POWER expression
    (127) expression -> expression . TIMES expression
    (128) expression -> expression . DIVIDE expression
    (129) expression -> expression . MOD expression
    (130) expression -> expression . PLUS expression
    (131) expression -> expression . MINUS expression
    (132) expression -> expression . LSHIFT expression
    (133) expression -> expression . RSHIFT expression
    (134) expression -> expression . LSHIFTA expression
    (135) expression -> expression . RSHIFTA expression
    (136) expression -> expression . LT expression
    (137) expression -> expression . GT expression
    (138) expression -> expression . LE expression
    (139) expression -> expression . GE expression
    (140) expression -> expression . EQ expression
    (141) expression -> expression . NE expression
    (142) expression -> expression . EQL expression
    (143) expression -> expression . NEL expression
    (144) expression -> expression . AND expression
    (145) expression -> expression . XOR expression
    (146) expression -> expression . XNOR expression
    (147) expression -> expression . OR expression
    (148) expression -> expression . LAND expression
    (149) expression -> expression . LOR expression
    (150) expression -> expression . COND expression COLON expression

    RBRACKET        shift and go to state 638
    POWER           shift and go to state 246
    TIMES           shift and go to state 349
    DIVIDE          shift and go to state 244
    MOD             shift and go to state 231
    PLUS            shift and go to state 240
    MINUS           shift and go to state 229
    LSHIFT          shift and go to state 243
    RSHIFT          shift and go to state 226
    LSHIFTA         shift and go to state 241
    RSHIFTA         shift and go to state 238
    LT              shift and go to state 235
    GT              shift and go to state 228
    LE              shift and go to state 222
    GE              shift and go to state 239
    EQ              shift and go to state 223
    NE              shift and go to state 225
    EQL             shift and go to state 245
    NEL             shift and go to state 242
    AND             shift and go to state 224
    XOR             shift and go to state 237
    XNOR            shift and go to state 232
    OR              shift and go to state 234
    LAND            shift and go to state 227
    LOR             shift and go to state 230
    COND            shift and go to state 233


state 583

    (46) width -> LBRACKET expression COLON expression RBRACKET .

    ID              reduce using rule 46 (width -> LBRACKET expression COLON expression RBRACKET .)
    DELAY           reduce using rule 46 (width -> LBRACKET expression COLON expression RBRACKET .)


state 584

    (325) function -> FUNCTION width ID SEMICOLON function_statement ENDFUNCTION .

    ELSE            reduce using rule 325 (function -> FUNCTION width ID SEMICOLON function_statement ENDFUNCTION .)
    ENDGENERATE     reduce using rule 325 (function -> FUNCTION width ID SEMICOLON function_statement ENDFUNCTION .)
    IF              reduce using rule 325 (function -> FUNCTION width ID SEMICOLON function_statement ENDFUNCTION .)
    FOR             reduce using rule 325 (function -> FUNCTION width ID SEMICOLON function_statement ENDFUNCTION .)
    INTEGER         reduce using rule 325 (function -> FUNCTION width ID SEMICOLON function_statement ENDFUNCTION .)
    REAL            reduce using rule 325 (function -> FUNCTION width ID SEMICOLON function_statement ENDFUNCTION .)
    PARAMETER       reduce using rule 325 (function -> FUNCTION width ID SEMICOLON function_statement ENDFUNCTION .)
    LOCALPARAM      reduce using rule 325 (function -> FUNCTION width ID SEMICOLON function_statement ENDFUNCTION .)
    GENVAR          reduce using rule 325 (function -> FUNCTION width ID SEMICOLON function_statement ENDFUNCTION .)
    ASSIGN          reduce using rule 325 (function -> FUNCTION width ID SEMICOLON function_statement ENDFUNCTION .)
    ALWAYS          reduce using rule 325 (function -> FUNCTION width ID SEMICOLON function_statement ENDFUNCTION .)
    INITIAL         reduce using rule 325 (function -> FUNCTION width ID SEMICOLON function_statement ENDFUNCTION .)
    ID              reduce using rule 325 (function -> FUNCTION width ID SEMICOLON function_statement ENDFUNCTION .)
    FUNCTION        reduce using rule 325 (function -> FUNCTION width ID SEMICOLON function_statement ENDFUNCTION .)
    TASK            reduce using rule 325 (function -> FUNCTION width ID SEMICOLON function_statement ENDFUNCTION .)
    LPAREN          reduce using rule 325 (function -> FUNCTION width ID SEMICOLON function_statement ENDFUNCTION .)
    INPUT           reduce using rule 325 (function -> FUNCTION width ID SEMICOLON function_statement ENDFUNCTION .)
    OUTPUT          reduce using rule 325 (function -> FUNCTION width ID SEMICOLON function_statement ENDFUNCTION .)
    INOUT           reduce using rule 325 (function -> FUNCTION width ID SEMICOLON function_statement ENDFUNCTION .)
    TRI             reduce using rule 325 (function -> FUNCTION width ID SEMICOLON function_statement ENDFUNCTION .)
    REG             reduce using rule 325 (function -> FUNCTION width ID SEMICOLON function_statement ENDFUNCTION .)
    WIRE            reduce using rule 325 (function -> FUNCTION width ID SEMICOLON function_statement ENDFUNCTION .)
    SIGNED          reduce using rule 325 (function -> FUNCTION width ID SEMICOLON function_statement ENDFUNCTION .)
    END             reduce using rule 325 (function -> FUNCTION width ID SEMICOLON function_statement ENDFUNCTION .)
    ENDMODULE       reduce using rule 325 (function -> FUNCTION width ID SEMICOLON function_statement ENDFUNCTION .)
    GENERATE        reduce using rule 325 (function -> FUNCTION width ID SEMICOLON function_statement ENDFUNCTION .)


state 585

    (275) waitcontent_statement -> SEMICOLON .

    ENDMODULE       reduce using rule 275 (waitcontent_statement -> SEMICOLON .)
    GENERATE        reduce using rule 275 (waitcontent_statement -> SEMICOLON .)
    INTEGER         reduce using rule 275 (waitcontent_statement -> SEMICOLON .)
    REAL            reduce using rule 275 (waitcontent_statement -> SEMICOLON .)
    PARAMETER       reduce using rule 275 (waitcontent_statement -> SEMICOLON .)
    LOCALPARAM      reduce using rule 275 (waitcontent_statement -> SEMICOLON .)
    GENVAR          reduce using rule 275 (waitcontent_statement -> SEMICOLON .)
    ASSIGN          reduce using rule 275 (waitcontent_statement -> SEMICOLON .)
    ALWAYS          reduce using rule 275 (waitcontent_statement -> SEMICOLON .)
    INITIAL         reduce using rule 275 (waitcontent_statement -> SEMICOLON .)
    ID              reduce using rule 275 (waitcontent_statement -> SEMICOLON .)
    FUNCTION        reduce using rule 275 (waitcontent_statement -> SEMICOLON .)
    TASK            reduce using rule 275 (waitcontent_statement -> SEMICOLON .)
    LPAREN          reduce using rule 275 (waitcontent_statement -> SEMICOLON .)
    INPUT           reduce using rule 275 (waitcontent_statement -> SEMICOLON .)
    OUTPUT          reduce using rule 275 (waitcontent_statement -> SEMICOLON .)
    INOUT           reduce using rule 275 (waitcontent_statement -> SEMICOLON .)
    TRI             reduce using rule 275 (waitcontent_statement -> SEMICOLON .)
    REG             reduce using rule 275 (waitcontent_statement -> SEMICOLON .)
    WIRE            reduce using rule 275 (waitcontent_statement -> SEMICOLON .)
    SIGNED          reduce using rule 275 (waitcontent_statement -> SEMICOLON .)
    ENDGENERATE     reduce using rule 275 (waitcontent_statement -> SEMICOLON .)
    IF              reduce using rule 275 (waitcontent_statement -> SEMICOLON .)
    FOR             reduce using rule 275 (waitcontent_statement -> SEMICOLON .)
    ELSE            reduce using rule 275 (waitcontent_statement -> SEMICOLON .)
    END             reduce using rule 275 (waitcontent_statement -> SEMICOLON .)
    JOIN            reduce using rule 275 (waitcontent_statement -> SEMICOLON .)
    CASE            reduce using rule 275 (waitcontent_statement -> SEMICOLON .)
    WHILE           reduce using rule 275 (waitcontent_statement -> SEMICOLON .)
    WAIT            reduce using rule 275 (waitcontent_statement -> SEMICOLON .)
    FOREVER         reduce using rule 275 (waitcontent_statement -> SEMICOLON .)
    BEGIN           reduce using rule 275 (waitcontent_statement -> SEMICOLON .)
    FORK            reduce using rule 275 (waitcontent_statement -> SEMICOLON .)
    DELAY           reduce using rule 275 (waitcontent_statement -> SEMICOLON .)
    AT              reduce using rule 275 (waitcontent_statement -> SEMICOLON .)
    DOLLER          reduce using rule 275 (waitcontent_statement -> SEMICOLON .)
    DISABLE         reduce using rule 275 (waitcontent_statement -> SEMICOLON .)
    LBRACE          reduce using rule 275 (waitcontent_statement -> SEMICOLON .)
    SEMICOLON       reduce using rule 275 (waitcontent_statement -> SEMICOLON .)
    ENDFUNCTION     reduce using rule 275 (waitcontent_statement -> SEMICOLON .)
    ENDTASK         reduce using rule 275 (waitcontent_statement -> SEMICOLON .)
    ENDCASE         reduce using rule 275 (waitcontent_statement -> SEMICOLON .)
    DEFAULT         reduce using rule 275 (waitcontent_statement -> SEMICOLON .)
    MINUS           reduce using rule 275 (waitcontent_statement -> SEMICOLON .)
    PLUS            reduce using rule 275 (waitcontent_statement -> SEMICOLON .)
    LNOT            reduce using rule 275 (waitcontent_statement -> SEMICOLON .)
    NOT             reduce using rule 275 (waitcontent_statement -> SEMICOLON .)
    AND             reduce using rule 275 (waitcontent_statement -> SEMICOLON .)
    NAND            reduce using rule 275 (waitcontent_statement -> SEMICOLON .)
    NOR             reduce using rule 275 (waitcontent_statement -> SEMICOLON .)
    OR              reduce using rule 275 (waitcontent_statement -> SEMICOLON .)
    XOR             reduce using rule 275 (waitcontent_statement -> SEMICOLON .)
    XNOR            reduce using rule 275 (waitcontent_statement -> SEMICOLON .)
    INTNUMBER_DEC   reduce using rule 275 (waitcontent_statement -> SEMICOLON .)
    SIGNED_INTNUMBER_DEC reduce using rule 275 (waitcontent_statement -> SEMICOLON .)
    INTNUMBER_BIN   reduce using rule 275 (waitcontent_statement -> SEMICOLON .)
    SIGNED_INTNUMBER_BIN reduce using rule 275 (waitcontent_statement -> SEMICOLON .)
    INTNUMBER_OCT   reduce using rule 275 (waitcontent_statement -> SEMICOLON .)
    SIGNED_INTNUMBER_OCT reduce using rule 275 (waitcontent_statement -> SEMICOLON .)
    INTNUMBER_HEX   reduce using rule 275 (waitcontent_statement -> SEMICOLON .)
    SIGNED_INTNUMBER_HEX reduce using rule 275 (waitcontent_statement -> SEMICOLON .)
    FLOATNUMBER     reduce using rule 275 (waitcontent_statement -> SEMICOLON .)
    STRING_LITERAL  reduce using rule 275 (waitcontent_statement -> SEMICOLON .)


state 586

    (273) wait_statement -> WAIT LPAREN cond RPAREN waitcontent_statement .

    ENDMODULE       reduce using rule 273 (wait_statement -> WAIT LPAREN cond RPAREN waitcontent_statement .)
    GENERATE        reduce using rule 273 (wait_statement -> WAIT LPAREN cond RPAREN waitcontent_statement .)
    INTEGER         reduce using rule 273 (wait_statement -> WAIT LPAREN cond RPAREN waitcontent_statement .)
    REAL            reduce using rule 273 (wait_statement -> WAIT LPAREN cond RPAREN waitcontent_statement .)
    PARAMETER       reduce using rule 273 (wait_statement -> WAIT LPAREN cond RPAREN waitcontent_statement .)
    LOCALPARAM      reduce using rule 273 (wait_statement -> WAIT LPAREN cond RPAREN waitcontent_statement .)
    GENVAR          reduce using rule 273 (wait_statement -> WAIT LPAREN cond RPAREN waitcontent_statement .)
    ASSIGN          reduce using rule 273 (wait_statement -> WAIT LPAREN cond RPAREN waitcontent_statement .)
    ALWAYS          reduce using rule 273 (wait_statement -> WAIT LPAREN cond RPAREN waitcontent_statement .)
    INITIAL         reduce using rule 273 (wait_statement -> WAIT LPAREN cond RPAREN waitcontent_statement .)
    ID              reduce using rule 273 (wait_statement -> WAIT LPAREN cond RPAREN waitcontent_statement .)
    FUNCTION        reduce using rule 273 (wait_statement -> WAIT LPAREN cond RPAREN waitcontent_statement .)
    TASK            reduce using rule 273 (wait_statement -> WAIT LPAREN cond RPAREN waitcontent_statement .)
    LPAREN          reduce using rule 273 (wait_statement -> WAIT LPAREN cond RPAREN waitcontent_statement .)
    INPUT           reduce using rule 273 (wait_statement -> WAIT LPAREN cond RPAREN waitcontent_statement .)
    OUTPUT          reduce using rule 273 (wait_statement -> WAIT LPAREN cond RPAREN waitcontent_statement .)
    INOUT           reduce using rule 273 (wait_statement -> WAIT LPAREN cond RPAREN waitcontent_statement .)
    TRI             reduce using rule 273 (wait_statement -> WAIT LPAREN cond RPAREN waitcontent_statement .)
    REG             reduce using rule 273 (wait_statement -> WAIT LPAREN cond RPAREN waitcontent_statement .)
    WIRE            reduce using rule 273 (wait_statement -> WAIT LPAREN cond RPAREN waitcontent_statement .)
    SIGNED          reduce using rule 273 (wait_statement -> WAIT LPAREN cond RPAREN waitcontent_statement .)
    ENDGENERATE     reduce using rule 273 (wait_statement -> WAIT LPAREN cond RPAREN waitcontent_statement .)
    IF              reduce using rule 273 (wait_statement -> WAIT LPAREN cond RPAREN waitcontent_statement .)
    FOR             reduce using rule 273 (wait_statement -> WAIT LPAREN cond RPAREN waitcontent_statement .)
    ELSE            reduce using rule 273 (wait_statement -> WAIT LPAREN cond RPAREN waitcontent_statement .)
    END             reduce using rule 273 (wait_statement -> WAIT LPAREN cond RPAREN waitcontent_statement .)
    JOIN            reduce using rule 273 (wait_statement -> WAIT LPAREN cond RPAREN waitcontent_statement .)
    CASE            reduce using rule 273 (wait_statement -> WAIT LPAREN cond RPAREN waitcontent_statement .)
    WHILE           reduce using rule 273 (wait_statement -> WAIT LPAREN cond RPAREN waitcontent_statement .)
    WAIT            reduce using rule 273 (wait_statement -> WAIT LPAREN cond RPAREN waitcontent_statement .)
    FOREVER         reduce using rule 273 (wait_statement -> WAIT LPAREN cond RPAREN waitcontent_statement .)
    BEGIN           reduce using rule 273 (wait_statement -> WAIT LPAREN cond RPAREN waitcontent_statement .)
    FORK            reduce using rule 273 (wait_statement -> WAIT LPAREN cond RPAREN waitcontent_statement .)
    DELAY           reduce using rule 273 (wait_statement -> WAIT LPAREN cond RPAREN waitcontent_statement .)
    AT              reduce using rule 273 (wait_statement -> WAIT LPAREN cond RPAREN waitcontent_statement .)
    DOLLER          reduce using rule 273 (wait_statement -> WAIT LPAREN cond RPAREN waitcontent_statement .)
    DISABLE         reduce using rule 273 (wait_statement -> WAIT LPAREN cond RPAREN waitcontent_statement .)
    LBRACE          reduce using rule 273 (wait_statement -> WAIT LPAREN cond RPAREN waitcontent_statement .)
    SEMICOLON       reduce using rule 273 (wait_statement -> WAIT LPAREN cond RPAREN waitcontent_statement .)
    ENDFUNCTION     reduce using rule 273 (wait_statement -> WAIT LPAREN cond RPAREN waitcontent_statement .)
    ENDTASK         reduce using rule 273 (wait_statement -> WAIT LPAREN cond RPAREN waitcontent_statement .)
    ENDCASE         reduce using rule 273 (wait_statement -> WAIT LPAREN cond RPAREN waitcontent_statement .)
    DEFAULT         reduce using rule 273 (wait_statement -> WAIT LPAREN cond RPAREN waitcontent_statement .)
    MINUS           reduce using rule 273 (wait_statement -> WAIT LPAREN cond RPAREN waitcontent_statement .)
    PLUS            reduce using rule 273 (wait_statement -> WAIT LPAREN cond RPAREN waitcontent_statement .)
    LNOT            reduce using rule 273 (wait_statement -> WAIT LPAREN cond RPAREN waitcontent_statement .)
    NOT             reduce using rule 273 (wait_statement -> WAIT LPAREN cond RPAREN waitcontent_statement .)
    AND             reduce using rule 273 (wait_statement -> WAIT LPAREN cond RPAREN waitcontent_statement .)
    NAND            reduce using rule 273 (wait_statement -> WAIT LPAREN cond RPAREN waitcontent_statement .)
    NOR             reduce using rule 273 (wait_statement -> WAIT LPAREN cond RPAREN waitcontent_statement .)
    OR              reduce using rule 273 (wait_statement -> WAIT LPAREN cond RPAREN waitcontent_statement .)
    XOR             reduce using rule 273 (wait_statement -> WAIT LPAREN cond RPAREN waitcontent_statement .)
    XNOR            reduce using rule 273 (wait_statement -> WAIT LPAREN cond RPAREN waitcontent_statement .)
    INTNUMBER_DEC   reduce using rule 273 (wait_statement -> WAIT LPAREN cond RPAREN waitcontent_statement .)
    SIGNED_INTNUMBER_DEC reduce using rule 273 (wait_statement -> WAIT LPAREN cond RPAREN waitcontent_statement .)
    INTNUMBER_BIN   reduce using rule 273 (wait_statement -> WAIT LPAREN cond RPAREN waitcontent_statement .)
    SIGNED_INTNUMBER_BIN reduce using rule 273 (wait_statement -> WAIT LPAREN cond RPAREN waitcontent_statement .)
    INTNUMBER_OCT   reduce using rule 273 (wait_statement -> WAIT LPAREN cond RPAREN waitcontent_statement .)
    SIGNED_INTNUMBER_OCT reduce using rule 273 (wait_statement -> WAIT LPAREN cond RPAREN waitcontent_statement .)
    INTNUMBER_HEX   reduce using rule 273 (wait_statement -> WAIT LPAREN cond RPAREN waitcontent_statement .)
    SIGNED_INTNUMBER_HEX reduce using rule 273 (wait_statement -> WAIT LPAREN cond RPAREN waitcontent_statement .)
    FLOATNUMBER     reduce using rule 273 (wait_statement -> WAIT LPAREN cond RPAREN waitcontent_statement .)
    STRING_LITERAL  reduce using rule 273 (wait_statement -> WAIT LPAREN cond RPAREN waitcontent_statement .)


state 587

    (274) waitcontent_statement -> basic_statement .

    ENDMODULE       reduce using rule 274 (waitcontent_statement -> basic_statement .)
    GENERATE        reduce using rule 274 (waitcontent_statement -> basic_statement .)
    INTEGER         reduce using rule 274 (waitcontent_statement -> basic_statement .)
    REAL            reduce using rule 274 (waitcontent_statement -> basic_statement .)
    PARAMETER       reduce using rule 274 (waitcontent_statement -> basic_statement .)
    LOCALPARAM      reduce using rule 274 (waitcontent_statement -> basic_statement .)
    GENVAR          reduce using rule 274 (waitcontent_statement -> basic_statement .)
    ASSIGN          reduce using rule 274 (waitcontent_statement -> basic_statement .)
    ALWAYS          reduce using rule 274 (waitcontent_statement -> basic_statement .)
    INITIAL         reduce using rule 274 (waitcontent_statement -> basic_statement .)
    ID              reduce using rule 274 (waitcontent_statement -> basic_statement .)
    FUNCTION        reduce using rule 274 (waitcontent_statement -> basic_statement .)
    TASK            reduce using rule 274 (waitcontent_statement -> basic_statement .)
    LPAREN          reduce using rule 274 (waitcontent_statement -> basic_statement .)
    INPUT           reduce using rule 274 (waitcontent_statement -> basic_statement .)
    OUTPUT          reduce using rule 274 (waitcontent_statement -> basic_statement .)
    INOUT           reduce using rule 274 (waitcontent_statement -> basic_statement .)
    TRI             reduce using rule 274 (waitcontent_statement -> basic_statement .)
    REG             reduce using rule 274 (waitcontent_statement -> basic_statement .)
    WIRE            reduce using rule 274 (waitcontent_statement -> basic_statement .)
    SIGNED          reduce using rule 274 (waitcontent_statement -> basic_statement .)
    ENDGENERATE     reduce using rule 274 (waitcontent_statement -> basic_statement .)
    IF              reduce using rule 274 (waitcontent_statement -> basic_statement .)
    FOR             reduce using rule 274 (waitcontent_statement -> basic_statement .)
    ELSE            reduce using rule 274 (waitcontent_statement -> basic_statement .)
    END             reduce using rule 274 (waitcontent_statement -> basic_statement .)
    JOIN            reduce using rule 274 (waitcontent_statement -> basic_statement .)
    CASE            reduce using rule 274 (waitcontent_statement -> basic_statement .)
    WHILE           reduce using rule 274 (waitcontent_statement -> basic_statement .)
    WAIT            reduce using rule 274 (waitcontent_statement -> basic_statement .)
    FOREVER         reduce using rule 274 (waitcontent_statement -> basic_statement .)
    BEGIN           reduce using rule 274 (waitcontent_statement -> basic_statement .)
    FORK            reduce using rule 274 (waitcontent_statement -> basic_statement .)
    DELAY           reduce using rule 274 (waitcontent_statement -> basic_statement .)
    AT              reduce using rule 274 (waitcontent_statement -> basic_statement .)
    DOLLER          reduce using rule 274 (waitcontent_statement -> basic_statement .)
    DISABLE         reduce using rule 274 (waitcontent_statement -> basic_statement .)
    LBRACE          reduce using rule 274 (waitcontent_statement -> basic_statement .)
    SEMICOLON       reduce using rule 274 (waitcontent_statement -> basic_statement .)
    ENDFUNCTION     reduce using rule 274 (waitcontent_statement -> basic_statement .)
    ENDTASK         reduce using rule 274 (waitcontent_statement -> basic_statement .)
    ENDCASE         reduce using rule 274 (waitcontent_statement -> basic_statement .)
    DEFAULT         reduce using rule 274 (waitcontent_statement -> basic_statement .)
    MINUS           reduce using rule 274 (waitcontent_statement -> basic_statement .)
    PLUS            reduce using rule 274 (waitcontent_statement -> basic_statement .)
    LNOT            reduce using rule 274 (waitcontent_statement -> basic_statement .)
    NOT             reduce using rule 274 (waitcontent_statement -> basic_statement .)
    AND             reduce using rule 274 (waitcontent_statement -> basic_statement .)
    NAND            reduce using rule 274 (waitcontent_statement -> basic_statement .)
    NOR             reduce using rule 274 (waitcontent_statement -> basic_statement .)
    OR              reduce using rule 274 (waitcontent_statement -> basic_statement .)
    XOR             reduce using rule 274 (waitcontent_statement -> basic_statement .)
    XNOR            reduce using rule 274 (waitcontent_statement -> basic_statement .)
    INTNUMBER_DEC   reduce using rule 274 (waitcontent_statement -> basic_statement .)
    SIGNED_INTNUMBER_DEC reduce using rule 274 (waitcontent_statement -> basic_statement .)
    INTNUMBER_BIN   reduce using rule 274 (waitcontent_statement -> basic_statement .)
    SIGNED_INTNUMBER_BIN reduce using rule 274 (waitcontent_statement -> basic_statement .)
    INTNUMBER_OCT   reduce using rule 274 (waitcontent_statement -> basic_statement .)
    SIGNED_INTNUMBER_OCT reduce using rule 274 (waitcontent_statement -> basic_statement .)
    INTNUMBER_HEX   reduce using rule 274 (waitcontent_statement -> basic_statement .)
    SIGNED_INTNUMBER_HEX reduce using rule 274 (waitcontent_statement -> basic_statement .)
    FLOATNUMBER     reduce using rule 274 (waitcontent_statement -> basic_statement .)
    STRING_LITERAL  reduce using rule 274 (waitcontent_statement -> basic_statement .)


state 588

    (266) casecontent_statement -> casecontent_condition . COLON basic_statement
    (267) casecontent_condition -> casecontent_condition . COMMA expression

    COLON           shift and go to state 639
    COMMA           shift and go to state 640


state 589

    (262) case_statement -> CASE LPAREN case_comp RPAREN casecontent_statements . ENDCASE
    (264) casecontent_statements -> casecontent_statements . casecontent_statement
    (266) casecontent_statement -> . casecontent_condition COLON basic_statement
    (269) casecontent_statement -> . DEFAULT COLON basic_statement
    (267) casecontent_condition -> . casecontent_condition COMMA expression
    (268) casecontent_condition -> . expression
    (116) expression -> . MINUS expression
    (117) expression -> . PLUS expression
    (118) expression -> . LNOT expression
    (119) expression -> . NOT expression
    (120) expression -> . AND expression
    (121) expression -> . NAND expression
    (122) expression -> . NOR expression
    (123) expression -> . OR expression
    (124) expression -> . XOR expression
    (125) expression -> . XNOR expression
    (126) expression -> . expression POWER expression
    (127) expression -> . expression TIMES expression
    (128) expression -> . expression DIVIDE expression
    (129) expression -> . expression MOD expression
    (130) expression -> . expression PLUS expression
    (131) expression -> . expression MINUS expression
    (132) expression -> . expression LSHIFT expression
    (133) expression -> . expression RSHIFT expression
    (134) expression -> . expression LSHIFTA expression
    (135) expression -> . expression RSHIFTA expression
    (136) expression -> . expression LT expression
    (137) expression -> . expression GT expression
    (138) expression -> . expression LE expression
    (139) expression -> . expression GE expression
    (140) expression -> . expression EQ expression
    (141) expression -> . expression NE expression
    (142) expression -> . expression EQL expression
    (143) expression -> . expression NEL expression
    (144) expression -> . expression AND expression
    (145) expression -> . expression XOR expression
    (146) expression -> . expression XNOR expression
    (147) expression -> . expression OR expression
    (148) expression -> . expression LAND expression
    (149) expression -> . expression LOR expression
    (150) expression -> . expression COND expression COLON expression
    (151) expression -> . LPAREN expression RPAREN
    (152) expression -> . concat
    (153) expression -> . repeat
    (154) expression -> . partselect
    (155) expression -> . pointer
    (156) expression -> . functioncall
    (157) expression -> . systemcall
    (158) expression -> . identifier
    (159) expression -> . const_expression
    (160) concat -> . LBRACE concatlist RBRACE
    (163) repeat -> . LBRACE expression concat RBRACE
    (164) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (165) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (166) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (167) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (168) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (169) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (170) pointer -> . identifier LBRACKET expression RBRACKET
    (171) pointer -> . pointer LBRACKET expression RBRACKET
    (339) functioncall -> . identifier LPAREN func_args RPAREN
    (319) systemcall -> . DOLLER ID
    (320) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (357) identifier -> . ID
    (358) identifier -> . scope ID
    (172) const_expression -> . intnumber
    (173) const_expression -> . floatnumber
    (174) const_expression -> . stringliteral
    (359) scope -> . identifier DOT
    (360) scope -> . pointer DOT
    (176) intnumber -> . INTNUMBER_DEC
    (177) intnumber -> . SIGNED_INTNUMBER_DEC
    (178) intnumber -> . INTNUMBER_BIN
    (179) intnumber -> . SIGNED_INTNUMBER_BIN
    (180) intnumber -> . INTNUMBER_OCT
    (181) intnumber -> . SIGNED_INTNUMBER_OCT
    (182) intnumber -> . INTNUMBER_HEX
    (183) intnumber -> . SIGNED_INTNUMBER_HEX
    (175) floatnumber -> . FLOATNUMBER
    (184) stringliteral -> . STRING_LITERAL

    ENDCASE         shift and go to state 641
    DEFAULT         shift and go to state 592
    MINUS           shift and go to state 97
    PLUS            shift and go to state 89
    LNOT            shift and go to state 95
    NOT             shift and go to state 78
    AND             shift and go to state 91
    NAND            shift and go to state 98
    NOR             shift and go to state 76
    OR              shift and go to state 105
    XOR             shift and go to state 82
    XNOR            shift and go to state 87
    LPAREN          shift and go to state 96
    LBRACE          shift and go to state 77
    DOLLER          shift and go to state 100
    ID              shift and go to state 85
    INTNUMBER_DEC   shift and go to state 79
    SIGNED_INTNUMBER_DEC shift and go to state 101
    INTNUMBER_BIN   shift and go to state 111
    SIGNED_INTNUMBER_BIN shift and go to state 112
    INTNUMBER_OCT   shift and go to state 86
    SIGNED_INTNUMBER_OCT shift and go to state 106
    INTNUMBER_HEX   shift and go to state 93
    SIGNED_INTNUMBER_HEX shift and go to state 83
    FLOATNUMBER     shift and go to state 102
    STRING_LITERAL  shift and go to state 107

    scope                          shift and go to state 84
    const_expression               shift and go to state 110
    expression                     shift and go to state 590
    repeat                         shift and go to state 108
    functioncall                   shift and go to state 94
    identifier                     shift and go to state 104
    partselect                     shift and go to state 103
    pointer                        shift and go to state 80
    casecontent_condition          shift and go to state 588
    casecontent_statement          shift and go to state 642
    systemcall                     shift and go to state 109
    stringliteral                  shift and go to state 99
    concat                         shift and go to state 88
    floatnumber                    shift and go to state 90
    intnumber                      shift and go to state 81

state 590

    (268) casecontent_condition -> expression .
    (126) expression -> expression . POWER expression
    (127) expression -> expression . TIMES expression
    (128) expression -> expression . DIVIDE expression
    (129) expression -> expression . MOD expression
    (130) expression -> expression . PLUS expression
    (131) expression -> expression . MINUS expression
    (132) expression -> expression . LSHIFT expression
    (133) expression -> expression . RSHIFT expression
    (134) expression -> expression . LSHIFTA expression
    (135) expression -> expression . RSHIFTA expression
    (136) expression -> expression . LT expression
    (137) expression -> expression . GT expression
    (138) expression -> expression . LE expression
    (139) expression -> expression . GE expression
    (140) expression -> expression . EQ expression
    (141) expression -> expression . NE expression
    (142) expression -> expression . EQL expression
    (143) expression -> expression . NEL expression
    (144) expression -> expression . AND expression
    (145) expression -> expression . XOR expression
    (146) expression -> expression . XNOR expression
    (147) expression -> expression . OR expression
    (148) expression -> expression . LAND expression
    (149) expression -> expression . LOR expression
    (150) expression -> expression . COND expression COLON expression

    COLON           reduce using rule 268 (casecontent_condition -> expression .)
    COMMA           reduce using rule 268 (casecontent_condition -> expression .)
    POWER           shift and go to state 246
    TIMES           shift and go to state 349
    DIVIDE          shift and go to state 244
    MOD             shift and go to state 231
    PLUS            shift and go to state 240
    MINUS           shift and go to state 229
    LSHIFT          shift and go to state 243
    RSHIFT          shift and go to state 226
    LSHIFTA         shift and go to state 241
    RSHIFTA         shift and go to state 238
    LT              shift and go to state 235
    GT              shift and go to state 228
    LE              shift and go to state 222
    GE              shift and go to state 239
    EQ              shift and go to state 223
    NE              shift and go to state 225
    EQL             shift and go to state 245
    NEL             shift and go to state 242
    AND             shift and go to state 224
    XOR             shift and go to state 237
    XNOR            shift and go to state 232
    OR              shift and go to state 234
    LAND            shift and go to state 227
    LOR             shift and go to state 230
    COND            shift and go to state 233


state 591

    (265) casecontent_statements -> casecontent_statement .

    ENDCASE         reduce using rule 265 (casecontent_statements -> casecontent_statement .)
    DEFAULT         reduce using rule 265 (casecontent_statements -> casecontent_statement .)
    MINUS           reduce using rule 265 (casecontent_statements -> casecontent_statement .)
    PLUS            reduce using rule 265 (casecontent_statements -> casecontent_statement .)
    LNOT            reduce using rule 265 (casecontent_statements -> casecontent_statement .)
    NOT             reduce using rule 265 (casecontent_statements -> casecontent_statement .)
    AND             reduce using rule 265 (casecontent_statements -> casecontent_statement .)
    NAND            reduce using rule 265 (casecontent_statements -> casecontent_statement .)
    NOR             reduce using rule 265 (casecontent_statements -> casecontent_statement .)
    OR              reduce using rule 265 (casecontent_statements -> casecontent_statement .)
    XOR             reduce using rule 265 (casecontent_statements -> casecontent_statement .)
    XNOR            reduce using rule 265 (casecontent_statements -> casecontent_statement .)
    LPAREN          reduce using rule 265 (casecontent_statements -> casecontent_statement .)
    LBRACE          reduce using rule 265 (casecontent_statements -> casecontent_statement .)
    DOLLER          reduce using rule 265 (casecontent_statements -> casecontent_statement .)
    ID              reduce using rule 265 (casecontent_statements -> casecontent_statement .)
    INTNUMBER_DEC   reduce using rule 265 (casecontent_statements -> casecontent_statement .)
    SIGNED_INTNUMBER_DEC reduce using rule 265 (casecontent_statements -> casecontent_statement .)
    INTNUMBER_BIN   reduce using rule 265 (casecontent_statements -> casecontent_statement .)
    SIGNED_INTNUMBER_BIN reduce using rule 265 (casecontent_statements -> casecontent_statement .)
    INTNUMBER_OCT   reduce using rule 265 (casecontent_statements -> casecontent_statement .)
    SIGNED_INTNUMBER_OCT reduce using rule 265 (casecontent_statements -> casecontent_statement .)
    INTNUMBER_HEX   reduce using rule 265 (casecontent_statements -> casecontent_statement .)
    SIGNED_INTNUMBER_HEX reduce using rule 265 (casecontent_statements -> casecontent_statement .)
    FLOATNUMBER     reduce using rule 265 (casecontent_statements -> casecontent_statement .)
    STRING_LITERAL  reduce using rule 265 (casecontent_statements -> casecontent_statement .)


state 592

    (269) casecontent_statement -> DEFAULT . COLON basic_statement

    COLON           shift and go to state 643


state 593

    (246) if_statement -> delays IF LPAREN cond RPAREN . true_statement ELSE else_statement
    (247) if_statement -> delays IF LPAREN cond RPAREN . true_statement
    (250) true_statement -> . ifcontent_statement
    (249) ifcontent_statement -> . basic_statement
    (205) basic_statement -> . if_statement
    (206) basic_statement -> . case_statement
    (207) basic_statement -> . for_statement
    (208) basic_statement -> . while_statement
    (209) basic_statement -> . event_statement
    (210) basic_statement -> . wait_statement
    (211) basic_statement -> . forever_statement
    (212) basic_statement -> . block
    (213) basic_statement -> . namedblock
    (214) basic_statement -> . parallelblock
    (215) basic_statement -> . blocking_substitution
    (216) basic_statement -> . nonblocking_substitution
    (217) basic_statement -> . single_statement
    (244) if_statement -> . IF LPAREN cond RPAREN true_statement ELSE else_statement
    (245) if_statement -> . IF LPAREN cond RPAREN true_statement
    (246) if_statement -> . delays IF LPAREN cond RPAREN true_statement ELSE else_statement
    (247) if_statement -> . delays IF LPAREN cond RPAREN true_statement
    (262) case_statement -> . CASE LPAREN case_comp RPAREN casecontent_statements ENDCASE
    (252) for_statement -> . FOR LPAREN forpre forcond forpost RPAREN forcontent_statement
    (260) while_statement -> . WHILE LPAREN cond RPAREN whilecontent_statement
    (272) event_statement -> . senslist SEMICOLON
    (273) wait_statement -> . WAIT LPAREN cond RPAREN waitcontent_statement
    (276) forever_statement -> . FOREVER basic_statement
    (227) block -> . BEGIN block_statements END
    (228) block -> . BEGIN END
    (232) namedblock -> . BEGIN COLON ID namedblock_statements END
    (233) namedblock -> . BEGIN COLON ID END
    (242) parallelblock -> . FORK block_statements JOIN
    (243) parallelblock -> . FORK JOIN
    (219) blocking_substitution -> . delays lvalue EQUALS delays rvalue SEMICOLON
    (221) nonblocking_substitution -> . delays lvalue LE delays rvalue SEMICOLON
    (362) single_statement -> . DELAY expression SEMICOLON
    (363) single_statement -> . systemcall SEMICOLON
    (364) single_statement -> . disable SEMICOLON
    (222) delays -> . DELAY LPAREN expression RPAREN
    (223) delays -> . DELAY identifier
    (224) delays -> . DELAY intnumber
    (225) delays -> . DELAY floatnumber
    (226) delays -> . empty
    (186) senslist -> . AT LPAREN edgesigs RPAREN
    (193) senslist -> . empty
    (194) senslist -> . AT levelsig
    (195) senslist -> . AT LPAREN levelsigs RPAREN
    (203) senslist -> . AT TIMES
    (204) senslist -> . AT LPAREN TIMES RPAREN
    (319) systemcall -> . DOLLER ID
    (320) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (361) disable -> . DISABLE ID
    (365) empty -> .

  ! shift/reduce conflict for IF resolved as shift
    IF              shift and go to state 150
    CASE            shift and go to state 136
    FOR             shift and go to state 144
    WHILE           shift and go to state 146
    WAIT            shift and go to state 131
    FOREVER         shift and go to state 143
    BEGIN           shift and go to state 153
    FORK            shift and go to state 138
    DELAY           shift and go to state 147
    AT              shift and go to state 159
    DOLLER          shift and go to state 100
    DISABLE         shift and go to state 155
    LBRACE          reduce using rule 365 (empty -> .)
    ID              reduce using rule 365 (empty -> .)
    SEMICOLON       reduce using rule 365 (empty -> .)

  ! IF              [ reduce using rule 365 (empty -> .) ]

    parallelblock                  shift and go to state 129
    for_statement                  shift and go to state 130
    true_statement                 shift and go to state 644
    empty                          shift and go to state 157
    if_statement                   shift and go to state 132
    while_statement                shift and go to state 148
    blocking_substitution          shift and go to state 137
    systemcall                     shift and go to state 158
    basic_statement                shift and go to state 605
    ifcontent_statement            shift and go to state 604
    event_statement                shift and go to state 135
    wait_statement                 shift and go to state 151
    forever_statement              shift and go to state 152
    case_statement                 shift and go to state 139
    disable                        shift and go to state 133
    senslist                       shift and go to state 154
    single_statement               shift and go to state 140
    block                          shift and go to state 156
    delays                         shift and go to state 141
    nonblocking_substitution       shift and go to state 142
    namedblock                     shift and go to state 145

state 594

    (221) nonblocking_substitution -> delays lvalue LE delays rvalue . SEMICOLON

    SEMICOLON       shift and go to state 645


state 595

    (219) blocking_substitution -> delays lvalue EQUALS delays rvalue . SEMICOLON

    SEMICOLON       shift and go to state 646


state 596

    (257) forpost -> blocking_substitution_base .

    RPAREN          reduce using rule 257 (forpost -> blocking_substitution_base .)


state 597

    (258) forpost -> empty .
    (226) delays -> empty .

    RPAREN          reduce using rule 258 (forpost -> empty .)
    LBRACE          reduce using rule 226 (delays -> empty .)
    ID              reduce using rule 226 (delays -> empty .)


state 598

    (252) for_statement -> FOR LPAREN forpre forcond forpost . RPAREN forcontent_statement

    RPAREN          shift and go to state 647


state 599

    (220) blocking_substitution_base -> delays . lvalue EQUALS delays rvalue
    (111) lvalue -> . lpartselect
    (112) lvalue -> . lpointer
    (113) lvalue -> . lconcat
    (114) lvalue -> . identifier
    (97) lpartselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (98) lpartselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (99) lpartselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (100) lpartselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (101) lpartselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (102) lpartselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (103) lpointer -> . pointer
    (104) lconcat -> . LBRACE lconcatlist RBRACE
    (357) identifier -> . ID
    (358) identifier -> . scope ID
    (170) pointer -> . identifier LBRACKET expression RBRACKET
    (171) pointer -> . pointer LBRACKET expression RBRACKET
    (359) scope -> . identifier DOT
    (360) scope -> . pointer DOT

    LBRACE          shift and go to state 162
    ID              shift and go to state 85

    pointer                        shift and go to state 169
    scope                          shift and go to state 84
    lpointer                       shift and go to state 165
    lpartselect                    shift and go to state 166
    lvalue                         shift and go to state 648
    identifier                     shift and go to state 168
    lconcat                        shift and go to state 164

state 600

    (255) forcond -> cond SEMICOLON .

    DELAY           reduce using rule 255 (forcond -> cond SEMICOLON .)
    RPAREN          reduce using rule 255 (forcond -> cond SEMICOLON .)
    LBRACE          reduce using rule 255 (forcond -> cond SEMICOLON .)
    ID              reduce using rule 255 (forcond -> cond SEMICOLON .)


state 601

    (260) while_statement -> WHILE LPAREN cond RPAREN whilecontent_statement .

    JOIN            reduce using rule 260 (while_statement -> WHILE LPAREN cond RPAREN whilecontent_statement .)
    IF              reduce using rule 260 (while_statement -> WHILE LPAREN cond RPAREN whilecontent_statement .)
    CASE            reduce using rule 260 (while_statement -> WHILE LPAREN cond RPAREN whilecontent_statement .)
    FOR             reduce using rule 260 (while_statement -> WHILE LPAREN cond RPAREN whilecontent_statement .)
    WHILE           reduce using rule 260 (while_statement -> WHILE LPAREN cond RPAREN whilecontent_statement .)
    WAIT            reduce using rule 260 (while_statement -> WHILE LPAREN cond RPAREN whilecontent_statement .)
    FOREVER         reduce using rule 260 (while_statement -> WHILE LPAREN cond RPAREN whilecontent_statement .)
    BEGIN           reduce using rule 260 (while_statement -> WHILE LPAREN cond RPAREN whilecontent_statement .)
    FORK            reduce using rule 260 (while_statement -> WHILE LPAREN cond RPAREN whilecontent_statement .)
    DELAY           reduce using rule 260 (while_statement -> WHILE LPAREN cond RPAREN whilecontent_statement .)
    AT              reduce using rule 260 (while_statement -> WHILE LPAREN cond RPAREN whilecontent_statement .)
    DOLLER          reduce using rule 260 (while_statement -> WHILE LPAREN cond RPAREN whilecontent_statement .)
    DISABLE         reduce using rule 260 (while_statement -> WHILE LPAREN cond RPAREN whilecontent_statement .)
    LBRACE          reduce using rule 260 (while_statement -> WHILE LPAREN cond RPAREN whilecontent_statement .)
    ID              reduce using rule 260 (while_statement -> WHILE LPAREN cond RPAREN whilecontent_statement .)
    SEMICOLON       reduce using rule 260 (while_statement -> WHILE LPAREN cond RPAREN whilecontent_statement .)
    ENDCASE         reduce using rule 260 (while_statement -> WHILE LPAREN cond RPAREN whilecontent_statement .)
    DEFAULT         reduce using rule 260 (while_statement -> WHILE LPAREN cond RPAREN whilecontent_statement .)
    MINUS           reduce using rule 260 (while_statement -> WHILE LPAREN cond RPAREN whilecontent_statement .)
    PLUS            reduce using rule 260 (while_statement -> WHILE LPAREN cond RPAREN whilecontent_statement .)
    LNOT            reduce using rule 260 (while_statement -> WHILE LPAREN cond RPAREN whilecontent_statement .)
    NOT             reduce using rule 260 (while_statement -> WHILE LPAREN cond RPAREN whilecontent_statement .)
    AND             reduce using rule 260 (while_statement -> WHILE LPAREN cond RPAREN whilecontent_statement .)
    NAND            reduce using rule 260 (while_statement -> WHILE LPAREN cond RPAREN whilecontent_statement .)
    NOR             reduce using rule 260 (while_statement -> WHILE LPAREN cond RPAREN whilecontent_statement .)
    OR              reduce using rule 260 (while_statement -> WHILE LPAREN cond RPAREN whilecontent_statement .)
    XOR             reduce using rule 260 (while_statement -> WHILE LPAREN cond RPAREN whilecontent_statement .)
    XNOR            reduce using rule 260 (while_statement -> WHILE LPAREN cond RPAREN whilecontent_statement .)
    LPAREN          reduce using rule 260 (while_statement -> WHILE LPAREN cond RPAREN whilecontent_statement .)
    INTNUMBER_DEC   reduce using rule 260 (while_statement -> WHILE LPAREN cond RPAREN whilecontent_statement .)
    SIGNED_INTNUMBER_DEC reduce using rule 260 (while_statement -> WHILE LPAREN cond RPAREN whilecontent_statement .)
    INTNUMBER_BIN   reduce using rule 260 (while_statement -> WHILE LPAREN cond RPAREN whilecontent_statement .)
    SIGNED_INTNUMBER_BIN reduce using rule 260 (while_statement -> WHILE LPAREN cond RPAREN whilecontent_statement .)
    INTNUMBER_OCT   reduce using rule 260 (while_statement -> WHILE LPAREN cond RPAREN whilecontent_statement .)
    SIGNED_INTNUMBER_OCT reduce using rule 260 (while_statement -> WHILE LPAREN cond RPAREN whilecontent_statement .)
    INTNUMBER_HEX   reduce using rule 260 (while_statement -> WHILE LPAREN cond RPAREN whilecontent_statement .)
    SIGNED_INTNUMBER_HEX reduce using rule 260 (while_statement -> WHILE LPAREN cond RPAREN whilecontent_statement .)
    FLOATNUMBER     reduce using rule 260 (while_statement -> WHILE LPAREN cond RPAREN whilecontent_statement .)
    STRING_LITERAL  reduce using rule 260 (while_statement -> WHILE LPAREN cond RPAREN whilecontent_statement .)
    ENDMODULE       reduce using rule 260 (while_statement -> WHILE LPAREN cond RPAREN whilecontent_statement .)
    GENERATE        reduce using rule 260 (while_statement -> WHILE LPAREN cond RPAREN whilecontent_statement .)
    INTEGER         reduce using rule 260 (while_statement -> WHILE LPAREN cond RPAREN whilecontent_statement .)
    REAL            reduce using rule 260 (while_statement -> WHILE LPAREN cond RPAREN whilecontent_statement .)
    PARAMETER       reduce using rule 260 (while_statement -> WHILE LPAREN cond RPAREN whilecontent_statement .)
    LOCALPARAM      reduce using rule 260 (while_statement -> WHILE LPAREN cond RPAREN whilecontent_statement .)
    GENVAR          reduce using rule 260 (while_statement -> WHILE LPAREN cond RPAREN whilecontent_statement .)
    ASSIGN          reduce using rule 260 (while_statement -> WHILE LPAREN cond RPAREN whilecontent_statement .)
    ALWAYS          reduce using rule 260 (while_statement -> WHILE LPAREN cond RPAREN whilecontent_statement .)
    INITIAL         reduce using rule 260 (while_statement -> WHILE LPAREN cond RPAREN whilecontent_statement .)
    FUNCTION        reduce using rule 260 (while_statement -> WHILE LPAREN cond RPAREN whilecontent_statement .)
    TASK            reduce using rule 260 (while_statement -> WHILE LPAREN cond RPAREN whilecontent_statement .)
    INPUT           reduce using rule 260 (while_statement -> WHILE LPAREN cond RPAREN whilecontent_statement .)
    OUTPUT          reduce using rule 260 (while_statement -> WHILE LPAREN cond RPAREN whilecontent_statement .)
    INOUT           reduce using rule 260 (while_statement -> WHILE LPAREN cond RPAREN whilecontent_statement .)
    TRI             reduce using rule 260 (while_statement -> WHILE LPAREN cond RPAREN whilecontent_statement .)
    REG             reduce using rule 260 (while_statement -> WHILE LPAREN cond RPAREN whilecontent_statement .)
    WIRE            reduce using rule 260 (while_statement -> WHILE LPAREN cond RPAREN whilecontent_statement .)
    SIGNED          reduce using rule 260 (while_statement -> WHILE LPAREN cond RPAREN whilecontent_statement .)
    ENDGENERATE     reduce using rule 260 (while_statement -> WHILE LPAREN cond RPAREN whilecontent_statement .)
    ELSE            reduce using rule 260 (while_statement -> WHILE LPAREN cond RPAREN whilecontent_statement .)
    END             reduce using rule 260 (while_statement -> WHILE LPAREN cond RPAREN whilecontent_statement .)
    ENDFUNCTION     reduce using rule 260 (while_statement -> WHILE LPAREN cond RPAREN whilecontent_statement .)
    ENDTASK         reduce using rule 260 (while_statement -> WHILE LPAREN cond RPAREN whilecontent_statement .)


state 602

    (261) whilecontent_statement -> basic_statement .

    ENDMODULE       reduce using rule 261 (whilecontent_statement -> basic_statement .)
    GENERATE        reduce using rule 261 (whilecontent_statement -> basic_statement .)
    INTEGER         reduce using rule 261 (whilecontent_statement -> basic_statement .)
    REAL            reduce using rule 261 (whilecontent_statement -> basic_statement .)
    PARAMETER       reduce using rule 261 (whilecontent_statement -> basic_statement .)
    LOCALPARAM      reduce using rule 261 (whilecontent_statement -> basic_statement .)
    GENVAR          reduce using rule 261 (whilecontent_statement -> basic_statement .)
    ASSIGN          reduce using rule 261 (whilecontent_statement -> basic_statement .)
    ALWAYS          reduce using rule 261 (whilecontent_statement -> basic_statement .)
    INITIAL         reduce using rule 261 (whilecontent_statement -> basic_statement .)
    ID              reduce using rule 261 (whilecontent_statement -> basic_statement .)
    FUNCTION        reduce using rule 261 (whilecontent_statement -> basic_statement .)
    TASK            reduce using rule 261 (whilecontent_statement -> basic_statement .)
    LPAREN          reduce using rule 261 (whilecontent_statement -> basic_statement .)
    INPUT           reduce using rule 261 (whilecontent_statement -> basic_statement .)
    OUTPUT          reduce using rule 261 (whilecontent_statement -> basic_statement .)
    INOUT           reduce using rule 261 (whilecontent_statement -> basic_statement .)
    TRI             reduce using rule 261 (whilecontent_statement -> basic_statement .)
    REG             reduce using rule 261 (whilecontent_statement -> basic_statement .)
    WIRE            reduce using rule 261 (whilecontent_statement -> basic_statement .)
    SIGNED          reduce using rule 261 (whilecontent_statement -> basic_statement .)
    ENDGENERATE     reduce using rule 261 (whilecontent_statement -> basic_statement .)
    IF              reduce using rule 261 (whilecontent_statement -> basic_statement .)
    FOR             reduce using rule 261 (whilecontent_statement -> basic_statement .)
    ELSE            reduce using rule 261 (whilecontent_statement -> basic_statement .)
    END             reduce using rule 261 (whilecontent_statement -> basic_statement .)
    JOIN            reduce using rule 261 (whilecontent_statement -> basic_statement .)
    CASE            reduce using rule 261 (whilecontent_statement -> basic_statement .)
    WHILE           reduce using rule 261 (whilecontent_statement -> basic_statement .)
    WAIT            reduce using rule 261 (whilecontent_statement -> basic_statement .)
    FOREVER         reduce using rule 261 (whilecontent_statement -> basic_statement .)
    BEGIN           reduce using rule 261 (whilecontent_statement -> basic_statement .)
    FORK            reduce using rule 261 (whilecontent_statement -> basic_statement .)
    DELAY           reduce using rule 261 (whilecontent_statement -> basic_statement .)
    AT              reduce using rule 261 (whilecontent_statement -> basic_statement .)
    DOLLER          reduce using rule 261 (whilecontent_statement -> basic_statement .)
    DISABLE         reduce using rule 261 (whilecontent_statement -> basic_statement .)
    LBRACE          reduce using rule 261 (whilecontent_statement -> basic_statement .)
    SEMICOLON       reduce using rule 261 (whilecontent_statement -> basic_statement .)
    ENDFUNCTION     reduce using rule 261 (whilecontent_statement -> basic_statement .)
    ENDTASK         reduce using rule 261 (whilecontent_statement -> basic_statement .)
    ENDCASE         reduce using rule 261 (whilecontent_statement -> basic_statement .)
    DEFAULT         reduce using rule 261 (whilecontent_statement -> basic_statement .)
    MINUS           reduce using rule 261 (whilecontent_statement -> basic_statement .)
    PLUS            reduce using rule 261 (whilecontent_statement -> basic_statement .)
    LNOT            reduce using rule 261 (whilecontent_statement -> basic_statement .)
    NOT             reduce using rule 261 (whilecontent_statement -> basic_statement .)
    AND             reduce using rule 261 (whilecontent_statement -> basic_statement .)
    NAND            reduce using rule 261 (whilecontent_statement -> basic_statement .)
    NOR             reduce using rule 261 (whilecontent_statement -> basic_statement .)
    OR              reduce using rule 261 (whilecontent_statement -> basic_statement .)
    XOR             reduce using rule 261 (whilecontent_statement -> basic_statement .)
    XNOR            reduce using rule 261 (whilecontent_statement -> basic_statement .)
    INTNUMBER_DEC   reduce using rule 261 (whilecontent_statement -> basic_statement .)
    SIGNED_INTNUMBER_DEC reduce using rule 261 (whilecontent_statement -> basic_statement .)
    INTNUMBER_BIN   reduce using rule 261 (whilecontent_statement -> basic_statement .)
    SIGNED_INTNUMBER_BIN reduce using rule 261 (whilecontent_statement -> basic_statement .)
    INTNUMBER_OCT   reduce using rule 261 (whilecontent_statement -> basic_statement .)
    SIGNED_INTNUMBER_OCT reduce using rule 261 (whilecontent_statement -> basic_statement .)
    INTNUMBER_HEX   reduce using rule 261 (whilecontent_statement -> basic_statement .)
    SIGNED_INTNUMBER_HEX reduce using rule 261 (whilecontent_statement -> basic_statement .)
    FLOATNUMBER     reduce using rule 261 (whilecontent_statement -> basic_statement .)
    STRING_LITERAL  reduce using rule 261 (whilecontent_statement -> basic_statement .)


state 603

    (244) if_statement -> IF LPAREN cond RPAREN true_statement . ELSE else_statement
    (245) if_statement -> IF LPAREN cond RPAREN true_statement .

  ! shift/reduce conflict for ELSE resolved as shift
    ELSE            shift and go to state 649
    JOIN            reduce using rule 245 (if_statement -> IF LPAREN cond RPAREN true_statement .)
    IF              reduce using rule 245 (if_statement -> IF LPAREN cond RPAREN true_statement .)
    CASE            reduce using rule 245 (if_statement -> IF LPAREN cond RPAREN true_statement .)
    FOR             reduce using rule 245 (if_statement -> IF LPAREN cond RPAREN true_statement .)
    WHILE           reduce using rule 245 (if_statement -> IF LPAREN cond RPAREN true_statement .)
    WAIT            reduce using rule 245 (if_statement -> IF LPAREN cond RPAREN true_statement .)
    FOREVER         reduce using rule 245 (if_statement -> IF LPAREN cond RPAREN true_statement .)
    BEGIN           reduce using rule 245 (if_statement -> IF LPAREN cond RPAREN true_statement .)
    FORK            reduce using rule 245 (if_statement -> IF LPAREN cond RPAREN true_statement .)
    DELAY           reduce using rule 245 (if_statement -> IF LPAREN cond RPAREN true_statement .)
    AT              reduce using rule 245 (if_statement -> IF LPAREN cond RPAREN true_statement .)
    DOLLER          reduce using rule 245 (if_statement -> IF LPAREN cond RPAREN true_statement .)
    DISABLE         reduce using rule 245 (if_statement -> IF LPAREN cond RPAREN true_statement .)
    LBRACE          reduce using rule 245 (if_statement -> IF LPAREN cond RPAREN true_statement .)
    ID              reduce using rule 245 (if_statement -> IF LPAREN cond RPAREN true_statement .)
    SEMICOLON       reduce using rule 245 (if_statement -> IF LPAREN cond RPAREN true_statement .)
    ENDCASE         reduce using rule 245 (if_statement -> IF LPAREN cond RPAREN true_statement .)
    DEFAULT         reduce using rule 245 (if_statement -> IF LPAREN cond RPAREN true_statement .)
    MINUS           reduce using rule 245 (if_statement -> IF LPAREN cond RPAREN true_statement .)
    PLUS            reduce using rule 245 (if_statement -> IF LPAREN cond RPAREN true_statement .)
    LNOT            reduce using rule 245 (if_statement -> IF LPAREN cond RPAREN true_statement .)
    NOT             reduce using rule 245 (if_statement -> IF LPAREN cond RPAREN true_statement .)
    AND             reduce using rule 245 (if_statement -> IF LPAREN cond RPAREN true_statement .)
    NAND            reduce using rule 245 (if_statement -> IF LPAREN cond RPAREN true_statement .)
    NOR             reduce using rule 245 (if_statement -> IF LPAREN cond RPAREN true_statement .)
    OR              reduce using rule 245 (if_statement -> IF LPAREN cond RPAREN true_statement .)
    XOR             reduce using rule 245 (if_statement -> IF LPAREN cond RPAREN true_statement .)
    XNOR            reduce using rule 245 (if_statement -> IF LPAREN cond RPAREN true_statement .)
    LPAREN          reduce using rule 245 (if_statement -> IF LPAREN cond RPAREN true_statement .)
    INTNUMBER_DEC   reduce using rule 245 (if_statement -> IF LPAREN cond RPAREN true_statement .)
    SIGNED_INTNUMBER_DEC reduce using rule 245 (if_statement -> IF LPAREN cond RPAREN true_statement .)
    INTNUMBER_BIN   reduce using rule 245 (if_statement -> IF LPAREN cond RPAREN true_statement .)
    SIGNED_INTNUMBER_BIN reduce using rule 245 (if_statement -> IF LPAREN cond RPAREN true_statement .)
    INTNUMBER_OCT   reduce using rule 245 (if_statement -> IF LPAREN cond RPAREN true_statement .)
    SIGNED_INTNUMBER_OCT reduce using rule 245 (if_statement -> IF LPAREN cond RPAREN true_statement .)
    INTNUMBER_HEX   reduce using rule 245 (if_statement -> IF LPAREN cond RPAREN true_statement .)
    SIGNED_INTNUMBER_HEX reduce using rule 245 (if_statement -> IF LPAREN cond RPAREN true_statement .)
    FLOATNUMBER     reduce using rule 245 (if_statement -> IF LPAREN cond RPAREN true_statement .)
    STRING_LITERAL  reduce using rule 245 (if_statement -> IF LPAREN cond RPAREN true_statement .)
    ENDMODULE       reduce using rule 245 (if_statement -> IF LPAREN cond RPAREN true_statement .)
    GENERATE        reduce using rule 245 (if_statement -> IF LPAREN cond RPAREN true_statement .)
    INTEGER         reduce using rule 245 (if_statement -> IF LPAREN cond RPAREN true_statement .)
    REAL            reduce using rule 245 (if_statement -> IF LPAREN cond RPAREN true_statement .)
    PARAMETER       reduce using rule 245 (if_statement -> IF LPAREN cond RPAREN true_statement .)
    LOCALPARAM      reduce using rule 245 (if_statement -> IF LPAREN cond RPAREN true_statement .)
    GENVAR          reduce using rule 245 (if_statement -> IF LPAREN cond RPAREN true_statement .)
    ASSIGN          reduce using rule 245 (if_statement -> IF LPAREN cond RPAREN true_statement .)
    ALWAYS          reduce using rule 245 (if_statement -> IF LPAREN cond RPAREN true_statement .)
    INITIAL         reduce using rule 245 (if_statement -> IF LPAREN cond RPAREN true_statement .)
    FUNCTION        reduce using rule 245 (if_statement -> IF LPAREN cond RPAREN true_statement .)
    TASK            reduce using rule 245 (if_statement -> IF LPAREN cond RPAREN true_statement .)
    INPUT           reduce using rule 245 (if_statement -> IF LPAREN cond RPAREN true_statement .)
    OUTPUT          reduce using rule 245 (if_statement -> IF LPAREN cond RPAREN true_statement .)
    INOUT           reduce using rule 245 (if_statement -> IF LPAREN cond RPAREN true_statement .)
    TRI             reduce using rule 245 (if_statement -> IF LPAREN cond RPAREN true_statement .)
    REG             reduce using rule 245 (if_statement -> IF LPAREN cond RPAREN true_statement .)
    WIRE            reduce using rule 245 (if_statement -> IF LPAREN cond RPAREN true_statement .)
    SIGNED          reduce using rule 245 (if_statement -> IF LPAREN cond RPAREN true_statement .)
    ENDGENERATE     reduce using rule 245 (if_statement -> IF LPAREN cond RPAREN true_statement .)
    END             reduce using rule 245 (if_statement -> IF LPAREN cond RPAREN true_statement .)
    ENDFUNCTION     reduce using rule 245 (if_statement -> IF LPAREN cond RPAREN true_statement .)
    ENDTASK         reduce using rule 245 (if_statement -> IF LPAREN cond RPAREN true_statement .)

  ! ELSE            [ reduce using rule 245 (if_statement -> IF LPAREN cond RPAREN true_statement .) ]


state 604

    (250) true_statement -> ifcontent_statement .

    ENDMODULE       reduce using rule 250 (true_statement -> ifcontent_statement .)
    GENERATE        reduce using rule 250 (true_statement -> ifcontent_statement .)
    INTEGER         reduce using rule 250 (true_statement -> ifcontent_statement .)
    REAL            reduce using rule 250 (true_statement -> ifcontent_statement .)
    PARAMETER       reduce using rule 250 (true_statement -> ifcontent_statement .)
    LOCALPARAM      reduce using rule 250 (true_statement -> ifcontent_statement .)
    GENVAR          reduce using rule 250 (true_statement -> ifcontent_statement .)
    ASSIGN          reduce using rule 250 (true_statement -> ifcontent_statement .)
    ALWAYS          reduce using rule 250 (true_statement -> ifcontent_statement .)
    INITIAL         reduce using rule 250 (true_statement -> ifcontent_statement .)
    ID              reduce using rule 250 (true_statement -> ifcontent_statement .)
    FUNCTION        reduce using rule 250 (true_statement -> ifcontent_statement .)
    TASK            reduce using rule 250 (true_statement -> ifcontent_statement .)
    LPAREN          reduce using rule 250 (true_statement -> ifcontent_statement .)
    INPUT           reduce using rule 250 (true_statement -> ifcontent_statement .)
    OUTPUT          reduce using rule 250 (true_statement -> ifcontent_statement .)
    INOUT           reduce using rule 250 (true_statement -> ifcontent_statement .)
    TRI             reduce using rule 250 (true_statement -> ifcontent_statement .)
    REG             reduce using rule 250 (true_statement -> ifcontent_statement .)
    WIRE            reduce using rule 250 (true_statement -> ifcontent_statement .)
    SIGNED          reduce using rule 250 (true_statement -> ifcontent_statement .)
    ENDGENERATE     reduce using rule 250 (true_statement -> ifcontent_statement .)
    IF              reduce using rule 250 (true_statement -> ifcontent_statement .)
    FOR             reduce using rule 250 (true_statement -> ifcontent_statement .)
    ELSE            reduce using rule 250 (true_statement -> ifcontent_statement .)
    END             reduce using rule 250 (true_statement -> ifcontent_statement .)
    JOIN            reduce using rule 250 (true_statement -> ifcontent_statement .)
    CASE            reduce using rule 250 (true_statement -> ifcontent_statement .)
    WHILE           reduce using rule 250 (true_statement -> ifcontent_statement .)
    WAIT            reduce using rule 250 (true_statement -> ifcontent_statement .)
    FOREVER         reduce using rule 250 (true_statement -> ifcontent_statement .)
    BEGIN           reduce using rule 250 (true_statement -> ifcontent_statement .)
    FORK            reduce using rule 250 (true_statement -> ifcontent_statement .)
    DELAY           reduce using rule 250 (true_statement -> ifcontent_statement .)
    AT              reduce using rule 250 (true_statement -> ifcontent_statement .)
    DOLLER          reduce using rule 250 (true_statement -> ifcontent_statement .)
    DISABLE         reduce using rule 250 (true_statement -> ifcontent_statement .)
    LBRACE          reduce using rule 250 (true_statement -> ifcontent_statement .)
    SEMICOLON       reduce using rule 250 (true_statement -> ifcontent_statement .)
    ENDFUNCTION     reduce using rule 250 (true_statement -> ifcontent_statement .)
    ENDTASK         reduce using rule 250 (true_statement -> ifcontent_statement .)
    ENDCASE         reduce using rule 250 (true_statement -> ifcontent_statement .)
    DEFAULT         reduce using rule 250 (true_statement -> ifcontent_statement .)
    MINUS           reduce using rule 250 (true_statement -> ifcontent_statement .)
    PLUS            reduce using rule 250 (true_statement -> ifcontent_statement .)
    LNOT            reduce using rule 250 (true_statement -> ifcontent_statement .)
    NOT             reduce using rule 250 (true_statement -> ifcontent_statement .)
    AND             reduce using rule 250 (true_statement -> ifcontent_statement .)
    NAND            reduce using rule 250 (true_statement -> ifcontent_statement .)
    NOR             reduce using rule 250 (true_statement -> ifcontent_statement .)
    OR              reduce using rule 250 (true_statement -> ifcontent_statement .)
    XOR             reduce using rule 250 (true_statement -> ifcontent_statement .)
    XNOR            reduce using rule 250 (true_statement -> ifcontent_statement .)
    INTNUMBER_DEC   reduce using rule 250 (true_statement -> ifcontent_statement .)
    SIGNED_INTNUMBER_DEC reduce using rule 250 (true_statement -> ifcontent_statement .)
    INTNUMBER_BIN   reduce using rule 250 (true_statement -> ifcontent_statement .)
    SIGNED_INTNUMBER_BIN reduce using rule 250 (true_statement -> ifcontent_statement .)
    INTNUMBER_OCT   reduce using rule 250 (true_statement -> ifcontent_statement .)
    SIGNED_INTNUMBER_OCT reduce using rule 250 (true_statement -> ifcontent_statement .)
    INTNUMBER_HEX   reduce using rule 250 (true_statement -> ifcontent_statement .)
    SIGNED_INTNUMBER_HEX reduce using rule 250 (true_statement -> ifcontent_statement .)
    FLOATNUMBER     reduce using rule 250 (true_statement -> ifcontent_statement .)
    STRING_LITERAL  reduce using rule 250 (true_statement -> ifcontent_statement .)


state 605

    (249) ifcontent_statement -> basic_statement .

    ENDMODULE       reduce using rule 249 (ifcontent_statement -> basic_statement .)
    GENERATE        reduce using rule 249 (ifcontent_statement -> basic_statement .)
    INTEGER         reduce using rule 249 (ifcontent_statement -> basic_statement .)
    REAL            reduce using rule 249 (ifcontent_statement -> basic_statement .)
    PARAMETER       reduce using rule 249 (ifcontent_statement -> basic_statement .)
    LOCALPARAM      reduce using rule 249 (ifcontent_statement -> basic_statement .)
    GENVAR          reduce using rule 249 (ifcontent_statement -> basic_statement .)
    ASSIGN          reduce using rule 249 (ifcontent_statement -> basic_statement .)
    ALWAYS          reduce using rule 249 (ifcontent_statement -> basic_statement .)
    INITIAL         reduce using rule 249 (ifcontent_statement -> basic_statement .)
    ID              reduce using rule 249 (ifcontent_statement -> basic_statement .)
    FUNCTION        reduce using rule 249 (ifcontent_statement -> basic_statement .)
    TASK            reduce using rule 249 (ifcontent_statement -> basic_statement .)
    LPAREN          reduce using rule 249 (ifcontent_statement -> basic_statement .)
    INPUT           reduce using rule 249 (ifcontent_statement -> basic_statement .)
    OUTPUT          reduce using rule 249 (ifcontent_statement -> basic_statement .)
    INOUT           reduce using rule 249 (ifcontent_statement -> basic_statement .)
    TRI             reduce using rule 249 (ifcontent_statement -> basic_statement .)
    REG             reduce using rule 249 (ifcontent_statement -> basic_statement .)
    WIRE            reduce using rule 249 (ifcontent_statement -> basic_statement .)
    SIGNED          reduce using rule 249 (ifcontent_statement -> basic_statement .)
    ENDGENERATE     reduce using rule 249 (ifcontent_statement -> basic_statement .)
    IF              reduce using rule 249 (ifcontent_statement -> basic_statement .)
    FOR             reduce using rule 249 (ifcontent_statement -> basic_statement .)
    ELSE            reduce using rule 249 (ifcontent_statement -> basic_statement .)
    END             reduce using rule 249 (ifcontent_statement -> basic_statement .)
    JOIN            reduce using rule 249 (ifcontent_statement -> basic_statement .)
    CASE            reduce using rule 249 (ifcontent_statement -> basic_statement .)
    WHILE           reduce using rule 249 (ifcontent_statement -> basic_statement .)
    WAIT            reduce using rule 249 (ifcontent_statement -> basic_statement .)
    FOREVER         reduce using rule 249 (ifcontent_statement -> basic_statement .)
    BEGIN           reduce using rule 249 (ifcontent_statement -> basic_statement .)
    FORK            reduce using rule 249 (ifcontent_statement -> basic_statement .)
    DELAY           reduce using rule 249 (ifcontent_statement -> basic_statement .)
    AT              reduce using rule 249 (ifcontent_statement -> basic_statement .)
    DOLLER          reduce using rule 249 (ifcontent_statement -> basic_statement .)
    DISABLE         reduce using rule 249 (ifcontent_statement -> basic_statement .)
    LBRACE          reduce using rule 249 (ifcontent_statement -> basic_statement .)
    SEMICOLON       reduce using rule 249 (ifcontent_statement -> basic_statement .)
    ENDFUNCTION     reduce using rule 249 (ifcontent_statement -> basic_statement .)
    ENDTASK         reduce using rule 249 (ifcontent_statement -> basic_statement .)
    ENDCASE         reduce using rule 249 (ifcontent_statement -> basic_statement .)
    DEFAULT         reduce using rule 249 (ifcontent_statement -> basic_statement .)
    MINUS           reduce using rule 249 (ifcontent_statement -> basic_statement .)
    PLUS            reduce using rule 249 (ifcontent_statement -> basic_statement .)
    LNOT            reduce using rule 249 (ifcontent_statement -> basic_statement .)
    NOT             reduce using rule 249 (ifcontent_statement -> basic_statement .)
    AND             reduce using rule 249 (ifcontent_statement -> basic_statement .)
    NAND            reduce using rule 249 (ifcontent_statement -> basic_statement .)
    NOR             reduce using rule 249 (ifcontent_statement -> basic_statement .)
    OR              reduce using rule 249 (ifcontent_statement -> basic_statement .)
    XOR             reduce using rule 249 (ifcontent_statement -> basic_statement .)
    XNOR            reduce using rule 249 (ifcontent_statement -> basic_statement .)
    INTNUMBER_DEC   reduce using rule 249 (ifcontent_statement -> basic_statement .)
    SIGNED_INTNUMBER_DEC reduce using rule 249 (ifcontent_statement -> basic_statement .)
    INTNUMBER_BIN   reduce using rule 249 (ifcontent_statement -> basic_statement .)
    SIGNED_INTNUMBER_BIN reduce using rule 249 (ifcontent_statement -> basic_statement .)
    INTNUMBER_OCT   reduce using rule 249 (ifcontent_statement -> basic_statement .)
    SIGNED_INTNUMBER_OCT reduce using rule 249 (ifcontent_statement -> basic_statement .)
    INTNUMBER_HEX   reduce using rule 249 (ifcontent_statement -> basic_statement .)
    SIGNED_INTNUMBER_HEX reduce using rule 249 (ifcontent_statement -> basic_statement .)
    FLOATNUMBER     reduce using rule 249 (ifcontent_statement -> basic_statement .)
    STRING_LITERAL  reduce using rule 249 (ifcontent_statement -> basic_statement .)


state 606

    (234) namedblock_statements -> namedblock_statements namedblock_statement .

    END             reduce using rule 234 (namedblock_statements -> namedblock_statements namedblock_statement .)
    INTEGER         reduce using rule 234 (namedblock_statements -> namedblock_statements namedblock_statement .)
    REAL            reduce using rule 234 (namedblock_statements -> namedblock_statements namedblock_statement .)
    PARAMETER       reduce using rule 234 (namedblock_statements -> namedblock_statements namedblock_statement .)
    LOCALPARAM      reduce using rule 234 (namedblock_statements -> namedblock_statements namedblock_statement .)
    IF              reduce using rule 234 (namedblock_statements -> namedblock_statements namedblock_statement .)
    CASE            reduce using rule 234 (namedblock_statements -> namedblock_statements namedblock_statement .)
    FOR             reduce using rule 234 (namedblock_statements -> namedblock_statements namedblock_statement .)
    WHILE           reduce using rule 234 (namedblock_statements -> namedblock_statements namedblock_statement .)
    WAIT            reduce using rule 234 (namedblock_statements -> namedblock_statements namedblock_statement .)
    FOREVER         reduce using rule 234 (namedblock_statements -> namedblock_statements namedblock_statement .)
    BEGIN           reduce using rule 234 (namedblock_statements -> namedblock_statements namedblock_statement .)
    FORK            reduce using rule 234 (namedblock_statements -> namedblock_statements namedblock_statement .)
    DELAY           reduce using rule 234 (namedblock_statements -> namedblock_statements namedblock_statement .)
    AT              reduce using rule 234 (namedblock_statements -> namedblock_statements namedblock_statement .)
    DOLLER          reduce using rule 234 (namedblock_statements -> namedblock_statements namedblock_statement .)
    DISABLE         reduce using rule 234 (namedblock_statements -> namedblock_statements namedblock_statement .)
    INPUT           reduce using rule 234 (namedblock_statements -> namedblock_statements namedblock_statement .)
    OUTPUT          reduce using rule 234 (namedblock_statements -> namedblock_statements namedblock_statement .)
    INOUT           reduce using rule 234 (namedblock_statements -> namedblock_statements namedblock_statement .)
    TRI             reduce using rule 234 (namedblock_statements -> namedblock_statements namedblock_statement .)
    REG             reduce using rule 234 (namedblock_statements -> namedblock_statements namedblock_statement .)
    WIRE            reduce using rule 234 (namedblock_statements -> namedblock_statements namedblock_statement .)
    SIGNED          reduce using rule 234 (namedblock_statements -> namedblock_statements namedblock_statement .)
    LBRACE          reduce using rule 234 (namedblock_statements -> namedblock_statements namedblock_statement .)
    ID              reduce using rule 234 (namedblock_statements -> namedblock_statements namedblock_statement .)
    SEMICOLON       reduce using rule 234 (namedblock_statements -> namedblock_statements namedblock_statement .)


state 607

    (232) namedblock -> BEGIN COLON ID namedblock_statements END .

    ENDMODULE       reduce using rule 232 (namedblock -> BEGIN COLON ID namedblock_statements END .)
    GENERATE        reduce using rule 232 (namedblock -> BEGIN COLON ID namedblock_statements END .)
    INTEGER         reduce using rule 232 (namedblock -> BEGIN COLON ID namedblock_statements END .)
    REAL            reduce using rule 232 (namedblock -> BEGIN COLON ID namedblock_statements END .)
    PARAMETER       reduce using rule 232 (namedblock -> BEGIN COLON ID namedblock_statements END .)
    LOCALPARAM      reduce using rule 232 (namedblock -> BEGIN COLON ID namedblock_statements END .)
    GENVAR          reduce using rule 232 (namedblock -> BEGIN COLON ID namedblock_statements END .)
    ASSIGN          reduce using rule 232 (namedblock -> BEGIN COLON ID namedblock_statements END .)
    ALWAYS          reduce using rule 232 (namedblock -> BEGIN COLON ID namedblock_statements END .)
    INITIAL         reduce using rule 232 (namedblock -> BEGIN COLON ID namedblock_statements END .)
    ID              reduce using rule 232 (namedblock -> BEGIN COLON ID namedblock_statements END .)
    FUNCTION        reduce using rule 232 (namedblock -> BEGIN COLON ID namedblock_statements END .)
    TASK            reduce using rule 232 (namedblock -> BEGIN COLON ID namedblock_statements END .)
    LPAREN          reduce using rule 232 (namedblock -> BEGIN COLON ID namedblock_statements END .)
    INPUT           reduce using rule 232 (namedblock -> BEGIN COLON ID namedblock_statements END .)
    OUTPUT          reduce using rule 232 (namedblock -> BEGIN COLON ID namedblock_statements END .)
    INOUT           reduce using rule 232 (namedblock -> BEGIN COLON ID namedblock_statements END .)
    TRI             reduce using rule 232 (namedblock -> BEGIN COLON ID namedblock_statements END .)
    REG             reduce using rule 232 (namedblock -> BEGIN COLON ID namedblock_statements END .)
    WIRE            reduce using rule 232 (namedblock -> BEGIN COLON ID namedblock_statements END .)
    SIGNED          reduce using rule 232 (namedblock -> BEGIN COLON ID namedblock_statements END .)
    ENDGENERATE     reduce using rule 232 (namedblock -> BEGIN COLON ID namedblock_statements END .)
    IF              reduce using rule 232 (namedblock -> BEGIN COLON ID namedblock_statements END .)
    FOR             reduce using rule 232 (namedblock -> BEGIN COLON ID namedblock_statements END .)
    ELSE            reduce using rule 232 (namedblock -> BEGIN COLON ID namedblock_statements END .)
    END             reduce using rule 232 (namedblock -> BEGIN COLON ID namedblock_statements END .)
    JOIN            reduce using rule 232 (namedblock -> BEGIN COLON ID namedblock_statements END .)
    CASE            reduce using rule 232 (namedblock -> BEGIN COLON ID namedblock_statements END .)
    WHILE           reduce using rule 232 (namedblock -> BEGIN COLON ID namedblock_statements END .)
    WAIT            reduce using rule 232 (namedblock -> BEGIN COLON ID namedblock_statements END .)
    FOREVER         reduce using rule 232 (namedblock -> BEGIN COLON ID namedblock_statements END .)
    BEGIN           reduce using rule 232 (namedblock -> BEGIN COLON ID namedblock_statements END .)
    FORK            reduce using rule 232 (namedblock -> BEGIN COLON ID namedblock_statements END .)
    DELAY           reduce using rule 232 (namedblock -> BEGIN COLON ID namedblock_statements END .)
    AT              reduce using rule 232 (namedblock -> BEGIN COLON ID namedblock_statements END .)
    DOLLER          reduce using rule 232 (namedblock -> BEGIN COLON ID namedblock_statements END .)
    DISABLE         reduce using rule 232 (namedblock -> BEGIN COLON ID namedblock_statements END .)
    LBRACE          reduce using rule 232 (namedblock -> BEGIN COLON ID namedblock_statements END .)
    SEMICOLON       reduce using rule 232 (namedblock -> BEGIN COLON ID namedblock_statements END .)
    ENDFUNCTION     reduce using rule 232 (namedblock -> BEGIN COLON ID namedblock_statements END .)
    ENDTASK         reduce using rule 232 (namedblock -> BEGIN COLON ID namedblock_statements END .)
    ENDCASE         reduce using rule 232 (namedblock -> BEGIN COLON ID namedblock_statements END .)
    DEFAULT         reduce using rule 232 (namedblock -> BEGIN COLON ID namedblock_statements END .)
    MINUS           reduce using rule 232 (namedblock -> BEGIN COLON ID namedblock_statements END .)
    PLUS            reduce using rule 232 (namedblock -> BEGIN COLON ID namedblock_statements END .)
    LNOT            reduce using rule 232 (namedblock -> BEGIN COLON ID namedblock_statements END .)
    NOT             reduce using rule 232 (namedblock -> BEGIN COLON ID namedblock_statements END .)
    AND             reduce using rule 232 (namedblock -> BEGIN COLON ID namedblock_statements END .)
    NAND            reduce using rule 232 (namedblock -> BEGIN COLON ID namedblock_statements END .)
    NOR             reduce using rule 232 (namedblock -> BEGIN COLON ID namedblock_statements END .)
    OR              reduce using rule 232 (namedblock -> BEGIN COLON ID namedblock_statements END .)
    XOR             reduce using rule 232 (namedblock -> BEGIN COLON ID namedblock_statements END .)
    XNOR            reduce using rule 232 (namedblock -> BEGIN COLON ID namedblock_statements END .)
    INTNUMBER_DEC   reduce using rule 232 (namedblock -> BEGIN COLON ID namedblock_statements END .)
    SIGNED_INTNUMBER_DEC reduce using rule 232 (namedblock -> BEGIN COLON ID namedblock_statements END .)
    INTNUMBER_BIN   reduce using rule 232 (namedblock -> BEGIN COLON ID namedblock_statements END .)
    SIGNED_INTNUMBER_BIN reduce using rule 232 (namedblock -> BEGIN COLON ID namedblock_statements END .)
    INTNUMBER_OCT   reduce using rule 232 (namedblock -> BEGIN COLON ID namedblock_statements END .)
    SIGNED_INTNUMBER_OCT reduce using rule 232 (namedblock -> BEGIN COLON ID namedblock_statements END .)
    INTNUMBER_HEX   reduce using rule 232 (namedblock -> BEGIN COLON ID namedblock_statements END .)
    SIGNED_INTNUMBER_HEX reduce using rule 232 (namedblock -> BEGIN COLON ID namedblock_statements END .)
    FLOATNUMBER     reduce using rule 232 (namedblock -> BEGIN COLON ID namedblock_statements END .)
    STRING_LITERAL  reduce using rule 232 (namedblock -> BEGIN COLON ID namedblock_statements END .)


state 608

    (201) levelsigs -> levelsigs COMMA levelsig .

    RPAREN          reduce using rule 201 (levelsigs -> levelsigs COMMA levelsig .)
    SENS_OR         reduce using rule 201 (levelsigs -> levelsigs COMMA levelsig .)
    COMMA           reduce using rule 201 (levelsigs -> levelsigs COMMA levelsig .)


state 609

    (200) levelsigs -> levelsigs SENS_OR levelsig .

    RPAREN          reduce using rule 200 (levelsigs -> levelsigs SENS_OR levelsig .)
    SENS_OR         reduce using rule 200 (levelsigs -> levelsigs SENS_OR levelsig .)
    COMMA           reduce using rule 200 (levelsigs -> levelsigs SENS_OR levelsig .)


state 610

    (191) edgesigs -> edgesigs SENS_OR edgesig .

    RPAREN          reduce using rule 191 (edgesigs -> edgesigs SENS_OR edgesig .)
    SENS_OR         reduce using rule 191 (edgesigs -> edgesigs SENS_OR edgesig .)


state 611

    (100) lpartselect -> identifier LBRACKET expression COLON expression . RBRACKET
    (126) expression -> expression . POWER expression
    (127) expression -> expression . TIMES expression
    (128) expression -> expression . DIVIDE expression
    (129) expression -> expression . MOD expression
    (130) expression -> expression . PLUS expression
    (131) expression -> expression . MINUS expression
    (132) expression -> expression . LSHIFT expression
    (133) expression -> expression . RSHIFT expression
    (134) expression -> expression . LSHIFTA expression
    (135) expression -> expression . RSHIFTA expression
    (136) expression -> expression . LT expression
    (137) expression -> expression . GT expression
    (138) expression -> expression . LE expression
    (139) expression -> expression . GE expression
    (140) expression -> expression . EQ expression
    (141) expression -> expression . NE expression
    (142) expression -> expression . EQL expression
    (143) expression -> expression . NEL expression
    (144) expression -> expression . AND expression
    (145) expression -> expression . XOR expression
    (146) expression -> expression . XNOR expression
    (147) expression -> expression . OR expression
    (148) expression -> expression . LAND expression
    (149) expression -> expression . LOR expression
    (150) expression -> expression . COND expression COLON expression

    RBRACKET        shift and go to state 650
    POWER           shift and go to state 246
    TIMES           shift and go to state 349
    DIVIDE          shift and go to state 244
    MOD             shift and go to state 231
    PLUS            shift and go to state 240
    MINUS           shift and go to state 229
    LSHIFT          shift and go to state 243
    RSHIFT          shift and go to state 226
    LSHIFTA         shift and go to state 241
    RSHIFTA         shift and go to state 238
    LT              shift and go to state 235
    GT              shift and go to state 228
    LE              shift and go to state 222
    GE              shift and go to state 239
    EQ              shift and go to state 223
    NE              shift and go to state 225
    EQL             shift and go to state 245
    NEL             shift and go to state 242
    AND             shift and go to state 224
    XOR             shift and go to state 237
    XNOR            shift and go to state 232
    OR              shift and go to state 234
    LAND            shift and go to state 227
    LOR             shift and go to state 230
    COND            shift and go to state 233


state 612

    (101) lpartselect -> identifier LBRACKET expression PLUSCOLON expression . RBRACKET
    (126) expression -> expression . POWER expression
    (127) expression -> expression . TIMES expression
    (128) expression -> expression . DIVIDE expression
    (129) expression -> expression . MOD expression
    (130) expression -> expression . PLUS expression
    (131) expression -> expression . MINUS expression
    (132) expression -> expression . LSHIFT expression
    (133) expression -> expression . RSHIFT expression
    (134) expression -> expression . LSHIFTA expression
    (135) expression -> expression . RSHIFTA expression
    (136) expression -> expression . LT expression
    (137) expression -> expression . GT expression
    (138) expression -> expression . LE expression
    (139) expression -> expression . GE expression
    (140) expression -> expression . EQ expression
    (141) expression -> expression . NE expression
    (142) expression -> expression . EQL expression
    (143) expression -> expression . NEL expression
    (144) expression -> expression . AND expression
    (145) expression -> expression . XOR expression
    (146) expression -> expression . XNOR expression
    (147) expression -> expression . OR expression
    (148) expression -> expression . LAND expression
    (149) expression -> expression . LOR expression
    (150) expression -> expression . COND expression COLON expression

    RBRACKET        shift and go to state 651
    POWER           shift and go to state 246
    TIMES           shift and go to state 349
    DIVIDE          shift and go to state 244
    MOD             shift and go to state 231
    PLUS            shift and go to state 240
    MINUS           shift and go to state 229
    LSHIFT          shift and go to state 243
    RSHIFT          shift and go to state 226
    LSHIFTA         shift and go to state 241
    RSHIFTA         shift and go to state 238
    LT              shift and go to state 235
    GT              shift and go to state 228
    LE              shift and go to state 222
    GE              shift and go to state 239
    EQ              shift and go to state 223
    NE              shift and go to state 225
    EQL             shift and go to state 245
    NEL             shift and go to state 242
    AND             shift and go to state 224
    XOR             shift and go to state 237
    XNOR            shift and go to state 232
    OR              shift and go to state 234
    LAND            shift and go to state 227
    LOR             shift and go to state 230
    COND            shift and go to state 233


state 613

    (102) lpartselect -> identifier LBRACKET expression MINUSCOLON expression . RBRACKET
    (126) expression -> expression . POWER expression
    (127) expression -> expression . TIMES expression
    (128) expression -> expression . DIVIDE expression
    (129) expression -> expression . MOD expression
    (130) expression -> expression . PLUS expression
    (131) expression -> expression . MINUS expression
    (132) expression -> expression . LSHIFT expression
    (133) expression -> expression . RSHIFT expression
    (134) expression -> expression . LSHIFTA expression
    (135) expression -> expression . RSHIFTA expression
    (136) expression -> expression . LT expression
    (137) expression -> expression . GT expression
    (138) expression -> expression . LE expression
    (139) expression -> expression . GE expression
    (140) expression -> expression . EQ expression
    (141) expression -> expression . NE expression
    (142) expression -> expression . EQL expression
    (143) expression -> expression . NEL expression
    (144) expression -> expression . AND expression
    (145) expression -> expression . XOR expression
    (146) expression -> expression . XNOR expression
    (147) expression -> expression . OR expression
    (148) expression -> expression . LAND expression
    (149) expression -> expression . LOR expression
    (150) expression -> expression . COND expression COLON expression

    RBRACKET        shift and go to state 652
    POWER           shift and go to state 246
    TIMES           shift and go to state 349
    DIVIDE          shift and go to state 244
    MOD             shift and go to state 231
    PLUS            shift and go to state 240
    MINUS           shift and go to state 229
    LSHIFT          shift and go to state 243
    RSHIFT          shift and go to state 226
    LSHIFTA         shift and go to state 241
    RSHIFTA         shift and go to state 238
    LT              shift and go to state 235
    GT              shift and go to state 228
    LE              shift and go to state 222
    GE              shift and go to state 239
    EQ              shift and go to state 223
    NE              shift and go to state 225
    EQL             shift and go to state 245
    NEL             shift and go to state 242
    AND             shift and go to state 224
    XOR             shift and go to state 237
    XNOR            shift and go to state 232
    OR              shift and go to state 234
    LAND            shift and go to state 227
    LOR             shift and go to state 230
    COND            shift and go to state 233


state 614

    (97) lpartselect -> pointer LBRACKET expression COLON expression . RBRACKET
    (126) expression -> expression . POWER expression
    (127) expression -> expression . TIMES expression
    (128) expression -> expression . DIVIDE expression
    (129) expression -> expression . MOD expression
    (130) expression -> expression . PLUS expression
    (131) expression -> expression . MINUS expression
    (132) expression -> expression . LSHIFT expression
    (133) expression -> expression . RSHIFT expression
    (134) expression -> expression . LSHIFTA expression
    (135) expression -> expression . RSHIFTA expression
    (136) expression -> expression . LT expression
    (137) expression -> expression . GT expression
    (138) expression -> expression . LE expression
    (139) expression -> expression . GE expression
    (140) expression -> expression . EQ expression
    (141) expression -> expression . NE expression
    (142) expression -> expression . EQL expression
    (143) expression -> expression . NEL expression
    (144) expression -> expression . AND expression
    (145) expression -> expression . XOR expression
    (146) expression -> expression . XNOR expression
    (147) expression -> expression . OR expression
    (148) expression -> expression . LAND expression
    (149) expression -> expression . LOR expression
    (150) expression -> expression . COND expression COLON expression

    RBRACKET        shift and go to state 653
    POWER           shift and go to state 246
    TIMES           shift and go to state 349
    DIVIDE          shift and go to state 244
    MOD             shift and go to state 231
    PLUS            shift and go to state 240
    MINUS           shift and go to state 229
    LSHIFT          shift and go to state 243
    RSHIFT          shift and go to state 226
    LSHIFTA         shift and go to state 241
    RSHIFTA         shift and go to state 238
    LT              shift and go to state 235
    GT              shift and go to state 228
    LE              shift and go to state 222
    GE              shift and go to state 239
    EQ              shift and go to state 223
    NE              shift and go to state 225
    EQL             shift and go to state 245
    NEL             shift and go to state 242
    AND             shift and go to state 224
    XOR             shift and go to state 237
    XNOR            shift and go to state 232
    OR              shift and go to state 234
    LAND            shift and go to state 227
    LOR             shift and go to state 230
    COND            shift and go to state 233


state 615

    (98) lpartselect -> pointer LBRACKET expression PLUSCOLON expression . RBRACKET
    (126) expression -> expression . POWER expression
    (127) expression -> expression . TIMES expression
    (128) expression -> expression . DIVIDE expression
    (129) expression -> expression . MOD expression
    (130) expression -> expression . PLUS expression
    (131) expression -> expression . MINUS expression
    (132) expression -> expression . LSHIFT expression
    (133) expression -> expression . RSHIFT expression
    (134) expression -> expression . LSHIFTA expression
    (135) expression -> expression . RSHIFTA expression
    (136) expression -> expression . LT expression
    (137) expression -> expression . GT expression
    (138) expression -> expression . LE expression
    (139) expression -> expression . GE expression
    (140) expression -> expression . EQ expression
    (141) expression -> expression . NE expression
    (142) expression -> expression . EQL expression
    (143) expression -> expression . NEL expression
    (144) expression -> expression . AND expression
    (145) expression -> expression . XOR expression
    (146) expression -> expression . XNOR expression
    (147) expression -> expression . OR expression
    (148) expression -> expression . LAND expression
    (149) expression -> expression . LOR expression
    (150) expression -> expression . COND expression COLON expression

    RBRACKET        shift and go to state 654
    POWER           shift and go to state 246
    TIMES           shift and go to state 349
    DIVIDE          shift and go to state 244
    MOD             shift and go to state 231
    PLUS            shift and go to state 240
    MINUS           shift and go to state 229
    LSHIFT          shift and go to state 243
    RSHIFT          shift and go to state 226
    LSHIFTA         shift and go to state 241
    RSHIFTA         shift and go to state 238
    LT              shift and go to state 235
    GT              shift and go to state 228
    LE              shift and go to state 222
    GE              shift and go to state 239
    EQ              shift and go to state 223
    NE              shift and go to state 225
    EQL             shift and go to state 245
    NEL             shift and go to state 242
    AND             shift and go to state 224
    XOR             shift and go to state 237
    XNOR            shift and go to state 232
    OR              shift and go to state 234
    LAND            shift and go to state 227
    LOR             shift and go to state 230
    COND            shift and go to state 233


state 616

    (99) lpartselect -> pointer LBRACKET expression MINUSCOLON expression . RBRACKET
    (126) expression -> expression . POWER expression
    (127) expression -> expression . TIMES expression
    (128) expression -> expression . DIVIDE expression
    (129) expression -> expression . MOD expression
    (130) expression -> expression . PLUS expression
    (131) expression -> expression . MINUS expression
    (132) expression -> expression . LSHIFT expression
    (133) expression -> expression . RSHIFT expression
    (134) expression -> expression . LSHIFTA expression
    (135) expression -> expression . RSHIFTA expression
    (136) expression -> expression . LT expression
    (137) expression -> expression . GT expression
    (138) expression -> expression . LE expression
    (139) expression -> expression . GE expression
    (140) expression -> expression . EQ expression
    (141) expression -> expression . NE expression
    (142) expression -> expression . EQL expression
    (143) expression -> expression . NEL expression
    (144) expression -> expression . AND expression
    (145) expression -> expression . XOR expression
    (146) expression -> expression . XNOR expression
    (147) expression -> expression . OR expression
    (148) expression -> expression . LAND expression
    (149) expression -> expression . LOR expression
    (150) expression -> expression . COND expression COLON expression

    RBRACKET        shift and go to state 655
    POWER           shift and go to state 246
    TIMES           shift and go to state 349
    DIVIDE          shift and go to state 244
    MOD             shift and go to state 231
    PLUS            shift and go to state 240
    MINUS           shift and go to state 229
    LSHIFT          shift and go to state 243
    RSHIFT          shift and go to state 226
    LSHIFTA         shift and go to state 241
    RSHIFTA         shift and go to state 238
    LT              shift and go to state 235
    GT              shift and go to state 228
    LE              shift and go to state 222
    GE              shift and go to state 239
    EQ              shift and go to state 223
    NE              shift and go to state 225
    EQL             shift and go to state 245
    NEL             shift and go to state 242
    AND             shift and go to state 224
    XOR             shift and go to state 237
    XNOR            shift and go to state 232
    OR              shift and go to state 234
    LAND            shift and go to state 227
    LOR             shift and go to state 230
    COND            shift and go to state 233


state 617

    (96) assignment -> ASSIGN delays lvalue EQUALS delays rvalue . SEMICOLON

    SEMICOLON       shift and go to state 656


state 618

    (277) instance -> ID parameterlist ID LPAREN instance_ports RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 657


state 619

    (289) instance_ports_list -> instance_ports_list COMMA . instance_port_list
    (291) instance_port_list -> . expression
    (116) expression -> . MINUS expression
    (117) expression -> . PLUS expression
    (118) expression -> . LNOT expression
    (119) expression -> . NOT expression
    (120) expression -> . AND expression
    (121) expression -> . NAND expression
    (122) expression -> . NOR expression
    (123) expression -> . OR expression
    (124) expression -> . XOR expression
    (125) expression -> . XNOR expression
    (126) expression -> . expression POWER expression
    (127) expression -> . expression TIMES expression
    (128) expression -> . expression DIVIDE expression
    (129) expression -> . expression MOD expression
    (130) expression -> . expression PLUS expression
    (131) expression -> . expression MINUS expression
    (132) expression -> . expression LSHIFT expression
    (133) expression -> . expression RSHIFT expression
    (134) expression -> . expression LSHIFTA expression
    (135) expression -> . expression RSHIFTA expression
    (136) expression -> . expression LT expression
    (137) expression -> . expression GT expression
    (138) expression -> . expression LE expression
    (139) expression -> . expression GE expression
    (140) expression -> . expression EQ expression
    (141) expression -> . expression NE expression
    (142) expression -> . expression EQL expression
    (143) expression -> . expression NEL expression
    (144) expression -> . expression AND expression
    (145) expression -> . expression XOR expression
    (146) expression -> . expression XNOR expression
    (147) expression -> . expression OR expression
    (148) expression -> . expression LAND expression
    (149) expression -> . expression LOR expression
    (150) expression -> . expression COND expression COLON expression
    (151) expression -> . LPAREN expression RPAREN
    (152) expression -> . concat
    (153) expression -> . repeat
    (154) expression -> . partselect
    (155) expression -> . pointer
    (156) expression -> . functioncall
    (157) expression -> . systemcall
    (158) expression -> . identifier
    (159) expression -> . const_expression
    (160) concat -> . LBRACE concatlist RBRACE
    (163) repeat -> . LBRACE expression concat RBRACE
    (164) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (165) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (166) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (167) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (168) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (169) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (170) pointer -> . identifier LBRACKET expression RBRACKET
    (171) pointer -> . pointer LBRACKET expression RBRACKET
    (339) functioncall -> . identifier LPAREN func_args RPAREN
    (319) systemcall -> . DOLLER ID
    (320) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (357) identifier -> . ID
    (358) identifier -> . scope ID
    (172) const_expression -> . intnumber
    (173) const_expression -> . floatnumber
    (174) const_expression -> . stringliteral
    (359) scope -> . identifier DOT
    (360) scope -> . pointer DOT
    (176) intnumber -> . INTNUMBER_DEC
    (177) intnumber -> . SIGNED_INTNUMBER_DEC
    (178) intnumber -> . INTNUMBER_BIN
    (179) intnumber -> . SIGNED_INTNUMBER_BIN
    (180) intnumber -> . INTNUMBER_OCT
    (181) intnumber -> . SIGNED_INTNUMBER_OCT
    (182) intnumber -> . INTNUMBER_HEX
    (183) intnumber -> . SIGNED_INTNUMBER_HEX
    (175) floatnumber -> . FLOATNUMBER
    (184) stringliteral -> . STRING_LITERAL

    MINUS           shift and go to state 97
    PLUS            shift and go to state 89
    LNOT            shift and go to state 95
    NOT             shift and go to state 78
    AND             shift and go to state 91
    NAND            shift and go to state 98
    NOR             shift and go to state 76
    OR              shift and go to state 105
    XOR             shift and go to state 82
    XNOR            shift and go to state 87
    LPAREN          shift and go to state 96
    LBRACE          shift and go to state 77
    DOLLER          shift and go to state 100
    ID              shift and go to state 85
    INTNUMBER_DEC   shift and go to state 79
    SIGNED_INTNUMBER_DEC shift and go to state 101
    INTNUMBER_BIN   shift and go to state 111
    SIGNED_INTNUMBER_BIN shift and go to state 112
    INTNUMBER_OCT   shift and go to state 86
    SIGNED_INTNUMBER_OCT shift and go to state 106
    INTNUMBER_HEX   shift and go to state 93
    SIGNED_INTNUMBER_HEX shift and go to state 83
    FLOATNUMBER     shift and go to state 102
    STRING_LITERAL  shift and go to state 107

    stringliteral                  shift and go to state 99
    intnumber                      shift and go to state 81
    expression                     shift and go to state 552
    repeat                         shift and go to state 108
    partselect                     shift and go to state 103
    identifier                     shift and go to state 104
    scope                          shift and go to state 84
    pointer                        shift and go to state 80
    functioncall                   shift and go to state 94
    instance_port_list             shift and go to state 658
    systemcall                     shift and go to state 109
    const_expression               shift and go to state 110
    concat                         shift and go to state 88
    floatnumber                    shift and go to state 90

state 620

    (294) instance_port_arg -> DOT ID . LPAREN identifier RPAREN
    (295) instance_port_arg -> DOT ID . LPAREN expression RPAREN
    (296) instance_port_arg -> DOT ID . LPAREN RPAREN

    LPAREN          shift and go to state 659


state 621

    (292) instance_ports_arg -> instance_ports_arg COMMA . instance_port_arg
    (294) instance_port_arg -> . DOT ID LPAREN identifier RPAREN
    (295) instance_port_arg -> . DOT ID LPAREN expression RPAREN
    (296) instance_port_arg -> . DOT ID LPAREN RPAREN

    DOT             shift and go to state 551

    instance_port_arg              shift and go to state 660

state 622

    (281) param_args_noname -> param_args_noname COMMA param_arg_noname .

    RPAREN          reduce using rule 281 (param_args_noname -> param_args_noname COMMA param_arg_noname .)
    COMMA           reduce using rule 281 (param_args_noname -> param_args_noname COMMA param_arg_noname .)


state 623

    (286) param_arg -> DOT ID LPAREN . expression RPAREN
    (116) expression -> . MINUS expression
    (117) expression -> . PLUS expression
    (118) expression -> . LNOT expression
    (119) expression -> . NOT expression
    (120) expression -> . AND expression
    (121) expression -> . NAND expression
    (122) expression -> . NOR expression
    (123) expression -> . OR expression
    (124) expression -> . XOR expression
    (125) expression -> . XNOR expression
    (126) expression -> . expression POWER expression
    (127) expression -> . expression TIMES expression
    (128) expression -> . expression DIVIDE expression
    (129) expression -> . expression MOD expression
    (130) expression -> . expression PLUS expression
    (131) expression -> . expression MINUS expression
    (132) expression -> . expression LSHIFT expression
    (133) expression -> . expression RSHIFT expression
    (134) expression -> . expression LSHIFTA expression
    (135) expression -> . expression RSHIFTA expression
    (136) expression -> . expression LT expression
    (137) expression -> . expression GT expression
    (138) expression -> . expression LE expression
    (139) expression -> . expression GE expression
    (140) expression -> . expression EQ expression
    (141) expression -> . expression NE expression
    (142) expression -> . expression EQL expression
    (143) expression -> . expression NEL expression
    (144) expression -> . expression AND expression
    (145) expression -> . expression XOR expression
    (146) expression -> . expression XNOR expression
    (147) expression -> . expression OR expression
    (148) expression -> . expression LAND expression
    (149) expression -> . expression LOR expression
    (150) expression -> . expression COND expression COLON expression
    (151) expression -> . LPAREN expression RPAREN
    (152) expression -> . concat
    (153) expression -> . repeat
    (154) expression -> . partselect
    (155) expression -> . pointer
    (156) expression -> . functioncall
    (157) expression -> . systemcall
    (158) expression -> . identifier
    (159) expression -> . const_expression
    (160) concat -> . LBRACE concatlist RBRACE
    (163) repeat -> . LBRACE expression concat RBRACE
    (164) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (165) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (166) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (167) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (168) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (169) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (170) pointer -> . identifier LBRACKET expression RBRACKET
    (171) pointer -> . pointer LBRACKET expression RBRACKET
    (339) functioncall -> . identifier LPAREN func_args RPAREN
    (319) systemcall -> . DOLLER ID
    (320) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (357) identifier -> . ID
    (358) identifier -> . scope ID
    (172) const_expression -> . intnumber
    (173) const_expression -> . floatnumber
    (174) const_expression -> . stringliteral
    (359) scope -> . identifier DOT
    (360) scope -> . pointer DOT
    (176) intnumber -> . INTNUMBER_DEC
    (177) intnumber -> . SIGNED_INTNUMBER_DEC
    (178) intnumber -> . INTNUMBER_BIN
    (179) intnumber -> . SIGNED_INTNUMBER_BIN
    (180) intnumber -> . INTNUMBER_OCT
    (181) intnumber -> . SIGNED_INTNUMBER_OCT
    (182) intnumber -> . INTNUMBER_HEX
    (183) intnumber -> . SIGNED_INTNUMBER_HEX
    (175) floatnumber -> . FLOATNUMBER
    (184) stringliteral -> . STRING_LITERAL

    MINUS           shift and go to state 97
    PLUS            shift and go to state 89
    LNOT            shift and go to state 95
    NOT             shift and go to state 78
    AND             shift and go to state 91
    NAND            shift and go to state 98
    NOR             shift and go to state 76
    OR              shift and go to state 105
    XOR             shift and go to state 82
    XNOR            shift and go to state 87
    LPAREN          shift and go to state 96
    LBRACE          shift and go to state 77
    DOLLER          shift and go to state 100
    ID              shift and go to state 85
    INTNUMBER_DEC   shift and go to state 79
    SIGNED_INTNUMBER_DEC shift and go to state 101
    INTNUMBER_BIN   shift and go to state 111
    SIGNED_INTNUMBER_BIN shift and go to state 112
    INTNUMBER_OCT   shift and go to state 86
    SIGNED_INTNUMBER_OCT shift and go to state 106
    INTNUMBER_HEX   shift and go to state 93
    SIGNED_INTNUMBER_HEX shift and go to state 83
    FLOATNUMBER     shift and go to state 102
    STRING_LITERAL  shift and go to state 107

    stringliteral                  shift and go to state 99
    intnumber                      shift and go to state 81
    expression                     shift and go to state 661
    repeat                         shift and go to state 108
    partselect                     shift and go to state 103
    identifier                     shift and go to state 104
    pointer                        shift and go to state 80
    functioncall                   shift and go to state 94
    scope                          shift and go to state 84
    systemcall                     shift and go to state 109
    const_expression               shift and go to state 110
    concat                         shift and go to state 88
    floatnumber                    shift and go to state 90

state 624

    (283) param_args -> param_args COMMA param_arg .

    RPAREN          reduce using rule 283 (param_args -> param_args COMMA param_arg .)
    COMMA           reduce using rule 283 (param_args -> param_args COMMA param_arg .)


state 625

    (316) generate_for -> FOR LPAREN forpre forcond forpost . RPAREN generate_forcontent

    RPAREN          shift and go to state 662


state 626

    (312) gif_true_item -> generate_item .

    ELSE            reduce using rule 312 (gif_true_item -> generate_item .)
    ENDGENERATE     reduce using rule 312 (gif_true_item -> generate_item .)
    IF              reduce using rule 312 (gif_true_item -> generate_item .)
    FOR             reduce using rule 312 (gif_true_item -> generate_item .)
    INTEGER         reduce using rule 312 (gif_true_item -> generate_item .)
    REAL            reduce using rule 312 (gif_true_item -> generate_item .)
    PARAMETER       reduce using rule 312 (gif_true_item -> generate_item .)
    LOCALPARAM      reduce using rule 312 (gif_true_item -> generate_item .)
    GENVAR          reduce using rule 312 (gif_true_item -> generate_item .)
    ASSIGN          reduce using rule 312 (gif_true_item -> generate_item .)
    ALWAYS          reduce using rule 312 (gif_true_item -> generate_item .)
    INITIAL         reduce using rule 312 (gif_true_item -> generate_item .)
    ID              reduce using rule 312 (gif_true_item -> generate_item .)
    FUNCTION        reduce using rule 312 (gif_true_item -> generate_item .)
    TASK            reduce using rule 312 (gif_true_item -> generate_item .)
    LPAREN          reduce using rule 312 (gif_true_item -> generate_item .)
    INPUT           reduce using rule 312 (gif_true_item -> generate_item .)
    OUTPUT          reduce using rule 312 (gif_true_item -> generate_item .)
    INOUT           reduce using rule 312 (gif_true_item -> generate_item .)
    TRI             reduce using rule 312 (gif_true_item -> generate_item .)
    REG             reduce using rule 312 (gif_true_item -> generate_item .)
    WIRE            reduce using rule 312 (gif_true_item -> generate_item .)
    SIGNED          reduce using rule 312 (gif_true_item -> generate_item .)
    END             reduce using rule 312 (gif_true_item -> generate_item .)


state 627

    (310) generate_if -> IF LPAREN cond RPAREN gif_true_item . ELSE gif_false_item
    (311) generate_if -> IF LPAREN cond RPAREN gif_true_item .

  ! shift/reduce conflict for ELSE resolved as shift
    ELSE            shift and go to state 663
    END             reduce using rule 311 (generate_if -> IF LPAREN cond RPAREN gif_true_item .)
    IF              reduce using rule 311 (generate_if -> IF LPAREN cond RPAREN gif_true_item .)
    FOR             reduce using rule 311 (generate_if -> IF LPAREN cond RPAREN gif_true_item .)
    INTEGER         reduce using rule 311 (generate_if -> IF LPAREN cond RPAREN gif_true_item .)
    REAL            reduce using rule 311 (generate_if -> IF LPAREN cond RPAREN gif_true_item .)
    PARAMETER       reduce using rule 311 (generate_if -> IF LPAREN cond RPAREN gif_true_item .)
    LOCALPARAM      reduce using rule 311 (generate_if -> IF LPAREN cond RPAREN gif_true_item .)
    GENVAR          reduce using rule 311 (generate_if -> IF LPAREN cond RPAREN gif_true_item .)
    ASSIGN          reduce using rule 311 (generate_if -> IF LPAREN cond RPAREN gif_true_item .)
    ALWAYS          reduce using rule 311 (generate_if -> IF LPAREN cond RPAREN gif_true_item .)
    INITIAL         reduce using rule 311 (generate_if -> IF LPAREN cond RPAREN gif_true_item .)
    ID              reduce using rule 311 (generate_if -> IF LPAREN cond RPAREN gif_true_item .)
    FUNCTION        reduce using rule 311 (generate_if -> IF LPAREN cond RPAREN gif_true_item .)
    TASK            reduce using rule 311 (generate_if -> IF LPAREN cond RPAREN gif_true_item .)
    LPAREN          reduce using rule 311 (generate_if -> IF LPAREN cond RPAREN gif_true_item .)
    INPUT           reduce using rule 311 (generate_if -> IF LPAREN cond RPAREN gif_true_item .)
    OUTPUT          reduce using rule 311 (generate_if -> IF LPAREN cond RPAREN gif_true_item .)
    INOUT           reduce using rule 311 (generate_if -> IF LPAREN cond RPAREN gif_true_item .)
    TRI             reduce using rule 311 (generate_if -> IF LPAREN cond RPAREN gif_true_item .)
    REG             reduce using rule 311 (generate_if -> IF LPAREN cond RPAREN gif_true_item .)
    WIRE            reduce using rule 311 (generate_if -> IF LPAREN cond RPAREN gif_true_item .)
    SIGNED          reduce using rule 311 (generate_if -> IF LPAREN cond RPAREN gif_true_item .)
    ENDGENERATE     reduce using rule 311 (generate_if -> IF LPAREN cond RPAREN gif_true_item .)

  ! ELSE            [ reduce using rule 311 (generate_if -> IF LPAREN cond RPAREN gif_true_item .) ]


state 628

    (313) gif_true_item -> generate_block .

    ELSE            reduce using rule 313 (gif_true_item -> generate_block .)
    ENDGENERATE     reduce using rule 313 (gif_true_item -> generate_block .)
    IF              reduce using rule 313 (gif_true_item -> generate_block .)
    FOR             reduce using rule 313 (gif_true_item -> generate_block .)
    INTEGER         reduce using rule 313 (gif_true_item -> generate_block .)
    REAL            reduce using rule 313 (gif_true_item -> generate_block .)
    PARAMETER       reduce using rule 313 (gif_true_item -> generate_block .)
    LOCALPARAM      reduce using rule 313 (gif_true_item -> generate_block .)
    GENVAR          reduce using rule 313 (gif_true_item -> generate_block .)
    ASSIGN          reduce using rule 313 (gif_true_item -> generate_block .)
    ALWAYS          reduce using rule 313 (gif_true_item -> generate_block .)
    INITIAL         reduce using rule 313 (gif_true_item -> generate_block .)
    ID              reduce using rule 313 (gif_true_item -> generate_block .)
    FUNCTION        reduce using rule 313 (gif_true_item -> generate_block .)
    TASK            reduce using rule 313 (gif_true_item -> generate_block .)
    LPAREN          reduce using rule 313 (gif_true_item -> generate_block .)
    INPUT           reduce using rule 313 (gif_true_item -> generate_block .)
    OUTPUT          reduce using rule 313 (gif_true_item -> generate_block .)
    INOUT           reduce using rule 313 (gif_true_item -> generate_block .)
    TRI             reduce using rule 313 (gif_true_item -> generate_block .)
    REG             reduce using rule 313 (gif_true_item -> generate_block .)
    WIRE            reduce using rule 313 (gif_true_item -> generate_block .)
    SIGNED          reduce using rule 313 (gif_true_item -> generate_block .)
    END             reduce using rule 313 (gif_true_item -> generate_block .)


state 629

    (308) generate_block -> BEGIN . generate_items END
    (309) generate_block -> BEGIN . COLON ID generate_items END
    (302) generate_items -> . empty
    (303) generate_items -> . generate_items generate_item
    (304) generate_items -> . generate_item
    (365) empty -> .
    (305) generate_item -> . standard_item
    (306) generate_item -> . generate_if
    (307) generate_item -> . generate_for
    (53) standard_item -> . decl
    (54) standard_item -> . integerdecl
    (55) standard_item -> . realdecl
    (56) standard_item -> . declassign
    (57) standard_item -> . parameterdecl
    (58) standard_item -> . localparamdecl
    (59) standard_item -> . genvardecl
    (60) standard_item -> . assignment
    (61) standard_item -> . always
    (62) standard_item -> . initial
    (63) standard_item -> . instance
    (64) standard_item -> . function
    (65) standard_item -> . task
    (66) standard_item -> . pragma
    (310) generate_if -> . IF LPAREN cond RPAREN gif_true_item ELSE gif_false_item
    (311) generate_if -> . IF LPAREN cond RPAREN gif_true_item
    (316) generate_for -> . FOR LPAREN forpre forcond forpost RPAREN generate_forcontent
    (67) decl -> . sigtypes declnamelist SEMICOLON
    (68) decl -> . sigtypes width declnamelist SEMICOLON
    (77) integerdecl -> . INTEGER integernamelist SEMICOLON
    (78) integerdecl -> . INTEGER SIGNED integernamelist SEMICOLON
    (82) realdecl -> . REAL realnamelist SEMICOLON
    (73) declassign -> . sigtypes declassign_element SEMICOLON
    (74) declassign -> . sigtypes width declassign_element SEMICOLON
    (86) parameterdecl -> . PARAMETER param_substitution_list SEMICOLON
    (87) parameterdecl -> . PARAMETER width param_substitution_list SEMICOLON
    (88) parameterdecl -> . PARAMETER INTEGER param_substitution_list SEMICOLON
    (89) localparamdecl -> . LOCALPARAM param_substitution_list SEMICOLON
    (90) localparamdecl -> . LOCALPARAM width param_substitution_list SEMICOLON
    (91) localparamdecl -> . LOCALPARAM INTEGER param_substitution_list SEMICOLON
    (297) genvardecl -> . GENVAR genvarlist SEMICOLON
    (95) assignment -> . ASSIGN lvalue EQUALS rvalue SEMICOLON
    (96) assignment -> . ASSIGN delays lvalue EQUALS delays rvalue SEMICOLON
    (185) always -> . ALWAYS senslist always_statement
    (270) initial -> . INITIAL initial_statement
    (277) instance -> . ID parameterlist ID LPAREN instance_ports RPAREN SEMICOLON
    (325) function -> . FUNCTION width ID SEMICOLON function_statement ENDFUNCTION
    (326) function -> . FUNCTION ID SEMICOLON function_statement ENDFUNCTION
    (343) task -> . TASK ID SEMICOLON task_statement ENDTASK
    (7) pragma -> . LPAREN TIMES ID EQUALS expression TIMES RPAREN
    (8) pragma -> . LPAREN TIMES ID TIMES RPAREN
    (30) sigtypes -> . sigtypes sigtype
    (31) sigtypes -> . sigtype
    (32) sigtype -> . INPUT
    (33) sigtype -> . OUTPUT
    (34) sigtype -> . INOUT
    (35) sigtype -> . TRI
    (36) sigtype -> . REG
    (37) sigtype -> . WIRE
    (38) sigtype -> . SIGNED

  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for INTEGER resolved as shift
  ! shift/reduce conflict for REAL resolved as shift
  ! shift/reduce conflict for PARAMETER resolved as shift
  ! shift/reduce conflict for LOCALPARAM resolved as shift
  ! shift/reduce conflict for GENVAR resolved as shift
  ! shift/reduce conflict for ASSIGN resolved as shift
  ! shift/reduce conflict for ALWAYS resolved as shift
  ! shift/reduce conflict for INITIAL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for FUNCTION resolved as shift
  ! shift/reduce conflict for TASK resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for INPUT resolved as shift
  ! shift/reduce conflict for OUTPUT resolved as shift
  ! shift/reduce conflict for INOUT resolved as shift
  ! shift/reduce conflict for TRI resolved as shift
  ! shift/reduce conflict for REG resolved as shift
  ! shift/reduce conflict for WIRE resolved as shift
  ! shift/reduce conflict for SIGNED resolved as shift
    COLON           shift and go to state 664
    END             reduce using rule 365 (empty -> .)
    IF              shift and go to state 188
    FOR             shift and go to state 186
    INTEGER         shift and go to state 69
    REAL            shift and go to state 49
    PARAMETER       shift and go to state 66
    LOCALPARAM      shift and go to state 52
    GENVAR          shift and go to state 42
    ASSIGN          shift and go to state 48
    ALWAYS          shift and go to state 46
    INITIAL         shift and go to state 45
    ID              shift and go to state 51
    FUNCTION        shift and go to state 44
    TASK            shift and go to state 67
    LPAREN          shift and go to state 6
    INPUT           shift and go to state 37
    OUTPUT          shift and go to state 24
    INOUT           shift and go to state 25
    TRI             shift and go to state 36
    REG             shift and go to state 35
    WIRE            shift and go to state 26
    SIGNED          shift and go to state 29

  ! IF              [ reduce using rule 365 (empty -> .) ]
  ! FOR             [ reduce using rule 365 (empty -> .) ]
  ! INTEGER         [ reduce using rule 365 (empty -> .) ]
  ! REAL            [ reduce using rule 365 (empty -> .) ]
  ! PARAMETER       [ reduce using rule 365 (empty -> .) ]
  ! LOCALPARAM      [ reduce using rule 365 (empty -> .) ]
  ! GENVAR          [ reduce using rule 365 (empty -> .) ]
  ! ASSIGN          [ reduce using rule 365 (empty -> .) ]
  ! ALWAYS          [ reduce using rule 365 (empty -> .) ]
  ! INITIAL         [ reduce using rule 365 (empty -> .) ]
  ! ID              [ reduce using rule 365 (empty -> .) ]
  ! FUNCTION        [ reduce using rule 365 (empty -> .) ]
  ! TASK            [ reduce using rule 365 (empty -> .) ]
  ! LPAREN          [ reduce using rule 365 (empty -> .) ]
  ! INPUT           [ reduce using rule 365 (empty -> .) ]
  ! OUTPUT          [ reduce using rule 365 (empty -> .) ]
  ! INOUT           [ reduce using rule 365 (empty -> .) ]
  ! TRI             [ reduce using rule 365 (empty -> .) ]
  ! REG             [ reduce using rule 365 (empty -> .) ]
  ! WIRE            [ reduce using rule 365 (empty -> .) ]
  ! SIGNED          [ reduce using rule 365 (empty -> .) ]

    generate_item                  shift and go to state 183
    empty                          shift and go to state 184
    generate_if                    shift and go to state 185
    always                         shift and go to state 41
    genvardecl                     shift and go to state 43
    integerdecl                    shift and go to state 47
    sigtype                        shift and go to state 33
    instance                       shift and go to state 50
    localparamdecl                 shift and go to state 53
    standard_item                  shift and go to state 187
    declassign                     shift and go to state 58
    task                           shift and go to state 57
    function                       shift and go to state 59
    realdecl                       shift and go to state 60
    sigtypes                       shift and go to state 61
    decl                           shift and go to state 62
    pragma                         shift and go to state 63
    generate_items                 shift and go to state 665
    parameterdecl                  shift and go to state 64
    generate_for                   shift and go to state 190
    initial                        shift and go to state 65
    assignment                     shift and go to state 68

state 630

    (76) declassign_element -> delays ID EQUALS delays rvalue .

    SEMICOLON       reduce using rule 76 (declassign_element -> delays ID EQUALS delays rvalue .)


state 631

    (47) length -> LBRACKET expression COLON expression . RBRACKET
    (126) expression -> expression . POWER expression
    (127) expression -> expression . TIMES expression
    (128) expression -> expression . DIVIDE expression
    (129) expression -> expression . MOD expression
    (130) expression -> expression . PLUS expression
    (131) expression -> expression . MINUS expression
    (132) expression -> expression . LSHIFT expression
    (133) expression -> expression . RSHIFT expression
    (134) expression -> expression . LSHIFTA expression
    (135) expression -> expression . RSHIFTA expression
    (136) expression -> expression . LT expression
    (137) expression -> expression . GT expression
    (138) expression -> expression . LE expression
    (139) expression -> expression . GE expression
    (140) expression -> expression . EQ expression
    (141) expression -> expression . NE expression
    (142) expression -> expression . EQL expression
    (143) expression -> expression . NEL expression
    (144) expression -> expression . AND expression
    (145) expression -> expression . XOR expression
    (146) expression -> expression . XNOR expression
    (147) expression -> expression . OR expression
    (148) expression -> expression . LAND expression
    (149) expression -> expression . LOR expression
    (150) expression -> expression . COND expression COLON expression

    RBRACKET        shift and go to state 666
    POWER           shift and go to state 246
    TIMES           shift and go to state 349
    DIVIDE          shift and go to state 244
    MOD             shift and go to state 231
    PLUS            shift and go to state 240
    MINUS           shift and go to state 229
    LSHIFT          shift and go to state 243
    RSHIFT          shift and go to state 226
    LSHIFTA         shift and go to state 241
    RSHIFTA         shift and go to state 238
    LT              shift and go to state 235
    GT              shift and go to state 228
    LE              shift and go to state 222
    GE              shift and go to state 239
    EQ              shift and go to state 223
    NE              shift and go to state 225
    EQL             shift and go to state 245
    NEL             shift and go to state 242
    AND             shift and go to state 224
    XOR             shift and go to state 237
    XNOR            shift and go to state 232
    OR              shift and go to state 234
    LAND            shift and go to state 227
    LOR             shift and go to state 230
    COND            shift and go to state 233


state 632

    (167) partselect -> pointer LBRACKET expression COLON expression RBRACKET .

    POWER           reduce using rule 167 (partselect -> pointer LBRACKET expression COLON expression RBRACKET .)
    TIMES           reduce using rule 167 (partselect -> pointer LBRACKET expression COLON expression RBRACKET .)
    DIVIDE          reduce using rule 167 (partselect -> pointer LBRACKET expression COLON expression RBRACKET .)
    MOD             reduce using rule 167 (partselect -> pointer LBRACKET expression COLON expression RBRACKET .)
    PLUS            reduce using rule 167 (partselect -> pointer LBRACKET expression COLON expression RBRACKET .)
    MINUS           reduce using rule 167 (partselect -> pointer LBRACKET expression COLON expression RBRACKET .)
    LSHIFT          reduce using rule 167 (partselect -> pointer LBRACKET expression COLON expression RBRACKET .)
    RSHIFT          reduce using rule 167 (partselect -> pointer LBRACKET expression COLON expression RBRACKET .)
    LSHIFTA         reduce using rule 167 (partselect -> pointer LBRACKET expression COLON expression RBRACKET .)
    RSHIFTA         reduce using rule 167 (partselect -> pointer LBRACKET expression COLON expression RBRACKET .)
    LT              reduce using rule 167 (partselect -> pointer LBRACKET expression COLON expression RBRACKET .)
    GT              reduce using rule 167 (partselect -> pointer LBRACKET expression COLON expression RBRACKET .)
    LE              reduce using rule 167 (partselect -> pointer LBRACKET expression COLON expression RBRACKET .)
    GE              reduce using rule 167 (partselect -> pointer LBRACKET expression COLON expression RBRACKET .)
    EQ              reduce using rule 167 (partselect -> pointer LBRACKET expression COLON expression RBRACKET .)
    NE              reduce using rule 167 (partselect -> pointer LBRACKET expression COLON expression RBRACKET .)
    EQL             reduce using rule 167 (partselect -> pointer LBRACKET expression COLON expression RBRACKET .)
    NEL             reduce using rule 167 (partselect -> pointer LBRACKET expression COLON expression RBRACKET .)
    AND             reduce using rule 167 (partselect -> pointer LBRACKET expression COLON expression RBRACKET .)
    XOR             reduce using rule 167 (partselect -> pointer LBRACKET expression COLON expression RBRACKET .)
    XNOR            reduce using rule 167 (partselect -> pointer LBRACKET expression COLON expression RBRACKET .)
    OR              reduce using rule 167 (partselect -> pointer LBRACKET expression COLON expression RBRACKET .)
    LAND            reduce using rule 167 (partselect -> pointer LBRACKET expression COLON expression RBRACKET .)
    LOR             reduce using rule 167 (partselect -> pointer LBRACKET expression COLON expression RBRACKET .)
    COND            reduce using rule 167 (partselect -> pointer LBRACKET expression COLON expression RBRACKET .)
    SEMICOLON       reduce using rule 167 (partselect -> pointer LBRACKET expression COLON expression RBRACKET .)
    COLON           reduce using rule 167 (partselect -> pointer LBRACKET expression COLON expression RBRACKET .)
    COMMA           reduce using rule 167 (partselect -> pointer LBRACKET expression COLON expression RBRACKET .)
    LBRACE          reduce using rule 167 (partselect -> pointer LBRACKET expression COLON expression RBRACKET .)
    RBRACE          reduce using rule 167 (partselect -> pointer LBRACKET expression COLON expression RBRACKET .)
    RPAREN          reduce using rule 167 (partselect -> pointer LBRACKET expression COLON expression RBRACKET .)
    PLUSCOLON       reduce using rule 167 (partselect -> pointer LBRACKET expression COLON expression RBRACKET .)
    MINUSCOLON      reduce using rule 167 (partselect -> pointer LBRACKET expression COLON expression RBRACKET .)
    RBRACKET        reduce using rule 167 (partselect -> pointer LBRACKET expression COLON expression RBRACKET .)
    SENS_OR         reduce using rule 167 (partselect -> pointer LBRACKET expression COLON expression RBRACKET .)
    IF              reduce using rule 167 (partselect -> pointer LBRACKET expression COLON expression RBRACKET .)
    CASE            reduce using rule 167 (partselect -> pointer LBRACKET expression COLON expression RBRACKET .)
    FOR             reduce using rule 167 (partselect -> pointer LBRACKET expression COLON expression RBRACKET .)
    WHILE           reduce using rule 167 (partselect -> pointer LBRACKET expression COLON expression RBRACKET .)
    WAIT            reduce using rule 167 (partselect -> pointer LBRACKET expression COLON expression RBRACKET .)
    FOREVER         reduce using rule 167 (partselect -> pointer LBRACKET expression COLON expression RBRACKET .)
    BEGIN           reduce using rule 167 (partselect -> pointer LBRACKET expression COLON expression RBRACKET .)
    FORK            reduce using rule 167 (partselect -> pointer LBRACKET expression COLON expression RBRACKET .)
    DELAY           reduce using rule 167 (partselect -> pointer LBRACKET expression COLON expression RBRACKET .)
    AT              reduce using rule 167 (partselect -> pointer LBRACKET expression COLON expression RBRACKET .)
    DOLLER          reduce using rule 167 (partselect -> pointer LBRACKET expression COLON expression RBRACKET .)
    DISABLE         reduce using rule 167 (partselect -> pointer LBRACKET expression COLON expression RBRACKET .)
    ID              reduce using rule 167 (partselect -> pointer LBRACKET expression COLON expression RBRACKET .)


state 633

    (168) partselect -> pointer LBRACKET expression PLUSCOLON expression RBRACKET .

    POWER           reduce using rule 168 (partselect -> pointer LBRACKET expression PLUSCOLON expression RBRACKET .)
    TIMES           reduce using rule 168 (partselect -> pointer LBRACKET expression PLUSCOLON expression RBRACKET .)
    DIVIDE          reduce using rule 168 (partselect -> pointer LBRACKET expression PLUSCOLON expression RBRACKET .)
    MOD             reduce using rule 168 (partselect -> pointer LBRACKET expression PLUSCOLON expression RBRACKET .)
    PLUS            reduce using rule 168 (partselect -> pointer LBRACKET expression PLUSCOLON expression RBRACKET .)
    MINUS           reduce using rule 168 (partselect -> pointer LBRACKET expression PLUSCOLON expression RBRACKET .)
    LSHIFT          reduce using rule 168 (partselect -> pointer LBRACKET expression PLUSCOLON expression RBRACKET .)
    RSHIFT          reduce using rule 168 (partselect -> pointer LBRACKET expression PLUSCOLON expression RBRACKET .)
    LSHIFTA         reduce using rule 168 (partselect -> pointer LBRACKET expression PLUSCOLON expression RBRACKET .)
    RSHIFTA         reduce using rule 168 (partselect -> pointer LBRACKET expression PLUSCOLON expression RBRACKET .)
    LT              reduce using rule 168 (partselect -> pointer LBRACKET expression PLUSCOLON expression RBRACKET .)
    GT              reduce using rule 168 (partselect -> pointer LBRACKET expression PLUSCOLON expression RBRACKET .)
    LE              reduce using rule 168 (partselect -> pointer LBRACKET expression PLUSCOLON expression RBRACKET .)
    GE              reduce using rule 168 (partselect -> pointer LBRACKET expression PLUSCOLON expression RBRACKET .)
    EQ              reduce using rule 168 (partselect -> pointer LBRACKET expression PLUSCOLON expression RBRACKET .)
    NE              reduce using rule 168 (partselect -> pointer LBRACKET expression PLUSCOLON expression RBRACKET .)
    EQL             reduce using rule 168 (partselect -> pointer LBRACKET expression PLUSCOLON expression RBRACKET .)
    NEL             reduce using rule 168 (partselect -> pointer LBRACKET expression PLUSCOLON expression RBRACKET .)
    AND             reduce using rule 168 (partselect -> pointer LBRACKET expression PLUSCOLON expression RBRACKET .)
    XOR             reduce using rule 168 (partselect -> pointer LBRACKET expression PLUSCOLON expression RBRACKET .)
    XNOR            reduce using rule 168 (partselect -> pointer LBRACKET expression PLUSCOLON expression RBRACKET .)
    OR              reduce using rule 168 (partselect -> pointer LBRACKET expression PLUSCOLON expression RBRACKET .)
    LAND            reduce using rule 168 (partselect -> pointer LBRACKET expression PLUSCOLON expression RBRACKET .)
    LOR             reduce using rule 168 (partselect -> pointer LBRACKET expression PLUSCOLON expression RBRACKET .)
    COND            reduce using rule 168 (partselect -> pointer LBRACKET expression PLUSCOLON expression RBRACKET .)
    SEMICOLON       reduce using rule 168 (partselect -> pointer LBRACKET expression PLUSCOLON expression RBRACKET .)
    COLON           reduce using rule 168 (partselect -> pointer LBRACKET expression PLUSCOLON expression RBRACKET .)
    COMMA           reduce using rule 168 (partselect -> pointer LBRACKET expression PLUSCOLON expression RBRACKET .)
    LBRACE          reduce using rule 168 (partselect -> pointer LBRACKET expression PLUSCOLON expression RBRACKET .)
    RBRACE          reduce using rule 168 (partselect -> pointer LBRACKET expression PLUSCOLON expression RBRACKET .)
    RPAREN          reduce using rule 168 (partselect -> pointer LBRACKET expression PLUSCOLON expression RBRACKET .)
    PLUSCOLON       reduce using rule 168 (partselect -> pointer LBRACKET expression PLUSCOLON expression RBRACKET .)
    MINUSCOLON      reduce using rule 168 (partselect -> pointer LBRACKET expression PLUSCOLON expression RBRACKET .)
    RBRACKET        reduce using rule 168 (partselect -> pointer LBRACKET expression PLUSCOLON expression RBRACKET .)
    SENS_OR         reduce using rule 168 (partselect -> pointer LBRACKET expression PLUSCOLON expression RBRACKET .)
    IF              reduce using rule 168 (partselect -> pointer LBRACKET expression PLUSCOLON expression RBRACKET .)
    CASE            reduce using rule 168 (partselect -> pointer LBRACKET expression PLUSCOLON expression RBRACKET .)
    FOR             reduce using rule 168 (partselect -> pointer LBRACKET expression PLUSCOLON expression RBRACKET .)
    WHILE           reduce using rule 168 (partselect -> pointer LBRACKET expression PLUSCOLON expression RBRACKET .)
    WAIT            reduce using rule 168 (partselect -> pointer LBRACKET expression PLUSCOLON expression RBRACKET .)
    FOREVER         reduce using rule 168 (partselect -> pointer LBRACKET expression PLUSCOLON expression RBRACKET .)
    BEGIN           reduce using rule 168 (partselect -> pointer LBRACKET expression PLUSCOLON expression RBRACKET .)
    FORK            reduce using rule 168 (partselect -> pointer LBRACKET expression PLUSCOLON expression RBRACKET .)
    DELAY           reduce using rule 168 (partselect -> pointer LBRACKET expression PLUSCOLON expression RBRACKET .)
    AT              reduce using rule 168 (partselect -> pointer LBRACKET expression PLUSCOLON expression RBRACKET .)
    DOLLER          reduce using rule 168 (partselect -> pointer LBRACKET expression PLUSCOLON expression RBRACKET .)
    DISABLE         reduce using rule 168 (partselect -> pointer LBRACKET expression PLUSCOLON expression RBRACKET .)
    ID              reduce using rule 168 (partselect -> pointer LBRACKET expression PLUSCOLON expression RBRACKET .)


state 634

    (169) partselect -> pointer LBRACKET expression MINUSCOLON expression RBRACKET .

    POWER           reduce using rule 169 (partselect -> pointer LBRACKET expression MINUSCOLON expression RBRACKET .)
    TIMES           reduce using rule 169 (partselect -> pointer LBRACKET expression MINUSCOLON expression RBRACKET .)
    DIVIDE          reduce using rule 169 (partselect -> pointer LBRACKET expression MINUSCOLON expression RBRACKET .)
    MOD             reduce using rule 169 (partselect -> pointer LBRACKET expression MINUSCOLON expression RBRACKET .)
    PLUS            reduce using rule 169 (partselect -> pointer LBRACKET expression MINUSCOLON expression RBRACKET .)
    MINUS           reduce using rule 169 (partselect -> pointer LBRACKET expression MINUSCOLON expression RBRACKET .)
    LSHIFT          reduce using rule 169 (partselect -> pointer LBRACKET expression MINUSCOLON expression RBRACKET .)
    RSHIFT          reduce using rule 169 (partselect -> pointer LBRACKET expression MINUSCOLON expression RBRACKET .)
    LSHIFTA         reduce using rule 169 (partselect -> pointer LBRACKET expression MINUSCOLON expression RBRACKET .)
    RSHIFTA         reduce using rule 169 (partselect -> pointer LBRACKET expression MINUSCOLON expression RBRACKET .)
    LT              reduce using rule 169 (partselect -> pointer LBRACKET expression MINUSCOLON expression RBRACKET .)
    GT              reduce using rule 169 (partselect -> pointer LBRACKET expression MINUSCOLON expression RBRACKET .)
    LE              reduce using rule 169 (partselect -> pointer LBRACKET expression MINUSCOLON expression RBRACKET .)
    GE              reduce using rule 169 (partselect -> pointer LBRACKET expression MINUSCOLON expression RBRACKET .)
    EQ              reduce using rule 169 (partselect -> pointer LBRACKET expression MINUSCOLON expression RBRACKET .)
    NE              reduce using rule 169 (partselect -> pointer LBRACKET expression MINUSCOLON expression RBRACKET .)
    EQL             reduce using rule 169 (partselect -> pointer LBRACKET expression MINUSCOLON expression RBRACKET .)
    NEL             reduce using rule 169 (partselect -> pointer LBRACKET expression MINUSCOLON expression RBRACKET .)
    AND             reduce using rule 169 (partselect -> pointer LBRACKET expression MINUSCOLON expression RBRACKET .)
    XOR             reduce using rule 169 (partselect -> pointer LBRACKET expression MINUSCOLON expression RBRACKET .)
    XNOR            reduce using rule 169 (partselect -> pointer LBRACKET expression MINUSCOLON expression RBRACKET .)
    OR              reduce using rule 169 (partselect -> pointer LBRACKET expression MINUSCOLON expression RBRACKET .)
    LAND            reduce using rule 169 (partselect -> pointer LBRACKET expression MINUSCOLON expression RBRACKET .)
    LOR             reduce using rule 169 (partselect -> pointer LBRACKET expression MINUSCOLON expression RBRACKET .)
    COND            reduce using rule 169 (partselect -> pointer LBRACKET expression MINUSCOLON expression RBRACKET .)
    SEMICOLON       reduce using rule 169 (partselect -> pointer LBRACKET expression MINUSCOLON expression RBRACKET .)
    COLON           reduce using rule 169 (partselect -> pointer LBRACKET expression MINUSCOLON expression RBRACKET .)
    COMMA           reduce using rule 169 (partselect -> pointer LBRACKET expression MINUSCOLON expression RBRACKET .)
    LBRACE          reduce using rule 169 (partselect -> pointer LBRACKET expression MINUSCOLON expression RBRACKET .)
    RBRACE          reduce using rule 169 (partselect -> pointer LBRACKET expression MINUSCOLON expression RBRACKET .)
    RPAREN          reduce using rule 169 (partselect -> pointer LBRACKET expression MINUSCOLON expression RBRACKET .)
    PLUSCOLON       reduce using rule 169 (partselect -> pointer LBRACKET expression MINUSCOLON expression RBRACKET .)
    MINUSCOLON      reduce using rule 169 (partselect -> pointer LBRACKET expression MINUSCOLON expression RBRACKET .)
    RBRACKET        reduce using rule 169 (partselect -> pointer LBRACKET expression MINUSCOLON expression RBRACKET .)
    SENS_OR         reduce using rule 169 (partselect -> pointer LBRACKET expression MINUSCOLON expression RBRACKET .)
    IF              reduce using rule 169 (partselect -> pointer LBRACKET expression MINUSCOLON expression RBRACKET .)
    CASE            reduce using rule 169 (partselect -> pointer LBRACKET expression MINUSCOLON expression RBRACKET .)
    FOR             reduce using rule 169 (partselect -> pointer LBRACKET expression MINUSCOLON expression RBRACKET .)
    WHILE           reduce using rule 169 (partselect -> pointer LBRACKET expression MINUSCOLON expression RBRACKET .)
    WAIT            reduce using rule 169 (partselect -> pointer LBRACKET expression MINUSCOLON expression RBRACKET .)
    FOREVER         reduce using rule 169 (partselect -> pointer LBRACKET expression MINUSCOLON expression RBRACKET .)
    BEGIN           reduce using rule 169 (partselect -> pointer LBRACKET expression MINUSCOLON expression RBRACKET .)
    FORK            reduce using rule 169 (partselect -> pointer LBRACKET expression MINUSCOLON expression RBRACKET .)
    DELAY           reduce using rule 169 (partselect -> pointer LBRACKET expression MINUSCOLON expression RBRACKET .)
    AT              reduce using rule 169 (partselect -> pointer LBRACKET expression MINUSCOLON expression RBRACKET .)
    DOLLER          reduce using rule 169 (partselect -> pointer LBRACKET expression MINUSCOLON expression RBRACKET .)
    DISABLE         reduce using rule 169 (partselect -> pointer LBRACKET expression MINUSCOLON expression RBRACKET .)
    ID              reduce using rule 169 (partselect -> pointer LBRACKET expression MINUSCOLON expression RBRACKET .)


state 635

    (321) sysargs -> sysargs COMMA sysarg .

    RPAREN          reduce using rule 321 (sysargs -> sysargs COMMA sysarg .)
    COMMA           reduce using rule 321 (sysargs -> sysargs COMMA sysarg .)


state 636

    (164) partselect -> identifier LBRACKET expression COLON expression RBRACKET .

    POWER           reduce using rule 164 (partselect -> identifier LBRACKET expression COLON expression RBRACKET .)
    TIMES           reduce using rule 164 (partselect -> identifier LBRACKET expression COLON expression RBRACKET .)
    DIVIDE          reduce using rule 164 (partselect -> identifier LBRACKET expression COLON expression RBRACKET .)
    MOD             reduce using rule 164 (partselect -> identifier LBRACKET expression COLON expression RBRACKET .)
    PLUS            reduce using rule 164 (partselect -> identifier LBRACKET expression COLON expression RBRACKET .)
    MINUS           reduce using rule 164 (partselect -> identifier LBRACKET expression COLON expression RBRACKET .)
    LSHIFT          reduce using rule 164 (partselect -> identifier LBRACKET expression COLON expression RBRACKET .)
    RSHIFT          reduce using rule 164 (partselect -> identifier LBRACKET expression COLON expression RBRACKET .)
    LSHIFTA         reduce using rule 164 (partselect -> identifier LBRACKET expression COLON expression RBRACKET .)
    RSHIFTA         reduce using rule 164 (partselect -> identifier LBRACKET expression COLON expression RBRACKET .)
    LT              reduce using rule 164 (partselect -> identifier LBRACKET expression COLON expression RBRACKET .)
    GT              reduce using rule 164 (partselect -> identifier LBRACKET expression COLON expression RBRACKET .)
    LE              reduce using rule 164 (partselect -> identifier LBRACKET expression COLON expression RBRACKET .)
    GE              reduce using rule 164 (partselect -> identifier LBRACKET expression COLON expression RBRACKET .)
    EQ              reduce using rule 164 (partselect -> identifier LBRACKET expression COLON expression RBRACKET .)
    NE              reduce using rule 164 (partselect -> identifier LBRACKET expression COLON expression RBRACKET .)
    EQL             reduce using rule 164 (partselect -> identifier LBRACKET expression COLON expression RBRACKET .)
    NEL             reduce using rule 164 (partselect -> identifier LBRACKET expression COLON expression RBRACKET .)
    AND             reduce using rule 164 (partselect -> identifier LBRACKET expression COLON expression RBRACKET .)
    XOR             reduce using rule 164 (partselect -> identifier LBRACKET expression COLON expression RBRACKET .)
    XNOR            reduce using rule 164 (partselect -> identifier LBRACKET expression COLON expression RBRACKET .)
    OR              reduce using rule 164 (partselect -> identifier LBRACKET expression COLON expression RBRACKET .)
    LAND            reduce using rule 164 (partselect -> identifier LBRACKET expression COLON expression RBRACKET .)
    LOR             reduce using rule 164 (partselect -> identifier LBRACKET expression COLON expression RBRACKET .)
    COND            reduce using rule 164 (partselect -> identifier LBRACKET expression COLON expression RBRACKET .)
    SEMICOLON       reduce using rule 164 (partselect -> identifier LBRACKET expression COLON expression RBRACKET .)
    COLON           reduce using rule 164 (partselect -> identifier LBRACKET expression COLON expression RBRACKET .)
    COMMA           reduce using rule 164 (partselect -> identifier LBRACKET expression COLON expression RBRACKET .)
    LBRACE          reduce using rule 164 (partselect -> identifier LBRACKET expression COLON expression RBRACKET .)
    RBRACE          reduce using rule 164 (partselect -> identifier LBRACKET expression COLON expression RBRACKET .)
    RPAREN          reduce using rule 164 (partselect -> identifier LBRACKET expression COLON expression RBRACKET .)
    PLUSCOLON       reduce using rule 164 (partselect -> identifier LBRACKET expression COLON expression RBRACKET .)
    MINUSCOLON      reduce using rule 164 (partselect -> identifier LBRACKET expression COLON expression RBRACKET .)
    RBRACKET        reduce using rule 164 (partselect -> identifier LBRACKET expression COLON expression RBRACKET .)
    SENS_OR         reduce using rule 164 (partselect -> identifier LBRACKET expression COLON expression RBRACKET .)
    IF              reduce using rule 164 (partselect -> identifier LBRACKET expression COLON expression RBRACKET .)
    CASE            reduce using rule 164 (partselect -> identifier LBRACKET expression COLON expression RBRACKET .)
    FOR             reduce using rule 164 (partselect -> identifier LBRACKET expression COLON expression RBRACKET .)
    WHILE           reduce using rule 164 (partselect -> identifier LBRACKET expression COLON expression RBRACKET .)
    WAIT            reduce using rule 164 (partselect -> identifier LBRACKET expression COLON expression RBRACKET .)
    FOREVER         reduce using rule 164 (partselect -> identifier LBRACKET expression COLON expression RBRACKET .)
    BEGIN           reduce using rule 164 (partselect -> identifier LBRACKET expression COLON expression RBRACKET .)
    FORK            reduce using rule 164 (partselect -> identifier LBRACKET expression COLON expression RBRACKET .)
    DELAY           reduce using rule 164 (partselect -> identifier LBRACKET expression COLON expression RBRACKET .)
    AT              reduce using rule 164 (partselect -> identifier LBRACKET expression COLON expression RBRACKET .)
    DOLLER          reduce using rule 164 (partselect -> identifier LBRACKET expression COLON expression RBRACKET .)
    DISABLE         reduce using rule 164 (partselect -> identifier LBRACKET expression COLON expression RBRACKET .)
    ID              reduce using rule 164 (partselect -> identifier LBRACKET expression COLON expression RBRACKET .)


state 637

    (165) partselect -> identifier LBRACKET expression PLUSCOLON expression RBRACKET .

    POWER           reduce using rule 165 (partselect -> identifier LBRACKET expression PLUSCOLON expression RBRACKET .)
    TIMES           reduce using rule 165 (partselect -> identifier LBRACKET expression PLUSCOLON expression RBRACKET .)
    DIVIDE          reduce using rule 165 (partselect -> identifier LBRACKET expression PLUSCOLON expression RBRACKET .)
    MOD             reduce using rule 165 (partselect -> identifier LBRACKET expression PLUSCOLON expression RBRACKET .)
    PLUS            reduce using rule 165 (partselect -> identifier LBRACKET expression PLUSCOLON expression RBRACKET .)
    MINUS           reduce using rule 165 (partselect -> identifier LBRACKET expression PLUSCOLON expression RBRACKET .)
    LSHIFT          reduce using rule 165 (partselect -> identifier LBRACKET expression PLUSCOLON expression RBRACKET .)
    RSHIFT          reduce using rule 165 (partselect -> identifier LBRACKET expression PLUSCOLON expression RBRACKET .)
    LSHIFTA         reduce using rule 165 (partselect -> identifier LBRACKET expression PLUSCOLON expression RBRACKET .)
    RSHIFTA         reduce using rule 165 (partselect -> identifier LBRACKET expression PLUSCOLON expression RBRACKET .)
    LT              reduce using rule 165 (partselect -> identifier LBRACKET expression PLUSCOLON expression RBRACKET .)
    GT              reduce using rule 165 (partselect -> identifier LBRACKET expression PLUSCOLON expression RBRACKET .)
    LE              reduce using rule 165 (partselect -> identifier LBRACKET expression PLUSCOLON expression RBRACKET .)
    GE              reduce using rule 165 (partselect -> identifier LBRACKET expression PLUSCOLON expression RBRACKET .)
    EQ              reduce using rule 165 (partselect -> identifier LBRACKET expression PLUSCOLON expression RBRACKET .)
    NE              reduce using rule 165 (partselect -> identifier LBRACKET expression PLUSCOLON expression RBRACKET .)
    EQL             reduce using rule 165 (partselect -> identifier LBRACKET expression PLUSCOLON expression RBRACKET .)
    NEL             reduce using rule 165 (partselect -> identifier LBRACKET expression PLUSCOLON expression RBRACKET .)
    AND             reduce using rule 165 (partselect -> identifier LBRACKET expression PLUSCOLON expression RBRACKET .)
    XOR             reduce using rule 165 (partselect -> identifier LBRACKET expression PLUSCOLON expression RBRACKET .)
    XNOR            reduce using rule 165 (partselect -> identifier LBRACKET expression PLUSCOLON expression RBRACKET .)
    OR              reduce using rule 165 (partselect -> identifier LBRACKET expression PLUSCOLON expression RBRACKET .)
    LAND            reduce using rule 165 (partselect -> identifier LBRACKET expression PLUSCOLON expression RBRACKET .)
    LOR             reduce using rule 165 (partselect -> identifier LBRACKET expression PLUSCOLON expression RBRACKET .)
    COND            reduce using rule 165 (partselect -> identifier LBRACKET expression PLUSCOLON expression RBRACKET .)
    SEMICOLON       reduce using rule 165 (partselect -> identifier LBRACKET expression PLUSCOLON expression RBRACKET .)
    COLON           reduce using rule 165 (partselect -> identifier LBRACKET expression PLUSCOLON expression RBRACKET .)
    COMMA           reduce using rule 165 (partselect -> identifier LBRACKET expression PLUSCOLON expression RBRACKET .)
    LBRACE          reduce using rule 165 (partselect -> identifier LBRACKET expression PLUSCOLON expression RBRACKET .)
    RBRACE          reduce using rule 165 (partselect -> identifier LBRACKET expression PLUSCOLON expression RBRACKET .)
    RPAREN          reduce using rule 165 (partselect -> identifier LBRACKET expression PLUSCOLON expression RBRACKET .)
    PLUSCOLON       reduce using rule 165 (partselect -> identifier LBRACKET expression PLUSCOLON expression RBRACKET .)
    MINUSCOLON      reduce using rule 165 (partselect -> identifier LBRACKET expression PLUSCOLON expression RBRACKET .)
    RBRACKET        reduce using rule 165 (partselect -> identifier LBRACKET expression PLUSCOLON expression RBRACKET .)
    SENS_OR         reduce using rule 165 (partselect -> identifier LBRACKET expression PLUSCOLON expression RBRACKET .)
    IF              reduce using rule 165 (partselect -> identifier LBRACKET expression PLUSCOLON expression RBRACKET .)
    CASE            reduce using rule 165 (partselect -> identifier LBRACKET expression PLUSCOLON expression RBRACKET .)
    FOR             reduce using rule 165 (partselect -> identifier LBRACKET expression PLUSCOLON expression RBRACKET .)
    WHILE           reduce using rule 165 (partselect -> identifier LBRACKET expression PLUSCOLON expression RBRACKET .)
    WAIT            reduce using rule 165 (partselect -> identifier LBRACKET expression PLUSCOLON expression RBRACKET .)
    FOREVER         reduce using rule 165 (partselect -> identifier LBRACKET expression PLUSCOLON expression RBRACKET .)
    BEGIN           reduce using rule 165 (partselect -> identifier LBRACKET expression PLUSCOLON expression RBRACKET .)
    FORK            reduce using rule 165 (partselect -> identifier LBRACKET expression PLUSCOLON expression RBRACKET .)
    DELAY           reduce using rule 165 (partselect -> identifier LBRACKET expression PLUSCOLON expression RBRACKET .)
    AT              reduce using rule 165 (partselect -> identifier LBRACKET expression PLUSCOLON expression RBRACKET .)
    DOLLER          reduce using rule 165 (partselect -> identifier LBRACKET expression PLUSCOLON expression RBRACKET .)
    DISABLE         reduce using rule 165 (partselect -> identifier LBRACKET expression PLUSCOLON expression RBRACKET .)
    ID              reduce using rule 165 (partselect -> identifier LBRACKET expression PLUSCOLON expression RBRACKET .)


state 638

    (166) partselect -> identifier LBRACKET expression MINUSCOLON expression RBRACKET .

    POWER           reduce using rule 166 (partselect -> identifier LBRACKET expression MINUSCOLON expression RBRACKET .)
    TIMES           reduce using rule 166 (partselect -> identifier LBRACKET expression MINUSCOLON expression RBRACKET .)
    DIVIDE          reduce using rule 166 (partselect -> identifier LBRACKET expression MINUSCOLON expression RBRACKET .)
    MOD             reduce using rule 166 (partselect -> identifier LBRACKET expression MINUSCOLON expression RBRACKET .)
    PLUS            reduce using rule 166 (partselect -> identifier LBRACKET expression MINUSCOLON expression RBRACKET .)
    MINUS           reduce using rule 166 (partselect -> identifier LBRACKET expression MINUSCOLON expression RBRACKET .)
    LSHIFT          reduce using rule 166 (partselect -> identifier LBRACKET expression MINUSCOLON expression RBRACKET .)
    RSHIFT          reduce using rule 166 (partselect -> identifier LBRACKET expression MINUSCOLON expression RBRACKET .)
    LSHIFTA         reduce using rule 166 (partselect -> identifier LBRACKET expression MINUSCOLON expression RBRACKET .)
    RSHIFTA         reduce using rule 166 (partselect -> identifier LBRACKET expression MINUSCOLON expression RBRACKET .)
    LT              reduce using rule 166 (partselect -> identifier LBRACKET expression MINUSCOLON expression RBRACKET .)
    GT              reduce using rule 166 (partselect -> identifier LBRACKET expression MINUSCOLON expression RBRACKET .)
    LE              reduce using rule 166 (partselect -> identifier LBRACKET expression MINUSCOLON expression RBRACKET .)
    GE              reduce using rule 166 (partselect -> identifier LBRACKET expression MINUSCOLON expression RBRACKET .)
    EQ              reduce using rule 166 (partselect -> identifier LBRACKET expression MINUSCOLON expression RBRACKET .)
    NE              reduce using rule 166 (partselect -> identifier LBRACKET expression MINUSCOLON expression RBRACKET .)
    EQL             reduce using rule 166 (partselect -> identifier LBRACKET expression MINUSCOLON expression RBRACKET .)
    NEL             reduce using rule 166 (partselect -> identifier LBRACKET expression MINUSCOLON expression RBRACKET .)
    AND             reduce using rule 166 (partselect -> identifier LBRACKET expression MINUSCOLON expression RBRACKET .)
    XOR             reduce using rule 166 (partselect -> identifier LBRACKET expression MINUSCOLON expression RBRACKET .)
    XNOR            reduce using rule 166 (partselect -> identifier LBRACKET expression MINUSCOLON expression RBRACKET .)
    OR              reduce using rule 166 (partselect -> identifier LBRACKET expression MINUSCOLON expression RBRACKET .)
    LAND            reduce using rule 166 (partselect -> identifier LBRACKET expression MINUSCOLON expression RBRACKET .)
    LOR             reduce using rule 166 (partselect -> identifier LBRACKET expression MINUSCOLON expression RBRACKET .)
    COND            reduce using rule 166 (partselect -> identifier LBRACKET expression MINUSCOLON expression RBRACKET .)
    SEMICOLON       reduce using rule 166 (partselect -> identifier LBRACKET expression MINUSCOLON expression RBRACKET .)
    COLON           reduce using rule 166 (partselect -> identifier LBRACKET expression MINUSCOLON expression RBRACKET .)
    COMMA           reduce using rule 166 (partselect -> identifier LBRACKET expression MINUSCOLON expression RBRACKET .)
    LBRACE          reduce using rule 166 (partselect -> identifier LBRACKET expression MINUSCOLON expression RBRACKET .)
    RBRACE          reduce using rule 166 (partselect -> identifier LBRACKET expression MINUSCOLON expression RBRACKET .)
    RPAREN          reduce using rule 166 (partselect -> identifier LBRACKET expression MINUSCOLON expression RBRACKET .)
    PLUSCOLON       reduce using rule 166 (partselect -> identifier LBRACKET expression MINUSCOLON expression RBRACKET .)
    MINUSCOLON      reduce using rule 166 (partselect -> identifier LBRACKET expression MINUSCOLON expression RBRACKET .)
    RBRACKET        reduce using rule 166 (partselect -> identifier LBRACKET expression MINUSCOLON expression RBRACKET .)
    SENS_OR         reduce using rule 166 (partselect -> identifier LBRACKET expression MINUSCOLON expression RBRACKET .)
    IF              reduce using rule 166 (partselect -> identifier LBRACKET expression MINUSCOLON expression RBRACKET .)
    CASE            reduce using rule 166 (partselect -> identifier LBRACKET expression MINUSCOLON expression RBRACKET .)
    FOR             reduce using rule 166 (partselect -> identifier LBRACKET expression MINUSCOLON expression RBRACKET .)
    WHILE           reduce using rule 166 (partselect -> identifier LBRACKET expression MINUSCOLON expression RBRACKET .)
    WAIT            reduce using rule 166 (partselect -> identifier LBRACKET expression MINUSCOLON expression RBRACKET .)
    FOREVER         reduce using rule 166 (partselect -> identifier LBRACKET expression MINUSCOLON expression RBRACKET .)
    BEGIN           reduce using rule 166 (partselect -> identifier LBRACKET expression MINUSCOLON expression RBRACKET .)
    FORK            reduce using rule 166 (partselect -> identifier LBRACKET expression MINUSCOLON expression RBRACKET .)
    DELAY           reduce using rule 166 (partselect -> identifier LBRACKET expression MINUSCOLON expression RBRACKET .)
    AT              reduce using rule 166 (partselect -> identifier LBRACKET expression MINUSCOLON expression RBRACKET .)
    DOLLER          reduce using rule 166 (partselect -> identifier LBRACKET expression MINUSCOLON expression RBRACKET .)
    DISABLE         reduce using rule 166 (partselect -> identifier LBRACKET expression MINUSCOLON expression RBRACKET .)
    ID              reduce using rule 166 (partselect -> identifier LBRACKET expression MINUSCOLON expression RBRACKET .)


state 639

    (266) casecontent_statement -> casecontent_condition COLON . basic_statement
    (205) basic_statement -> . if_statement
    (206) basic_statement -> . case_statement
    (207) basic_statement -> . for_statement
    (208) basic_statement -> . while_statement
    (209) basic_statement -> . event_statement
    (210) basic_statement -> . wait_statement
    (211) basic_statement -> . forever_statement
    (212) basic_statement -> . block
    (213) basic_statement -> . namedblock
    (214) basic_statement -> . parallelblock
    (215) basic_statement -> . blocking_substitution
    (216) basic_statement -> . nonblocking_substitution
    (217) basic_statement -> . single_statement
    (244) if_statement -> . IF LPAREN cond RPAREN true_statement ELSE else_statement
    (245) if_statement -> . IF LPAREN cond RPAREN true_statement
    (246) if_statement -> . delays IF LPAREN cond RPAREN true_statement ELSE else_statement
    (247) if_statement -> . delays IF LPAREN cond RPAREN true_statement
    (262) case_statement -> . CASE LPAREN case_comp RPAREN casecontent_statements ENDCASE
    (252) for_statement -> . FOR LPAREN forpre forcond forpost RPAREN forcontent_statement
    (260) while_statement -> . WHILE LPAREN cond RPAREN whilecontent_statement
    (272) event_statement -> . senslist SEMICOLON
    (273) wait_statement -> . WAIT LPAREN cond RPAREN waitcontent_statement
    (276) forever_statement -> . FOREVER basic_statement
    (227) block -> . BEGIN block_statements END
    (228) block -> . BEGIN END
    (232) namedblock -> . BEGIN COLON ID namedblock_statements END
    (233) namedblock -> . BEGIN COLON ID END
    (242) parallelblock -> . FORK block_statements JOIN
    (243) parallelblock -> . FORK JOIN
    (219) blocking_substitution -> . delays lvalue EQUALS delays rvalue SEMICOLON
    (221) nonblocking_substitution -> . delays lvalue LE delays rvalue SEMICOLON
    (362) single_statement -> . DELAY expression SEMICOLON
    (363) single_statement -> . systemcall SEMICOLON
    (364) single_statement -> . disable SEMICOLON
    (222) delays -> . DELAY LPAREN expression RPAREN
    (223) delays -> . DELAY identifier
    (224) delays -> . DELAY intnumber
    (225) delays -> . DELAY floatnumber
    (226) delays -> . empty
    (186) senslist -> . AT LPAREN edgesigs RPAREN
    (193) senslist -> . empty
    (194) senslist -> . AT levelsig
    (195) senslist -> . AT LPAREN levelsigs RPAREN
    (203) senslist -> . AT TIMES
    (204) senslist -> . AT LPAREN TIMES RPAREN
    (319) systemcall -> . DOLLER ID
    (320) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (361) disable -> . DISABLE ID
    (365) empty -> .

  ! shift/reduce conflict for IF resolved as shift
    IF              shift and go to state 150
    CASE            shift and go to state 136
    FOR             shift and go to state 144
    WHILE           shift and go to state 146
    WAIT            shift and go to state 131
    FOREVER         shift and go to state 143
    BEGIN           shift and go to state 153
    FORK            shift and go to state 138
    DELAY           shift and go to state 147
    AT              shift and go to state 159
    DOLLER          shift and go to state 100
    DISABLE         shift and go to state 155
    LBRACE          reduce using rule 365 (empty -> .)
    ID              reduce using rule 365 (empty -> .)
    SEMICOLON       reduce using rule 365 (empty -> .)

  ! IF              [ reduce using rule 365 (empty -> .) ]

    parallelblock                  shift and go to state 129
    for_statement                  shift and go to state 130
    empty                          shift and go to state 157
    if_statement                   shift and go to state 132
    while_statement                shift and go to state 148
    blocking_substitution          shift and go to state 137
    systemcall                     shift and go to state 158
    basic_statement                shift and go to state 667
    event_statement                shift and go to state 135
    wait_statement                 shift and go to state 151
    forever_statement              shift and go to state 152
    case_statement                 shift and go to state 139
    disable                        shift and go to state 133
    senslist                       shift and go to state 154
    single_statement               shift and go to state 140
    block                          shift and go to state 156
    delays                         shift and go to state 141
    nonblocking_substitution       shift and go to state 142
    namedblock                     shift and go to state 145

state 640

    (267) casecontent_condition -> casecontent_condition COMMA . expression
    (116) expression -> . MINUS expression
    (117) expression -> . PLUS expression
    (118) expression -> . LNOT expression
    (119) expression -> . NOT expression
    (120) expression -> . AND expression
    (121) expression -> . NAND expression
    (122) expression -> . NOR expression
    (123) expression -> . OR expression
    (124) expression -> . XOR expression
    (125) expression -> . XNOR expression
    (126) expression -> . expression POWER expression
    (127) expression -> . expression TIMES expression
    (128) expression -> . expression DIVIDE expression
    (129) expression -> . expression MOD expression
    (130) expression -> . expression PLUS expression
    (131) expression -> . expression MINUS expression
    (132) expression -> . expression LSHIFT expression
    (133) expression -> . expression RSHIFT expression
    (134) expression -> . expression LSHIFTA expression
    (135) expression -> . expression RSHIFTA expression
    (136) expression -> . expression LT expression
    (137) expression -> . expression GT expression
    (138) expression -> . expression LE expression
    (139) expression -> . expression GE expression
    (140) expression -> . expression EQ expression
    (141) expression -> . expression NE expression
    (142) expression -> . expression EQL expression
    (143) expression -> . expression NEL expression
    (144) expression -> . expression AND expression
    (145) expression -> . expression XOR expression
    (146) expression -> . expression XNOR expression
    (147) expression -> . expression OR expression
    (148) expression -> . expression LAND expression
    (149) expression -> . expression LOR expression
    (150) expression -> . expression COND expression COLON expression
    (151) expression -> . LPAREN expression RPAREN
    (152) expression -> . concat
    (153) expression -> . repeat
    (154) expression -> . partselect
    (155) expression -> . pointer
    (156) expression -> . functioncall
    (157) expression -> . systemcall
    (158) expression -> . identifier
    (159) expression -> . const_expression
    (160) concat -> . LBRACE concatlist RBRACE
    (163) repeat -> . LBRACE expression concat RBRACE
    (164) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (165) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (166) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (167) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (168) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (169) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (170) pointer -> . identifier LBRACKET expression RBRACKET
    (171) pointer -> . pointer LBRACKET expression RBRACKET
    (339) functioncall -> . identifier LPAREN func_args RPAREN
    (319) systemcall -> . DOLLER ID
    (320) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (357) identifier -> . ID
    (358) identifier -> . scope ID
    (172) const_expression -> . intnumber
    (173) const_expression -> . floatnumber
    (174) const_expression -> . stringliteral
    (359) scope -> . identifier DOT
    (360) scope -> . pointer DOT
    (176) intnumber -> . INTNUMBER_DEC
    (177) intnumber -> . SIGNED_INTNUMBER_DEC
    (178) intnumber -> . INTNUMBER_BIN
    (179) intnumber -> . SIGNED_INTNUMBER_BIN
    (180) intnumber -> . INTNUMBER_OCT
    (181) intnumber -> . SIGNED_INTNUMBER_OCT
    (182) intnumber -> . INTNUMBER_HEX
    (183) intnumber -> . SIGNED_INTNUMBER_HEX
    (175) floatnumber -> . FLOATNUMBER
    (184) stringliteral -> . STRING_LITERAL

    MINUS           shift and go to state 97
    PLUS            shift and go to state 89
    LNOT            shift and go to state 95
    NOT             shift and go to state 78
    AND             shift and go to state 91
    NAND            shift and go to state 98
    NOR             shift and go to state 76
    OR              shift and go to state 105
    XOR             shift and go to state 82
    XNOR            shift and go to state 87
    LPAREN          shift and go to state 96
    LBRACE          shift and go to state 77
    DOLLER          shift and go to state 100
    ID              shift and go to state 85
    INTNUMBER_DEC   shift and go to state 79
    SIGNED_INTNUMBER_DEC shift and go to state 101
    INTNUMBER_BIN   shift and go to state 111
    SIGNED_INTNUMBER_BIN shift and go to state 112
    INTNUMBER_OCT   shift and go to state 86
    SIGNED_INTNUMBER_OCT shift and go to state 106
    INTNUMBER_HEX   shift and go to state 93
    SIGNED_INTNUMBER_HEX shift and go to state 83
    FLOATNUMBER     shift and go to state 102
    STRING_LITERAL  shift and go to state 107

    stringliteral                  shift and go to state 99
    intnumber                      shift and go to state 81
    expression                     shift and go to state 668
    repeat                         shift and go to state 108
    functioncall                   shift and go to state 94
    identifier                     shift and go to state 104
    partselect                     shift and go to state 103
    pointer                        shift and go to state 80
    scope                          shift and go to state 84
    systemcall                     shift and go to state 109
    const_expression               shift and go to state 110
    concat                         shift and go to state 88
    floatnumber                    shift and go to state 90

state 641

    (262) case_statement -> CASE LPAREN case_comp RPAREN casecontent_statements ENDCASE .

    ENDCASE         reduce using rule 262 (case_statement -> CASE LPAREN case_comp RPAREN casecontent_statements ENDCASE .)
    DEFAULT         reduce using rule 262 (case_statement -> CASE LPAREN case_comp RPAREN casecontent_statements ENDCASE .)
    MINUS           reduce using rule 262 (case_statement -> CASE LPAREN case_comp RPAREN casecontent_statements ENDCASE .)
    PLUS            reduce using rule 262 (case_statement -> CASE LPAREN case_comp RPAREN casecontent_statements ENDCASE .)
    LNOT            reduce using rule 262 (case_statement -> CASE LPAREN case_comp RPAREN casecontent_statements ENDCASE .)
    NOT             reduce using rule 262 (case_statement -> CASE LPAREN case_comp RPAREN casecontent_statements ENDCASE .)
    AND             reduce using rule 262 (case_statement -> CASE LPAREN case_comp RPAREN casecontent_statements ENDCASE .)
    NAND            reduce using rule 262 (case_statement -> CASE LPAREN case_comp RPAREN casecontent_statements ENDCASE .)
    NOR             reduce using rule 262 (case_statement -> CASE LPAREN case_comp RPAREN casecontent_statements ENDCASE .)
    OR              reduce using rule 262 (case_statement -> CASE LPAREN case_comp RPAREN casecontent_statements ENDCASE .)
    XOR             reduce using rule 262 (case_statement -> CASE LPAREN case_comp RPAREN casecontent_statements ENDCASE .)
    XNOR            reduce using rule 262 (case_statement -> CASE LPAREN case_comp RPAREN casecontent_statements ENDCASE .)
    LPAREN          reduce using rule 262 (case_statement -> CASE LPAREN case_comp RPAREN casecontent_statements ENDCASE .)
    LBRACE          reduce using rule 262 (case_statement -> CASE LPAREN case_comp RPAREN casecontent_statements ENDCASE .)
    DOLLER          reduce using rule 262 (case_statement -> CASE LPAREN case_comp RPAREN casecontent_statements ENDCASE .)
    ID              reduce using rule 262 (case_statement -> CASE LPAREN case_comp RPAREN casecontent_statements ENDCASE .)
    INTNUMBER_DEC   reduce using rule 262 (case_statement -> CASE LPAREN case_comp RPAREN casecontent_statements ENDCASE .)
    SIGNED_INTNUMBER_DEC reduce using rule 262 (case_statement -> CASE LPAREN case_comp RPAREN casecontent_statements ENDCASE .)
    INTNUMBER_BIN   reduce using rule 262 (case_statement -> CASE LPAREN case_comp RPAREN casecontent_statements ENDCASE .)
    SIGNED_INTNUMBER_BIN reduce using rule 262 (case_statement -> CASE LPAREN case_comp RPAREN casecontent_statements ENDCASE .)
    INTNUMBER_OCT   reduce using rule 262 (case_statement -> CASE LPAREN case_comp RPAREN casecontent_statements ENDCASE .)
    SIGNED_INTNUMBER_OCT reduce using rule 262 (case_statement -> CASE LPAREN case_comp RPAREN casecontent_statements ENDCASE .)
    INTNUMBER_HEX   reduce using rule 262 (case_statement -> CASE LPAREN case_comp RPAREN casecontent_statements ENDCASE .)
    SIGNED_INTNUMBER_HEX reduce using rule 262 (case_statement -> CASE LPAREN case_comp RPAREN casecontent_statements ENDCASE .)
    FLOATNUMBER     reduce using rule 262 (case_statement -> CASE LPAREN case_comp RPAREN casecontent_statements ENDCASE .)
    STRING_LITERAL  reduce using rule 262 (case_statement -> CASE LPAREN case_comp RPAREN casecontent_statements ENDCASE .)
    ENDMODULE       reduce using rule 262 (case_statement -> CASE LPAREN case_comp RPAREN casecontent_statements ENDCASE .)
    GENERATE        reduce using rule 262 (case_statement -> CASE LPAREN case_comp RPAREN casecontent_statements ENDCASE .)
    INTEGER         reduce using rule 262 (case_statement -> CASE LPAREN case_comp RPAREN casecontent_statements ENDCASE .)
    REAL            reduce using rule 262 (case_statement -> CASE LPAREN case_comp RPAREN casecontent_statements ENDCASE .)
    PARAMETER       reduce using rule 262 (case_statement -> CASE LPAREN case_comp RPAREN casecontent_statements ENDCASE .)
    LOCALPARAM      reduce using rule 262 (case_statement -> CASE LPAREN case_comp RPAREN casecontent_statements ENDCASE .)
    GENVAR          reduce using rule 262 (case_statement -> CASE LPAREN case_comp RPAREN casecontent_statements ENDCASE .)
    ASSIGN          reduce using rule 262 (case_statement -> CASE LPAREN case_comp RPAREN casecontent_statements ENDCASE .)
    ALWAYS          reduce using rule 262 (case_statement -> CASE LPAREN case_comp RPAREN casecontent_statements ENDCASE .)
    INITIAL         reduce using rule 262 (case_statement -> CASE LPAREN case_comp RPAREN casecontent_statements ENDCASE .)
    FUNCTION        reduce using rule 262 (case_statement -> CASE LPAREN case_comp RPAREN casecontent_statements ENDCASE .)
    TASK            reduce using rule 262 (case_statement -> CASE LPAREN case_comp RPAREN casecontent_statements ENDCASE .)
    INPUT           reduce using rule 262 (case_statement -> CASE LPAREN case_comp RPAREN casecontent_statements ENDCASE .)
    OUTPUT          reduce using rule 262 (case_statement -> CASE LPAREN case_comp RPAREN casecontent_statements ENDCASE .)
    INOUT           reduce using rule 262 (case_statement -> CASE LPAREN case_comp RPAREN casecontent_statements ENDCASE .)
    TRI             reduce using rule 262 (case_statement -> CASE LPAREN case_comp RPAREN casecontent_statements ENDCASE .)
    REG             reduce using rule 262 (case_statement -> CASE LPAREN case_comp RPAREN casecontent_statements ENDCASE .)
    WIRE            reduce using rule 262 (case_statement -> CASE LPAREN case_comp RPAREN casecontent_statements ENDCASE .)
    SIGNED          reduce using rule 262 (case_statement -> CASE LPAREN case_comp RPAREN casecontent_statements ENDCASE .)
    ENDGENERATE     reduce using rule 262 (case_statement -> CASE LPAREN case_comp RPAREN casecontent_statements ENDCASE .)
    IF              reduce using rule 262 (case_statement -> CASE LPAREN case_comp RPAREN casecontent_statements ENDCASE .)
    FOR             reduce using rule 262 (case_statement -> CASE LPAREN case_comp RPAREN casecontent_statements ENDCASE .)
    ELSE            reduce using rule 262 (case_statement -> CASE LPAREN case_comp RPAREN casecontent_statements ENDCASE .)
    END             reduce using rule 262 (case_statement -> CASE LPAREN case_comp RPAREN casecontent_statements ENDCASE .)
    JOIN            reduce using rule 262 (case_statement -> CASE LPAREN case_comp RPAREN casecontent_statements ENDCASE .)
    CASE            reduce using rule 262 (case_statement -> CASE LPAREN case_comp RPAREN casecontent_statements ENDCASE .)
    WHILE           reduce using rule 262 (case_statement -> CASE LPAREN case_comp RPAREN casecontent_statements ENDCASE .)
    WAIT            reduce using rule 262 (case_statement -> CASE LPAREN case_comp RPAREN casecontent_statements ENDCASE .)
    FOREVER         reduce using rule 262 (case_statement -> CASE LPAREN case_comp RPAREN casecontent_statements ENDCASE .)
    BEGIN           reduce using rule 262 (case_statement -> CASE LPAREN case_comp RPAREN casecontent_statements ENDCASE .)
    FORK            reduce using rule 262 (case_statement -> CASE LPAREN case_comp RPAREN casecontent_statements ENDCASE .)
    DELAY           reduce using rule 262 (case_statement -> CASE LPAREN case_comp RPAREN casecontent_statements ENDCASE .)
    AT              reduce using rule 262 (case_statement -> CASE LPAREN case_comp RPAREN casecontent_statements ENDCASE .)
    DISABLE         reduce using rule 262 (case_statement -> CASE LPAREN case_comp RPAREN casecontent_statements ENDCASE .)
    SEMICOLON       reduce using rule 262 (case_statement -> CASE LPAREN case_comp RPAREN casecontent_statements ENDCASE .)
    ENDFUNCTION     reduce using rule 262 (case_statement -> CASE LPAREN case_comp RPAREN casecontent_statements ENDCASE .)
    ENDTASK         reduce using rule 262 (case_statement -> CASE LPAREN case_comp RPAREN casecontent_statements ENDCASE .)


state 642

    (264) casecontent_statements -> casecontent_statements casecontent_statement .

    ENDCASE         reduce using rule 264 (casecontent_statements -> casecontent_statements casecontent_statement .)
    DEFAULT         reduce using rule 264 (casecontent_statements -> casecontent_statements casecontent_statement .)
    MINUS           reduce using rule 264 (casecontent_statements -> casecontent_statements casecontent_statement .)
    PLUS            reduce using rule 264 (casecontent_statements -> casecontent_statements casecontent_statement .)
    LNOT            reduce using rule 264 (casecontent_statements -> casecontent_statements casecontent_statement .)
    NOT             reduce using rule 264 (casecontent_statements -> casecontent_statements casecontent_statement .)
    AND             reduce using rule 264 (casecontent_statements -> casecontent_statements casecontent_statement .)
    NAND            reduce using rule 264 (casecontent_statements -> casecontent_statements casecontent_statement .)
    NOR             reduce using rule 264 (casecontent_statements -> casecontent_statements casecontent_statement .)
    OR              reduce using rule 264 (casecontent_statements -> casecontent_statements casecontent_statement .)
    XOR             reduce using rule 264 (casecontent_statements -> casecontent_statements casecontent_statement .)
    XNOR            reduce using rule 264 (casecontent_statements -> casecontent_statements casecontent_statement .)
    LPAREN          reduce using rule 264 (casecontent_statements -> casecontent_statements casecontent_statement .)
    LBRACE          reduce using rule 264 (casecontent_statements -> casecontent_statements casecontent_statement .)
    DOLLER          reduce using rule 264 (casecontent_statements -> casecontent_statements casecontent_statement .)
    ID              reduce using rule 264 (casecontent_statements -> casecontent_statements casecontent_statement .)
    INTNUMBER_DEC   reduce using rule 264 (casecontent_statements -> casecontent_statements casecontent_statement .)
    SIGNED_INTNUMBER_DEC reduce using rule 264 (casecontent_statements -> casecontent_statements casecontent_statement .)
    INTNUMBER_BIN   reduce using rule 264 (casecontent_statements -> casecontent_statements casecontent_statement .)
    SIGNED_INTNUMBER_BIN reduce using rule 264 (casecontent_statements -> casecontent_statements casecontent_statement .)
    INTNUMBER_OCT   reduce using rule 264 (casecontent_statements -> casecontent_statements casecontent_statement .)
    SIGNED_INTNUMBER_OCT reduce using rule 264 (casecontent_statements -> casecontent_statements casecontent_statement .)
    INTNUMBER_HEX   reduce using rule 264 (casecontent_statements -> casecontent_statements casecontent_statement .)
    SIGNED_INTNUMBER_HEX reduce using rule 264 (casecontent_statements -> casecontent_statements casecontent_statement .)
    FLOATNUMBER     reduce using rule 264 (casecontent_statements -> casecontent_statements casecontent_statement .)
    STRING_LITERAL  reduce using rule 264 (casecontent_statements -> casecontent_statements casecontent_statement .)


state 643

    (269) casecontent_statement -> DEFAULT COLON . basic_statement
    (205) basic_statement -> . if_statement
    (206) basic_statement -> . case_statement
    (207) basic_statement -> . for_statement
    (208) basic_statement -> . while_statement
    (209) basic_statement -> . event_statement
    (210) basic_statement -> . wait_statement
    (211) basic_statement -> . forever_statement
    (212) basic_statement -> . block
    (213) basic_statement -> . namedblock
    (214) basic_statement -> . parallelblock
    (215) basic_statement -> . blocking_substitution
    (216) basic_statement -> . nonblocking_substitution
    (217) basic_statement -> . single_statement
    (244) if_statement -> . IF LPAREN cond RPAREN true_statement ELSE else_statement
    (245) if_statement -> . IF LPAREN cond RPAREN true_statement
    (246) if_statement -> . delays IF LPAREN cond RPAREN true_statement ELSE else_statement
    (247) if_statement -> . delays IF LPAREN cond RPAREN true_statement
    (262) case_statement -> . CASE LPAREN case_comp RPAREN casecontent_statements ENDCASE
    (252) for_statement -> . FOR LPAREN forpre forcond forpost RPAREN forcontent_statement
    (260) while_statement -> . WHILE LPAREN cond RPAREN whilecontent_statement
    (272) event_statement -> . senslist SEMICOLON
    (273) wait_statement -> . WAIT LPAREN cond RPAREN waitcontent_statement
    (276) forever_statement -> . FOREVER basic_statement
    (227) block -> . BEGIN block_statements END
    (228) block -> . BEGIN END
    (232) namedblock -> . BEGIN COLON ID namedblock_statements END
    (233) namedblock -> . BEGIN COLON ID END
    (242) parallelblock -> . FORK block_statements JOIN
    (243) parallelblock -> . FORK JOIN
    (219) blocking_substitution -> . delays lvalue EQUALS delays rvalue SEMICOLON
    (221) nonblocking_substitution -> . delays lvalue LE delays rvalue SEMICOLON
    (362) single_statement -> . DELAY expression SEMICOLON
    (363) single_statement -> . systemcall SEMICOLON
    (364) single_statement -> . disable SEMICOLON
    (222) delays -> . DELAY LPAREN expression RPAREN
    (223) delays -> . DELAY identifier
    (224) delays -> . DELAY intnumber
    (225) delays -> . DELAY floatnumber
    (226) delays -> . empty
    (186) senslist -> . AT LPAREN edgesigs RPAREN
    (193) senslist -> . empty
    (194) senslist -> . AT levelsig
    (195) senslist -> . AT LPAREN levelsigs RPAREN
    (203) senslist -> . AT TIMES
    (204) senslist -> . AT LPAREN TIMES RPAREN
    (319) systemcall -> . DOLLER ID
    (320) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (361) disable -> . DISABLE ID
    (365) empty -> .

  ! shift/reduce conflict for IF resolved as shift
    IF              shift and go to state 150
    CASE            shift and go to state 136
    FOR             shift and go to state 144
    WHILE           shift and go to state 146
    WAIT            shift and go to state 131
    FOREVER         shift and go to state 143
    BEGIN           shift and go to state 153
    FORK            shift and go to state 138
    DELAY           shift and go to state 147
    AT              shift and go to state 159
    DOLLER          shift and go to state 100
    DISABLE         shift and go to state 155
    LBRACE          reduce using rule 365 (empty -> .)
    ID              reduce using rule 365 (empty -> .)
    SEMICOLON       reduce using rule 365 (empty -> .)

  ! IF              [ reduce using rule 365 (empty -> .) ]

    parallelblock                  shift and go to state 129
    for_statement                  shift and go to state 130
    empty                          shift and go to state 157
    if_statement                   shift and go to state 132
    while_statement                shift and go to state 148
    blocking_substitution          shift and go to state 137
    systemcall                     shift and go to state 158
    basic_statement                shift and go to state 669
    event_statement                shift and go to state 135
    wait_statement                 shift and go to state 151
    forever_statement              shift and go to state 152
    case_statement                 shift and go to state 139
    disable                        shift and go to state 133
    senslist                       shift and go to state 154
    single_statement               shift and go to state 140
    block                          shift and go to state 156
    delays                         shift and go to state 141
    nonblocking_substitution       shift and go to state 142
    namedblock                     shift and go to state 145

state 644

    (246) if_statement -> delays IF LPAREN cond RPAREN true_statement . ELSE else_statement
    (247) if_statement -> delays IF LPAREN cond RPAREN true_statement .

  ! shift/reduce conflict for ELSE resolved as shift
    ELSE            shift and go to state 670
    JOIN            reduce using rule 247 (if_statement -> delays IF LPAREN cond RPAREN true_statement .)
    IF              reduce using rule 247 (if_statement -> delays IF LPAREN cond RPAREN true_statement .)
    CASE            reduce using rule 247 (if_statement -> delays IF LPAREN cond RPAREN true_statement .)
    FOR             reduce using rule 247 (if_statement -> delays IF LPAREN cond RPAREN true_statement .)
    WHILE           reduce using rule 247 (if_statement -> delays IF LPAREN cond RPAREN true_statement .)
    WAIT            reduce using rule 247 (if_statement -> delays IF LPAREN cond RPAREN true_statement .)
    FOREVER         reduce using rule 247 (if_statement -> delays IF LPAREN cond RPAREN true_statement .)
    BEGIN           reduce using rule 247 (if_statement -> delays IF LPAREN cond RPAREN true_statement .)
    FORK            reduce using rule 247 (if_statement -> delays IF LPAREN cond RPAREN true_statement .)
    DELAY           reduce using rule 247 (if_statement -> delays IF LPAREN cond RPAREN true_statement .)
    AT              reduce using rule 247 (if_statement -> delays IF LPAREN cond RPAREN true_statement .)
    DOLLER          reduce using rule 247 (if_statement -> delays IF LPAREN cond RPAREN true_statement .)
    DISABLE         reduce using rule 247 (if_statement -> delays IF LPAREN cond RPAREN true_statement .)
    LBRACE          reduce using rule 247 (if_statement -> delays IF LPAREN cond RPAREN true_statement .)
    ID              reduce using rule 247 (if_statement -> delays IF LPAREN cond RPAREN true_statement .)
    SEMICOLON       reduce using rule 247 (if_statement -> delays IF LPAREN cond RPAREN true_statement .)
    ENDCASE         reduce using rule 247 (if_statement -> delays IF LPAREN cond RPAREN true_statement .)
    DEFAULT         reduce using rule 247 (if_statement -> delays IF LPAREN cond RPAREN true_statement .)
    MINUS           reduce using rule 247 (if_statement -> delays IF LPAREN cond RPAREN true_statement .)
    PLUS            reduce using rule 247 (if_statement -> delays IF LPAREN cond RPAREN true_statement .)
    LNOT            reduce using rule 247 (if_statement -> delays IF LPAREN cond RPAREN true_statement .)
    NOT             reduce using rule 247 (if_statement -> delays IF LPAREN cond RPAREN true_statement .)
    AND             reduce using rule 247 (if_statement -> delays IF LPAREN cond RPAREN true_statement .)
    NAND            reduce using rule 247 (if_statement -> delays IF LPAREN cond RPAREN true_statement .)
    NOR             reduce using rule 247 (if_statement -> delays IF LPAREN cond RPAREN true_statement .)
    OR              reduce using rule 247 (if_statement -> delays IF LPAREN cond RPAREN true_statement .)
    XOR             reduce using rule 247 (if_statement -> delays IF LPAREN cond RPAREN true_statement .)
    XNOR            reduce using rule 247 (if_statement -> delays IF LPAREN cond RPAREN true_statement .)
    LPAREN          reduce using rule 247 (if_statement -> delays IF LPAREN cond RPAREN true_statement .)
    INTNUMBER_DEC   reduce using rule 247 (if_statement -> delays IF LPAREN cond RPAREN true_statement .)
    SIGNED_INTNUMBER_DEC reduce using rule 247 (if_statement -> delays IF LPAREN cond RPAREN true_statement .)
    INTNUMBER_BIN   reduce using rule 247 (if_statement -> delays IF LPAREN cond RPAREN true_statement .)
    SIGNED_INTNUMBER_BIN reduce using rule 247 (if_statement -> delays IF LPAREN cond RPAREN true_statement .)
    INTNUMBER_OCT   reduce using rule 247 (if_statement -> delays IF LPAREN cond RPAREN true_statement .)
    SIGNED_INTNUMBER_OCT reduce using rule 247 (if_statement -> delays IF LPAREN cond RPAREN true_statement .)
    INTNUMBER_HEX   reduce using rule 247 (if_statement -> delays IF LPAREN cond RPAREN true_statement .)
    SIGNED_INTNUMBER_HEX reduce using rule 247 (if_statement -> delays IF LPAREN cond RPAREN true_statement .)
    FLOATNUMBER     reduce using rule 247 (if_statement -> delays IF LPAREN cond RPAREN true_statement .)
    STRING_LITERAL  reduce using rule 247 (if_statement -> delays IF LPAREN cond RPAREN true_statement .)
    ENDMODULE       reduce using rule 247 (if_statement -> delays IF LPAREN cond RPAREN true_statement .)
    GENERATE        reduce using rule 247 (if_statement -> delays IF LPAREN cond RPAREN true_statement .)
    INTEGER         reduce using rule 247 (if_statement -> delays IF LPAREN cond RPAREN true_statement .)
    REAL            reduce using rule 247 (if_statement -> delays IF LPAREN cond RPAREN true_statement .)
    PARAMETER       reduce using rule 247 (if_statement -> delays IF LPAREN cond RPAREN true_statement .)
    LOCALPARAM      reduce using rule 247 (if_statement -> delays IF LPAREN cond RPAREN true_statement .)
    GENVAR          reduce using rule 247 (if_statement -> delays IF LPAREN cond RPAREN true_statement .)
    ASSIGN          reduce using rule 247 (if_statement -> delays IF LPAREN cond RPAREN true_statement .)
    ALWAYS          reduce using rule 247 (if_statement -> delays IF LPAREN cond RPAREN true_statement .)
    INITIAL         reduce using rule 247 (if_statement -> delays IF LPAREN cond RPAREN true_statement .)
    FUNCTION        reduce using rule 247 (if_statement -> delays IF LPAREN cond RPAREN true_statement .)
    TASK            reduce using rule 247 (if_statement -> delays IF LPAREN cond RPAREN true_statement .)
    INPUT           reduce using rule 247 (if_statement -> delays IF LPAREN cond RPAREN true_statement .)
    OUTPUT          reduce using rule 247 (if_statement -> delays IF LPAREN cond RPAREN true_statement .)
    INOUT           reduce using rule 247 (if_statement -> delays IF LPAREN cond RPAREN true_statement .)
    TRI             reduce using rule 247 (if_statement -> delays IF LPAREN cond RPAREN true_statement .)
    REG             reduce using rule 247 (if_statement -> delays IF LPAREN cond RPAREN true_statement .)
    WIRE            reduce using rule 247 (if_statement -> delays IF LPAREN cond RPAREN true_statement .)
    SIGNED          reduce using rule 247 (if_statement -> delays IF LPAREN cond RPAREN true_statement .)
    ENDGENERATE     reduce using rule 247 (if_statement -> delays IF LPAREN cond RPAREN true_statement .)
    END             reduce using rule 247 (if_statement -> delays IF LPAREN cond RPAREN true_statement .)
    ENDFUNCTION     reduce using rule 247 (if_statement -> delays IF LPAREN cond RPAREN true_statement .)
    ENDTASK         reduce using rule 247 (if_statement -> delays IF LPAREN cond RPAREN true_statement .)

  ! ELSE            [ reduce using rule 247 (if_statement -> delays IF LPAREN cond RPAREN true_statement .) ]


state 645

    (221) nonblocking_substitution -> delays lvalue LE delays rvalue SEMICOLON .

    END             reduce using rule 221 (nonblocking_substitution -> delays lvalue LE delays rvalue SEMICOLON .)
    INTEGER         reduce using rule 221 (nonblocking_substitution -> delays lvalue LE delays rvalue SEMICOLON .)
    REAL            reduce using rule 221 (nonblocking_substitution -> delays lvalue LE delays rvalue SEMICOLON .)
    PARAMETER       reduce using rule 221 (nonblocking_substitution -> delays lvalue LE delays rvalue SEMICOLON .)
    LOCALPARAM      reduce using rule 221 (nonblocking_substitution -> delays lvalue LE delays rvalue SEMICOLON .)
    IF              reduce using rule 221 (nonblocking_substitution -> delays lvalue LE delays rvalue SEMICOLON .)
    CASE            reduce using rule 221 (nonblocking_substitution -> delays lvalue LE delays rvalue SEMICOLON .)
    FOR             reduce using rule 221 (nonblocking_substitution -> delays lvalue LE delays rvalue SEMICOLON .)
    WHILE           reduce using rule 221 (nonblocking_substitution -> delays lvalue LE delays rvalue SEMICOLON .)
    WAIT            reduce using rule 221 (nonblocking_substitution -> delays lvalue LE delays rvalue SEMICOLON .)
    FOREVER         reduce using rule 221 (nonblocking_substitution -> delays lvalue LE delays rvalue SEMICOLON .)
    BEGIN           reduce using rule 221 (nonblocking_substitution -> delays lvalue LE delays rvalue SEMICOLON .)
    FORK            reduce using rule 221 (nonblocking_substitution -> delays lvalue LE delays rvalue SEMICOLON .)
    DELAY           reduce using rule 221 (nonblocking_substitution -> delays lvalue LE delays rvalue SEMICOLON .)
    AT              reduce using rule 221 (nonblocking_substitution -> delays lvalue LE delays rvalue SEMICOLON .)
    DOLLER          reduce using rule 221 (nonblocking_substitution -> delays lvalue LE delays rvalue SEMICOLON .)
    DISABLE         reduce using rule 221 (nonblocking_substitution -> delays lvalue LE delays rvalue SEMICOLON .)
    INPUT           reduce using rule 221 (nonblocking_substitution -> delays lvalue LE delays rvalue SEMICOLON .)
    OUTPUT          reduce using rule 221 (nonblocking_substitution -> delays lvalue LE delays rvalue SEMICOLON .)
    INOUT           reduce using rule 221 (nonblocking_substitution -> delays lvalue LE delays rvalue SEMICOLON .)
    TRI             reduce using rule 221 (nonblocking_substitution -> delays lvalue LE delays rvalue SEMICOLON .)
    REG             reduce using rule 221 (nonblocking_substitution -> delays lvalue LE delays rvalue SEMICOLON .)
    WIRE            reduce using rule 221 (nonblocking_substitution -> delays lvalue LE delays rvalue SEMICOLON .)
    SIGNED          reduce using rule 221 (nonblocking_substitution -> delays lvalue LE delays rvalue SEMICOLON .)
    LBRACE          reduce using rule 221 (nonblocking_substitution -> delays lvalue LE delays rvalue SEMICOLON .)
    ID              reduce using rule 221 (nonblocking_substitution -> delays lvalue LE delays rvalue SEMICOLON .)
    SEMICOLON       reduce using rule 221 (nonblocking_substitution -> delays lvalue LE delays rvalue SEMICOLON .)
    ENDMODULE       reduce using rule 221 (nonblocking_substitution -> delays lvalue LE delays rvalue SEMICOLON .)
    GENERATE        reduce using rule 221 (nonblocking_substitution -> delays lvalue LE delays rvalue SEMICOLON .)
    GENVAR          reduce using rule 221 (nonblocking_substitution -> delays lvalue LE delays rvalue SEMICOLON .)
    ASSIGN          reduce using rule 221 (nonblocking_substitution -> delays lvalue LE delays rvalue SEMICOLON .)
    ALWAYS          reduce using rule 221 (nonblocking_substitution -> delays lvalue LE delays rvalue SEMICOLON .)
    INITIAL         reduce using rule 221 (nonblocking_substitution -> delays lvalue LE delays rvalue SEMICOLON .)
    FUNCTION        reduce using rule 221 (nonblocking_substitution -> delays lvalue LE delays rvalue SEMICOLON .)
    TASK            reduce using rule 221 (nonblocking_substitution -> delays lvalue LE delays rvalue SEMICOLON .)
    LPAREN          reduce using rule 221 (nonblocking_substitution -> delays lvalue LE delays rvalue SEMICOLON .)
    ENDGENERATE     reduce using rule 221 (nonblocking_substitution -> delays lvalue LE delays rvalue SEMICOLON .)
    ELSE            reduce using rule 221 (nonblocking_substitution -> delays lvalue LE delays rvalue SEMICOLON .)
    JOIN            reduce using rule 221 (nonblocking_substitution -> delays lvalue LE delays rvalue SEMICOLON .)
    ENDFUNCTION     reduce using rule 221 (nonblocking_substitution -> delays lvalue LE delays rvalue SEMICOLON .)
    ENDTASK         reduce using rule 221 (nonblocking_substitution -> delays lvalue LE delays rvalue SEMICOLON .)
    ENDCASE         reduce using rule 221 (nonblocking_substitution -> delays lvalue LE delays rvalue SEMICOLON .)
    DEFAULT         reduce using rule 221 (nonblocking_substitution -> delays lvalue LE delays rvalue SEMICOLON .)
    MINUS           reduce using rule 221 (nonblocking_substitution -> delays lvalue LE delays rvalue SEMICOLON .)
    PLUS            reduce using rule 221 (nonblocking_substitution -> delays lvalue LE delays rvalue SEMICOLON .)
    LNOT            reduce using rule 221 (nonblocking_substitution -> delays lvalue LE delays rvalue SEMICOLON .)
    NOT             reduce using rule 221 (nonblocking_substitution -> delays lvalue LE delays rvalue SEMICOLON .)
    AND             reduce using rule 221 (nonblocking_substitution -> delays lvalue LE delays rvalue SEMICOLON .)
    NAND            reduce using rule 221 (nonblocking_substitution -> delays lvalue LE delays rvalue SEMICOLON .)
    NOR             reduce using rule 221 (nonblocking_substitution -> delays lvalue LE delays rvalue SEMICOLON .)
    OR              reduce using rule 221 (nonblocking_substitution -> delays lvalue LE delays rvalue SEMICOLON .)
    XOR             reduce using rule 221 (nonblocking_substitution -> delays lvalue LE delays rvalue SEMICOLON .)
    XNOR            reduce using rule 221 (nonblocking_substitution -> delays lvalue LE delays rvalue SEMICOLON .)
    INTNUMBER_DEC   reduce using rule 221 (nonblocking_substitution -> delays lvalue LE delays rvalue SEMICOLON .)
    SIGNED_INTNUMBER_DEC reduce using rule 221 (nonblocking_substitution -> delays lvalue LE delays rvalue SEMICOLON .)
    INTNUMBER_BIN   reduce using rule 221 (nonblocking_substitution -> delays lvalue LE delays rvalue SEMICOLON .)
    SIGNED_INTNUMBER_BIN reduce using rule 221 (nonblocking_substitution -> delays lvalue LE delays rvalue SEMICOLON .)
    INTNUMBER_OCT   reduce using rule 221 (nonblocking_substitution -> delays lvalue LE delays rvalue SEMICOLON .)
    SIGNED_INTNUMBER_OCT reduce using rule 221 (nonblocking_substitution -> delays lvalue LE delays rvalue SEMICOLON .)
    INTNUMBER_HEX   reduce using rule 221 (nonblocking_substitution -> delays lvalue LE delays rvalue SEMICOLON .)
    SIGNED_INTNUMBER_HEX reduce using rule 221 (nonblocking_substitution -> delays lvalue LE delays rvalue SEMICOLON .)
    FLOATNUMBER     reduce using rule 221 (nonblocking_substitution -> delays lvalue LE delays rvalue SEMICOLON .)
    STRING_LITERAL  reduce using rule 221 (nonblocking_substitution -> delays lvalue LE delays rvalue SEMICOLON .)


state 646

    (219) blocking_substitution -> delays lvalue EQUALS delays rvalue SEMICOLON .

    ENDMODULE       reduce using rule 219 (blocking_substitution -> delays lvalue EQUALS delays rvalue SEMICOLON .)
    GENERATE        reduce using rule 219 (blocking_substitution -> delays lvalue EQUALS delays rvalue SEMICOLON .)
    INTEGER         reduce using rule 219 (blocking_substitution -> delays lvalue EQUALS delays rvalue SEMICOLON .)
    REAL            reduce using rule 219 (blocking_substitution -> delays lvalue EQUALS delays rvalue SEMICOLON .)
    PARAMETER       reduce using rule 219 (blocking_substitution -> delays lvalue EQUALS delays rvalue SEMICOLON .)
    LOCALPARAM      reduce using rule 219 (blocking_substitution -> delays lvalue EQUALS delays rvalue SEMICOLON .)
    GENVAR          reduce using rule 219 (blocking_substitution -> delays lvalue EQUALS delays rvalue SEMICOLON .)
    ASSIGN          reduce using rule 219 (blocking_substitution -> delays lvalue EQUALS delays rvalue SEMICOLON .)
    ALWAYS          reduce using rule 219 (blocking_substitution -> delays lvalue EQUALS delays rvalue SEMICOLON .)
    INITIAL         reduce using rule 219 (blocking_substitution -> delays lvalue EQUALS delays rvalue SEMICOLON .)
    ID              reduce using rule 219 (blocking_substitution -> delays lvalue EQUALS delays rvalue SEMICOLON .)
    FUNCTION        reduce using rule 219 (blocking_substitution -> delays lvalue EQUALS delays rvalue SEMICOLON .)
    TASK            reduce using rule 219 (blocking_substitution -> delays lvalue EQUALS delays rvalue SEMICOLON .)
    LPAREN          reduce using rule 219 (blocking_substitution -> delays lvalue EQUALS delays rvalue SEMICOLON .)
    INPUT           reduce using rule 219 (blocking_substitution -> delays lvalue EQUALS delays rvalue SEMICOLON .)
    OUTPUT          reduce using rule 219 (blocking_substitution -> delays lvalue EQUALS delays rvalue SEMICOLON .)
    INOUT           reduce using rule 219 (blocking_substitution -> delays lvalue EQUALS delays rvalue SEMICOLON .)
    TRI             reduce using rule 219 (blocking_substitution -> delays lvalue EQUALS delays rvalue SEMICOLON .)
    REG             reduce using rule 219 (blocking_substitution -> delays lvalue EQUALS delays rvalue SEMICOLON .)
    WIRE            reduce using rule 219 (blocking_substitution -> delays lvalue EQUALS delays rvalue SEMICOLON .)
    SIGNED          reduce using rule 219 (blocking_substitution -> delays lvalue EQUALS delays rvalue SEMICOLON .)
    ENDGENERATE     reduce using rule 219 (blocking_substitution -> delays lvalue EQUALS delays rvalue SEMICOLON .)
    IF              reduce using rule 219 (blocking_substitution -> delays lvalue EQUALS delays rvalue SEMICOLON .)
    FOR             reduce using rule 219 (blocking_substitution -> delays lvalue EQUALS delays rvalue SEMICOLON .)
    ELSE            reduce using rule 219 (blocking_substitution -> delays lvalue EQUALS delays rvalue SEMICOLON .)
    END             reduce using rule 219 (blocking_substitution -> delays lvalue EQUALS delays rvalue SEMICOLON .)
    JOIN            reduce using rule 219 (blocking_substitution -> delays lvalue EQUALS delays rvalue SEMICOLON .)
    CASE            reduce using rule 219 (blocking_substitution -> delays lvalue EQUALS delays rvalue SEMICOLON .)
    WHILE           reduce using rule 219 (blocking_substitution -> delays lvalue EQUALS delays rvalue SEMICOLON .)
    WAIT            reduce using rule 219 (blocking_substitution -> delays lvalue EQUALS delays rvalue SEMICOLON .)
    FOREVER         reduce using rule 219 (blocking_substitution -> delays lvalue EQUALS delays rvalue SEMICOLON .)
    BEGIN           reduce using rule 219 (blocking_substitution -> delays lvalue EQUALS delays rvalue SEMICOLON .)
    FORK            reduce using rule 219 (blocking_substitution -> delays lvalue EQUALS delays rvalue SEMICOLON .)
    DELAY           reduce using rule 219 (blocking_substitution -> delays lvalue EQUALS delays rvalue SEMICOLON .)
    AT              reduce using rule 219 (blocking_substitution -> delays lvalue EQUALS delays rvalue SEMICOLON .)
    DOLLER          reduce using rule 219 (blocking_substitution -> delays lvalue EQUALS delays rvalue SEMICOLON .)
    DISABLE         reduce using rule 219 (blocking_substitution -> delays lvalue EQUALS delays rvalue SEMICOLON .)
    LBRACE          reduce using rule 219 (blocking_substitution -> delays lvalue EQUALS delays rvalue SEMICOLON .)
    SEMICOLON       reduce using rule 219 (blocking_substitution -> delays lvalue EQUALS delays rvalue SEMICOLON .)
    ENDFUNCTION     reduce using rule 219 (blocking_substitution -> delays lvalue EQUALS delays rvalue SEMICOLON .)
    ENDTASK         reduce using rule 219 (blocking_substitution -> delays lvalue EQUALS delays rvalue SEMICOLON .)
    ENDCASE         reduce using rule 219 (blocking_substitution -> delays lvalue EQUALS delays rvalue SEMICOLON .)
    DEFAULT         reduce using rule 219 (blocking_substitution -> delays lvalue EQUALS delays rvalue SEMICOLON .)
    MINUS           reduce using rule 219 (blocking_substitution -> delays lvalue EQUALS delays rvalue SEMICOLON .)
    PLUS            reduce using rule 219 (blocking_substitution -> delays lvalue EQUALS delays rvalue SEMICOLON .)
    LNOT            reduce using rule 219 (blocking_substitution -> delays lvalue EQUALS delays rvalue SEMICOLON .)
    NOT             reduce using rule 219 (blocking_substitution -> delays lvalue EQUALS delays rvalue SEMICOLON .)
    AND             reduce using rule 219 (blocking_substitution -> delays lvalue EQUALS delays rvalue SEMICOLON .)
    NAND            reduce using rule 219 (blocking_substitution -> delays lvalue EQUALS delays rvalue SEMICOLON .)
    NOR             reduce using rule 219 (blocking_substitution -> delays lvalue EQUALS delays rvalue SEMICOLON .)
    OR              reduce using rule 219 (blocking_substitution -> delays lvalue EQUALS delays rvalue SEMICOLON .)
    XOR             reduce using rule 219 (blocking_substitution -> delays lvalue EQUALS delays rvalue SEMICOLON .)
    XNOR            reduce using rule 219 (blocking_substitution -> delays lvalue EQUALS delays rvalue SEMICOLON .)
    INTNUMBER_DEC   reduce using rule 219 (blocking_substitution -> delays lvalue EQUALS delays rvalue SEMICOLON .)
    SIGNED_INTNUMBER_DEC reduce using rule 219 (blocking_substitution -> delays lvalue EQUALS delays rvalue SEMICOLON .)
    INTNUMBER_BIN   reduce using rule 219 (blocking_substitution -> delays lvalue EQUALS delays rvalue SEMICOLON .)
    SIGNED_INTNUMBER_BIN reduce using rule 219 (blocking_substitution -> delays lvalue EQUALS delays rvalue SEMICOLON .)
    INTNUMBER_OCT   reduce using rule 219 (blocking_substitution -> delays lvalue EQUALS delays rvalue SEMICOLON .)
    SIGNED_INTNUMBER_OCT reduce using rule 219 (blocking_substitution -> delays lvalue EQUALS delays rvalue SEMICOLON .)
    INTNUMBER_HEX   reduce using rule 219 (blocking_substitution -> delays lvalue EQUALS delays rvalue SEMICOLON .)
    SIGNED_INTNUMBER_HEX reduce using rule 219 (blocking_substitution -> delays lvalue EQUALS delays rvalue SEMICOLON .)
    FLOATNUMBER     reduce using rule 219 (blocking_substitution -> delays lvalue EQUALS delays rvalue SEMICOLON .)
    STRING_LITERAL  reduce using rule 219 (blocking_substitution -> delays lvalue EQUALS delays rvalue SEMICOLON .)


state 647

    (252) for_statement -> FOR LPAREN forpre forcond forpost RPAREN . forcontent_statement
    (259) forcontent_statement -> . basic_statement
    (205) basic_statement -> . if_statement
    (206) basic_statement -> . case_statement
    (207) basic_statement -> . for_statement
    (208) basic_statement -> . while_statement
    (209) basic_statement -> . event_statement
    (210) basic_statement -> . wait_statement
    (211) basic_statement -> . forever_statement
    (212) basic_statement -> . block
    (213) basic_statement -> . namedblock
    (214) basic_statement -> . parallelblock
    (215) basic_statement -> . blocking_substitution
    (216) basic_statement -> . nonblocking_substitution
    (217) basic_statement -> . single_statement
    (244) if_statement -> . IF LPAREN cond RPAREN true_statement ELSE else_statement
    (245) if_statement -> . IF LPAREN cond RPAREN true_statement
    (246) if_statement -> . delays IF LPAREN cond RPAREN true_statement ELSE else_statement
    (247) if_statement -> . delays IF LPAREN cond RPAREN true_statement
    (262) case_statement -> . CASE LPAREN case_comp RPAREN casecontent_statements ENDCASE
    (252) for_statement -> . FOR LPAREN forpre forcond forpost RPAREN forcontent_statement
    (260) while_statement -> . WHILE LPAREN cond RPAREN whilecontent_statement
    (272) event_statement -> . senslist SEMICOLON
    (273) wait_statement -> . WAIT LPAREN cond RPAREN waitcontent_statement
    (276) forever_statement -> . FOREVER basic_statement
    (227) block -> . BEGIN block_statements END
    (228) block -> . BEGIN END
    (232) namedblock -> . BEGIN COLON ID namedblock_statements END
    (233) namedblock -> . BEGIN COLON ID END
    (242) parallelblock -> . FORK block_statements JOIN
    (243) parallelblock -> . FORK JOIN
    (219) blocking_substitution -> . delays lvalue EQUALS delays rvalue SEMICOLON
    (221) nonblocking_substitution -> . delays lvalue LE delays rvalue SEMICOLON
    (362) single_statement -> . DELAY expression SEMICOLON
    (363) single_statement -> . systemcall SEMICOLON
    (364) single_statement -> . disable SEMICOLON
    (222) delays -> . DELAY LPAREN expression RPAREN
    (223) delays -> . DELAY identifier
    (224) delays -> . DELAY intnumber
    (225) delays -> . DELAY floatnumber
    (226) delays -> . empty
    (186) senslist -> . AT LPAREN edgesigs RPAREN
    (193) senslist -> . empty
    (194) senslist -> . AT levelsig
    (195) senslist -> . AT LPAREN levelsigs RPAREN
    (203) senslist -> . AT TIMES
    (204) senslist -> . AT LPAREN TIMES RPAREN
    (319) systemcall -> . DOLLER ID
    (320) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (361) disable -> . DISABLE ID
    (365) empty -> .

  ! shift/reduce conflict for IF resolved as shift
    IF              shift and go to state 150
    CASE            shift and go to state 136
    FOR             shift and go to state 144
    WHILE           shift and go to state 146
    WAIT            shift and go to state 131
    FOREVER         shift and go to state 143
    BEGIN           shift and go to state 153
    FORK            shift and go to state 138
    DELAY           shift and go to state 147
    AT              shift and go to state 159
    DOLLER          shift and go to state 100
    DISABLE         shift and go to state 155
    LBRACE          reduce using rule 365 (empty -> .)
    ID              reduce using rule 365 (empty -> .)
    SEMICOLON       reduce using rule 365 (empty -> .)

  ! IF              [ reduce using rule 365 (empty -> .) ]

    parallelblock                  shift and go to state 129
    for_statement                  shift and go to state 130
    empty                          shift and go to state 157
    if_statement                   shift and go to state 132
    while_statement                shift and go to state 148
    blocking_substitution          shift and go to state 137
    systemcall                     shift and go to state 158
    basic_statement                shift and go to state 671
    event_statement                shift and go to state 135
    wait_statement                 shift and go to state 151
    forever_statement              shift and go to state 152
    forcontent_statement           shift and go to state 672
    case_statement                 shift and go to state 139
    disable                        shift and go to state 133
    senslist                       shift and go to state 154
    single_statement               shift and go to state 140
    block                          shift and go to state 156
    delays                         shift and go to state 141
    nonblocking_substitution       shift and go to state 142
    namedblock                     shift and go to state 145

state 648

    (220) blocking_substitution_base -> delays lvalue . EQUALS delays rvalue

    EQUALS          shift and go to state 673


state 649

    (244) if_statement -> IF LPAREN cond RPAREN true_statement ELSE . else_statement
    (251) else_statement -> . ifcontent_statement
    (249) ifcontent_statement -> . basic_statement
    (205) basic_statement -> . if_statement
    (206) basic_statement -> . case_statement
    (207) basic_statement -> . for_statement
    (208) basic_statement -> . while_statement
    (209) basic_statement -> . event_statement
    (210) basic_statement -> . wait_statement
    (211) basic_statement -> . forever_statement
    (212) basic_statement -> . block
    (213) basic_statement -> . namedblock
    (214) basic_statement -> . parallelblock
    (215) basic_statement -> . blocking_substitution
    (216) basic_statement -> . nonblocking_substitution
    (217) basic_statement -> . single_statement
    (244) if_statement -> . IF LPAREN cond RPAREN true_statement ELSE else_statement
    (245) if_statement -> . IF LPAREN cond RPAREN true_statement
    (246) if_statement -> . delays IF LPAREN cond RPAREN true_statement ELSE else_statement
    (247) if_statement -> . delays IF LPAREN cond RPAREN true_statement
    (262) case_statement -> . CASE LPAREN case_comp RPAREN casecontent_statements ENDCASE
    (252) for_statement -> . FOR LPAREN forpre forcond forpost RPAREN forcontent_statement
    (260) while_statement -> . WHILE LPAREN cond RPAREN whilecontent_statement
    (272) event_statement -> . senslist SEMICOLON
    (273) wait_statement -> . WAIT LPAREN cond RPAREN waitcontent_statement
    (276) forever_statement -> . FOREVER basic_statement
    (227) block -> . BEGIN block_statements END
    (228) block -> . BEGIN END
    (232) namedblock -> . BEGIN COLON ID namedblock_statements END
    (233) namedblock -> . BEGIN COLON ID END
    (242) parallelblock -> . FORK block_statements JOIN
    (243) parallelblock -> . FORK JOIN
    (219) blocking_substitution -> . delays lvalue EQUALS delays rvalue SEMICOLON
    (221) nonblocking_substitution -> . delays lvalue LE delays rvalue SEMICOLON
    (362) single_statement -> . DELAY expression SEMICOLON
    (363) single_statement -> . systemcall SEMICOLON
    (364) single_statement -> . disable SEMICOLON
    (222) delays -> . DELAY LPAREN expression RPAREN
    (223) delays -> . DELAY identifier
    (224) delays -> . DELAY intnumber
    (225) delays -> . DELAY floatnumber
    (226) delays -> . empty
    (186) senslist -> . AT LPAREN edgesigs RPAREN
    (193) senslist -> . empty
    (194) senslist -> . AT levelsig
    (195) senslist -> . AT LPAREN levelsigs RPAREN
    (203) senslist -> . AT TIMES
    (204) senslist -> . AT LPAREN TIMES RPAREN
    (319) systemcall -> . DOLLER ID
    (320) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (361) disable -> . DISABLE ID
    (365) empty -> .

  ! shift/reduce conflict for IF resolved as shift
    IF              shift and go to state 150
    CASE            shift and go to state 136
    FOR             shift and go to state 144
    WHILE           shift and go to state 146
    WAIT            shift and go to state 131
    FOREVER         shift and go to state 143
    BEGIN           shift and go to state 153
    FORK            shift and go to state 138
    DELAY           shift and go to state 147
    AT              shift and go to state 159
    DOLLER          shift and go to state 100
    DISABLE         shift and go to state 155
    LBRACE          reduce using rule 365 (empty -> .)
    ID              reduce using rule 365 (empty -> .)
    SEMICOLON       reduce using rule 365 (empty -> .)

  ! IF              [ reduce using rule 365 (empty -> .) ]

    parallelblock                  shift and go to state 129
    for_statement                  shift and go to state 130
    empty                          shift and go to state 157
    if_statement                   shift and go to state 132
    while_statement                shift and go to state 148
    blocking_substitution          shift and go to state 137
    systemcall                     shift and go to state 158
    basic_statement                shift and go to state 605
    ifcontent_statement            shift and go to state 674
    else_statement                 shift and go to state 675
    event_statement                shift and go to state 135
    wait_statement                 shift and go to state 151
    forever_statement              shift and go to state 152
    case_statement                 shift and go to state 139
    disable                        shift and go to state 133
    senslist                       shift and go to state 154
    single_statement               shift and go to state 140
    block                          shift and go to state 156
    delays                         shift and go to state 141
    nonblocking_substitution       shift and go to state 142
    namedblock                     shift and go to state 145

state 650

    (100) lpartselect -> identifier LBRACKET expression COLON expression RBRACKET .

    EQUALS          reduce using rule 100 (lpartselect -> identifier LBRACKET expression COLON expression RBRACKET .)
    RBRACE          reduce using rule 100 (lpartselect -> identifier LBRACKET expression COLON expression RBRACKET .)
    COMMA           reduce using rule 100 (lpartselect -> identifier LBRACKET expression COLON expression RBRACKET .)
    LE              reduce using rule 100 (lpartselect -> identifier LBRACKET expression COLON expression RBRACKET .)


state 651

    (101) lpartselect -> identifier LBRACKET expression PLUSCOLON expression RBRACKET .

    EQUALS          reduce using rule 101 (lpartselect -> identifier LBRACKET expression PLUSCOLON expression RBRACKET .)
    RBRACE          reduce using rule 101 (lpartselect -> identifier LBRACKET expression PLUSCOLON expression RBRACKET .)
    COMMA           reduce using rule 101 (lpartselect -> identifier LBRACKET expression PLUSCOLON expression RBRACKET .)
    LE              reduce using rule 101 (lpartselect -> identifier LBRACKET expression PLUSCOLON expression RBRACKET .)


state 652

    (102) lpartselect -> identifier LBRACKET expression MINUSCOLON expression RBRACKET .

    EQUALS          reduce using rule 102 (lpartselect -> identifier LBRACKET expression MINUSCOLON expression RBRACKET .)
    RBRACE          reduce using rule 102 (lpartselect -> identifier LBRACKET expression MINUSCOLON expression RBRACKET .)
    COMMA           reduce using rule 102 (lpartselect -> identifier LBRACKET expression MINUSCOLON expression RBRACKET .)
    LE              reduce using rule 102 (lpartselect -> identifier LBRACKET expression MINUSCOLON expression RBRACKET .)


state 653

    (97) lpartselect -> pointer LBRACKET expression COLON expression RBRACKET .

    EQUALS          reduce using rule 97 (lpartselect -> pointer LBRACKET expression COLON expression RBRACKET .)
    RBRACE          reduce using rule 97 (lpartselect -> pointer LBRACKET expression COLON expression RBRACKET .)
    COMMA           reduce using rule 97 (lpartselect -> pointer LBRACKET expression COLON expression RBRACKET .)
    LE              reduce using rule 97 (lpartselect -> pointer LBRACKET expression COLON expression RBRACKET .)


state 654

    (98) lpartselect -> pointer LBRACKET expression PLUSCOLON expression RBRACKET .

    EQUALS          reduce using rule 98 (lpartselect -> pointer LBRACKET expression PLUSCOLON expression RBRACKET .)
    RBRACE          reduce using rule 98 (lpartselect -> pointer LBRACKET expression PLUSCOLON expression RBRACKET .)
    COMMA           reduce using rule 98 (lpartselect -> pointer LBRACKET expression PLUSCOLON expression RBRACKET .)
    LE              reduce using rule 98 (lpartselect -> pointer LBRACKET expression PLUSCOLON expression RBRACKET .)


state 655

    (99) lpartselect -> pointer LBRACKET expression MINUSCOLON expression RBRACKET .

    EQUALS          reduce using rule 99 (lpartselect -> pointer LBRACKET expression MINUSCOLON expression RBRACKET .)
    RBRACE          reduce using rule 99 (lpartselect -> pointer LBRACKET expression MINUSCOLON expression RBRACKET .)
    COMMA           reduce using rule 99 (lpartselect -> pointer LBRACKET expression MINUSCOLON expression RBRACKET .)
    LE              reduce using rule 99 (lpartselect -> pointer LBRACKET expression MINUSCOLON expression RBRACKET .)


state 656

    (96) assignment -> ASSIGN delays lvalue EQUALS delays rvalue SEMICOLON .

    END             reduce using rule 96 (assignment -> ASSIGN delays lvalue EQUALS delays rvalue SEMICOLON .)
    IF              reduce using rule 96 (assignment -> ASSIGN delays lvalue EQUALS delays rvalue SEMICOLON .)
    FOR             reduce using rule 96 (assignment -> ASSIGN delays lvalue EQUALS delays rvalue SEMICOLON .)
    INTEGER         reduce using rule 96 (assignment -> ASSIGN delays lvalue EQUALS delays rvalue SEMICOLON .)
    REAL            reduce using rule 96 (assignment -> ASSIGN delays lvalue EQUALS delays rvalue SEMICOLON .)
    PARAMETER       reduce using rule 96 (assignment -> ASSIGN delays lvalue EQUALS delays rvalue SEMICOLON .)
    LOCALPARAM      reduce using rule 96 (assignment -> ASSIGN delays lvalue EQUALS delays rvalue SEMICOLON .)
    GENVAR          reduce using rule 96 (assignment -> ASSIGN delays lvalue EQUALS delays rvalue SEMICOLON .)
    ASSIGN          reduce using rule 96 (assignment -> ASSIGN delays lvalue EQUALS delays rvalue SEMICOLON .)
    ALWAYS          reduce using rule 96 (assignment -> ASSIGN delays lvalue EQUALS delays rvalue SEMICOLON .)
    INITIAL         reduce using rule 96 (assignment -> ASSIGN delays lvalue EQUALS delays rvalue SEMICOLON .)
    ID              reduce using rule 96 (assignment -> ASSIGN delays lvalue EQUALS delays rvalue SEMICOLON .)
    FUNCTION        reduce using rule 96 (assignment -> ASSIGN delays lvalue EQUALS delays rvalue SEMICOLON .)
    TASK            reduce using rule 96 (assignment -> ASSIGN delays lvalue EQUALS delays rvalue SEMICOLON .)
    LPAREN          reduce using rule 96 (assignment -> ASSIGN delays lvalue EQUALS delays rvalue SEMICOLON .)
    INPUT           reduce using rule 96 (assignment -> ASSIGN delays lvalue EQUALS delays rvalue SEMICOLON .)
    OUTPUT          reduce using rule 96 (assignment -> ASSIGN delays lvalue EQUALS delays rvalue SEMICOLON .)
    INOUT           reduce using rule 96 (assignment -> ASSIGN delays lvalue EQUALS delays rvalue SEMICOLON .)
    TRI             reduce using rule 96 (assignment -> ASSIGN delays lvalue EQUALS delays rvalue SEMICOLON .)
    REG             reduce using rule 96 (assignment -> ASSIGN delays lvalue EQUALS delays rvalue SEMICOLON .)
    WIRE            reduce using rule 96 (assignment -> ASSIGN delays lvalue EQUALS delays rvalue SEMICOLON .)
    SIGNED          reduce using rule 96 (assignment -> ASSIGN delays lvalue EQUALS delays rvalue SEMICOLON .)
    ELSE            reduce using rule 96 (assignment -> ASSIGN delays lvalue EQUALS delays rvalue SEMICOLON .)
    ENDGENERATE     reduce using rule 96 (assignment -> ASSIGN delays lvalue EQUALS delays rvalue SEMICOLON .)
    ENDMODULE       reduce using rule 96 (assignment -> ASSIGN delays lvalue EQUALS delays rvalue SEMICOLON .)
    GENERATE        reduce using rule 96 (assignment -> ASSIGN delays lvalue EQUALS delays rvalue SEMICOLON .)


state 657

    (277) instance -> ID parameterlist ID LPAREN instance_ports RPAREN SEMICOLON .

    ENDMODULE       reduce using rule 277 (instance -> ID parameterlist ID LPAREN instance_ports RPAREN SEMICOLON .)
    GENERATE        reduce using rule 277 (instance -> ID parameterlist ID LPAREN instance_ports RPAREN SEMICOLON .)
    INTEGER         reduce using rule 277 (instance -> ID parameterlist ID LPAREN instance_ports RPAREN SEMICOLON .)
    REAL            reduce using rule 277 (instance -> ID parameterlist ID LPAREN instance_ports RPAREN SEMICOLON .)
    PARAMETER       reduce using rule 277 (instance -> ID parameterlist ID LPAREN instance_ports RPAREN SEMICOLON .)
    LOCALPARAM      reduce using rule 277 (instance -> ID parameterlist ID LPAREN instance_ports RPAREN SEMICOLON .)
    GENVAR          reduce using rule 277 (instance -> ID parameterlist ID LPAREN instance_ports RPAREN SEMICOLON .)
    ASSIGN          reduce using rule 277 (instance -> ID parameterlist ID LPAREN instance_ports RPAREN SEMICOLON .)
    ALWAYS          reduce using rule 277 (instance -> ID parameterlist ID LPAREN instance_ports RPAREN SEMICOLON .)
    INITIAL         reduce using rule 277 (instance -> ID parameterlist ID LPAREN instance_ports RPAREN SEMICOLON .)
    ID              reduce using rule 277 (instance -> ID parameterlist ID LPAREN instance_ports RPAREN SEMICOLON .)
    FUNCTION        reduce using rule 277 (instance -> ID parameterlist ID LPAREN instance_ports RPAREN SEMICOLON .)
    TASK            reduce using rule 277 (instance -> ID parameterlist ID LPAREN instance_ports RPAREN SEMICOLON .)
    LPAREN          reduce using rule 277 (instance -> ID parameterlist ID LPAREN instance_ports RPAREN SEMICOLON .)
    INPUT           reduce using rule 277 (instance -> ID parameterlist ID LPAREN instance_ports RPAREN SEMICOLON .)
    OUTPUT          reduce using rule 277 (instance -> ID parameterlist ID LPAREN instance_ports RPAREN SEMICOLON .)
    INOUT           reduce using rule 277 (instance -> ID parameterlist ID LPAREN instance_ports RPAREN SEMICOLON .)
    TRI             reduce using rule 277 (instance -> ID parameterlist ID LPAREN instance_ports RPAREN SEMICOLON .)
    REG             reduce using rule 277 (instance -> ID parameterlist ID LPAREN instance_ports RPAREN SEMICOLON .)
    WIRE            reduce using rule 277 (instance -> ID parameterlist ID LPAREN instance_ports RPAREN SEMICOLON .)
    SIGNED          reduce using rule 277 (instance -> ID parameterlist ID LPAREN instance_ports RPAREN SEMICOLON .)
    ENDGENERATE     reduce using rule 277 (instance -> ID parameterlist ID LPAREN instance_ports RPAREN SEMICOLON .)
    IF              reduce using rule 277 (instance -> ID parameterlist ID LPAREN instance_ports RPAREN SEMICOLON .)
    FOR             reduce using rule 277 (instance -> ID parameterlist ID LPAREN instance_ports RPAREN SEMICOLON .)
    END             reduce using rule 277 (instance -> ID parameterlist ID LPAREN instance_ports RPAREN SEMICOLON .)
    ELSE            reduce using rule 277 (instance -> ID parameterlist ID LPAREN instance_ports RPAREN SEMICOLON .)


state 658

    (289) instance_ports_list -> instance_ports_list COMMA instance_port_list .

    COMMA           reduce using rule 289 (instance_ports_list -> instance_ports_list COMMA instance_port_list .)
    RPAREN          reduce using rule 289 (instance_ports_list -> instance_ports_list COMMA instance_port_list .)


state 659

    (294) instance_port_arg -> DOT ID LPAREN . identifier RPAREN
    (295) instance_port_arg -> DOT ID LPAREN . expression RPAREN
    (296) instance_port_arg -> DOT ID LPAREN . RPAREN
    (357) identifier -> . ID
    (358) identifier -> . scope ID
    (116) expression -> . MINUS expression
    (117) expression -> . PLUS expression
    (118) expression -> . LNOT expression
    (119) expression -> . NOT expression
    (120) expression -> . AND expression
    (121) expression -> . NAND expression
    (122) expression -> . NOR expression
    (123) expression -> . OR expression
    (124) expression -> . XOR expression
    (125) expression -> . XNOR expression
    (126) expression -> . expression POWER expression
    (127) expression -> . expression TIMES expression
    (128) expression -> . expression DIVIDE expression
    (129) expression -> . expression MOD expression
    (130) expression -> . expression PLUS expression
    (131) expression -> . expression MINUS expression
    (132) expression -> . expression LSHIFT expression
    (133) expression -> . expression RSHIFT expression
    (134) expression -> . expression LSHIFTA expression
    (135) expression -> . expression RSHIFTA expression
    (136) expression -> . expression LT expression
    (137) expression -> . expression GT expression
    (138) expression -> . expression LE expression
    (139) expression -> . expression GE expression
    (140) expression -> . expression EQ expression
    (141) expression -> . expression NE expression
    (142) expression -> . expression EQL expression
    (143) expression -> . expression NEL expression
    (144) expression -> . expression AND expression
    (145) expression -> . expression XOR expression
    (146) expression -> . expression XNOR expression
    (147) expression -> . expression OR expression
    (148) expression -> . expression LAND expression
    (149) expression -> . expression LOR expression
    (150) expression -> . expression COND expression COLON expression
    (151) expression -> . LPAREN expression RPAREN
    (152) expression -> . concat
    (153) expression -> . repeat
    (154) expression -> . partselect
    (155) expression -> . pointer
    (156) expression -> . functioncall
    (157) expression -> . systemcall
    (158) expression -> . identifier
    (159) expression -> . const_expression
    (359) scope -> . identifier DOT
    (360) scope -> . pointer DOT
    (160) concat -> . LBRACE concatlist RBRACE
    (163) repeat -> . LBRACE expression concat RBRACE
    (164) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (165) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (166) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (167) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (168) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (169) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (170) pointer -> . identifier LBRACKET expression RBRACKET
    (171) pointer -> . pointer LBRACKET expression RBRACKET
    (339) functioncall -> . identifier LPAREN func_args RPAREN
    (319) systemcall -> . DOLLER ID
    (320) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (172) const_expression -> . intnumber
    (173) const_expression -> . floatnumber
    (174) const_expression -> . stringliteral
    (176) intnumber -> . INTNUMBER_DEC
    (177) intnumber -> . SIGNED_INTNUMBER_DEC
    (178) intnumber -> . INTNUMBER_BIN
    (179) intnumber -> . SIGNED_INTNUMBER_BIN
    (180) intnumber -> . INTNUMBER_OCT
    (181) intnumber -> . SIGNED_INTNUMBER_OCT
    (182) intnumber -> . INTNUMBER_HEX
    (183) intnumber -> . SIGNED_INTNUMBER_HEX
    (175) floatnumber -> . FLOATNUMBER
    (184) stringliteral -> . STRING_LITERAL

    RPAREN          shift and go to state 679
    ID              shift and go to state 85
    MINUS           shift and go to state 97
    PLUS            shift and go to state 89
    LNOT            shift and go to state 95
    NOT             shift and go to state 78
    AND             shift and go to state 91
    NAND            shift and go to state 98
    NOR             shift and go to state 76
    OR              shift and go to state 105
    XOR             shift and go to state 82
    XNOR            shift and go to state 87
    LPAREN          shift and go to state 96
    LBRACE          shift and go to state 77
    DOLLER          shift and go to state 100
    INTNUMBER_DEC   shift and go to state 79
    SIGNED_INTNUMBER_DEC shift and go to state 101
    INTNUMBER_BIN   shift and go to state 111
    SIGNED_INTNUMBER_BIN shift and go to state 112
    INTNUMBER_OCT   shift and go to state 86
    SIGNED_INTNUMBER_OCT shift and go to state 106
    INTNUMBER_HEX   shift and go to state 93
    SIGNED_INTNUMBER_HEX shift and go to state 83
    FLOATNUMBER     shift and go to state 102
    STRING_LITERAL  shift and go to state 107

    stringliteral                  shift and go to state 99
    intnumber                      shift and go to state 81
    expression                     shift and go to state 678
    repeat                         shift and go to state 108
    partselect                     shift and go to state 103
    identifier                     shift and go to state 676
    pointer                        shift and go to state 677
    functioncall                   shift and go to state 94
    scope                          shift and go to state 84
    systemcall                     shift and go to state 109
    const_expression               shift and go to state 110
    concat                         shift and go to state 88
    floatnumber                    shift and go to state 90

state 660

    (292) instance_ports_arg -> instance_ports_arg COMMA instance_port_arg .

    COMMA           reduce using rule 292 (instance_ports_arg -> instance_ports_arg COMMA instance_port_arg .)
    RPAREN          reduce using rule 292 (instance_ports_arg -> instance_ports_arg COMMA instance_port_arg .)


state 661

    (286) param_arg -> DOT ID LPAREN expression . RPAREN
    (126) expression -> expression . POWER expression
    (127) expression -> expression . TIMES expression
    (128) expression -> expression . DIVIDE expression
    (129) expression -> expression . MOD expression
    (130) expression -> expression . PLUS expression
    (131) expression -> expression . MINUS expression
    (132) expression -> expression . LSHIFT expression
    (133) expression -> expression . RSHIFT expression
    (134) expression -> expression . LSHIFTA expression
    (135) expression -> expression . RSHIFTA expression
    (136) expression -> expression . LT expression
    (137) expression -> expression . GT expression
    (138) expression -> expression . LE expression
    (139) expression -> expression . GE expression
    (140) expression -> expression . EQ expression
    (141) expression -> expression . NE expression
    (142) expression -> expression . EQL expression
    (143) expression -> expression . NEL expression
    (144) expression -> expression . AND expression
    (145) expression -> expression . XOR expression
    (146) expression -> expression . XNOR expression
    (147) expression -> expression . OR expression
    (148) expression -> expression . LAND expression
    (149) expression -> expression . LOR expression
    (150) expression -> expression . COND expression COLON expression

    RPAREN          shift and go to state 680
    POWER           shift and go to state 246
    TIMES           shift and go to state 349
    DIVIDE          shift and go to state 244
    MOD             shift and go to state 231
    PLUS            shift and go to state 240
    MINUS           shift and go to state 229
    LSHIFT          shift and go to state 243
    RSHIFT          shift and go to state 226
    LSHIFTA         shift and go to state 241
    RSHIFTA         shift and go to state 238
    LT              shift and go to state 235
    GT              shift and go to state 228
    LE              shift and go to state 222
    GE              shift and go to state 239
    EQ              shift and go to state 223
    NE              shift and go to state 225
    EQL             shift and go to state 245
    NEL             shift and go to state 242
    AND             shift and go to state 224
    XOR             shift and go to state 237
    XNOR            shift and go to state 232
    OR              shift and go to state 234
    LAND            shift and go to state 227
    LOR             shift and go to state 230
    COND            shift and go to state 233


state 662

    (316) generate_for -> FOR LPAREN forpre forcond forpost RPAREN . generate_forcontent
    (317) generate_forcontent -> . generate_item
    (318) generate_forcontent -> . generate_block
    (305) generate_item -> . standard_item
    (306) generate_item -> . generate_if
    (307) generate_item -> . generate_for
    (308) generate_block -> . BEGIN generate_items END
    (309) generate_block -> . BEGIN COLON ID generate_items END
    (53) standard_item -> . decl
    (54) standard_item -> . integerdecl
    (55) standard_item -> . realdecl
    (56) standard_item -> . declassign
    (57) standard_item -> . parameterdecl
    (58) standard_item -> . localparamdecl
    (59) standard_item -> . genvardecl
    (60) standard_item -> . assignment
    (61) standard_item -> . always
    (62) standard_item -> . initial
    (63) standard_item -> . instance
    (64) standard_item -> . function
    (65) standard_item -> . task
    (66) standard_item -> . pragma
    (310) generate_if -> . IF LPAREN cond RPAREN gif_true_item ELSE gif_false_item
    (311) generate_if -> . IF LPAREN cond RPAREN gif_true_item
    (316) generate_for -> . FOR LPAREN forpre forcond forpost RPAREN generate_forcontent
    (67) decl -> . sigtypes declnamelist SEMICOLON
    (68) decl -> . sigtypes width declnamelist SEMICOLON
    (77) integerdecl -> . INTEGER integernamelist SEMICOLON
    (78) integerdecl -> . INTEGER SIGNED integernamelist SEMICOLON
    (82) realdecl -> . REAL realnamelist SEMICOLON
    (73) declassign -> . sigtypes declassign_element SEMICOLON
    (74) declassign -> . sigtypes width declassign_element SEMICOLON
    (86) parameterdecl -> . PARAMETER param_substitution_list SEMICOLON
    (87) parameterdecl -> . PARAMETER width param_substitution_list SEMICOLON
    (88) parameterdecl -> . PARAMETER INTEGER param_substitution_list SEMICOLON
    (89) localparamdecl -> . LOCALPARAM param_substitution_list SEMICOLON
    (90) localparamdecl -> . LOCALPARAM width param_substitution_list SEMICOLON
    (91) localparamdecl -> . LOCALPARAM INTEGER param_substitution_list SEMICOLON
    (297) genvardecl -> . GENVAR genvarlist SEMICOLON
    (95) assignment -> . ASSIGN lvalue EQUALS rvalue SEMICOLON
    (96) assignment -> . ASSIGN delays lvalue EQUALS delays rvalue SEMICOLON
    (185) always -> . ALWAYS senslist always_statement
    (270) initial -> . INITIAL initial_statement
    (277) instance -> . ID parameterlist ID LPAREN instance_ports RPAREN SEMICOLON
    (325) function -> . FUNCTION width ID SEMICOLON function_statement ENDFUNCTION
    (326) function -> . FUNCTION ID SEMICOLON function_statement ENDFUNCTION
    (343) task -> . TASK ID SEMICOLON task_statement ENDTASK
    (7) pragma -> . LPAREN TIMES ID EQUALS expression TIMES RPAREN
    (8) pragma -> . LPAREN TIMES ID TIMES RPAREN
    (30) sigtypes -> . sigtypes sigtype
    (31) sigtypes -> . sigtype
    (32) sigtype -> . INPUT
    (33) sigtype -> . OUTPUT
    (34) sigtype -> . INOUT
    (35) sigtype -> . TRI
    (36) sigtype -> . REG
    (37) sigtype -> . WIRE
    (38) sigtype -> . SIGNED

    BEGIN           shift and go to state 629
    IF              shift and go to state 188
    FOR             shift and go to state 186
    INTEGER         shift and go to state 69
    REAL            shift and go to state 49
    PARAMETER       shift and go to state 66
    LOCALPARAM      shift and go to state 52
    GENVAR          shift and go to state 42
    ASSIGN          shift and go to state 48
    ALWAYS          shift and go to state 46
    INITIAL         shift and go to state 45
    ID              shift and go to state 51
    FUNCTION        shift and go to state 44
    TASK            shift and go to state 67
    LPAREN          shift and go to state 6
    INPUT           shift and go to state 37
    OUTPUT          shift and go to state 24
    INOUT           shift and go to state 25
    TRI             shift and go to state 36
    REG             shift and go to state 35
    WIRE            shift and go to state 26
    SIGNED          shift and go to state 29

    generate_item                  shift and go to state 681
    generate_if                    shift and go to state 185
    always                         shift and go to state 41
    genvardecl                     shift and go to state 43
    integerdecl                    shift and go to state 47
    sigtype                        shift and go to state 33
    generate_forcontent            shift and go to state 682
    instance                       shift and go to state 50
    localparamdecl                 shift and go to state 53
    standard_item                  shift and go to state 187
    declassign                     shift and go to state 58
    generate_block                 shift and go to state 683
    task                           shift and go to state 57
    function                       shift and go to state 59
    realdecl                       shift and go to state 60
    sigtypes                       shift and go to state 61
    decl                           shift and go to state 62
    pragma                         shift and go to state 63
    parameterdecl                  shift and go to state 64
    generate_for                   shift and go to state 190
    initial                        shift and go to state 65
    assignment                     shift and go to state 68

state 663

    (310) generate_if -> IF LPAREN cond RPAREN gif_true_item ELSE . gif_false_item
    (314) gif_false_item -> . generate_item
    (315) gif_false_item -> . generate_block
    (305) generate_item -> . standard_item
    (306) generate_item -> . generate_if
    (307) generate_item -> . generate_for
    (308) generate_block -> . BEGIN generate_items END
    (309) generate_block -> . BEGIN COLON ID generate_items END
    (53) standard_item -> . decl
    (54) standard_item -> . integerdecl
    (55) standard_item -> . realdecl
    (56) standard_item -> . declassign
    (57) standard_item -> . parameterdecl
    (58) standard_item -> . localparamdecl
    (59) standard_item -> . genvardecl
    (60) standard_item -> . assignment
    (61) standard_item -> . always
    (62) standard_item -> . initial
    (63) standard_item -> . instance
    (64) standard_item -> . function
    (65) standard_item -> . task
    (66) standard_item -> . pragma
    (310) generate_if -> . IF LPAREN cond RPAREN gif_true_item ELSE gif_false_item
    (311) generate_if -> . IF LPAREN cond RPAREN gif_true_item
    (316) generate_for -> . FOR LPAREN forpre forcond forpost RPAREN generate_forcontent
    (67) decl -> . sigtypes declnamelist SEMICOLON
    (68) decl -> . sigtypes width declnamelist SEMICOLON
    (77) integerdecl -> . INTEGER integernamelist SEMICOLON
    (78) integerdecl -> . INTEGER SIGNED integernamelist SEMICOLON
    (82) realdecl -> . REAL realnamelist SEMICOLON
    (73) declassign -> . sigtypes declassign_element SEMICOLON
    (74) declassign -> . sigtypes width declassign_element SEMICOLON
    (86) parameterdecl -> . PARAMETER param_substitution_list SEMICOLON
    (87) parameterdecl -> . PARAMETER width param_substitution_list SEMICOLON
    (88) parameterdecl -> . PARAMETER INTEGER param_substitution_list SEMICOLON
    (89) localparamdecl -> . LOCALPARAM param_substitution_list SEMICOLON
    (90) localparamdecl -> . LOCALPARAM width param_substitution_list SEMICOLON
    (91) localparamdecl -> . LOCALPARAM INTEGER param_substitution_list SEMICOLON
    (297) genvardecl -> . GENVAR genvarlist SEMICOLON
    (95) assignment -> . ASSIGN lvalue EQUALS rvalue SEMICOLON
    (96) assignment -> . ASSIGN delays lvalue EQUALS delays rvalue SEMICOLON
    (185) always -> . ALWAYS senslist always_statement
    (270) initial -> . INITIAL initial_statement
    (277) instance -> . ID parameterlist ID LPAREN instance_ports RPAREN SEMICOLON
    (325) function -> . FUNCTION width ID SEMICOLON function_statement ENDFUNCTION
    (326) function -> . FUNCTION ID SEMICOLON function_statement ENDFUNCTION
    (343) task -> . TASK ID SEMICOLON task_statement ENDTASK
    (7) pragma -> . LPAREN TIMES ID EQUALS expression TIMES RPAREN
    (8) pragma -> . LPAREN TIMES ID TIMES RPAREN
    (30) sigtypes -> . sigtypes sigtype
    (31) sigtypes -> . sigtype
    (32) sigtype -> . INPUT
    (33) sigtype -> . OUTPUT
    (34) sigtype -> . INOUT
    (35) sigtype -> . TRI
    (36) sigtype -> . REG
    (37) sigtype -> . WIRE
    (38) sigtype -> . SIGNED

    BEGIN           shift and go to state 629
    IF              shift and go to state 188
    FOR             shift and go to state 186
    INTEGER         shift and go to state 69
    REAL            shift and go to state 49
    PARAMETER       shift and go to state 66
    LOCALPARAM      shift and go to state 52
    GENVAR          shift and go to state 42
    ASSIGN          shift and go to state 48
    ALWAYS          shift and go to state 46
    INITIAL         shift and go to state 45
    ID              shift and go to state 51
    FUNCTION        shift and go to state 44
    TASK            shift and go to state 67
    LPAREN          shift and go to state 6
    INPUT           shift and go to state 37
    OUTPUT          shift and go to state 24
    INOUT           shift and go to state 25
    TRI             shift and go to state 36
    REG             shift and go to state 35
    WIRE            shift and go to state 26
    SIGNED          shift and go to state 29

    generate_item                  shift and go to state 684
    generate_if                    shift and go to state 185
    always                         shift and go to state 41
    genvardecl                     shift and go to state 43
    integerdecl                    shift and go to state 47
    sigtype                        shift and go to state 33
    instance                       shift and go to state 50
    localparamdecl                 shift and go to state 53
    standard_item                  shift and go to state 187
    declassign                     shift and go to state 58
    generate_block                 shift and go to state 685
    task                           shift and go to state 57
    function                       shift and go to state 59
    gif_false_item                 shift and go to state 686
    realdecl                       shift and go to state 60
    sigtypes                       shift and go to state 61
    decl                           shift and go to state 62
    pragma                         shift and go to state 63
    parameterdecl                  shift and go to state 64
    generate_for                   shift and go to state 190
    initial                        shift and go to state 65
    assignment                     shift and go to state 68

state 664

    (309) generate_block -> BEGIN COLON . ID generate_items END

    ID              shift and go to state 687


state 665

    (308) generate_block -> BEGIN generate_items . END
    (303) generate_items -> generate_items . generate_item
    (305) generate_item -> . standard_item
    (306) generate_item -> . generate_if
    (307) generate_item -> . generate_for
    (53) standard_item -> . decl
    (54) standard_item -> . integerdecl
    (55) standard_item -> . realdecl
    (56) standard_item -> . declassign
    (57) standard_item -> . parameterdecl
    (58) standard_item -> . localparamdecl
    (59) standard_item -> . genvardecl
    (60) standard_item -> . assignment
    (61) standard_item -> . always
    (62) standard_item -> . initial
    (63) standard_item -> . instance
    (64) standard_item -> . function
    (65) standard_item -> . task
    (66) standard_item -> . pragma
    (310) generate_if -> . IF LPAREN cond RPAREN gif_true_item ELSE gif_false_item
    (311) generate_if -> . IF LPAREN cond RPAREN gif_true_item
    (316) generate_for -> . FOR LPAREN forpre forcond forpost RPAREN generate_forcontent
    (67) decl -> . sigtypes declnamelist SEMICOLON
    (68) decl -> . sigtypes width declnamelist SEMICOLON
    (77) integerdecl -> . INTEGER integernamelist SEMICOLON
    (78) integerdecl -> . INTEGER SIGNED integernamelist SEMICOLON
    (82) realdecl -> . REAL realnamelist SEMICOLON
    (73) declassign -> . sigtypes declassign_element SEMICOLON
    (74) declassign -> . sigtypes width declassign_element SEMICOLON
    (86) parameterdecl -> . PARAMETER param_substitution_list SEMICOLON
    (87) parameterdecl -> . PARAMETER width param_substitution_list SEMICOLON
    (88) parameterdecl -> . PARAMETER INTEGER param_substitution_list SEMICOLON
    (89) localparamdecl -> . LOCALPARAM param_substitution_list SEMICOLON
    (90) localparamdecl -> . LOCALPARAM width param_substitution_list SEMICOLON
    (91) localparamdecl -> . LOCALPARAM INTEGER param_substitution_list SEMICOLON
    (297) genvardecl -> . GENVAR genvarlist SEMICOLON
    (95) assignment -> . ASSIGN lvalue EQUALS rvalue SEMICOLON
    (96) assignment -> . ASSIGN delays lvalue EQUALS delays rvalue SEMICOLON
    (185) always -> . ALWAYS senslist always_statement
    (270) initial -> . INITIAL initial_statement
    (277) instance -> . ID parameterlist ID LPAREN instance_ports RPAREN SEMICOLON
    (325) function -> . FUNCTION width ID SEMICOLON function_statement ENDFUNCTION
    (326) function -> . FUNCTION ID SEMICOLON function_statement ENDFUNCTION
    (343) task -> . TASK ID SEMICOLON task_statement ENDTASK
    (7) pragma -> . LPAREN TIMES ID EQUALS expression TIMES RPAREN
    (8) pragma -> . LPAREN TIMES ID TIMES RPAREN
    (30) sigtypes -> . sigtypes sigtype
    (31) sigtypes -> . sigtype
    (32) sigtype -> . INPUT
    (33) sigtype -> . OUTPUT
    (34) sigtype -> . INOUT
    (35) sigtype -> . TRI
    (36) sigtype -> . REG
    (37) sigtype -> . WIRE
    (38) sigtype -> . SIGNED

    END             shift and go to state 688
    IF              shift and go to state 188
    FOR             shift and go to state 186
    INTEGER         shift and go to state 69
    REAL            shift and go to state 49
    PARAMETER       shift and go to state 66
    LOCALPARAM      shift and go to state 52
    GENVAR          shift and go to state 42
    ASSIGN          shift and go to state 48
    ALWAYS          shift and go to state 46
    INITIAL         shift and go to state 45
    ID              shift and go to state 51
    FUNCTION        shift and go to state 44
    TASK            shift and go to state 67
    LPAREN          shift and go to state 6
    INPUT           shift and go to state 37
    OUTPUT          shift and go to state 24
    INOUT           shift and go to state 25
    TRI             shift and go to state 36
    REG             shift and go to state 35
    WIRE            shift and go to state 26
    SIGNED          shift and go to state 29

    generate_item                  shift and go to state 328
    generate_if                    shift and go to state 185
    always                         shift and go to state 41
    genvardecl                     shift and go to state 43
    integerdecl                    shift and go to state 47
    sigtype                        shift and go to state 33
    instance                       shift and go to state 50
    localparamdecl                 shift and go to state 53
    standard_item                  shift and go to state 187
    declassign                     shift and go to state 58
    task                           shift and go to state 57
    function                       shift and go to state 59
    realdecl                       shift and go to state 60
    sigtypes                       shift and go to state 61
    decl                           shift and go to state 62
    pragma                         shift and go to state 63
    parameterdecl                  shift and go to state 64
    generate_for                   shift and go to state 190
    initial                        shift and go to state 65
    assignment                     shift and go to state 68

state 666

    (47) length -> LBRACKET expression COLON expression RBRACKET .

    SEMICOLON       reduce using rule 47 (length -> LBRACKET expression COLON expression RBRACKET .)
    COMMA           reduce using rule 47 (length -> LBRACKET expression COLON expression RBRACKET .)


state 667

    (266) casecontent_statement -> casecontent_condition COLON basic_statement .

    ENDCASE         reduce using rule 266 (casecontent_statement -> casecontent_condition COLON basic_statement .)
    DEFAULT         reduce using rule 266 (casecontent_statement -> casecontent_condition COLON basic_statement .)
    MINUS           reduce using rule 266 (casecontent_statement -> casecontent_condition COLON basic_statement .)
    PLUS            reduce using rule 266 (casecontent_statement -> casecontent_condition COLON basic_statement .)
    LNOT            reduce using rule 266 (casecontent_statement -> casecontent_condition COLON basic_statement .)
    NOT             reduce using rule 266 (casecontent_statement -> casecontent_condition COLON basic_statement .)
    AND             reduce using rule 266 (casecontent_statement -> casecontent_condition COLON basic_statement .)
    NAND            reduce using rule 266 (casecontent_statement -> casecontent_condition COLON basic_statement .)
    NOR             reduce using rule 266 (casecontent_statement -> casecontent_condition COLON basic_statement .)
    OR              reduce using rule 266 (casecontent_statement -> casecontent_condition COLON basic_statement .)
    XOR             reduce using rule 266 (casecontent_statement -> casecontent_condition COLON basic_statement .)
    XNOR            reduce using rule 266 (casecontent_statement -> casecontent_condition COLON basic_statement .)
    LPAREN          reduce using rule 266 (casecontent_statement -> casecontent_condition COLON basic_statement .)
    LBRACE          reduce using rule 266 (casecontent_statement -> casecontent_condition COLON basic_statement .)
    DOLLER          reduce using rule 266 (casecontent_statement -> casecontent_condition COLON basic_statement .)
    ID              reduce using rule 266 (casecontent_statement -> casecontent_condition COLON basic_statement .)
    INTNUMBER_DEC   reduce using rule 266 (casecontent_statement -> casecontent_condition COLON basic_statement .)
    SIGNED_INTNUMBER_DEC reduce using rule 266 (casecontent_statement -> casecontent_condition COLON basic_statement .)
    INTNUMBER_BIN   reduce using rule 266 (casecontent_statement -> casecontent_condition COLON basic_statement .)
    SIGNED_INTNUMBER_BIN reduce using rule 266 (casecontent_statement -> casecontent_condition COLON basic_statement .)
    INTNUMBER_OCT   reduce using rule 266 (casecontent_statement -> casecontent_condition COLON basic_statement .)
    SIGNED_INTNUMBER_OCT reduce using rule 266 (casecontent_statement -> casecontent_condition COLON basic_statement .)
    INTNUMBER_HEX   reduce using rule 266 (casecontent_statement -> casecontent_condition COLON basic_statement .)
    SIGNED_INTNUMBER_HEX reduce using rule 266 (casecontent_statement -> casecontent_condition COLON basic_statement .)
    FLOATNUMBER     reduce using rule 266 (casecontent_statement -> casecontent_condition COLON basic_statement .)
    STRING_LITERAL  reduce using rule 266 (casecontent_statement -> casecontent_condition COLON basic_statement .)


state 668

    (267) casecontent_condition -> casecontent_condition COMMA expression .
    (126) expression -> expression . POWER expression
    (127) expression -> expression . TIMES expression
    (128) expression -> expression . DIVIDE expression
    (129) expression -> expression . MOD expression
    (130) expression -> expression . PLUS expression
    (131) expression -> expression . MINUS expression
    (132) expression -> expression . LSHIFT expression
    (133) expression -> expression . RSHIFT expression
    (134) expression -> expression . LSHIFTA expression
    (135) expression -> expression . RSHIFTA expression
    (136) expression -> expression . LT expression
    (137) expression -> expression . GT expression
    (138) expression -> expression . LE expression
    (139) expression -> expression . GE expression
    (140) expression -> expression . EQ expression
    (141) expression -> expression . NE expression
    (142) expression -> expression . EQL expression
    (143) expression -> expression . NEL expression
    (144) expression -> expression . AND expression
    (145) expression -> expression . XOR expression
    (146) expression -> expression . XNOR expression
    (147) expression -> expression . OR expression
    (148) expression -> expression . LAND expression
    (149) expression -> expression . LOR expression
    (150) expression -> expression . COND expression COLON expression

    COLON           reduce using rule 267 (casecontent_condition -> casecontent_condition COMMA expression .)
    COMMA           reduce using rule 267 (casecontent_condition -> casecontent_condition COMMA expression .)
    POWER           shift and go to state 246
    TIMES           shift and go to state 349
    DIVIDE          shift and go to state 244
    MOD             shift and go to state 231
    PLUS            shift and go to state 240
    MINUS           shift and go to state 229
    LSHIFT          shift and go to state 243
    RSHIFT          shift and go to state 226
    LSHIFTA         shift and go to state 241
    RSHIFTA         shift and go to state 238
    LT              shift and go to state 235
    GT              shift and go to state 228
    LE              shift and go to state 222
    GE              shift and go to state 239
    EQ              shift and go to state 223
    NE              shift and go to state 225
    EQL             shift and go to state 245
    NEL             shift and go to state 242
    AND             shift and go to state 224
    XOR             shift and go to state 237
    XNOR            shift and go to state 232
    OR              shift and go to state 234
    LAND            shift and go to state 227
    LOR             shift and go to state 230
    COND            shift and go to state 233


state 669

    (269) casecontent_statement -> DEFAULT COLON basic_statement .

    ENDCASE         reduce using rule 269 (casecontent_statement -> DEFAULT COLON basic_statement .)
    DEFAULT         reduce using rule 269 (casecontent_statement -> DEFAULT COLON basic_statement .)
    MINUS           reduce using rule 269 (casecontent_statement -> DEFAULT COLON basic_statement .)
    PLUS            reduce using rule 269 (casecontent_statement -> DEFAULT COLON basic_statement .)
    LNOT            reduce using rule 269 (casecontent_statement -> DEFAULT COLON basic_statement .)
    NOT             reduce using rule 269 (casecontent_statement -> DEFAULT COLON basic_statement .)
    AND             reduce using rule 269 (casecontent_statement -> DEFAULT COLON basic_statement .)
    NAND            reduce using rule 269 (casecontent_statement -> DEFAULT COLON basic_statement .)
    NOR             reduce using rule 269 (casecontent_statement -> DEFAULT COLON basic_statement .)
    OR              reduce using rule 269 (casecontent_statement -> DEFAULT COLON basic_statement .)
    XOR             reduce using rule 269 (casecontent_statement -> DEFAULT COLON basic_statement .)
    XNOR            reduce using rule 269 (casecontent_statement -> DEFAULT COLON basic_statement .)
    LPAREN          reduce using rule 269 (casecontent_statement -> DEFAULT COLON basic_statement .)
    LBRACE          reduce using rule 269 (casecontent_statement -> DEFAULT COLON basic_statement .)
    DOLLER          reduce using rule 269 (casecontent_statement -> DEFAULT COLON basic_statement .)
    ID              reduce using rule 269 (casecontent_statement -> DEFAULT COLON basic_statement .)
    INTNUMBER_DEC   reduce using rule 269 (casecontent_statement -> DEFAULT COLON basic_statement .)
    SIGNED_INTNUMBER_DEC reduce using rule 269 (casecontent_statement -> DEFAULT COLON basic_statement .)
    INTNUMBER_BIN   reduce using rule 269 (casecontent_statement -> DEFAULT COLON basic_statement .)
    SIGNED_INTNUMBER_BIN reduce using rule 269 (casecontent_statement -> DEFAULT COLON basic_statement .)
    INTNUMBER_OCT   reduce using rule 269 (casecontent_statement -> DEFAULT COLON basic_statement .)
    SIGNED_INTNUMBER_OCT reduce using rule 269 (casecontent_statement -> DEFAULT COLON basic_statement .)
    INTNUMBER_HEX   reduce using rule 269 (casecontent_statement -> DEFAULT COLON basic_statement .)
    SIGNED_INTNUMBER_HEX reduce using rule 269 (casecontent_statement -> DEFAULT COLON basic_statement .)
    FLOATNUMBER     reduce using rule 269 (casecontent_statement -> DEFAULT COLON basic_statement .)
    STRING_LITERAL  reduce using rule 269 (casecontent_statement -> DEFAULT COLON basic_statement .)


state 670

    (246) if_statement -> delays IF LPAREN cond RPAREN true_statement ELSE . else_statement
    (251) else_statement -> . ifcontent_statement
    (249) ifcontent_statement -> . basic_statement
    (205) basic_statement -> . if_statement
    (206) basic_statement -> . case_statement
    (207) basic_statement -> . for_statement
    (208) basic_statement -> . while_statement
    (209) basic_statement -> . event_statement
    (210) basic_statement -> . wait_statement
    (211) basic_statement -> . forever_statement
    (212) basic_statement -> . block
    (213) basic_statement -> . namedblock
    (214) basic_statement -> . parallelblock
    (215) basic_statement -> . blocking_substitution
    (216) basic_statement -> . nonblocking_substitution
    (217) basic_statement -> . single_statement
    (244) if_statement -> . IF LPAREN cond RPAREN true_statement ELSE else_statement
    (245) if_statement -> . IF LPAREN cond RPAREN true_statement
    (246) if_statement -> . delays IF LPAREN cond RPAREN true_statement ELSE else_statement
    (247) if_statement -> . delays IF LPAREN cond RPAREN true_statement
    (262) case_statement -> . CASE LPAREN case_comp RPAREN casecontent_statements ENDCASE
    (252) for_statement -> . FOR LPAREN forpre forcond forpost RPAREN forcontent_statement
    (260) while_statement -> . WHILE LPAREN cond RPAREN whilecontent_statement
    (272) event_statement -> . senslist SEMICOLON
    (273) wait_statement -> . WAIT LPAREN cond RPAREN waitcontent_statement
    (276) forever_statement -> . FOREVER basic_statement
    (227) block -> . BEGIN block_statements END
    (228) block -> . BEGIN END
    (232) namedblock -> . BEGIN COLON ID namedblock_statements END
    (233) namedblock -> . BEGIN COLON ID END
    (242) parallelblock -> . FORK block_statements JOIN
    (243) parallelblock -> . FORK JOIN
    (219) blocking_substitution -> . delays lvalue EQUALS delays rvalue SEMICOLON
    (221) nonblocking_substitution -> . delays lvalue LE delays rvalue SEMICOLON
    (362) single_statement -> . DELAY expression SEMICOLON
    (363) single_statement -> . systemcall SEMICOLON
    (364) single_statement -> . disable SEMICOLON
    (222) delays -> . DELAY LPAREN expression RPAREN
    (223) delays -> . DELAY identifier
    (224) delays -> . DELAY intnumber
    (225) delays -> . DELAY floatnumber
    (226) delays -> . empty
    (186) senslist -> . AT LPAREN edgesigs RPAREN
    (193) senslist -> . empty
    (194) senslist -> . AT levelsig
    (195) senslist -> . AT LPAREN levelsigs RPAREN
    (203) senslist -> . AT TIMES
    (204) senslist -> . AT LPAREN TIMES RPAREN
    (319) systemcall -> . DOLLER ID
    (320) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (361) disable -> . DISABLE ID
    (365) empty -> .

  ! shift/reduce conflict for IF resolved as shift
    IF              shift and go to state 150
    CASE            shift and go to state 136
    FOR             shift and go to state 144
    WHILE           shift and go to state 146
    WAIT            shift and go to state 131
    FOREVER         shift and go to state 143
    BEGIN           shift and go to state 153
    FORK            shift and go to state 138
    DELAY           shift and go to state 147
    AT              shift and go to state 159
    DOLLER          shift and go to state 100
    DISABLE         shift and go to state 155
    LBRACE          reduce using rule 365 (empty -> .)
    ID              reduce using rule 365 (empty -> .)
    SEMICOLON       reduce using rule 365 (empty -> .)

  ! IF              [ reduce using rule 365 (empty -> .) ]

    parallelblock                  shift and go to state 129
    for_statement                  shift and go to state 130
    empty                          shift and go to state 157
    if_statement                   shift and go to state 132
    while_statement                shift and go to state 148
    blocking_substitution          shift and go to state 137
    systemcall                     shift and go to state 158
    basic_statement                shift and go to state 605
    ifcontent_statement            shift and go to state 674
    else_statement                 shift and go to state 689
    event_statement                shift and go to state 135
    wait_statement                 shift and go to state 151
    forever_statement              shift and go to state 152
    case_statement                 shift and go to state 139
    disable                        shift and go to state 133
    senslist                       shift and go to state 154
    single_statement               shift and go to state 140
    block                          shift and go to state 156
    delays                         shift and go to state 141
    nonblocking_substitution       shift and go to state 142
    namedblock                     shift and go to state 145

state 671

    (259) forcontent_statement -> basic_statement .

    ENDMODULE       reduce using rule 259 (forcontent_statement -> basic_statement .)
    GENERATE        reduce using rule 259 (forcontent_statement -> basic_statement .)
    INTEGER         reduce using rule 259 (forcontent_statement -> basic_statement .)
    REAL            reduce using rule 259 (forcontent_statement -> basic_statement .)
    PARAMETER       reduce using rule 259 (forcontent_statement -> basic_statement .)
    LOCALPARAM      reduce using rule 259 (forcontent_statement -> basic_statement .)
    GENVAR          reduce using rule 259 (forcontent_statement -> basic_statement .)
    ASSIGN          reduce using rule 259 (forcontent_statement -> basic_statement .)
    ALWAYS          reduce using rule 259 (forcontent_statement -> basic_statement .)
    INITIAL         reduce using rule 259 (forcontent_statement -> basic_statement .)
    ID              reduce using rule 259 (forcontent_statement -> basic_statement .)
    FUNCTION        reduce using rule 259 (forcontent_statement -> basic_statement .)
    TASK            reduce using rule 259 (forcontent_statement -> basic_statement .)
    LPAREN          reduce using rule 259 (forcontent_statement -> basic_statement .)
    INPUT           reduce using rule 259 (forcontent_statement -> basic_statement .)
    OUTPUT          reduce using rule 259 (forcontent_statement -> basic_statement .)
    INOUT           reduce using rule 259 (forcontent_statement -> basic_statement .)
    TRI             reduce using rule 259 (forcontent_statement -> basic_statement .)
    REG             reduce using rule 259 (forcontent_statement -> basic_statement .)
    WIRE            reduce using rule 259 (forcontent_statement -> basic_statement .)
    SIGNED          reduce using rule 259 (forcontent_statement -> basic_statement .)
    ENDGENERATE     reduce using rule 259 (forcontent_statement -> basic_statement .)
    IF              reduce using rule 259 (forcontent_statement -> basic_statement .)
    FOR             reduce using rule 259 (forcontent_statement -> basic_statement .)
    ELSE            reduce using rule 259 (forcontent_statement -> basic_statement .)
    END             reduce using rule 259 (forcontent_statement -> basic_statement .)
    JOIN            reduce using rule 259 (forcontent_statement -> basic_statement .)
    CASE            reduce using rule 259 (forcontent_statement -> basic_statement .)
    WHILE           reduce using rule 259 (forcontent_statement -> basic_statement .)
    WAIT            reduce using rule 259 (forcontent_statement -> basic_statement .)
    FOREVER         reduce using rule 259 (forcontent_statement -> basic_statement .)
    BEGIN           reduce using rule 259 (forcontent_statement -> basic_statement .)
    FORK            reduce using rule 259 (forcontent_statement -> basic_statement .)
    DELAY           reduce using rule 259 (forcontent_statement -> basic_statement .)
    AT              reduce using rule 259 (forcontent_statement -> basic_statement .)
    DOLLER          reduce using rule 259 (forcontent_statement -> basic_statement .)
    DISABLE         reduce using rule 259 (forcontent_statement -> basic_statement .)
    LBRACE          reduce using rule 259 (forcontent_statement -> basic_statement .)
    SEMICOLON       reduce using rule 259 (forcontent_statement -> basic_statement .)
    ENDFUNCTION     reduce using rule 259 (forcontent_statement -> basic_statement .)
    ENDTASK         reduce using rule 259 (forcontent_statement -> basic_statement .)
    ENDCASE         reduce using rule 259 (forcontent_statement -> basic_statement .)
    DEFAULT         reduce using rule 259 (forcontent_statement -> basic_statement .)
    MINUS           reduce using rule 259 (forcontent_statement -> basic_statement .)
    PLUS            reduce using rule 259 (forcontent_statement -> basic_statement .)
    LNOT            reduce using rule 259 (forcontent_statement -> basic_statement .)
    NOT             reduce using rule 259 (forcontent_statement -> basic_statement .)
    AND             reduce using rule 259 (forcontent_statement -> basic_statement .)
    NAND            reduce using rule 259 (forcontent_statement -> basic_statement .)
    NOR             reduce using rule 259 (forcontent_statement -> basic_statement .)
    OR              reduce using rule 259 (forcontent_statement -> basic_statement .)
    XOR             reduce using rule 259 (forcontent_statement -> basic_statement .)
    XNOR            reduce using rule 259 (forcontent_statement -> basic_statement .)
    INTNUMBER_DEC   reduce using rule 259 (forcontent_statement -> basic_statement .)
    SIGNED_INTNUMBER_DEC reduce using rule 259 (forcontent_statement -> basic_statement .)
    INTNUMBER_BIN   reduce using rule 259 (forcontent_statement -> basic_statement .)
    SIGNED_INTNUMBER_BIN reduce using rule 259 (forcontent_statement -> basic_statement .)
    INTNUMBER_OCT   reduce using rule 259 (forcontent_statement -> basic_statement .)
    SIGNED_INTNUMBER_OCT reduce using rule 259 (forcontent_statement -> basic_statement .)
    INTNUMBER_HEX   reduce using rule 259 (forcontent_statement -> basic_statement .)
    SIGNED_INTNUMBER_HEX reduce using rule 259 (forcontent_statement -> basic_statement .)
    FLOATNUMBER     reduce using rule 259 (forcontent_statement -> basic_statement .)
    STRING_LITERAL  reduce using rule 259 (forcontent_statement -> basic_statement .)


state 672

    (252) for_statement -> FOR LPAREN forpre forcond forpost RPAREN forcontent_statement .

    END             reduce using rule 252 (for_statement -> FOR LPAREN forpre forcond forpost RPAREN forcontent_statement .)
    IF              reduce using rule 252 (for_statement -> FOR LPAREN forpre forcond forpost RPAREN forcontent_statement .)
    CASE            reduce using rule 252 (for_statement -> FOR LPAREN forpre forcond forpost RPAREN forcontent_statement .)
    FOR             reduce using rule 252 (for_statement -> FOR LPAREN forpre forcond forpost RPAREN forcontent_statement .)
    WHILE           reduce using rule 252 (for_statement -> FOR LPAREN forpre forcond forpost RPAREN forcontent_statement .)
    WAIT            reduce using rule 252 (for_statement -> FOR LPAREN forpre forcond forpost RPAREN forcontent_statement .)
    FOREVER         reduce using rule 252 (for_statement -> FOR LPAREN forpre forcond forpost RPAREN forcontent_statement .)
    BEGIN           reduce using rule 252 (for_statement -> FOR LPAREN forpre forcond forpost RPAREN forcontent_statement .)
    FORK            reduce using rule 252 (for_statement -> FOR LPAREN forpre forcond forpost RPAREN forcontent_statement .)
    DELAY           reduce using rule 252 (for_statement -> FOR LPAREN forpre forcond forpost RPAREN forcontent_statement .)
    AT              reduce using rule 252 (for_statement -> FOR LPAREN forpre forcond forpost RPAREN forcontent_statement .)
    DOLLER          reduce using rule 252 (for_statement -> FOR LPAREN forpre forcond forpost RPAREN forcontent_statement .)
    DISABLE         reduce using rule 252 (for_statement -> FOR LPAREN forpre forcond forpost RPAREN forcontent_statement .)
    LBRACE          reduce using rule 252 (for_statement -> FOR LPAREN forpre forcond forpost RPAREN forcontent_statement .)
    ID              reduce using rule 252 (for_statement -> FOR LPAREN forpre forcond forpost RPAREN forcontent_statement .)
    SEMICOLON       reduce using rule 252 (for_statement -> FOR LPAREN forpre forcond forpost RPAREN forcontent_statement .)
    ENDCASE         reduce using rule 252 (for_statement -> FOR LPAREN forpre forcond forpost RPAREN forcontent_statement .)
    DEFAULT         reduce using rule 252 (for_statement -> FOR LPAREN forpre forcond forpost RPAREN forcontent_statement .)
    MINUS           reduce using rule 252 (for_statement -> FOR LPAREN forpre forcond forpost RPAREN forcontent_statement .)
    PLUS            reduce using rule 252 (for_statement -> FOR LPAREN forpre forcond forpost RPAREN forcontent_statement .)
    LNOT            reduce using rule 252 (for_statement -> FOR LPAREN forpre forcond forpost RPAREN forcontent_statement .)
    NOT             reduce using rule 252 (for_statement -> FOR LPAREN forpre forcond forpost RPAREN forcontent_statement .)
    AND             reduce using rule 252 (for_statement -> FOR LPAREN forpre forcond forpost RPAREN forcontent_statement .)
    NAND            reduce using rule 252 (for_statement -> FOR LPAREN forpre forcond forpost RPAREN forcontent_statement .)
    NOR             reduce using rule 252 (for_statement -> FOR LPAREN forpre forcond forpost RPAREN forcontent_statement .)
    OR              reduce using rule 252 (for_statement -> FOR LPAREN forpre forcond forpost RPAREN forcontent_statement .)
    XOR             reduce using rule 252 (for_statement -> FOR LPAREN forpre forcond forpost RPAREN forcontent_statement .)
    XNOR            reduce using rule 252 (for_statement -> FOR LPAREN forpre forcond forpost RPAREN forcontent_statement .)
    LPAREN          reduce using rule 252 (for_statement -> FOR LPAREN forpre forcond forpost RPAREN forcontent_statement .)
    INTNUMBER_DEC   reduce using rule 252 (for_statement -> FOR LPAREN forpre forcond forpost RPAREN forcontent_statement .)
    SIGNED_INTNUMBER_DEC reduce using rule 252 (for_statement -> FOR LPAREN forpre forcond forpost RPAREN forcontent_statement .)
    INTNUMBER_BIN   reduce using rule 252 (for_statement -> FOR LPAREN forpre forcond forpost RPAREN forcontent_statement .)
    SIGNED_INTNUMBER_BIN reduce using rule 252 (for_statement -> FOR LPAREN forpre forcond forpost RPAREN forcontent_statement .)
    INTNUMBER_OCT   reduce using rule 252 (for_statement -> FOR LPAREN forpre forcond forpost RPAREN forcontent_statement .)
    SIGNED_INTNUMBER_OCT reduce using rule 252 (for_statement -> FOR LPAREN forpre forcond forpost RPAREN forcontent_statement .)
    INTNUMBER_HEX   reduce using rule 252 (for_statement -> FOR LPAREN forpre forcond forpost RPAREN forcontent_statement .)
    SIGNED_INTNUMBER_HEX reduce using rule 252 (for_statement -> FOR LPAREN forpre forcond forpost RPAREN forcontent_statement .)
    FLOATNUMBER     reduce using rule 252 (for_statement -> FOR LPAREN forpre forcond forpost RPAREN forcontent_statement .)
    STRING_LITERAL  reduce using rule 252 (for_statement -> FOR LPAREN forpre forcond forpost RPAREN forcontent_statement .)
    ENDMODULE       reduce using rule 252 (for_statement -> FOR LPAREN forpre forcond forpost RPAREN forcontent_statement .)
    GENERATE        reduce using rule 252 (for_statement -> FOR LPAREN forpre forcond forpost RPAREN forcontent_statement .)
    INTEGER         reduce using rule 252 (for_statement -> FOR LPAREN forpre forcond forpost RPAREN forcontent_statement .)
    REAL            reduce using rule 252 (for_statement -> FOR LPAREN forpre forcond forpost RPAREN forcontent_statement .)
    PARAMETER       reduce using rule 252 (for_statement -> FOR LPAREN forpre forcond forpost RPAREN forcontent_statement .)
    LOCALPARAM      reduce using rule 252 (for_statement -> FOR LPAREN forpre forcond forpost RPAREN forcontent_statement .)
    GENVAR          reduce using rule 252 (for_statement -> FOR LPAREN forpre forcond forpost RPAREN forcontent_statement .)
    ASSIGN          reduce using rule 252 (for_statement -> FOR LPAREN forpre forcond forpost RPAREN forcontent_statement .)
    ALWAYS          reduce using rule 252 (for_statement -> FOR LPAREN forpre forcond forpost RPAREN forcontent_statement .)
    INITIAL         reduce using rule 252 (for_statement -> FOR LPAREN forpre forcond forpost RPAREN forcontent_statement .)
    FUNCTION        reduce using rule 252 (for_statement -> FOR LPAREN forpre forcond forpost RPAREN forcontent_statement .)
    TASK            reduce using rule 252 (for_statement -> FOR LPAREN forpre forcond forpost RPAREN forcontent_statement .)
    INPUT           reduce using rule 252 (for_statement -> FOR LPAREN forpre forcond forpost RPAREN forcontent_statement .)
    OUTPUT          reduce using rule 252 (for_statement -> FOR LPAREN forpre forcond forpost RPAREN forcontent_statement .)
    INOUT           reduce using rule 252 (for_statement -> FOR LPAREN forpre forcond forpost RPAREN forcontent_statement .)
    TRI             reduce using rule 252 (for_statement -> FOR LPAREN forpre forcond forpost RPAREN forcontent_statement .)
    REG             reduce using rule 252 (for_statement -> FOR LPAREN forpre forcond forpost RPAREN forcontent_statement .)
    WIRE            reduce using rule 252 (for_statement -> FOR LPAREN forpre forcond forpost RPAREN forcontent_statement .)
    SIGNED          reduce using rule 252 (for_statement -> FOR LPAREN forpre forcond forpost RPAREN forcontent_statement .)
    ENDGENERATE     reduce using rule 252 (for_statement -> FOR LPAREN forpre forcond forpost RPAREN forcontent_statement .)
    ELSE            reduce using rule 252 (for_statement -> FOR LPAREN forpre forcond forpost RPAREN forcontent_statement .)
    JOIN            reduce using rule 252 (for_statement -> FOR LPAREN forpre forcond forpost RPAREN forcontent_statement .)
    ENDFUNCTION     reduce using rule 252 (for_statement -> FOR LPAREN forpre forcond forpost RPAREN forcontent_statement .)
    ENDTASK         reduce using rule 252 (for_statement -> FOR LPAREN forpre forcond forpost RPAREN forcontent_statement .)


state 673

    (220) blocking_substitution_base -> delays lvalue EQUALS . delays rvalue
    (222) delays -> . DELAY LPAREN expression RPAREN
    (223) delays -> . DELAY identifier
    (224) delays -> . DELAY intnumber
    (225) delays -> . DELAY floatnumber
    (226) delays -> . empty
    (365) empty -> .

    DELAY           shift and go to state 170
    MINUS           reduce using rule 365 (empty -> .)
    PLUS            reduce using rule 365 (empty -> .)
    LNOT            reduce using rule 365 (empty -> .)
    NOT             reduce using rule 365 (empty -> .)
    AND             reduce using rule 365 (empty -> .)
    NAND            reduce using rule 365 (empty -> .)
    NOR             reduce using rule 365 (empty -> .)
    OR              reduce using rule 365 (empty -> .)
    XOR             reduce using rule 365 (empty -> .)
    XNOR            reduce using rule 365 (empty -> .)
    LPAREN          reduce using rule 365 (empty -> .)
    LBRACE          reduce using rule 365 (empty -> .)
    DOLLER          reduce using rule 365 (empty -> .)
    ID              reduce using rule 365 (empty -> .)
    INTNUMBER_DEC   reduce using rule 365 (empty -> .)
    SIGNED_INTNUMBER_DEC reduce using rule 365 (empty -> .)
    INTNUMBER_BIN   reduce using rule 365 (empty -> .)
    SIGNED_INTNUMBER_BIN reduce using rule 365 (empty -> .)
    INTNUMBER_OCT   reduce using rule 365 (empty -> .)
    SIGNED_INTNUMBER_OCT reduce using rule 365 (empty -> .)
    INTNUMBER_HEX   reduce using rule 365 (empty -> .)
    SIGNED_INTNUMBER_HEX reduce using rule 365 (empty -> .)
    FLOATNUMBER     reduce using rule 365 (empty -> .)
    STRING_LITERAL  reduce using rule 365 (empty -> .)

    delays                         shift and go to state 690
    empty                          shift and go to state 163

state 674

    (251) else_statement -> ifcontent_statement .

    ENDMODULE       reduce using rule 251 (else_statement -> ifcontent_statement .)
    GENERATE        reduce using rule 251 (else_statement -> ifcontent_statement .)
    INTEGER         reduce using rule 251 (else_statement -> ifcontent_statement .)
    REAL            reduce using rule 251 (else_statement -> ifcontent_statement .)
    PARAMETER       reduce using rule 251 (else_statement -> ifcontent_statement .)
    LOCALPARAM      reduce using rule 251 (else_statement -> ifcontent_statement .)
    GENVAR          reduce using rule 251 (else_statement -> ifcontent_statement .)
    ASSIGN          reduce using rule 251 (else_statement -> ifcontent_statement .)
    ALWAYS          reduce using rule 251 (else_statement -> ifcontent_statement .)
    INITIAL         reduce using rule 251 (else_statement -> ifcontent_statement .)
    ID              reduce using rule 251 (else_statement -> ifcontent_statement .)
    FUNCTION        reduce using rule 251 (else_statement -> ifcontent_statement .)
    TASK            reduce using rule 251 (else_statement -> ifcontent_statement .)
    LPAREN          reduce using rule 251 (else_statement -> ifcontent_statement .)
    INPUT           reduce using rule 251 (else_statement -> ifcontent_statement .)
    OUTPUT          reduce using rule 251 (else_statement -> ifcontent_statement .)
    INOUT           reduce using rule 251 (else_statement -> ifcontent_statement .)
    TRI             reduce using rule 251 (else_statement -> ifcontent_statement .)
    REG             reduce using rule 251 (else_statement -> ifcontent_statement .)
    WIRE            reduce using rule 251 (else_statement -> ifcontent_statement .)
    SIGNED          reduce using rule 251 (else_statement -> ifcontent_statement .)
    ENDGENERATE     reduce using rule 251 (else_statement -> ifcontent_statement .)
    IF              reduce using rule 251 (else_statement -> ifcontent_statement .)
    FOR             reduce using rule 251 (else_statement -> ifcontent_statement .)
    ELSE            reduce using rule 251 (else_statement -> ifcontent_statement .)
    END             reduce using rule 251 (else_statement -> ifcontent_statement .)
    JOIN            reduce using rule 251 (else_statement -> ifcontent_statement .)
    CASE            reduce using rule 251 (else_statement -> ifcontent_statement .)
    WHILE           reduce using rule 251 (else_statement -> ifcontent_statement .)
    WAIT            reduce using rule 251 (else_statement -> ifcontent_statement .)
    FOREVER         reduce using rule 251 (else_statement -> ifcontent_statement .)
    BEGIN           reduce using rule 251 (else_statement -> ifcontent_statement .)
    FORK            reduce using rule 251 (else_statement -> ifcontent_statement .)
    DELAY           reduce using rule 251 (else_statement -> ifcontent_statement .)
    AT              reduce using rule 251 (else_statement -> ifcontent_statement .)
    DOLLER          reduce using rule 251 (else_statement -> ifcontent_statement .)
    DISABLE         reduce using rule 251 (else_statement -> ifcontent_statement .)
    LBRACE          reduce using rule 251 (else_statement -> ifcontent_statement .)
    SEMICOLON       reduce using rule 251 (else_statement -> ifcontent_statement .)
    ENDFUNCTION     reduce using rule 251 (else_statement -> ifcontent_statement .)
    ENDTASK         reduce using rule 251 (else_statement -> ifcontent_statement .)
    ENDCASE         reduce using rule 251 (else_statement -> ifcontent_statement .)
    DEFAULT         reduce using rule 251 (else_statement -> ifcontent_statement .)
    MINUS           reduce using rule 251 (else_statement -> ifcontent_statement .)
    PLUS            reduce using rule 251 (else_statement -> ifcontent_statement .)
    LNOT            reduce using rule 251 (else_statement -> ifcontent_statement .)
    NOT             reduce using rule 251 (else_statement -> ifcontent_statement .)
    AND             reduce using rule 251 (else_statement -> ifcontent_statement .)
    NAND            reduce using rule 251 (else_statement -> ifcontent_statement .)
    NOR             reduce using rule 251 (else_statement -> ifcontent_statement .)
    OR              reduce using rule 251 (else_statement -> ifcontent_statement .)
    XOR             reduce using rule 251 (else_statement -> ifcontent_statement .)
    XNOR            reduce using rule 251 (else_statement -> ifcontent_statement .)
    INTNUMBER_DEC   reduce using rule 251 (else_statement -> ifcontent_statement .)
    SIGNED_INTNUMBER_DEC reduce using rule 251 (else_statement -> ifcontent_statement .)
    INTNUMBER_BIN   reduce using rule 251 (else_statement -> ifcontent_statement .)
    SIGNED_INTNUMBER_BIN reduce using rule 251 (else_statement -> ifcontent_statement .)
    INTNUMBER_OCT   reduce using rule 251 (else_statement -> ifcontent_statement .)
    SIGNED_INTNUMBER_OCT reduce using rule 251 (else_statement -> ifcontent_statement .)
    INTNUMBER_HEX   reduce using rule 251 (else_statement -> ifcontent_statement .)
    SIGNED_INTNUMBER_HEX reduce using rule 251 (else_statement -> ifcontent_statement .)
    FLOATNUMBER     reduce using rule 251 (else_statement -> ifcontent_statement .)
    STRING_LITERAL  reduce using rule 251 (else_statement -> ifcontent_statement .)


state 675

    (244) if_statement -> IF LPAREN cond RPAREN true_statement ELSE else_statement .

    JOIN            reduce using rule 244 (if_statement -> IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    IF              reduce using rule 244 (if_statement -> IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    CASE            reduce using rule 244 (if_statement -> IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    FOR             reduce using rule 244 (if_statement -> IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    WHILE           reduce using rule 244 (if_statement -> IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    WAIT            reduce using rule 244 (if_statement -> IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    FOREVER         reduce using rule 244 (if_statement -> IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    BEGIN           reduce using rule 244 (if_statement -> IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    FORK            reduce using rule 244 (if_statement -> IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    DELAY           reduce using rule 244 (if_statement -> IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    AT              reduce using rule 244 (if_statement -> IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    DOLLER          reduce using rule 244 (if_statement -> IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    DISABLE         reduce using rule 244 (if_statement -> IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    LBRACE          reduce using rule 244 (if_statement -> IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    ID              reduce using rule 244 (if_statement -> IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    SEMICOLON       reduce using rule 244 (if_statement -> IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    ENDCASE         reduce using rule 244 (if_statement -> IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    DEFAULT         reduce using rule 244 (if_statement -> IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    MINUS           reduce using rule 244 (if_statement -> IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    PLUS            reduce using rule 244 (if_statement -> IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    LNOT            reduce using rule 244 (if_statement -> IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    NOT             reduce using rule 244 (if_statement -> IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    AND             reduce using rule 244 (if_statement -> IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    NAND            reduce using rule 244 (if_statement -> IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    NOR             reduce using rule 244 (if_statement -> IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    OR              reduce using rule 244 (if_statement -> IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    XOR             reduce using rule 244 (if_statement -> IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    XNOR            reduce using rule 244 (if_statement -> IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    LPAREN          reduce using rule 244 (if_statement -> IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    INTNUMBER_DEC   reduce using rule 244 (if_statement -> IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    SIGNED_INTNUMBER_DEC reduce using rule 244 (if_statement -> IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    INTNUMBER_BIN   reduce using rule 244 (if_statement -> IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    SIGNED_INTNUMBER_BIN reduce using rule 244 (if_statement -> IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    INTNUMBER_OCT   reduce using rule 244 (if_statement -> IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    SIGNED_INTNUMBER_OCT reduce using rule 244 (if_statement -> IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    INTNUMBER_HEX   reduce using rule 244 (if_statement -> IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    SIGNED_INTNUMBER_HEX reduce using rule 244 (if_statement -> IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    FLOATNUMBER     reduce using rule 244 (if_statement -> IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    STRING_LITERAL  reduce using rule 244 (if_statement -> IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    ENDMODULE       reduce using rule 244 (if_statement -> IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    GENERATE        reduce using rule 244 (if_statement -> IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    INTEGER         reduce using rule 244 (if_statement -> IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    REAL            reduce using rule 244 (if_statement -> IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    PARAMETER       reduce using rule 244 (if_statement -> IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    LOCALPARAM      reduce using rule 244 (if_statement -> IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    GENVAR          reduce using rule 244 (if_statement -> IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    ASSIGN          reduce using rule 244 (if_statement -> IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    ALWAYS          reduce using rule 244 (if_statement -> IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    INITIAL         reduce using rule 244 (if_statement -> IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    FUNCTION        reduce using rule 244 (if_statement -> IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    TASK            reduce using rule 244 (if_statement -> IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    INPUT           reduce using rule 244 (if_statement -> IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    OUTPUT          reduce using rule 244 (if_statement -> IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    INOUT           reduce using rule 244 (if_statement -> IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    TRI             reduce using rule 244 (if_statement -> IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    REG             reduce using rule 244 (if_statement -> IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    WIRE            reduce using rule 244 (if_statement -> IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    SIGNED          reduce using rule 244 (if_statement -> IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    ENDGENERATE     reduce using rule 244 (if_statement -> IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    ELSE            reduce using rule 244 (if_statement -> IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    END             reduce using rule 244 (if_statement -> IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    ENDFUNCTION     reduce using rule 244 (if_statement -> IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    ENDTASK         reduce using rule 244 (if_statement -> IF LPAREN cond RPAREN true_statement ELSE else_statement .)


state 676

    (294) instance_port_arg -> DOT ID LPAREN identifier . RPAREN
    (158) expression -> identifier .
    (359) scope -> identifier . DOT
    (164) partselect -> identifier . LBRACKET expression COLON expression RBRACKET
    (165) partselect -> identifier . LBRACKET expression PLUSCOLON expression RBRACKET
    (166) partselect -> identifier . LBRACKET expression MINUSCOLON expression RBRACKET
    (170) pointer -> identifier . LBRACKET expression RBRACKET
    (339) functioncall -> identifier . LPAREN func_args RPAREN

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 691
    POWER           reduce using rule 158 (expression -> identifier .)
    TIMES           reduce using rule 158 (expression -> identifier .)
    DIVIDE          reduce using rule 158 (expression -> identifier .)
    MOD             reduce using rule 158 (expression -> identifier .)
    PLUS            reduce using rule 158 (expression -> identifier .)
    MINUS           reduce using rule 158 (expression -> identifier .)
    LSHIFT          reduce using rule 158 (expression -> identifier .)
    RSHIFT          reduce using rule 158 (expression -> identifier .)
    LSHIFTA         reduce using rule 158 (expression -> identifier .)
    RSHIFTA         reduce using rule 158 (expression -> identifier .)
    LT              reduce using rule 158 (expression -> identifier .)
    GT              reduce using rule 158 (expression -> identifier .)
    LE              reduce using rule 158 (expression -> identifier .)
    GE              reduce using rule 158 (expression -> identifier .)
    EQ              reduce using rule 158 (expression -> identifier .)
    NE              reduce using rule 158 (expression -> identifier .)
    EQL             reduce using rule 158 (expression -> identifier .)
    NEL             reduce using rule 158 (expression -> identifier .)
    AND             reduce using rule 158 (expression -> identifier .)
    XOR             reduce using rule 158 (expression -> identifier .)
    XNOR            reduce using rule 158 (expression -> identifier .)
    OR              reduce using rule 158 (expression -> identifier .)
    LAND            reduce using rule 158 (expression -> identifier .)
    LOR             reduce using rule 158 (expression -> identifier .)
    COND            reduce using rule 158 (expression -> identifier .)
    DOT             shift and go to state 252
    LBRACKET        shift and go to state 254
    LPAREN          shift and go to state 253

  ! RPAREN          [ reduce using rule 158 (expression -> identifier .) ]


state 677

    (155) expression -> pointer .
    (360) scope -> pointer . DOT
    (167) partselect -> pointer . LBRACKET expression COLON expression RBRACKET
    (168) partselect -> pointer . LBRACKET expression PLUSCOLON expression RBRACKET
    (169) partselect -> pointer . LBRACKET expression MINUSCOLON expression RBRACKET
    (171) pointer -> pointer . LBRACKET expression RBRACKET

    RPAREN          reduce using rule 155 (expression -> pointer .)
    POWER           reduce using rule 155 (expression -> pointer .)
    TIMES           reduce using rule 155 (expression -> pointer .)
    DIVIDE          reduce using rule 155 (expression -> pointer .)
    MOD             reduce using rule 155 (expression -> pointer .)
    PLUS            reduce using rule 155 (expression -> pointer .)
    MINUS           reduce using rule 155 (expression -> pointer .)
    LSHIFT          reduce using rule 155 (expression -> pointer .)
    RSHIFT          reduce using rule 155 (expression -> pointer .)
    LSHIFTA         reduce using rule 155 (expression -> pointer .)
    RSHIFTA         reduce using rule 155 (expression -> pointer .)
    LT              reduce using rule 155 (expression -> pointer .)
    GT              reduce using rule 155 (expression -> pointer .)
    LE              reduce using rule 155 (expression -> pointer .)
    GE              reduce using rule 155 (expression -> pointer .)
    EQ              reduce using rule 155 (expression -> pointer .)
    NE              reduce using rule 155 (expression -> pointer .)
    EQL             reduce using rule 155 (expression -> pointer .)
    NEL             reduce using rule 155 (expression -> pointer .)
    AND             reduce using rule 155 (expression -> pointer .)
    XOR             reduce using rule 155 (expression -> pointer .)
    XNOR            reduce using rule 155 (expression -> pointer .)
    OR              reduce using rule 155 (expression -> pointer .)
    LAND            reduce using rule 155 (expression -> pointer .)
    LOR             reduce using rule 155 (expression -> pointer .)
    COND            reduce using rule 155 (expression -> pointer .)
    DOT             shift and go to state 215
    LBRACKET        shift and go to state 216


state 678

    (295) instance_port_arg -> DOT ID LPAREN expression . RPAREN
    (126) expression -> expression . POWER expression
    (127) expression -> expression . TIMES expression
    (128) expression -> expression . DIVIDE expression
    (129) expression -> expression . MOD expression
    (130) expression -> expression . PLUS expression
    (131) expression -> expression . MINUS expression
    (132) expression -> expression . LSHIFT expression
    (133) expression -> expression . RSHIFT expression
    (134) expression -> expression . LSHIFTA expression
    (135) expression -> expression . RSHIFTA expression
    (136) expression -> expression . LT expression
    (137) expression -> expression . GT expression
    (138) expression -> expression . LE expression
    (139) expression -> expression . GE expression
    (140) expression -> expression . EQ expression
    (141) expression -> expression . NE expression
    (142) expression -> expression . EQL expression
    (143) expression -> expression . NEL expression
    (144) expression -> expression . AND expression
    (145) expression -> expression . XOR expression
    (146) expression -> expression . XNOR expression
    (147) expression -> expression . OR expression
    (148) expression -> expression . LAND expression
    (149) expression -> expression . LOR expression
    (150) expression -> expression . COND expression COLON expression

    RPAREN          shift and go to state 692
    POWER           shift and go to state 246
    TIMES           shift and go to state 349
    DIVIDE          shift and go to state 244
    MOD             shift and go to state 231
    PLUS            shift and go to state 240
    MINUS           shift and go to state 229
    LSHIFT          shift and go to state 243
    RSHIFT          shift and go to state 226
    LSHIFTA         shift and go to state 241
    RSHIFTA         shift and go to state 238
    LT              shift and go to state 235
    GT              shift and go to state 228
    LE              shift and go to state 222
    GE              shift and go to state 239
    EQ              shift and go to state 223
    NE              shift and go to state 225
    EQL             shift and go to state 245
    NEL             shift and go to state 242
    AND             shift and go to state 224
    XOR             shift and go to state 237
    XNOR            shift and go to state 232
    OR              shift and go to state 234
    LAND            shift and go to state 227
    LOR             shift and go to state 230
    COND            shift and go to state 233


state 679

    (296) instance_port_arg -> DOT ID LPAREN RPAREN .

    COMMA           reduce using rule 296 (instance_port_arg -> DOT ID LPAREN RPAREN .)
    RPAREN          reduce using rule 296 (instance_port_arg -> DOT ID LPAREN RPAREN .)


state 680

    (286) param_arg -> DOT ID LPAREN expression RPAREN .

    RPAREN          reduce using rule 286 (param_arg -> DOT ID LPAREN expression RPAREN .)
    COMMA           reduce using rule 286 (param_arg -> DOT ID LPAREN expression RPAREN .)


state 681

    (317) generate_forcontent -> generate_item .

    ELSE            reduce using rule 317 (generate_forcontent -> generate_item .)
    ENDGENERATE     reduce using rule 317 (generate_forcontent -> generate_item .)
    IF              reduce using rule 317 (generate_forcontent -> generate_item .)
    FOR             reduce using rule 317 (generate_forcontent -> generate_item .)
    INTEGER         reduce using rule 317 (generate_forcontent -> generate_item .)
    REAL            reduce using rule 317 (generate_forcontent -> generate_item .)
    PARAMETER       reduce using rule 317 (generate_forcontent -> generate_item .)
    LOCALPARAM      reduce using rule 317 (generate_forcontent -> generate_item .)
    GENVAR          reduce using rule 317 (generate_forcontent -> generate_item .)
    ASSIGN          reduce using rule 317 (generate_forcontent -> generate_item .)
    ALWAYS          reduce using rule 317 (generate_forcontent -> generate_item .)
    INITIAL         reduce using rule 317 (generate_forcontent -> generate_item .)
    ID              reduce using rule 317 (generate_forcontent -> generate_item .)
    FUNCTION        reduce using rule 317 (generate_forcontent -> generate_item .)
    TASK            reduce using rule 317 (generate_forcontent -> generate_item .)
    LPAREN          reduce using rule 317 (generate_forcontent -> generate_item .)
    INPUT           reduce using rule 317 (generate_forcontent -> generate_item .)
    OUTPUT          reduce using rule 317 (generate_forcontent -> generate_item .)
    INOUT           reduce using rule 317 (generate_forcontent -> generate_item .)
    TRI             reduce using rule 317 (generate_forcontent -> generate_item .)
    REG             reduce using rule 317 (generate_forcontent -> generate_item .)
    WIRE            reduce using rule 317 (generate_forcontent -> generate_item .)
    SIGNED          reduce using rule 317 (generate_forcontent -> generate_item .)
    END             reduce using rule 317 (generate_forcontent -> generate_item .)


state 682

    (316) generate_for -> FOR LPAREN forpre forcond forpost RPAREN generate_forcontent .

    END             reduce using rule 316 (generate_for -> FOR LPAREN forpre forcond forpost RPAREN generate_forcontent .)
    IF              reduce using rule 316 (generate_for -> FOR LPAREN forpre forcond forpost RPAREN generate_forcontent .)
    FOR             reduce using rule 316 (generate_for -> FOR LPAREN forpre forcond forpost RPAREN generate_forcontent .)
    INTEGER         reduce using rule 316 (generate_for -> FOR LPAREN forpre forcond forpost RPAREN generate_forcontent .)
    REAL            reduce using rule 316 (generate_for -> FOR LPAREN forpre forcond forpost RPAREN generate_forcontent .)
    PARAMETER       reduce using rule 316 (generate_for -> FOR LPAREN forpre forcond forpost RPAREN generate_forcontent .)
    LOCALPARAM      reduce using rule 316 (generate_for -> FOR LPAREN forpre forcond forpost RPAREN generate_forcontent .)
    GENVAR          reduce using rule 316 (generate_for -> FOR LPAREN forpre forcond forpost RPAREN generate_forcontent .)
    ASSIGN          reduce using rule 316 (generate_for -> FOR LPAREN forpre forcond forpost RPAREN generate_forcontent .)
    ALWAYS          reduce using rule 316 (generate_for -> FOR LPAREN forpre forcond forpost RPAREN generate_forcontent .)
    INITIAL         reduce using rule 316 (generate_for -> FOR LPAREN forpre forcond forpost RPAREN generate_forcontent .)
    ID              reduce using rule 316 (generate_for -> FOR LPAREN forpre forcond forpost RPAREN generate_forcontent .)
    FUNCTION        reduce using rule 316 (generate_for -> FOR LPAREN forpre forcond forpost RPAREN generate_forcontent .)
    TASK            reduce using rule 316 (generate_for -> FOR LPAREN forpre forcond forpost RPAREN generate_forcontent .)
    LPAREN          reduce using rule 316 (generate_for -> FOR LPAREN forpre forcond forpost RPAREN generate_forcontent .)
    INPUT           reduce using rule 316 (generate_for -> FOR LPAREN forpre forcond forpost RPAREN generate_forcontent .)
    OUTPUT          reduce using rule 316 (generate_for -> FOR LPAREN forpre forcond forpost RPAREN generate_forcontent .)
    INOUT           reduce using rule 316 (generate_for -> FOR LPAREN forpre forcond forpost RPAREN generate_forcontent .)
    TRI             reduce using rule 316 (generate_for -> FOR LPAREN forpre forcond forpost RPAREN generate_forcontent .)
    REG             reduce using rule 316 (generate_for -> FOR LPAREN forpre forcond forpost RPAREN generate_forcontent .)
    WIRE            reduce using rule 316 (generate_for -> FOR LPAREN forpre forcond forpost RPAREN generate_forcontent .)
    SIGNED          reduce using rule 316 (generate_for -> FOR LPAREN forpre forcond forpost RPAREN generate_forcontent .)
    ELSE            reduce using rule 316 (generate_for -> FOR LPAREN forpre forcond forpost RPAREN generate_forcontent .)
    ENDGENERATE     reduce using rule 316 (generate_for -> FOR LPAREN forpre forcond forpost RPAREN generate_forcontent .)


state 683

    (318) generate_forcontent -> generate_block .

    ELSE            reduce using rule 318 (generate_forcontent -> generate_block .)
    ENDGENERATE     reduce using rule 318 (generate_forcontent -> generate_block .)
    IF              reduce using rule 318 (generate_forcontent -> generate_block .)
    FOR             reduce using rule 318 (generate_forcontent -> generate_block .)
    INTEGER         reduce using rule 318 (generate_forcontent -> generate_block .)
    REAL            reduce using rule 318 (generate_forcontent -> generate_block .)
    PARAMETER       reduce using rule 318 (generate_forcontent -> generate_block .)
    LOCALPARAM      reduce using rule 318 (generate_forcontent -> generate_block .)
    GENVAR          reduce using rule 318 (generate_forcontent -> generate_block .)
    ASSIGN          reduce using rule 318 (generate_forcontent -> generate_block .)
    ALWAYS          reduce using rule 318 (generate_forcontent -> generate_block .)
    INITIAL         reduce using rule 318 (generate_forcontent -> generate_block .)
    ID              reduce using rule 318 (generate_forcontent -> generate_block .)
    FUNCTION        reduce using rule 318 (generate_forcontent -> generate_block .)
    TASK            reduce using rule 318 (generate_forcontent -> generate_block .)
    LPAREN          reduce using rule 318 (generate_forcontent -> generate_block .)
    INPUT           reduce using rule 318 (generate_forcontent -> generate_block .)
    OUTPUT          reduce using rule 318 (generate_forcontent -> generate_block .)
    INOUT           reduce using rule 318 (generate_forcontent -> generate_block .)
    TRI             reduce using rule 318 (generate_forcontent -> generate_block .)
    REG             reduce using rule 318 (generate_forcontent -> generate_block .)
    WIRE            reduce using rule 318 (generate_forcontent -> generate_block .)
    SIGNED          reduce using rule 318 (generate_forcontent -> generate_block .)
    END             reduce using rule 318 (generate_forcontent -> generate_block .)


state 684

    (314) gif_false_item -> generate_item .

    ELSE            reduce using rule 314 (gif_false_item -> generate_item .)
    ENDGENERATE     reduce using rule 314 (gif_false_item -> generate_item .)
    IF              reduce using rule 314 (gif_false_item -> generate_item .)
    FOR             reduce using rule 314 (gif_false_item -> generate_item .)
    INTEGER         reduce using rule 314 (gif_false_item -> generate_item .)
    REAL            reduce using rule 314 (gif_false_item -> generate_item .)
    PARAMETER       reduce using rule 314 (gif_false_item -> generate_item .)
    LOCALPARAM      reduce using rule 314 (gif_false_item -> generate_item .)
    GENVAR          reduce using rule 314 (gif_false_item -> generate_item .)
    ASSIGN          reduce using rule 314 (gif_false_item -> generate_item .)
    ALWAYS          reduce using rule 314 (gif_false_item -> generate_item .)
    INITIAL         reduce using rule 314 (gif_false_item -> generate_item .)
    ID              reduce using rule 314 (gif_false_item -> generate_item .)
    FUNCTION        reduce using rule 314 (gif_false_item -> generate_item .)
    TASK            reduce using rule 314 (gif_false_item -> generate_item .)
    LPAREN          reduce using rule 314 (gif_false_item -> generate_item .)
    INPUT           reduce using rule 314 (gif_false_item -> generate_item .)
    OUTPUT          reduce using rule 314 (gif_false_item -> generate_item .)
    INOUT           reduce using rule 314 (gif_false_item -> generate_item .)
    TRI             reduce using rule 314 (gif_false_item -> generate_item .)
    REG             reduce using rule 314 (gif_false_item -> generate_item .)
    WIRE            reduce using rule 314 (gif_false_item -> generate_item .)
    SIGNED          reduce using rule 314 (gif_false_item -> generate_item .)
    END             reduce using rule 314 (gif_false_item -> generate_item .)


state 685

    (315) gif_false_item -> generate_block .

    ELSE            reduce using rule 315 (gif_false_item -> generate_block .)
    ENDGENERATE     reduce using rule 315 (gif_false_item -> generate_block .)
    IF              reduce using rule 315 (gif_false_item -> generate_block .)
    FOR             reduce using rule 315 (gif_false_item -> generate_block .)
    INTEGER         reduce using rule 315 (gif_false_item -> generate_block .)
    REAL            reduce using rule 315 (gif_false_item -> generate_block .)
    PARAMETER       reduce using rule 315 (gif_false_item -> generate_block .)
    LOCALPARAM      reduce using rule 315 (gif_false_item -> generate_block .)
    GENVAR          reduce using rule 315 (gif_false_item -> generate_block .)
    ASSIGN          reduce using rule 315 (gif_false_item -> generate_block .)
    ALWAYS          reduce using rule 315 (gif_false_item -> generate_block .)
    INITIAL         reduce using rule 315 (gif_false_item -> generate_block .)
    ID              reduce using rule 315 (gif_false_item -> generate_block .)
    FUNCTION        reduce using rule 315 (gif_false_item -> generate_block .)
    TASK            reduce using rule 315 (gif_false_item -> generate_block .)
    LPAREN          reduce using rule 315 (gif_false_item -> generate_block .)
    INPUT           reduce using rule 315 (gif_false_item -> generate_block .)
    OUTPUT          reduce using rule 315 (gif_false_item -> generate_block .)
    INOUT           reduce using rule 315 (gif_false_item -> generate_block .)
    TRI             reduce using rule 315 (gif_false_item -> generate_block .)
    REG             reduce using rule 315 (gif_false_item -> generate_block .)
    WIRE            reduce using rule 315 (gif_false_item -> generate_block .)
    SIGNED          reduce using rule 315 (gif_false_item -> generate_block .)
    END             reduce using rule 315 (gif_false_item -> generate_block .)


state 686

    (310) generate_if -> IF LPAREN cond RPAREN gif_true_item ELSE gif_false_item .

    END             reduce using rule 310 (generate_if -> IF LPAREN cond RPAREN gif_true_item ELSE gif_false_item .)
    IF              reduce using rule 310 (generate_if -> IF LPAREN cond RPAREN gif_true_item ELSE gif_false_item .)
    FOR             reduce using rule 310 (generate_if -> IF LPAREN cond RPAREN gif_true_item ELSE gif_false_item .)
    INTEGER         reduce using rule 310 (generate_if -> IF LPAREN cond RPAREN gif_true_item ELSE gif_false_item .)
    REAL            reduce using rule 310 (generate_if -> IF LPAREN cond RPAREN gif_true_item ELSE gif_false_item .)
    PARAMETER       reduce using rule 310 (generate_if -> IF LPAREN cond RPAREN gif_true_item ELSE gif_false_item .)
    LOCALPARAM      reduce using rule 310 (generate_if -> IF LPAREN cond RPAREN gif_true_item ELSE gif_false_item .)
    GENVAR          reduce using rule 310 (generate_if -> IF LPAREN cond RPAREN gif_true_item ELSE gif_false_item .)
    ASSIGN          reduce using rule 310 (generate_if -> IF LPAREN cond RPAREN gif_true_item ELSE gif_false_item .)
    ALWAYS          reduce using rule 310 (generate_if -> IF LPAREN cond RPAREN gif_true_item ELSE gif_false_item .)
    INITIAL         reduce using rule 310 (generate_if -> IF LPAREN cond RPAREN gif_true_item ELSE gif_false_item .)
    ID              reduce using rule 310 (generate_if -> IF LPAREN cond RPAREN gif_true_item ELSE gif_false_item .)
    FUNCTION        reduce using rule 310 (generate_if -> IF LPAREN cond RPAREN gif_true_item ELSE gif_false_item .)
    TASK            reduce using rule 310 (generate_if -> IF LPAREN cond RPAREN gif_true_item ELSE gif_false_item .)
    LPAREN          reduce using rule 310 (generate_if -> IF LPAREN cond RPAREN gif_true_item ELSE gif_false_item .)
    INPUT           reduce using rule 310 (generate_if -> IF LPAREN cond RPAREN gif_true_item ELSE gif_false_item .)
    OUTPUT          reduce using rule 310 (generate_if -> IF LPAREN cond RPAREN gif_true_item ELSE gif_false_item .)
    INOUT           reduce using rule 310 (generate_if -> IF LPAREN cond RPAREN gif_true_item ELSE gif_false_item .)
    TRI             reduce using rule 310 (generate_if -> IF LPAREN cond RPAREN gif_true_item ELSE gif_false_item .)
    REG             reduce using rule 310 (generate_if -> IF LPAREN cond RPAREN gif_true_item ELSE gif_false_item .)
    WIRE            reduce using rule 310 (generate_if -> IF LPAREN cond RPAREN gif_true_item ELSE gif_false_item .)
    SIGNED          reduce using rule 310 (generate_if -> IF LPAREN cond RPAREN gif_true_item ELSE gif_false_item .)
    ELSE            reduce using rule 310 (generate_if -> IF LPAREN cond RPAREN gif_true_item ELSE gif_false_item .)
    ENDGENERATE     reduce using rule 310 (generate_if -> IF LPAREN cond RPAREN gif_true_item ELSE gif_false_item .)


state 687

    (309) generate_block -> BEGIN COLON ID . generate_items END
    (302) generate_items -> . empty
    (303) generate_items -> . generate_items generate_item
    (304) generate_items -> . generate_item
    (365) empty -> .
    (305) generate_item -> . standard_item
    (306) generate_item -> . generate_if
    (307) generate_item -> . generate_for
    (53) standard_item -> . decl
    (54) standard_item -> . integerdecl
    (55) standard_item -> . realdecl
    (56) standard_item -> . declassign
    (57) standard_item -> . parameterdecl
    (58) standard_item -> . localparamdecl
    (59) standard_item -> . genvardecl
    (60) standard_item -> . assignment
    (61) standard_item -> . always
    (62) standard_item -> . initial
    (63) standard_item -> . instance
    (64) standard_item -> . function
    (65) standard_item -> . task
    (66) standard_item -> . pragma
    (310) generate_if -> . IF LPAREN cond RPAREN gif_true_item ELSE gif_false_item
    (311) generate_if -> . IF LPAREN cond RPAREN gif_true_item
    (316) generate_for -> . FOR LPAREN forpre forcond forpost RPAREN generate_forcontent
    (67) decl -> . sigtypes declnamelist SEMICOLON
    (68) decl -> . sigtypes width declnamelist SEMICOLON
    (77) integerdecl -> . INTEGER integernamelist SEMICOLON
    (78) integerdecl -> . INTEGER SIGNED integernamelist SEMICOLON
    (82) realdecl -> . REAL realnamelist SEMICOLON
    (73) declassign -> . sigtypes declassign_element SEMICOLON
    (74) declassign -> . sigtypes width declassign_element SEMICOLON
    (86) parameterdecl -> . PARAMETER param_substitution_list SEMICOLON
    (87) parameterdecl -> . PARAMETER width param_substitution_list SEMICOLON
    (88) parameterdecl -> . PARAMETER INTEGER param_substitution_list SEMICOLON
    (89) localparamdecl -> . LOCALPARAM param_substitution_list SEMICOLON
    (90) localparamdecl -> . LOCALPARAM width param_substitution_list SEMICOLON
    (91) localparamdecl -> . LOCALPARAM INTEGER param_substitution_list SEMICOLON
    (297) genvardecl -> . GENVAR genvarlist SEMICOLON
    (95) assignment -> . ASSIGN lvalue EQUALS rvalue SEMICOLON
    (96) assignment -> . ASSIGN delays lvalue EQUALS delays rvalue SEMICOLON
    (185) always -> . ALWAYS senslist always_statement
    (270) initial -> . INITIAL initial_statement
    (277) instance -> . ID parameterlist ID LPAREN instance_ports RPAREN SEMICOLON
    (325) function -> . FUNCTION width ID SEMICOLON function_statement ENDFUNCTION
    (326) function -> . FUNCTION ID SEMICOLON function_statement ENDFUNCTION
    (343) task -> . TASK ID SEMICOLON task_statement ENDTASK
    (7) pragma -> . LPAREN TIMES ID EQUALS expression TIMES RPAREN
    (8) pragma -> . LPAREN TIMES ID TIMES RPAREN
    (30) sigtypes -> . sigtypes sigtype
    (31) sigtypes -> . sigtype
    (32) sigtype -> . INPUT
    (33) sigtype -> . OUTPUT
    (34) sigtype -> . INOUT
    (35) sigtype -> . TRI
    (36) sigtype -> . REG
    (37) sigtype -> . WIRE
    (38) sigtype -> . SIGNED

  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for INTEGER resolved as shift
  ! shift/reduce conflict for REAL resolved as shift
  ! shift/reduce conflict for PARAMETER resolved as shift
  ! shift/reduce conflict for LOCALPARAM resolved as shift
  ! shift/reduce conflict for GENVAR resolved as shift
  ! shift/reduce conflict for ASSIGN resolved as shift
  ! shift/reduce conflict for ALWAYS resolved as shift
  ! shift/reduce conflict for INITIAL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for FUNCTION resolved as shift
  ! shift/reduce conflict for TASK resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for INPUT resolved as shift
  ! shift/reduce conflict for OUTPUT resolved as shift
  ! shift/reduce conflict for INOUT resolved as shift
  ! shift/reduce conflict for TRI resolved as shift
  ! shift/reduce conflict for REG resolved as shift
  ! shift/reduce conflict for WIRE resolved as shift
  ! shift/reduce conflict for SIGNED resolved as shift
    END             reduce using rule 365 (empty -> .)
    IF              shift and go to state 188
    FOR             shift and go to state 186
    INTEGER         shift and go to state 69
    REAL            shift and go to state 49
    PARAMETER       shift and go to state 66
    LOCALPARAM      shift and go to state 52
    GENVAR          shift and go to state 42
    ASSIGN          shift and go to state 48
    ALWAYS          shift and go to state 46
    INITIAL         shift and go to state 45
    ID              shift and go to state 51
    FUNCTION        shift and go to state 44
    TASK            shift and go to state 67
    LPAREN          shift and go to state 6
    INPUT           shift and go to state 37
    OUTPUT          shift and go to state 24
    INOUT           shift and go to state 25
    TRI             shift and go to state 36
    REG             shift and go to state 35
    WIRE            shift and go to state 26
    SIGNED          shift and go to state 29

  ! IF              [ reduce using rule 365 (empty -> .) ]
  ! FOR             [ reduce using rule 365 (empty -> .) ]
  ! INTEGER         [ reduce using rule 365 (empty -> .) ]
  ! REAL            [ reduce using rule 365 (empty -> .) ]
  ! PARAMETER       [ reduce using rule 365 (empty -> .) ]
  ! LOCALPARAM      [ reduce using rule 365 (empty -> .) ]
  ! GENVAR          [ reduce using rule 365 (empty -> .) ]
  ! ASSIGN          [ reduce using rule 365 (empty -> .) ]
  ! ALWAYS          [ reduce using rule 365 (empty -> .) ]
  ! INITIAL         [ reduce using rule 365 (empty -> .) ]
  ! ID              [ reduce using rule 365 (empty -> .) ]
  ! FUNCTION        [ reduce using rule 365 (empty -> .) ]
  ! TASK            [ reduce using rule 365 (empty -> .) ]
  ! LPAREN          [ reduce using rule 365 (empty -> .) ]
  ! INPUT           [ reduce using rule 365 (empty -> .) ]
  ! OUTPUT          [ reduce using rule 365 (empty -> .) ]
  ! INOUT           [ reduce using rule 365 (empty -> .) ]
  ! TRI             [ reduce using rule 365 (empty -> .) ]
  ! REG             [ reduce using rule 365 (empty -> .) ]
  ! WIRE            [ reduce using rule 365 (empty -> .) ]
  ! SIGNED          [ reduce using rule 365 (empty -> .) ]

    generate_item                  shift and go to state 183
    empty                          shift and go to state 184
    generate_if                    shift and go to state 185
    always                         shift and go to state 41
    genvardecl                     shift and go to state 43
    integerdecl                    shift and go to state 47
    sigtype                        shift and go to state 33
    instance                       shift and go to state 50
    localparamdecl                 shift and go to state 53
    standard_item                  shift and go to state 187
    declassign                     shift and go to state 58
    task                           shift and go to state 57
    function                       shift and go to state 59
    realdecl                       shift and go to state 60
    sigtypes                       shift and go to state 61
    decl                           shift and go to state 62
    pragma                         shift and go to state 63
    generate_items                 shift and go to state 693
    parameterdecl                  shift and go to state 64
    generate_for                   shift and go to state 190
    initial                        shift and go to state 65
    assignment                     shift and go to state 68

state 688

    (308) generate_block -> BEGIN generate_items END .

    ELSE            reduce using rule 308 (generate_block -> BEGIN generate_items END .)
    ENDGENERATE     reduce using rule 308 (generate_block -> BEGIN generate_items END .)
    IF              reduce using rule 308 (generate_block -> BEGIN generate_items END .)
    FOR             reduce using rule 308 (generate_block -> BEGIN generate_items END .)
    INTEGER         reduce using rule 308 (generate_block -> BEGIN generate_items END .)
    REAL            reduce using rule 308 (generate_block -> BEGIN generate_items END .)
    PARAMETER       reduce using rule 308 (generate_block -> BEGIN generate_items END .)
    LOCALPARAM      reduce using rule 308 (generate_block -> BEGIN generate_items END .)
    GENVAR          reduce using rule 308 (generate_block -> BEGIN generate_items END .)
    ASSIGN          reduce using rule 308 (generate_block -> BEGIN generate_items END .)
    ALWAYS          reduce using rule 308 (generate_block -> BEGIN generate_items END .)
    INITIAL         reduce using rule 308 (generate_block -> BEGIN generate_items END .)
    ID              reduce using rule 308 (generate_block -> BEGIN generate_items END .)
    FUNCTION        reduce using rule 308 (generate_block -> BEGIN generate_items END .)
    TASK            reduce using rule 308 (generate_block -> BEGIN generate_items END .)
    LPAREN          reduce using rule 308 (generate_block -> BEGIN generate_items END .)
    INPUT           reduce using rule 308 (generate_block -> BEGIN generate_items END .)
    OUTPUT          reduce using rule 308 (generate_block -> BEGIN generate_items END .)
    INOUT           reduce using rule 308 (generate_block -> BEGIN generate_items END .)
    TRI             reduce using rule 308 (generate_block -> BEGIN generate_items END .)
    REG             reduce using rule 308 (generate_block -> BEGIN generate_items END .)
    WIRE            reduce using rule 308 (generate_block -> BEGIN generate_items END .)
    SIGNED          reduce using rule 308 (generate_block -> BEGIN generate_items END .)
    END             reduce using rule 308 (generate_block -> BEGIN generate_items END .)


state 689

    (246) if_statement -> delays IF LPAREN cond RPAREN true_statement ELSE else_statement .

    JOIN            reduce using rule 246 (if_statement -> delays IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    IF              reduce using rule 246 (if_statement -> delays IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    CASE            reduce using rule 246 (if_statement -> delays IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    FOR             reduce using rule 246 (if_statement -> delays IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    WHILE           reduce using rule 246 (if_statement -> delays IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    WAIT            reduce using rule 246 (if_statement -> delays IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    FOREVER         reduce using rule 246 (if_statement -> delays IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    BEGIN           reduce using rule 246 (if_statement -> delays IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    FORK            reduce using rule 246 (if_statement -> delays IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    DELAY           reduce using rule 246 (if_statement -> delays IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    AT              reduce using rule 246 (if_statement -> delays IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    DOLLER          reduce using rule 246 (if_statement -> delays IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    DISABLE         reduce using rule 246 (if_statement -> delays IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    LBRACE          reduce using rule 246 (if_statement -> delays IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    ID              reduce using rule 246 (if_statement -> delays IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    SEMICOLON       reduce using rule 246 (if_statement -> delays IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    ENDCASE         reduce using rule 246 (if_statement -> delays IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    DEFAULT         reduce using rule 246 (if_statement -> delays IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    MINUS           reduce using rule 246 (if_statement -> delays IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    PLUS            reduce using rule 246 (if_statement -> delays IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    LNOT            reduce using rule 246 (if_statement -> delays IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    NOT             reduce using rule 246 (if_statement -> delays IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    AND             reduce using rule 246 (if_statement -> delays IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    NAND            reduce using rule 246 (if_statement -> delays IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    NOR             reduce using rule 246 (if_statement -> delays IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    OR              reduce using rule 246 (if_statement -> delays IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    XOR             reduce using rule 246 (if_statement -> delays IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    XNOR            reduce using rule 246 (if_statement -> delays IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    LPAREN          reduce using rule 246 (if_statement -> delays IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    INTNUMBER_DEC   reduce using rule 246 (if_statement -> delays IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    SIGNED_INTNUMBER_DEC reduce using rule 246 (if_statement -> delays IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    INTNUMBER_BIN   reduce using rule 246 (if_statement -> delays IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    SIGNED_INTNUMBER_BIN reduce using rule 246 (if_statement -> delays IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    INTNUMBER_OCT   reduce using rule 246 (if_statement -> delays IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    SIGNED_INTNUMBER_OCT reduce using rule 246 (if_statement -> delays IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    INTNUMBER_HEX   reduce using rule 246 (if_statement -> delays IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    SIGNED_INTNUMBER_HEX reduce using rule 246 (if_statement -> delays IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    FLOATNUMBER     reduce using rule 246 (if_statement -> delays IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    STRING_LITERAL  reduce using rule 246 (if_statement -> delays IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    ENDMODULE       reduce using rule 246 (if_statement -> delays IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    GENERATE        reduce using rule 246 (if_statement -> delays IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    INTEGER         reduce using rule 246 (if_statement -> delays IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    REAL            reduce using rule 246 (if_statement -> delays IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    PARAMETER       reduce using rule 246 (if_statement -> delays IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    LOCALPARAM      reduce using rule 246 (if_statement -> delays IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    GENVAR          reduce using rule 246 (if_statement -> delays IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    ASSIGN          reduce using rule 246 (if_statement -> delays IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    ALWAYS          reduce using rule 246 (if_statement -> delays IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    INITIAL         reduce using rule 246 (if_statement -> delays IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    FUNCTION        reduce using rule 246 (if_statement -> delays IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    TASK            reduce using rule 246 (if_statement -> delays IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    INPUT           reduce using rule 246 (if_statement -> delays IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    OUTPUT          reduce using rule 246 (if_statement -> delays IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    INOUT           reduce using rule 246 (if_statement -> delays IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    TRI             reduce using rule 246 (if_statement -> delays IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    REG             reduce using rule 246 (if_statement -> delays IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    WIRE            reduce using rule 246 (if_statement -> delays IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    SIGNED          reduce using rule 246 (if_statement -> delays IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    ENDGENERATE     reduce using rule 246 (if_statement -> delays IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    ELSE            reduce using rule 246 (if_statement -> delays IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    END             reduce using rule 246 (if_statement -> delays IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    ENDFUNCTION     reduce using rule 246 (if_statement -> delays IF LPAREN cond RPAREN true_statement ELSE else_statement .)
    ENDTASK         reduce using rule 246 (if_statement -> delays IF LPAREN cond RPAREN true_statement ELSE else_statement .)


state 690

    (220) blocking_substitution_base -> delays lvalue EQUALS delays . rvalue
    (115) rvalue -> . expression
    (116) expression -> . MINUS expression
    (117) expression -> . PLUS expression
    (118) expression -> . LNOT expression
    (119) expression -> . NOT expression
    (120) expression -> . AND expression
    (121) expression -> . NAND expression
    (122) expression -> . NOR expression
    (123) expression -> . OR expression
    (124) expression -> . XOR expression
    (125) expression -> . XNOR expression
    (126) expression -> . expression POWER expression
    (127) expression -> . expression TIMES expression
    (128) expression -> . expression DIVIDE expression
    (129) expression -> . expression MOD expression
    (130) expression -> . expression PLUS expression
    (131) expression -> . expression MINUS expression
    (132) expression -> . expression LSHIFT expression
    (133) expression -> . expression RSHIFT expression
    (134) expression -> . expression LSHIFTA expression
    (135) expression -> . expression RSHIFTA expression
    (136) expression -> . expression LT expression
    (137) expression -> . expression GT expression
    (138) expression -> . expression LE expression
    (139) expression -> . expression GE expression
    (140) expression -> . expression EQ expression
    (141) expression -> . expression NE expression
    (142) expression -> . expression EQL expression
    (143) expression -> . expression NEL expression
    (144) expression -> . expression AND expression
    (145) expression -> . expression XOR expression
    (146) expression -> . expression XNOR expression
    (147) expression -> . expression OR expression
    (148) expression -> . expression LAND expression
    (149) expression -> . expression LOR expression
    (150) expression -> . expression COND expression COLON expression
    (151) expression -> . LPAREN expression RPAREN
    (152) expression -> . concat
    (153) expression -> . repeat
    (154) expression -> . partselect
    (155) expression -> . pointer
    (156) expression -> . functioncall
    (157) expression -> . systemcall
    (158) expression -> . identifier
    (159) expression -> . const_expression
    (160) concat -> . LBRACE concatlist RBRACE
    (163) repeat -> . LBRACE expression concat RBRACE
    (164) partselect -> . identifier LBRACKET expression COLON expression RBRACKET
    (165) partselect -> . identifier LBRACKET expression PLUSCOLON expression RBRACKET
    (166) partselect -> . identifier LBRACKET expression MINUSCOLON expression RBRACKET
    (167) partselect -> . pointer LBRACKET expression COLON expression RBRACKET
    (168) partselect -> . pointer LBRACKET expression PLUSCOLON expression RBRACKET
    (169) partselect -> . pointer LBRACKET expression MINUSCOLON expression RBRACKET
    (170) pointer -> . identifier LBRACKET expression RBRACKET
    (171) pointer -> . pointer LBRACKET expression RBRACKET
    (339) functioncall -> . identifier LPAREN func_args RPAREN
    (319) systemcall -> . DOLLER ID
    (320) systemcall -> . DOLLER ID LPAREN sysargs RPAREN
    (357) identifier -> . ID
    (358) identifier -> . scope ID
    (172) const_expression -> . intnumber
    (173) const_expression -> . floatnumber
    (174) const_expression -> . stringliteral
    (359) scope -> . identifier DOT
    (360) scope -> . pointer DOT
    (176) intnumber -> . INTNUMBER_DEC
    (177) intnumber -> . SIGNED_INTNUMBER_DEC
    (178) intnumber -> . INTNUMBER_BIN
    (179) intnumber -> . SIGNED_INTNUMBER_BIN
    (180) intnumber -> . INTNUMBER_OCT
    (181) intnumber -> . SIGNED_INTNUMBER_OCT
    (182) intnumber -> . INTNUMBER_HEX
    (183) intnumber -> . SIGNED_INTNUMBER_HEX
    (175) floatnumber -> . FLOATNUMBER
    (184) stringliteral -> . STRING_LITERAL

    MINUS           shift and go to state 97
    PLUS            shift and go to state 89
    LNOT            shift and go to state 95
    NOT             shift and go to state 78
    AND             shift and go to state 91
    NAND            shift and go to state 98
    NOR             shift and go to state 76
    OR              shift and go to state 105
    XOR             shift and go to state 82
    XNOR            shift and go to state 87
    LPAREN          shift and go to state 96
    LBRACE          shift and go to state 77
    DOLLER          shift and go to state 100
    ID              shift and go to state 85
    INTNUMBER_DEC   shift and go to state 79
    SIGNED_INTNUMBER_DEC shift and go to state 101
    INTNUMBER_BIN   shift and go to state 111
    SIGNED_INTNUMBER_BIN shift and go to state 112
    INTNUMBER_OCT   shift and go to state 86
    SIGNED_INTNUMBER_OCT shift and go to state 106
    INTNUMBER_HEX   shift and go to state 93
    SIGNED_INTNUMBER_HEX shift and go to state 83
    FLOATNUMBER     shift and go to state 102
    STRING_LITERAL  shift and go to state 107

    stringliteral                  shift and go to state 99
    intnumber                      shift and go to state 81
    expression                     shift and go to state 428
    repeat                         shift and go to state 108
    rvalue                         shift and go to state 694
    partselect                     shift and go to state 103
    identifier                     shift and go to state 104
    pointer                        shift and go to state 80
    functioncall                   shift and go to state 94
    scope                          shift and go to state 84
    systemcall                     shift and go to state 109
    const_expression               shift and go to state 110
    concat                         shift and go to state 88
    floatnumber                    shift and go to state 90

state 691

    (294) instance_port_arg -> DOT ID LPAREN identifier RPAREN .

    COMMA           reduce using rule 294 (instance_port_arg -> DOT ID LPAREN identifier RPAREN .)
    RPAREN          reduce using rule 294 (instance_port_arg -> DOT ID LPAREN identifier RPAREN .)


state 692

    (295) instance_port_arg -> DOT ID LPAREN expression RPAREN .

    COMMA           reduce using rule 295 (instance_port_arg -> DOT ID LPAREN expression RPAREN .)
    RPAREN          reduce using rule 295 (instance_port_arg -> DOT ID LPAREN expression RPAREN .)


state 693

    (309) generate_block -> BEGIN COLON ID generate_items . END
    (303) generate_items -> generate_items . generate_item
    (305) generate_item -> . standard_item
    (306) generate_item -> . generate_if
    (307) generate_item -> . generate_for
    (53) standard_item -> . decl
    (54) standard_item -> . integerdecl
    (55) standard_item -> . realdecl
    (56) standard_item -> . declassign
    (57) standard_item -> . parameterdecl
    (58) standard_item -> . localparamdecl
    (59) standard_item -> . genvardecl
    (60) standard_item -> . assignment
    (61) standard_item -> . always
    (62) standard_item -> . initial
    (63) standard_item -> . instance
    (64) standard_item -> . function
    (65) standard_item -> . task
    (66) standard_item -> . pragma
    (310) generate_if -> . IF LPAREN cond RPAREN gif_true_item ELSE gif_false_item
    (311) generate_if -> . IF LPAREN cond RPAREN gif_true_item
    (316) generate_for -> . FOR LPAREN forpre forcond forpost RPAREN generate_forcontent
    (67) decl -> . sigtypes declnamelist SEMICOLON
    (68) decl -> . sigtypes width declnamelist SEMICOLON
    (77) integerdecl -> . INTEGER integernamelist SEMICOLON
    (78) integerdecl -> . INTEGER SIGNED integernamelist SEMICOLON
    (82) realdecl -> . REAL realnamelist SEMICOLON
    (73) declassign -> . sigtypes declassign_element SEMICOLON
    (74) declassign -> . sigtypes width declassign_element SEMICOLON
    (86) parameterdecl -> . PARAMETER param_substitution_list SEMICOLON
    (87) parameterdecl -> . PARAMETER width param_substitution_list SEMICOLON
    (88) parameterdecl -> . PARAMETER INTEGER param_substitution_list SEMICOLON
    (89) localparamdecl -> . LOCALPARAM param_substitution_list SEMICOLON
    (90) localparamdecl -> . LOCALPARAM width param_substitution_list SEMICOLON
    (91) localparamdecl -> . LOCALPARAM INTEGER param_substitution_list SEMICOLON
    (297) genvardecl -> . GENVAR genvarlist SEMICOLON
    (95) assignment -> . ASSIGN lvalue EQUALS rvalue SEMICOLON
    (96) assignment -> . ASSIGN delays lvalue EQUALS delays rvalue SEMICOLON
    (185) always -> . ALWAYS senslist always_statement
    (270) initial -> . INITIAL initial_statement
    (277) instance -> . ID parameterlist ID LPAREN instance_ports RPAREN SEMICOLON
    (325) function -> . FUNCTION width ID SEMICOLON function_statement ENDFUNCTION
    (326) function -> . FUNCTION ID SEMICOLON function_statement ENDFUNCTION
    (343) task -> . TASK ID SEMICOLON task_statement ENDTASK
    (7) pragma -> . LPAREN TIMES ID EQUALS expression TIMES RPAREN
    (8) pragma -> . LPAREN TIMES ID TIMES RPAREN
    (30) sigtypes -> . sigtypes sigtype
    (31) sigtypes -> . sigtype
    (32) sigtype -> . INPUT
    (33) sigtype -> . OUTPUT
    (34) sigtype -> . INOUT
    (35) sigtype -> . TRI
    (36) sigtype -> . REG
    (37) sigtype -> . WIRE
    (38) sigtype -> . SIGNED

    END             shift and go to state 695
    IF              shift and go to state 188
    FOR             shift and go to state 186
    INTEGER         shift and go to state 69
    REAL            shift and go to state 49
    PARAMETER       shift and go to state 66
    LOCALPARAM      shift and go to state 52
    GENVAR          shift and go to state 42
    ASSIGN          shift and go to state 48
    ALWAYS          shift and go to state 46
    INITIAL         shift and go to state 45
    ID              shift and go to state 51
    FUNCTION        shift and go to state 44
    TASK            shift and go to state 67
    LPAREN          shift and go to state 6
    INPUT           shift and go to state 37
    OUTPUT          shift and go to state 24
    INOUT           shift and go to state 25
    TRI             shift and go to state 36
    REG             shift and go to state 35
    WIRE            shift and go to state 26
    SIGNED          shift and go to state 29

    generate_item                  shift and go to state 328
    generate_if                    shift and go to state 185
    always                         shift and go to state 41
    genvardecl                     shift and go to state 43
    integerdecl                    shift and go to state 47
    sigtype                        shift and go to state 33
    instance                       shift and go to state 50
    localparamdecl                 shift and go to state 53
    standard_item                  shift and go to state 187
    declassign                     shift and go to state 58
    task                           shift and go to state 57
    function                       shift and go to state 59
    realdecl                       shift and go to state 60
    sigtypes                       shift and go to state 61
    decl                           shift and go to state 62
    pragma                         shift and go to state 63
    parameterdecl                  shift and go to state 64
    generate_for                   shift and go to state 190
    initial                        shift and go to state 65
    assignment                     shift and go to state 68

state 694

    (220) blocking_substitution_base -> delays lvalue EQUALS delays rvalue .

    RPAREN          reduce using rule 220 (blocking_substitution_base -> delays lvalue EQUALS delays rvalue .)


state 695

    (309) generate_block -> BEGIN COLON ID generate_items END .

    ELSE            reduce using rule 309 (generate_block -> BEGIN COLON ID generate_items END .)
    ENDGENERATE     reduce using rule 309 (generate_block -> BEGIN COLON ID generate_items END .)
    IF              reduce using rule 309 (generate_block -> BEGIN COLON ID generate_items END .)
    FOR             reduce using rule 309 (generate_block -> BEGIN COLON ID generate_items END .)
    INTEGER         reduce using rule 309 (generate_block -> BEGIN COLON ID generate_items END .)
    REAL            reduce using rule 309 (generate_block -> BEGIN COLON ID generate_items END .)
    PARAMETER       reduce using rule 309 (generate_block -> BEGIN COLON ID generate_items END .)
    LOCALPARAM      reduce using rule 309 (generate_block -> BEGIN COLON ID generate_items END .)
    GENVAR          reduce using rule 309 (generate_block -> BEGIN COLON ID generate_items END .)
    ASSIGN          reduce using rule 309 (generate_block -> BEGIN COLON ID generate_items END .)
    ALWAYS          reduce using rule 309 (generate_block -> BEGIN COLON ID generate_items END .)
    INITIAL         reduce using rule 309 (generate_block -> BEGIN COLON ID generate_items END .)
    ID              reduce using rule 309 (generate_block -> BEGIN COLON ID generate_items END .)
    FUNCTION        reduce using rule 309 (generate_block -> BEGIN COLON ID generate_items END .)
    TASK            reduce using rule 309 (generate_block -> BEGIN COLON ID generate_items END .)
    LPAREN          reduce using rule 309 (generate_block -> BEGIN COLON ID generate_items END .)
    INPUT           reduce using rule 309 (generate_block -> BEGIN COLON ID generate_items END .)
    OUTPUT          reduce using rule 309 (generate_block -> BEGIN COLON ID generate_items END .)
    INOUT           reduce using rule 309 (generate_block -> BEGIN COLON ID generate_items END .)
    TRI             reduce using rule 309 (generate_block -> BEGIN COLON ID generate_items END .)
    REG             reduce using rule 309 (generate_block -> BEGIN COLON ID generate_items END .)
    WIRE            reduce using rule 309 (generate_block -> BEGIN COLON ID generate_items END .)
    SIGNED          reduce using rule 309 (generate_block -> BEGIN COLON ID generate_items END .)
    END             reduce using rule 309 (generate_block -> BEGIN COLON ID generate_items END .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for GENERATE in state 19 resolved as shift
WARNING: shift/reduce conflict for INTEGER in state 19 resolved as shift
WARNING: shift/reduce conflict for REAL in state 19 resolved as shift
WARNING: shift/reduce conflict for PARAMETER in state 19 resolved as shift
WARNING: shift/reduce conflict for LOCALPARAM in state 19 resolved as shift
WARNING: shift/reduce conflict for GENVAR in state 19 resolved as shift
WARNING: shift/reduce conflict for ASSIGN in state 19 resolved as shift
WARNING: shift/reduce conflict for ALWAYS in state 19 resolved as shift
WARNING: shift/reduce conflict for INITIAL in state 19 resolved as shift
WARNING: shift/reduce conflict for ID in state 19 resolved as shift
WARNING: shift/reduce conflict for FUNCTION in state 19 resolved as shift
WARNING: shift/reduce conflict for TASK in state 19 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 19 resolved as shift
WARNING: shift/reduce conflict for INPUT in state 19 resolved as shift
WARNING: shift/reduce conflict for OUTPUT in state 19 resolved as shift
WARNING: shift/reduce conflict for INOUT in state 19 resolved as shift
WARNING: shift/reduce conflict for TRI in state 19 resolved as shift
WARNING: shift/reduce conflict for REG in state 19 resolved as shift
WARNING: shift/reduce conflict for WIRE in state 19 resolved as shift
WARNING: shift/reduce conflict for SIGNED in state 19 resolved as shift
WARNING: shift/reduce conflict for IF in state 45 resolved as shift
WARNING: shift/reduce conflict for AT in state 46 resolved as shift
WARNING: shift/reduce conflict for LBRACE in state 48 resolved as shift
WARNING: shift/reduce conflict for ID in state 48 resolved as shift
WARNING: shift/reduce conflict for IF in state 55 resolved as shift
WARNING: shift/reduce conflict for FOR in state 55 resolved as shift
WARNING: shift/reduce conflict for INTEGER in state 55 resolved as shift
WARNING: shift/reduce conflict for REAL in state 55 resolved as shift
WARNING: shift/reduce conflict for PARAMETER in state 55 resolved as shift
WARNING: shift/reduce conflict for LOCALPARAM in state 55 resolved as shift
WARNING: shift/reduce conflict for GENVAR in state 55 resolved as shift
WARNING: shift/reduce conflict for ASSIGN in state 55 resolved as shift
WARNING: shift/reduce conflict for ALWAYS in state 55 resolved as shift
WARNING: shift/reduce conflict for INITIAL in state 55 resolved as shift
WARNING: shift/reduce conflict for ID in state 55 resolved as shift
WARNING: shift/reduce conflict for FUNCTION in state 55 resolved as shift
WARNING: shift/reduce conflict for TASK in state 55 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 55 resolved as shift
WARNING: shift/reduce conflict for INPUT in state 55 resolved as shift
WARNING: shift/reduce conflict for OUTPUT in state 55 resolved as shift
WARNING: shift/reduce conflict for INOUT in state 55 resolved as shift
WARNING: shift/reduce conflict for TRI in state 55 resolved as shift
WARNING: shift/reduce conflict for REG in state 55 resolved as shift
WARNING: shift/reduce conflict for WIRE in state 55 resolved as shift
WARNING: shift/reduce conflict for SIGNED in state 55 resolved as shift
WARNING: shift/reduce conflict for ID in state 61 resolved as shift
WARNING: shift/reduce conflict for IF in state 138 resolved as shift
WARNING: shift/reduce conflict for IF in state 143 resolved as shift
WARNING: shift/reduce conflict for IF in state 153 resolved as shift
WARNING: shift/reduce conflict for IF in state 161 resolved as shift
WARNING: shift/reduce conflict for ID in state 194 resolved as shift
WARNING: shift/reduce conflict for IF in state 272 resolved as shift
WARNING: shift/reduce conflict for IF in state 287 resolved as shift
WARNING: shift/reduce conflict for INTEGER in state 342 resolved as shift
WARNING: shift/reduce conflict for INPUT in state 342 resolved as shift
WARNING: shift/reduce conflict for OUTPUT in state 342 resolved as shift
WARNING: shift/reduce conflict for INOUT in state 342 resolved as shift
WARNING: shift/reduce conflict for TRI in state 342 resolved as shift
WARNING: shift/reduce conflict for REG in state 342 resolved as shift
WARNING: shift/reduce conflict for WIRE in state 342 resolved as shift
WARNING: shift/reduce conflict for SIGNED in state 342 resolved as shift
WARNING: shift/reduce conflict for IF in state 393 resolved as shift
WARNING: shift/reduce conflict for IF in state 416 resolved as shift
WARNING: shift/reduce conflict for IF in state 460 resolved as shift
WARNING: shift/reduce conflict for IF in state 502 resolved as shift
WARNING: shift/reduce conflict for SEMICOLON in state 502 resolved as shift
WARNING: shift/reduce conflict for IF in state 511 resolved as shift
WARNING: shift/reduce conflict for IF in state 513 resolved as shift
WARNING: shift/reduce conflict for IF in state 522 resolved as shift
WARNING: shift/reduce conflict for POWER in state 576 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 576 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 576 resolved as shift
WARNING: shift/reduce conflict for MOD in state 576 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 576 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 576 resolved as shift
WARNING: shift/reduce conflict for LSHIFT in state 576 resolved as shift
WARNING: shift/reduce conflict for RSHIFT in state 576 resolved as shift
WARNING: shift/reduce conflict for LSHIFTA in state 576 resolved as shift
WARNING: shift/reduce conflict for RSHIFTA in state 576 resolved as shift
WARNING: shift/reduce conflict for LT in state 576 resolved as shift
WARNING: shift/reduce conflict for GT in state 576 resolved as shift
WARNING: shift/reduce conflict for LE in state 576 resolved as shift
WARNING: shift/reduce conflict for GE in state 576 resolved as shift
WARNING: shift/reduce conflict for EQ in state 576 resolved as shift
WARNING: shift/reduce conflict for NE in state 576 resolved as shift
WARNING: shift/reduce conflict for EQL in state 576 resolved as shift
WARNING: shift/reduce conflict for NEL in state 576 resolved as shift
WARNING: shift/reduce conflict for AND in state 576 resolved as shift
WARNING: shift/reduce conflict for XOR in state 576 resolved as shift
WARNING: shift/reduce conflict for XNOR in state 576 resolved as shift
WARNING: shift/reduce conflict for OR in state 576 resolved as shift
WARNING: shift/reduce conflict for LAND in state 576 resolved as shift
WARNING: shift/reduce conflict for LOR in state 576 resolved as shift
WARNING: shift/reduce conflict for COND in state 576 resolved as shift
WARNING: shift/reduce conflict for IF in state 593 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 603 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 627 resolved as shift
WARNING: shift/reduce conflict for IF in state 629 resolved as shift
WARNING: shift/reduce conflict for FOR in state 629 resolved as shift
WARNING: shift/reduce conflict for INTEGER in state 629 resolved as shift
WARNING: shift/reduce conflict for REAL in state 629 resolved as shift
WARNING: shift/reduce conflict for PARAMETER in state 629 resolved as shift
WARNING: shift/reduce conflict for LOCALPARAM in state 629 resolved as shift
WARNING: shift/reduce conflict for GENVAR in state 629 resolved as shift
WARNING: shift/reduce conflict for ASSIGN in state 629 resolved as shift
WARNING: shift/reduce conflict for ALWAYS in state 629 resolved as shift
WARNING: shift/reduce conflict for INITIAL in state 629 resolved as shift
WARNING: shift/reduce conflict for ID in state 629 resolved as shift
WARNING: shift/reduce conflict for FUNCTION in state 629 resolved as shift
WARNING: shift/reduce conflict for TASK in state 629 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 629 resolved as shift
WARNING: shift/reduce conflict for INPUT in state 629 resolved as shift
WARNING: shift/reduce conflict for OUTPUT in state 629 resolved as shift
WARNING: shift/reduce conflict for INOUT in state 629 resolved as shift
WARNING: shift/reduce conflict for TRI in state 629 resolved as shift
WARNING: shift/reduce conflict for REG in state 629 resolved as shift
WARNING: shift/reduce conflict for WIRE in state 629 resolved as shift
WARNING: shift/reduce conflict for SIGNED in state 629 resolved as shift
WARNING: shift/reduce conflict for IF in state 639 resolved as shift
WARNING: shift/reduce conflict for IF in state 643 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 644 resolved as shift
WARNING: shift/reduce conflict for IF in state 647 resolved as shift
WARNING: shift/reduce conflict for IF in state 649 resolved as shift
WARNING: shift/reduce conflict for IF in state 670 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 676 resolved as shift
WARNING: shift/reduce conflict for IF in state 687 resolved as shift
WARNING: shift/reduce conflict for FOR in state 687 resolved as shift
WARNING: shift/reduce conflict for INTEGER in state 687 resolved as shift
WARNING: shift/reduce conflict for REAL in state 687 resolved as shift
WARNING: shift/reduce conflict for PARAMETER in state 687 resolved as shift
WARNING: shift/reduce conflict for LOCALPARAM in state 687 resolved as shift
WARNING: shift/reduce conflict for GENVAR in state 687 resolved as shift
WARNING: shift/reduce conflict for ASSIGN in state 687 resolved as shift
WARNING: shift/reduce conflict for ALWAYS in state 687 resolved as shift
WARNING: shift/reduce conflict for INITIAL in state 687 resolved as shift
WARNING: shift/reduce conflict for ID in state 687 resolved as shift
WARNING: shift/reduce conflict for FUNCTION in state 687 resolved as shift
WARNING: shift/reduce conflict for TASK in state 687 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 687 resolved as shift
WARNING: shift/reduce conflict for INPUT in state 687 resolved as shift
WARNING: shift/reduce conflict for OUTPUT in state 687 resolved as shift
WARNING: shift/reduce conflict for INOUT in state 687 resolved as shift
WARNING: shift/reduce conflict for TRI in state 687 resolved as shift
WARNING: shift/reduce conflict for REG in state 687 resolved as shift
WARNING: shift/reduce conflict for WIRE in state 687 resolved as shift
WARNING: shift/reduce conflict for SIGNED in state 687 resolved as shift
